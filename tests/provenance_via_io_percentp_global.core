-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

def struct __cerbty_unnamed_tag_824 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_856 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_1137: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong a_1138: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_1137, conv_loaded_int('signed int', a_1138)) ;
  pure(a_1137)

glob a_904: pointer [ail_ctype = 'char[38]'] :=
  create_readonly(Ivalignof('char[38]'), 'char[38]', Specified(Array(Specified(conv_int('char',
  112)), Specified(conv_int('char', 114)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 118)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 118)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 95)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 103)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 98)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 46)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 109)), Specified(conv_int('char', 112)),
  Specified(0))))

glob a_908: pointer [ail_ctype = 'char[4]'] :=
  create_readonly(Ivalignof('char[4]'), 'char[4]', Specified(Array(Specified(conv_int('char',
  119)), Specified(conv_int('char', 43)), Specified(conv_int('char', 98)),
  Specified(0))))

glob a_924: pointer [ail_ctype = 'char[17]'] :=
  create_readonly(Ivalignof('char[17]'), 'char[17]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_946: pointer [ail_ctype = 'char[4]'] :=
  create_readonly(Ivalignof('char[4]'), 'char[4]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_983: pointer [ail_ctype = 'char[4]'] :=
  create_readonly(Ivalignof('char[4]'), 'char[4]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_1030: pointer [ail_ctype = 'char[17]'] :=
  create_readonly(Ivalignof('char[17]'), 'char[17]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_1092: pointer [ail_ctype = 'char[24]'] :=
  create_readonly(Ivalignof('char[24]'), 'char[24]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 98)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 98)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_1112: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_1115: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

glob a_1127: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_1130: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong f: pointer =
    create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
  let strong rv: pointer = create(Ivalignof('void*'), 'void*') in
  let strong n: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong r: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong b1: pointer = create(Ivalignof('_Bool'), '_Bool') in
  let strong b2: pointer = create(Ivalignof('_Bool'), '_Bool') in
  let strong a_892: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_893: pointer = pure(x) in
      pure(Specified(a_893))
    ) in
  store('signed int*', p, a_892) ;
  let strong a_894: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_896: loaded pointer,
      (a_897: ctype, a_898: [ctype], a_899: boolean, a_900: boolean)),
      a_903: loaded pointer, a_907: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_895: loaded pointer =
            pure(Specified(Cfunction(fopen))) in
          pure((a_895, cfunction(a_895)))
        ,
          let weak a_905: pointer = pure(a_904) in
          {- §6.3.2.1#3 -}
          let weak a_906: pointer = memop(PtrArrayShift, a_905, 'char', 0) in
          pure(Specified(a_906))
        ,
          let weak a_909: pointer = pure(a_908) in
          {- §6.3.2.1#3 -}
          let weak a_910: pointer = memop(PtrArrayShift, a_909, 'char', 0) in
          pure(Specified(a_910))
        ) in
      if not(params_length(a_898) = 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_899 \/ not(are_compatible ('struct _IO_FILE*', a_897)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_902: pointer =
            let a_911: ctype = params_nth(a_898, 0) in
            if not(are_compatible ('const char*', a_911)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_912: pointer = create(Ivalignof(a_911), a_911) in
              let weak _: unit = store(a_911, a_912, a_903) in
              pure(a_912) in
          let strong a_901: pointer =
            let a_913: ctype = params_nth(a_898, 1) in
            if not(are_compatible ('const char*', a_913)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_914: pointer = create(Ivalignof(a_913), a_913) in
              let weak _: unit = store(a_913, a_914, a_907) in
              pure(a_914) in
          let strong a_915: loaded pointer =
            ccall('struct _IO_FILE* (*) (const char*restrict , const char*restrict )',
            a_896, a_902, a_901) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_902), kill('char*', a_901)) in
          pure(a_915)
    ) in
  store('struct _IO_FILE*', f, a_894) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_916: loaded pointer,
      (a_917: ctype, a_918: [ctype], a_919: boolean, a_920: boolean)),
      a_923: loaded pointer, a_927: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_891: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_891, cfunction(a_891)))
        ,
          let weak a_925: pointer = pure(a_924) in
          {- §6.3.2.1#3 -}
          let weak a_926: pointer = memop(PtrArrayShift, a_925, 'char', 0) in
          pure(Specified(a_926))
        ,
          {- §6.5.4 -}
          let weak a_930: pointer = pure(p) in
          load('signed int*', a_930)
        ) in
      if not(params_length(a_918) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_919) \/ not(are_compatible ('signed int', a_917)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_922: pointer =
            let a_932: ctype = params_nth(a_918, 0) in
            if not(are_compatible ('const char*', a_932)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_933: pointer = create(Ivalignof(a_932), a_932) in
              let weak _: unit = store(a_932, a_933, a_923) in
              pure(a_933) in
          let strong a_921: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_927) in
          let strong a_934: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_916, a_922,
            [('void*', a_921)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_922), kill('void*', a_921)) in
          pure(a_934)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_935: loaded pointer,
      (a_936: ctype, a_937: [ctype], a_938: boolean, a_939: boolean)),
      a_943: loaded pointer, a_945: loaded pointer, a_949: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_890: loaded pointer =
            pure(Specified(Cfunction(fprintf))) in
          pure((a_890, cfunction(a_890)))
        ,
          let weak a_944: pointer = pure(f) in
          load('struct _IO_FILE*', a_944)
        ,
          let weak a_947: pointer = pure(a_946) in
          {- §6.3.2.1#3 -}
          let weak a_948: pointer = memop(PtrArrayShift, a_947, 'char', 0) in
          pure(Specified(a_948))
        ,
          {- §6.5.4 -}
          let weak a_952: pointer = pure(p) in
          load('signed int*', a_952)
        ) in
      if not(params_length(a_937) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_938) \/ not(are_compatible ('signed int', a_936)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_942: pointer =
            let a_954: ctype = params_nth(a_937, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_954)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_955: pointer = create(Ivalignof(a_954), a_954) in
              let weak _: unit = store(a_954, a_955, a_943) in
              pure(a_955) in
          let strong a_941: pointer =
            let a_956: ctype = params_nth(a_937, 1) in
            if not(are_compatible ('const char*', a_956)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_957: pointer = create(Ivalignof(a_956), a_956) in
              let weak _: unit = store(a_956, a_957, a_945) in
              pure(a_957) in
          let strong a_940: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_949) in
          let strong a_958: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_935, a_942, a_941, [('void*', a_940)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_942)
            ,
              kill('char*', a_941)
            ,
              kill('void*', a_940)
            ) in
          pure(a_958)
    ) in
  pure(Unit) ;
  {- §6.5#2 -}
  bound(
    {- §6.5.2.2#10, sentence 1 -}
    let strong ((a_959: loaded pointer,
    (a_960: ctype, a_961: [ctype], a_962: boolean, a_963: boolean)),
    a_965: loaded pointer) =
      {- §6.5.2.2#4, sentence 2 -}
      unseq(
        let strong a_889: loaded pointer =
          pure(Specified(Cfunction(rewind))) in
        pure((a_889, cfunction(a_889)))
      ,
        let weak a_966: pointer = pure(f) in
        load('struct _IO_FILE*', a_966)
      ) in
    if not(params_length(a_961) = 1) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_962 \/ not(are_compatible ('void', a_960)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_964: pointer =
          let a_967: ctype = params_nth(a_961, 0) in
          if not(are_compatible ('struct _IO_FILE*', a_967)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_968: pointer = create(Ivalignof(a_967), a_967) in
            let weak _: unit = store(a_967, a_968, a_965) in
            pure(a_968) in
        let strong a_969: unit =
          ccall('void (*) (struct _IO_FILE*)', a_959, a_964) in
        kill('struct _IO_FILE*', a_964) ;
        pure(a_969)
  ) ;
  pure(Unit) ;
  {- §6.2.4#6 -}
  store('void*', rv, Unspecified('void*')) ;
  let strong a_970: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_972: loaded pointer,
      (a_973: ctype, a_974: [ctype], a_975: boolean, a_976: boolean)),
      a_980: loaded pointer, a_982: loaded pointer, a_986: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_971: loaded pointer =
            pure(Specified(Cfunction(fscanf))) in
          pure((a_971, cfunction(a_971)))
        ,
          let weak a_981: pointer = pure(f) in
          load('struct _IO_FILE*', a_981)
        ,
          let weak a_984: pointer = pure(a_983) in
          {- §6.3.2.1#3 -}
          let weak a_985: pointer = memop(PtrArrayShift, a_984, 'char', 0) in
          pure(Specified(a_985))
        ,
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_987: pointer = pure(rv) in
          pure(Specified(a_987))
        ) in
      if not(params_length(a_974) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_975) \/ not(are_compatible ('signed int', a_973)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_979: pointer =
            let a_988: ctype = params_nth(a_974, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_988)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_989: pointer = create(Ivalignof(a_988), a_988) in
              let weak _: unit = store(a_988, a_989, a_980) in
              pure(a_989) in
          let strong a_978: pointer =
            let a_990: ctype = params_nth(a_974, 1) in
            if not(are_compatible ('const char*', a_990)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_991: pointer = create(Ivalignof(a_990), a_990) in
              let weak _: unit = store(a_990, a_991, a_982) in
              pure(a_991) in
          let strong a_977: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void**', a_986) in
          let strong a_992: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_972, a_979, a_978, [('void**', a_977)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_979)
            ,
              kill('char*', a_978)
            ,
              kill('void**', a_977)
            ) in
          pure(a_992)
    ) in
  store('signed int', n, conv_loaded_int('signed int', a_970)) ;
  let strong a_993: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_994: loaded pointer =
        let weak a_996: pointer = pure(rv) in
        load('void*', a_996) in
      let Specified(a_995: pointer) = a_994 in
      let weak a_997: boolean = memop(PtrWellAligned, 'signed int', a_995) in
      pure(
        Specified(if a_997 then
          a_995
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('signed int*', r, a_993) ;
  let strong a_998: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_1000: loaded integer, a_1001: loaded integer) =
        unseq(
          let weak (a_1005: loaded integer, a_1006: loaded integer) =
            unseq(
              let weak a_1010: pointer = pure(n) in
              load('signed int', a_1010)
            ,
              pure(Specified(1))
            ) in
          pure(
            let (Specified(a_1007: integer), Specified(a_1008: integer)) =
              (a_1005, a_1006) in
            if not(conv_int('signed int', a_1007) =
            conv_int('signed int', a_1008)) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_1002: integer), Specified(a_1003: integer)) =
          (a_1000, a_1001) in
        if conv_int('signed int', a_1002) = conv_int('signed int', a_1003) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_888: boolean =
    let Specified(a_999: integer) = a_998 in
    pure(if not(a_999 = 1) then True else False) in
  if a_888 then
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_1012: loaded pointer,
      (a_1013: ctype, a_1014: [ctype], a_1015: boolean, a_1016: boolean)),
      a_1018: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_1011: loaded pointer =
            pure(Specified(Cfunction(exit))) in
          pure((a_1011, cfunction(a_1011)))
        ,
          pure(Specified(1))
        ) in
      if not(params_length(a_1014) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_1015 \/ not(are_compatible ('void', a_1013)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1017: pointer =
            let a_1019: ctype = params_nth(a_1014, 0) in
            if not(are_compatible ('signed int', a_1019)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_1020: pointer = create(Ivalignof(a_1019), a_1019) in
              let weak _: unit =
                store(a_1019, a_1020, conv_loaded_int(a_1019, a_1018)) in
              pure(a_1020) in
          let strong a_1021: unit =
            ccall('void (*) (signed int)', a_1012, a_1017) in
          kill('signed int', a_1017) ;
          pure(a_1021)
    ) ;
    pure(Unit)
  else
    pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_1022: loaded pointer,
      (a_1023: ctype, a_1024: [ctype], a_1025: boolean, a_1026: boolean)),
      a_1029: loaded pointer, a_1033: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_887: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_887, cfunction(a_887)))
        ,
          let weak a_1031: pointer = pure(a_1030) in
          {- §6.3.2.1#3 -}
          let weak a_1032: pointer =
            memop(PtrArrayShift, a_1031, 'char', 0) in
          pure(Specified(a_1032))
        ,
          {- §6.5.4 -}
          let weak a_1036: pointer = pure(r) in
          load('signed int*', a_1036)
        ) in
      if not(params_length(a_1024) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1025) \/ not(are_compatible ('signed int', a_1023)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1028: pointer =
            let a_1038: ctype = params_nth(a_1024, 0) in
            if not(are_compatible ('const char*', a_1038)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_1039: pointer = create(Ivalignof(a_1038), a_1038) in
              let weak _: unit = store(a_1038, a_1039, a_1029) in
              pure(a_1039) in
          let strong a_1027: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_1033) in
          let strong a_1040: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_1022, a_1028,
            [('void*', a_1027)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_1028), kill('void*', a_1027)) in
          pure(a_1040)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_886: pointer, a_1045: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_1041: loaded pointer =
            let weak a_1044: pointer = pure(r) in
            load('signed int*', a_1044) in
          let Specified(a_1042: pointer) = a_1041 in
          let weak a_1043: boolean =
            memop(PtrValidForDeref, 'signed int', a_1042) in
          pure(
            if a_1043 then
              a_1042
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(12))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_886, conv_loaded_int('signed int', a_1045))) in
      pure(conv_loaded_int('signed int', a_1045))
    ) in
  pure(Unit) ;
  let strong a_1046: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_1047: loaded pointer, a_1048: loaded pointer) =
        unseq(
          let weak a_1052: pointer = pure(r) in
          load('signed int*', a_1052)
        ,
          let weak a_1053: pointer = pure(p) in
          load('signed int*', a_1053)
        ) in
      let (Specified(a_1049: pointer), Specified(a_1050: pointer)) =
        (a_1047, a_1048) in
      let weak a_1051: boolean = memop(PtrEq, a_1049, a_1050) in
      pure(if a_1051 then Specified(1) else Specified(0))
    ) in
  store('_Bool', b1, conv_loaded_int('_Bool', a_1046)) ;
  let strong a_1054: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_1055: loaded integer, a_1056: loaded integer) =
        unseq(
          pure(Specified(0))
        ,
          {- §6.5.2.2#10, sentence 1 -}
          let strong ((a_1061: loaded pointer,
          (a_1062: ctype, a_1063: [ctype], a_1064: boolean, a_1065: boolean)),
          a_1069: loaded pointer, a_1071: loaded pointer,
          a_1073: loaded integer) =
            {- §6.5.2.2#4, sentence 2 -}
            unseq(
              let strong a_1060: loaded pointer =
                pure(Specified(Cfunction(memcmp_proxy))) in
              pure((a_1060, cfunction(a_1060)))
            ,
              {- §6.5.3.2#3, sentence 5 -}
              let weak a_1070: pointer = pure(r) in
              pure(Specified(a_1070))
            ,
              {- §6.5.3.2#3, sentence 5 -}
              let weak a_1072: pointer = pure(p) in
              pure(Specified(a_1072))
            ,
              pure(Specified(Ivsizeof('signed int*')))
            ) in
          if not(params_length(a_1063) = 3) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_1064 \/ not(are_compatible ('signed int', a_1062)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1068: pointer =
                let a_1074: ctype = params_nth(a_1063, 0) in
                if not(are_compatible ('const void*', a_1074)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {- §6.5.2.2#7, sentence 1 -}
                  let weak a_1075: pointer =
                    create(Ivalignof(a_1074), a_1074) in
                  let weak _: unit = store(a_1074, a_1075, a_1069) in
                  pure(a_1075) in
              let strong a_1067: pointer =
                let a_1076: ctype = params_nth(a_1063, 1) in
                if not(are_compatible ('const void*', a_1076)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {- §6.5.2.2#7, sentence 1 -}
                  let weak a_1077: pointer =
                    create(Ivalignof(a_1076), a_1076) in
                  let weak _: unit = store(a_1076, a_1077, a_1071) in
                  pure(a_1077) in
              let strong a_1066: pointer =
                let a_1078: ctype = params_nth(a_1063, 2) in
                if not(are_compatible ('size_t', a_1078)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {- §6.5.2.2#7, sentence 1 -}
                  let weak a_1079: pointer =
                    create(Ivalignof(a_1078), a_1078) in
                  let weak _: unit =
                    store(a_1078, a_1079, conv_loaded_int(a_1078, a_1073)) in
                  pure(a_1079) in
              let strong a_1080: loaded integer =
                ccall('signed int (*) (const void*, const void*, size_t)',
                a_1061, a_1068, a_1067, a_1066) in
              let strong _: (unit,unit,unit) =
                unseq(
                  kill('void*', a_1068)
                ,
                  kill('void*', a_1067)
                ,
                  kill('size_t', a_1066)
                ) in
              pure(a_1080)
        ) in
      pure(
        let (Specified(a_1057: integer), Specified(a_1058: integer)) =
          (a_1055, a_1056) in
        if conv_int('signed int', a_1057) = conv_int('signed int', a_1058) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  store('_Bool', b2, conv_loaded_int('_Bool', a_1054)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_1081: loaded pointer,
      (a_1082: ctype, a_1083: [ctype], a_1084: boolean, a_1085: boolean)),
      a_1091: loaded pointer, a_1095: loaded integer, a_1097: loaded integer,
      a_1103: loaded pointer, a_1118: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_885: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_885, cfunction(a_885)))
        ,
          let weak a_1093: pointer = pure(a_1092) in
          {- §6.3.2.1#3 -}
          let weak a_1094: pointer =
            memop(PtrArrayShift, a_1093, 'char', 0) in
          pure(Specified(a_1094))
        ,
          let weak a_1096: pointer = pure(x) in
          load('signed int', a_1096)
        ,
          let weak a_1102: pointer =
            {- §6.5.3.2 -}
            let weak a_1098: loaded pointer =
              let weak a_1101: pointer = pure(r) in
              load('signed int*', a_1101) in
            let Specified(a_1099: pointer) = a_1098 in
            let weak a_1100: boolean =
              memop(PtrValidForDeref, 'signed int', a_1099) in
            pure(
              if a_1100 then
                a_1099
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_1102)
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_1110: loaded integer =
            let weak (a_1104: loaded integer, a_1105: loaded integer) =
              unseq(
                let weak a_1109: pointer = pure(b1) in
                load('_Bool', a_1109)
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_1106: integer), Specified(a_1107: integer)) =
                (a_1104, a_1105) in
              if conv_int('signed int', a_1106) =
              conv_int('signed int', a_1107) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_1111: integer) = a_1110 in
          {- §6.5.15#4, sentence 2 -}
          if a_1111 = 0 then
            let weak a_1113: pointer = pure(a_1112) in
            {- §6.3.2.1#3 -}
            let weak a_1114: pointer =
              memop(PtrArrayShift, a_1113, 'char', 0) in
            pure(Specified(a_1114))
          else
            let weak a_1116: pointer = pure(a_1115) in
            {- §6.3.2.1#3 -}
            let weak a_1117: pointer =
              memop(PtrArrayShift, a_1116, 'char', 0) in
            pure(Specified(a_1117))
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_1125: loaded integer =
            let weak (a_1119: loaded integer, a_1120: loaded integer) =
              unseq(
                let weak a_1124: pointer = pure(b2) in
                load('_Bool', a_1124)
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_1121: integer), Specified(a_1122: integer)) =
                (a_1119, a_1120) in
              if conv_int('signed int', a_1121) =
              conv_int('signed int', a_1122) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_1126: integer) = a_1125 in
          {- §6.5.15#4, sentence 2 -}
          if a_1126 = 0 then
            let weak a_1128: pointer = pure(a_1127) in
            {- §6.3.2.1#3 -}
            let weak a_1129: pointer =
              memop(PtrArrayShift, a_1128, 'char', 0) in
            pure(Specified(a_1129))
          else
            let weak a_1131: pointer = pure(a_1130) in
            {- §6.3.2.1#3 -}
            let weak a_1132: pointer =
              memop(PtrArrayShift, a_1131, 'char', 0) in
            pure(Specified(a_1132))
        ) in
      if not(params_length(a_1083) <= 5) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1084) \/ not(are_compatible ('signed int', a_1082)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1090: pointer =
            let a_1133: ctype = params_nth(a_1083, 0) in
            if not(are_compatible ('const char*', a_1133)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_1134: pointer = create(Ivalignof(a_1133), a_1133) in
              let weak _: unit = store(a_1133, a_1134, a_1091) in
              pure(a_1134) in
          let strong a_1089: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_1095)) in
          let strong a_1088: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_1097)) in
          let strong a_1087: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_1103) in
          let strong a_1086: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_1118) in
          let strong a_1135: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_1081, a_1090,
            [('signed int', a_1089), ('signed int', a_1088), ('char*', a_1087),
            ('char*', a_1086)]) in
          let strong _: (unit,unit,unit,unit,unit) =
            unseq(
              kill('char*', a_1090)
            ,
              kill('signed int', a_1089)
            ,
              kill('signed int', a_1088)
            ,
              kill('char*', a_1087)
            ,
              kill('char*', a_1086)
            ) in
          pure(a_1135)
    ) in
  pure(Unit) ;
  kill('signed int*', p) ;
  kill('struct _IO_FILE*', f) ;
  kill('void*', rv) ;
  kill('signed int', n) ;
  kill('signed int*', r) ;
  kill('_Bool', b1) ;
  kill('_Bool', b2) ;
  pure(Unit) ;
  save ret_884: loaded integer (a_1136: loaded integer:= Specified(0)) in
    pure(a_1136)

