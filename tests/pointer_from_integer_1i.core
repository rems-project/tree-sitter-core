-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_720: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  106)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc f (i: pointer): eff unit :=
  let strong j: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_701: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(5))) in
  store('signed int', j, conv_loaded_int('signed int', a_701)) ;
  let strong a_702: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_703: loaded integer =
        let weak a_705: pointer = pure(i) in
        load('uintptr_t', a_705) in
      let Specified(a_704: integer) = a_703 in
      let weak a_706: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_704) in
      pure(Specified(a_706))
    ) in
  store('signed int*', p, a_702) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_700: pointer, a_711: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_707: loaded pointer =
            let weak a_710: pointer = pure(p) in
            load('signed int*', a_710) in
          let Specified(a_708: pointer) = a_707 in
          let weak a_709: boolean =
            memop(PtrValidForDeref, 'signed int', a_708) in
          pure(
            if a_709 then
              a_708
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(7))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_700, conv_loaded_int('signed int', a_711))) in
      pure(conv_loaded_int('signed int', a_711))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_712: loaded pointer,
      (a_713: ctype, a_714: [ctype], a_715: boolean, a_716: boolean)),
      a_719: loaded pointer, a_723: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_699: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_699, cfunction(a_699)))
        ,
          let weak a_721: pointer = pure(a_720) in
          {- §6.3.2.1#3 -}
          let weak a_722: pointer = memop(PtrArrayShift, a_721, 'char', 0) in
          pure(Specified(a_722))
        ,
          let weak a_724: pointer = pure(j) in
          load('signed int', a_724)
        ) in
      if not(params_length(a_714) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_715) \/ not(are_compatible ('signed int', a_713)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_718: pointer =
            let a_725: ctype = params_nth(a_714, 0) in
            if not(are_compatible ('const char*', a_725)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_726: pointer = create(Ivalignof(a_725), a_725) in
              let weak _: unit = store(a_725, a_726, a_719) in
              pure(a_726) in
          let strong a_717: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_723)) in
          let strong a_727: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_712, a_718,
            [('signed int', a_717)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_718), kill('signed int', a_717)) in
          pure(a_727)
    ) in
  pure(Unit) ;
  kill('signed int', j) ;
  kill('signed int*', p) ;
  pure(Unit) ;
  save ret_698: unit (a_728: unit:= Unit) in  pure(a_728)

proc main (): eff loaded integer :=
  let strong j: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong a_684: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(4294962676))) in
  store('uintptr_t', j, conv_loaded_int('uintptr_t', a_684)) ;
  {- §6.5#2 -}
  bound(
    {- §6.5.2.2#10, sentence 1 -}
    let strong ((a_685: loaded pointer,
    (a_686: ctype, a_687: [ctype], a_688: boolean, a_689: boolean)),
    a_691: loaded integer) =
      {- §6.5.2.2#4, sentence 2 -}
      unseq(
        let strong a_683: loaded pointer = pure(Specified(Cfunction(f))) in
        pure((a_683, cfunction(a_683)))
      ,
        let weak a_692: pointer = pure(j) in
        load('uintptr_t', a_692)
      ) in
    if not(params_length(a_687) = 1) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_688 \/ not(are_compatible ('void', a_686)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_690: pointer =
          let a_693: ctype = params_nth(a_687, 0) in
          if not(are_compatible ('uintptr_t', a_693)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_694: pointer = create(Ivalignof(a_693), a_693) in
            let weak _: unit =
              store(a_693, a_694, conv_loaded_int(a_693, a_691)) in
            pure(a_694) in
        let strong a_695: unit =
          ccall('void (*) (uintptr_t)', a_685, a_690) in
        kill('uintptr_t', a_690) ;
        pure(a_695)
  ) ;
  pure(Unit) ;
  kill('uintptr_t', j) ;
  pure(Unit) ;
  save ret_682: loaded integer (a_696: loaded integer:= Specified(0)) in
    pure(a_696)

