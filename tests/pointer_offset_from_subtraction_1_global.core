-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_754 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_758 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_917: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_918: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', a_917, conv_loaded_int('signed int', a_918)) ;
  pure(a_917)

glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_915: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_916: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_915, conv_loaded_int('signed int', a_916)) ;
  pure(a_915)

glob a_816: pointer [ail_ctype = 'char[38]'] :=
  create_readonly(Ivalignof('char[38]'), 'char[38]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 38)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_892: pointer [ail_ctype = 'char[26]'] :=
  create_readonly(Ivalignof('char[26]'), 'char[26]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong ux: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong uy: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong offset: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_788: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_789: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_791: pointer = pure(x) in
        pure(Specified(a_791)) in
      let Specified(a_790: pointer) = a_789 in
      let weak a_792: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_790) in
      pure(Specified(a_792))
    ) in
  store('intptr_t', ux, conv_loaded_int('intptr_t', a_788)) ;
  let strong a_793: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_794: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_796: pointer = pure(y) in
        pure(Specified(a_796)) in
      let Specified(a_795: pointer) = a_794 in
      let weak a_797: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_795) in
      pure(Specified(a_797))
    ) in
  store('intptr_t', uy, conv_loaded_int('intptr_t', a_793)) ;
  let strong a_798: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_801: loaded integer, a_802: loaded integer) =
        unseq(
          let weak a_799: pointer = pure(uy) in
          load('intptr_t', a_799)
        ,
          let weak a_800: pointer = pure(ux) in
          load('intptr_t', a_800)
        ) in
      pure(
        let (Specified(a_803: integer), Specified(a_804: integer)) =
          (a_801, a_802) in
        Specified(catch_exceptional_condition('intptr_t',
        conv_int('intptr_t', a_803) - conv_int('intptr_t', a_804)))
      )
    ) in
  store('intptr_t', offset, conv_loaded_int('intptr_t', a_798)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_806: loaded pointer,
      (a_807: ctype, a_808: [ctype], a_809: boolean, a_810: boolean)),
      a_815: loaded pointer, a_819: loaded integer, a_821: loaded integer,
      a_823: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_787: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_787, cfunction(a_787)))
        ,
          let weak a_817: pointer = pure(a_816) in
          {- §6.3.2.1#3 -}
          let weak a_818: pointer = memop(PtrArrayShift, a_817, 'char', 0) in
          pure(Specified(a_818))
        ,
          let weak a_820: pointer = pure(ux) in
          load('intptr_t', a_820)
        ,
          let weak a_822: pointer = pure(uy) in
          load('intptr_t', a_822)
        ,
          let weak a_824: pointer = pure(offset) in
          load('intptr_t', a_824)
        ) in
      if not(params_length(a_808) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_809) \/ not(are_compatible ('signed int', a_807)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_814: pointer =
            let a_825: ctype = params_nth(a_808, 0) in
            if not(are_compatible ('const char*', a_825)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_826: pointer = create(Ivalignof(a_825), a_825) in
              let weak _: unit = store(a_825, a_826, a_815) in
              pure(a_826) in
          let strong a_813: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_819)) in
          let strong a_812: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_821)) in
          let strong a_811: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_823)) in
          let strong a_827: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_806, a_814,
            [('intptr_t', a_813), ('intptr_t', a_812), ('intptr_t', a_811)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_814)
            ,
              kill('intptr_t', a_813)
            ,
              kill('intptr_t', a_812)
            ,
              kill('intptr_t', a_811)
            ) in
          pure(a_827)
    ) in
  pure(Unit) ;
  let strong a_828: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_829: loaded integer =
        {- §6.5.6 -}
        let weak (a_831: loaded integer, a_832: loaded integer) =
          unseq(
            let weak a_836: pointer = pure(ux) in
            load('intptr_t', a_836)
          ,
            let weak a_837: pointer = pure(offset) in
            load('intptr_t', a_837)
          ) in
        pure(
          let (Specified(a_833: integer), Specified(a_834: integer)) =
            (a_831, a_832) in
          Specified(catch_exceptional_condition('intptr_t',
          conv_int('intptr_t', a_833) + conv_int('intptr_t', a_834)))
        ) in
      let Specified(a_830: integer) = a_829 in
      let weak a_838: pointer =
        memop(PtrFromInt, 'intptr_t', 'signed int', a_830) in
      pure(Specified(a_838))
    ) in
  store('signed int*', p, a_828) ;
  let strong a_839: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_840: pointer = pure(y) in
      pure(Specified(a_840))
    ) in
  store('signed int*', q, a_839) ;
  let strong a_841: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_843: loaded integer, a_844: loaded integer) =
        unseq(
          let weak (a_848: loaded integer, a_849: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_854: loaded pointer,
              (a_855: ctype, a_856: [ctype], a_857: boolean, a_858: boolean)),
              a_862: loaded pointer, a_864: loaded pointer,
              a_866: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_853: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_853, cfunction(a_853)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_863: pointer = pure(p) in
                  pure(Specified(a_863))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_865: pointer = pure(q) in
                  pure(Specified(a_865))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_856) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_857 \/ not(are_compatible ('signed int', a_855)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_861: pointer =
                    let a_867: ctype = params_nth(a_856, 0) in
                    if not(are_compatible ('const void*', a_867)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_868: pointer =
                        create(Ivalignof(a_867), a_867) in
                      let weak _: unit = store(a_867, a_868, a_862) in
                      pure(a_868) in
                  let strong a_860: pointer =
                    let a_869: ctype = params_nth(a_856, 1) in
                    if not(are_compatible ('const void*', a_869)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_870: pointer =
                        create(Ivalignof(a_869), a_869) in
                      let weak _: unit = store(a_869, a_870, a_864) in
                      pure(a_870) in
                  let strong a_859: pointer =
                    let a_871: ctype = params_nth(a_856, 2) in
                    if not(are_compatible ('size_t', a_871)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_872: pointer =
                        create(Ivalignof(a_871), a_871) in
                      let weak _: unit =
                        store(a_871, a_872, conv_loaded_int(a_871, a_866)) in
                      pure(a_872) in
                  let strong a_873: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_854, a_861, a_860, a_859) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_861)
                    ,
                      kill('void*', a_860)
                    ,
                      kill('size_t', a_859)
                    ) in
                  pure(a_873)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_850: integer), Specified(a_851: integer)) =
              (a_848, a_849) in
            if conv_int('signed int', a_850) = conv_int('signed int', a_851) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_845: integer), Specified(a_846: integer)) =
          (a_843, a_844) in
        if conv_int('signed int', a_845) = conv_int('signed int', a_846) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_786: boolean =
    let Specified(a_842: integer) = a_841 in
    pure(if not(a_842 = 1) then True else False) in
  if a_786 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_875: pointer, a_880: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_876: loaded pointer =
              let weak a_879: pointer = pure(p) in
              load('signed int*', a_879) in
            let Specified(a_877: pointer) = a_876 in
            let weak a_878: boolean =
              memop(PtrValidForDeref, 'signed int', a_877) in
            pure(
              if a_878 then
                a_877
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_875, conv_loaded_int('signed int', a_880))) in
        pure(conv_loaded_int('signed int', a_880))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_881: loaded pointer,
        (a_882: ctype, a_883: [ctype], a_884: boolean, a_885: boolean)),
        a_891: loaded pointer, a_895: loaded integer, a_897: loaded integer,
        a_899: loaded integer, a_905: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_874: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_874, cfunction(a_874)))
          ,
            let weak a_893: pointer = pure(a_892) in
            {- §6.3.2.1#3 -}
            let weak a_894: pointer =
              memop(PtrArrayShift, a_893, 'char', 0) in
            pure(Specified(a_894))
          ,
            let weak a_896: pointer = pure(x) in
            load('signed int', a_896)
          ,
            let weak a_898: pointer = pure(y) in
            load('signed int', a_898)
          ,
            let weak a_904: pointer =
              {- §6.5.3.2 -}
              let weak a_900: loaded pointer =
                let weak a_903: pointer = pure(p) in
                load('signed int*', a_903) in
              let Specified(a_901: pointer) = a_900 in
              let weak a_902: boolean =
                memop(PtrValidForDeref, 'signed int', a_901) in
              pure(
                if a_902 then
                  a_901
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_904)
          ,
            let weak a_910: pointer =
              {- §6.5.3.2 -}
              let weak a_906: loaded pointer =
                let weak a_909: pointer = pure(q) in
                load('signed int*', a_909) in
              let Specified(a_907: pointer) = a_906 in
              let weak a_908: boolean =
                memop(PtrValidForDeref, 'signed int', a_907) in
              pure(
                if a_908 then
                  a_907
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_910)
          ) in
        if not(params_length(a_883) <= 5) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_884) \/ not(are_compatible ('signed int', a_882)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_890: pointer =
              let a_911: ctype = params_nth(a_883, 0) in
              if not(are_compatible ('const char*', a_911)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_912: pointer = create(Ivalignof(a_911), a_911) in
                let weak _: unit = store(a_911, a_912, a_891) in
                pure(a_912) in
            let strong a_889: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_895)) in
            let strong a_888: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_897)) in
            let strong a_887: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_899)) in
            let strong a_886: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_905)) in
            let strong a_913: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_881, a_890,
              [('signed int', a_889), ('signed int', a_888),
              ('signed int', a_887), ('signed int', a_886)]) in
            let strong _: (unit,unit,unit,unit,unit) =
              unseq(
                kill('char*', a_890)
              ,
                kill('signed int', a_889)
              ,
                kill('signed int', a_888)
              ,
                kill('signed int', a_887)
              ,
                kill('signed int', a_886)
              ) in
            pure(a_913)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  kill('intptr_t', ux) ;
  kill('intptr_t', uy) ;
  kill('intptr_t', offset) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_785: loaded integer (a_914: loaded integer:= Specified(0)) in
    pure(a_914)

