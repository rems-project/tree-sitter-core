-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_750: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_751: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', a_750, conv_loaded_int('signed int', a_751)) ;
  pure(a_750)

glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_748: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_749: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_748, conv_loaded_int('signed int', a_749)) ;
  pure(a_748)

glob a_686: pointer [ail_ctype = 'char[23]'] :=
  create_readonly(Ivalignof('char[23]'), 'char[23]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_711: pointer [ail_ctype = 'char[24]'] :=
  create_readonly(Ivalignof('char[24]'), 'char[24]', Specified(Array(Specified(conv_int('char',
  40)), Specified(conv_int('char', 112)), Specified(conv_int('char', 60)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 41)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 62)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 41)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_723: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_726: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

glob a_738: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_741: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong b1: pointer = create(Ivalignof('_Bool'), '_Bool') in
  let strong b2: pointer = create(Ivalignof('_Bool'), '_Bool') in
  let strong a_657: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_658: pointer = pure(x) in
      pure(Specified(a_658))
    ) in
  store('signed int*', p, a_657) ;
  let strong a_659: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_660: pointer = pure(y) in
      pure(Specified(a_660))
    ) in
  store('signed int*', q, a_659) ;
  let strong a_661: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.8 -}
      let weak (a_664: loaded pointer, a_665: loaded pointer) =
        unseq(
          let weak a_662: pointer = pure(p) in
          load('signed int*', a_662)
        ,
          let weak a_663: pointer = pure(q) in
          load('signed int*', a_663)
        ) in
      let (Specified(a_666: pointer), Specified(a_667: pointer)) =
        (a_664, a_665) in
      let weak a_668: boolean = memop(PtrLt, a_666, a_667) in
      {- §6.5.8#6 -}
      pure(if a_668 then Specified(1) else Specified(0))
    ) in
  store('_Bool', b1, conv_loaded_int('_Bool', a_661)) ;
  let strong a_669: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.8 -}
      let weak (a_672: loaded pointer, a_673: loaded pointer) =
        unseq(
          let weak a_670: pointer = pure(p) in
          load('signed int*', a_670)
        ,
          let weak a_671: pointer = pure(q) in
          load('signed int*', a_671)
        ) in
      let (Specified(a_674: pointer), Specified(a_675: pointer)) =
        (a_672, a_673) in
      let weak a_676: boolean = memop(PtrGt, a_674, a_675) in
      {- §6.5.8#6 -}
      pure(if a_676 then Specified(1) else Specified(0))
    ) in
  store('_Bool', b2, conv_loaded_int('_Bool', a_669)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_677: loaded pointer,
      (a_678: ctype, a_679: [ctype], a_680: boolean, a_681: boolean)),
      a_685: loaded pointer, a_689: loaded pointer, a_694: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_656: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_656, cfunction(a_656)))
        ,
          let weak a_687: pointer = pure(a_686) in
          {- §6.3.2.1#3 -}
          let weak a_688: pointer = memop(PtrArrayShift, a_687, 'char', 0) in
          pure(Specified(a_688))
        ,
          {- §6.5.4 -}
          let weak a_692: pointer = pure(p) in
          load('signed int*', a_692)
        ,
          {- §6.5.4 -}
          let weak a_697: pointer = pure(q) in
          load('signed int*', a_697)
        ) in
      if not(params_length(a_679) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_680) \/ not(are_compatible ('signed int', a_678)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_684: pointer =
            let a_699: ctype = params_nth(a_679, 0) in
            if not(are_compatible ('const char*', a_699)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_700: pointer = create(Ivalignof(a_699), a_699) in
              let weak _: unit = store(a_699, a_700, a_685) in
              pure(a_700) in
          let strong a_683: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_689) in
          let strong a_682: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_694) in
          let strong a_701: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_677, a_684,
            [('void*', a_683), ('void*', a_682)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_684)
            ,
              kill('void*', a_683)
            ,
              kill('void*', a_682)
            ) in
          pure(a_701)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_702: loaded pointer,
      (a_703: ctype, a_704: [ctype], a_705: boolean, a_706: boolean)),
      a_710: loaded pointer, a_714: loaded pointer, a_729: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_655: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_655, cfunction(a_655)))
        ,
          let weak a_712: pointer = pure(a_711) in
          {- §6.3.2.1#3 -}
          let weak a_713: pointer = memop(PtrArrayShift, a_712, 'char', 0) in
          pure(Specified(a_713))
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_721: loaded integer =
            let weak (a_715: loaded integer, a_716: loaded integer) =
              unseq(
                let weak a_720: pointer = pure(b1) in
                load('_Bool', a_720)
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_717: integer), Specified(a_718: integer)) =
                (a_715, a_716) in
              if conv_int('signed int', a_717) = conv_int('signed int', a_718) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_722: integer) = a_721 in
          {- §6.5.15#4, sentence 2 -}
          if a_722 = 0 then
            let weak a_724: pointer = pure(a_723) in
            {- §6.3.2.1#3 -}
            let weak a_725: pointer =
              memop(PtrArrayShift, a_724, 'char', 0) in
            pure(Specified(a_725))
          else
            let weak a_727: pointer = pure(a_726) in
            {- §6.3.2.1#3 -}
            let weak a_728: pointer =
              memop(PtrArrayShift, a_727, 'char', 0) in
            pure(Specified(a_728))
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_736: loaded integer =
            let weak (a_730: loaded integer, a_731: loaded integer) =
              unseq(
                let weak a_735: pointer = pure(b2) in
                load('_Bool', a_735)
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_732: integer), Specified(a_733: integer)) =
                (a_730, a_731) in
              if conv_int('signed int', a_732) = conv_int('signed int', a_733) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_737: integer) = a_736 in
          {- §6.5.15#4, sentence 2 -}
          if a_737 = 0 then
            let weak a_739: pointer = pure(a_738) in
            {- §6.3.2.1#3 -}
            let weak a_740: pointer =
              memop(PtrArrayShift, a_739, 'char', 0) in
            pure(Specified(a_740))
          else
            let weak a_742: pointer = pure(a_741) in
            {- §6.3.2.1#3 -}
            let weak a_743: pointer =
              memop(PtrArrayShift, a_742, 'char', 0) in
            pure(Specified(a_743))
        ) in
      if not(params_length(a_704) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_705) \/ not(are_compatible ('signed int', a_703)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_709: pointer =
            let a_744: ctype = params_nth(a_704, 0) in
            if not(are_compatible ('const char*', a_744)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_745: pointer = create(Ivalignof(a_744), a_744) in
              let weak _: unit = store(a_744, a_745, a_710) in
              pure(a_745) in
          let strong a_708: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_714) in
          let strong a_707: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_729) in
          let strong a_746: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_702, a_709,
            [('char*', a_708), ('char*', a_707)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_709)
            ,
              kill('char*', a_708)
            ,
              kill('char*', a_707)
            ) in
          pure(a_746)
    ) in
  pure(Unit) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  kill('_Bool', b1) ;
  kill('_Bool', b2) ;
  pure(Unit) ;
  save ret_654: loaded integer (a_747: loaded integer:= Specified(0)) in
    pure(a_747)

