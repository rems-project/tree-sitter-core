-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_754 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_758 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob a_818: pointer [ail_ctype = 'char[38]'] :=
  create_readonly(Ivalignof('char[38]'), 'char[38]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 38)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_903: pointer [ail_ctype = 'char[23]'] :=
  create_readonly(Ivalignof('char[23]'), 'char[23]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong y: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong ux: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong uy: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong offset: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_788: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', y, conv_loaded_int('signed int', a_788)) ;
  let strong a_789: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', x, conv_loaded_int('signed int', a_789)) ;
  let strong a_790: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_791: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_793: pointer = pure(x) in
        pure(Specified(a_793)) in
      let Specified(a_792: pointer) = a_791 in
      let weak a_794: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_792) in
      pure(Specified(a_794))
    ) in
  store('uintptr_t', ux, conv_loaded_int('uintptr_t', a_790)) ;
  let strong a_795: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_796: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_798: pointer = pure(y) in
        pure(Specified(a_798)) in
      let Specified(a_797: pointer) = a_796 in
      let weak a_799: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_797) in
      pure(Specified(a_799))
    ) in
  store('uintptr_t', uy, conv_loaded_int('uintptr_t', a_795)) ;
  let strong a_800: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_803: loaded integer, a_804: loaded integer) =
        unseq(
          let weak a_801: pointer = pure(uy) in
          load('uintptr_t', a_801)
        ,
          let weak a_802: pointer = pure(ux) in
          load('uintptr_t', a_802)
        ) in
      pure(
        let (Specified(a_805: integer), Specified(a_806: integer)) =
          (a_803, a_804) in
        Specified(wrapI('uintptr_t',
        conv_int('uintptr_t', a_805) - conv_int('uintptr_t', a_806)))
      )
    ) in
  store('uintptr_t', offset, conv_loaded_int('uintptr_t', a_800)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_808: loaded pointer,
      (a_809: ctype, a_810: [ctype], a_811: boolean, a_812: boolean)),
      a_817: loaded pointer, a_821: loaded integer, a_826: loaded integer,
      a_831: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_787: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_787, cfunction(a_787)))
        ,
          let weak a_819: pointer = pure(a_818) in
          {- §6.3.2.1#3 -}
          let weak a_820: pointer = memop(PtrArrayShift, a_819, 'char', 0) in
          pure(Specified(a_820))
        ,
          {- §6.5.4 -}
          let weak a_822: loaded integer =
            let weak a_824: pointer = pure(ux) in
            load('uintptr_t', a_824) in
          pure(conv_loaded_int('unsigned long', a_822))
        ,
          {- §6.5.4 -}
          let weak a_827: loaded integer =
            let weak a_829: pointer = pure(uy) in
            load('uintptr_t', a_829) in
          pure(conv_loaded_int('unsigned long', a_827))
        ,
          {- §6.5.4 -}
          let weak a_832: loaded integer =
            let weak a_834: pointer = pure(offset) in
            load('uintptr_t', a_834) in
          pure(conv_loaded_int('unsigned long', a_832))
        ) in
      if not(params_length(a_810) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_811) \/ not(are_compatible ('signed int', a_809)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_816: pointer =
            let a_836: ctype = params_nth(a_810, 0) in
            if not(are_compatible ('const char*', a_836)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_837: pointer = create(Ivalignof(a_836), a_836) in
              let weak _: unit = store(a_836, a_837, a_817) in
              pure(a_837) in
          let strong a_815: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'unsigned long',
            conv_loaded_int('unsigned long', a_821)) in
          let strong a_814: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'unsigned long',
            conv_loaded_int('unsigned long', a_826)) in
          let strong a_813: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'unsigned long',
            conv_loaded_int('unsigned long', a_831)) in
          let strong a_838: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_808, a_816,
            [('unsigned long', a_815), ('unsigned long', a_814),
            ('unsigned long', a_813)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_816)
            ,
              kill('unsigned long', a_815)
            ,
              kill('unsigned long', a_814)
            ,
              kill('unsigned long', a_813)
            ) in
          pure(a_838)
    ) in
  pure(Unit) ;
  let strong a_839: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_840: loaded integer =
        {- §6.5.6 -}
        let weak (a_842: loaded integer, a_843: loaded integer) =
          unseq(
            let weak a_847: pointer = pure(ux) in
            load('uintptr_t', a_847)
          ,
            let weak a_848: pointer = pure(offset) in
            load('uintptr_t', a_848)
          ) in
        pure(
          let (Specified(a_844: integer), Specified(a_845: integer)) =
            (a_842, a_843) in
          Specified(wrapI('uintptr_t',
          conv_int('uintptr_t', a_844) + conv_int('uintptr_t', a_845)))
        ) in
      let Specified(a_841: integer) = a_840 in
      let weak a_849: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_841) in
      pure(Specified(a_849))
    ) in
  store('signed int*', p, a_839) ;
  let strong a_850: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_851: pointer = pure(y) in
      pure(Specified(a_851))
    ) in
  store('signed int*', q, a_850) ;
  let strong a_852: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_854: loaded integer, a_855: loaded integer) =
        unseq(
          let weak (a_859: loaded integer, a_860: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_865: loaded pointer,
              (a_866: ctype, a_867: [ctype], a_868: boolean, a_869: boolean)),
              a_873: loaded pointer, a_875: loaded pointer,
              a_877: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_864: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_864, cfunction(a_864)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_874: pointer = pure(p) in
                  pure(Specified(a_874))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_876: pointer = pure(q) in
                  pure(Specified(a_876))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_867) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_868 \/ not(are_compatible ('signed int', a_866)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_872: pointer =
                    let a_878: ctype = params_nth(a_867, 0) in
                    if not(are_compatible ('const void*', a_878)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_879: pointer =
                        create(Ivalignof(a_878), a_878) in
                      let weak _: unit = store(a_878, a_879, a_873) in
                      pure(a_879) in
                  let strong a_871: pointer =
                    let a_880: ctype = params_nth(a_867, 1) in
                    if not(are_compatible ('const void*', a_880)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_881: pointer =
                        create(Ivalignof(a_880), a_880) in
                      let weak _: unit = store(a_880, a_881, a_875) in
                      pure(a_881) in
                  let strong a_870: pointer =
                    let a_882: ctype = params_nth(a_867, 2) in
                    if not(are_compatible ('size_t', a_882)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_883: pointer =
                        create(Ivalignof(a_882), a_882) in
                      let weak _: unit =
                        store(a_882, a_883, conv_loaded_int(a_882, a_877)) in
                      pure(a_883) in
                  let strong a_884: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_865, a_872, a_871, a_870) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_872)
                    ,
                      kill('void*', a_871)
                    ,
                      kill('size_t', a_870)
                    ) in
                  pure(a_884)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_861: integer), Specified(a_862: integer)) =
              (a_859, a_860) in
            if conv_int('signed int', a_861) = conv_int('signed int', a_862) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_856: integer), Specified(a_857: integer)) =
          (a_854, a_855) in
        if conv_int('signed int', a_856) = conv_int('signed int', a_857) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_786: boolean =
    let Specified(a_853: integer) = a_852 in
    pure(if not(a_853 = 1) then True else False) in
  if a_786 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_886: pointer, a_891: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_887: loaded pointer =
              let weak a_890: pointer = pure(p) in
              load('signed int*', a_890) in
            let Specified(a_888: pointer) = a_887 in
            let weak a_889: boolean =
              memop(PtrValidForDeref, 'signed int', a_888) in
            pure(
              if a_889 then
                a_888
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_886, conv_loaded_int('signed int', a_891))) in
        pure(conv_loaded_int('signed int', a_891))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_892: loaded pointer,
        (a_893: ctype, a_894: [ctype], a_895: boolean, a_896: boolean)),
        a_902: loaded pointer, a_906: loaded integer, a_908: loaded integer,
        a_910: loaded integer, a_916: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_885: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_885, cfunction(a_885)))
          ,
            let weak a_904: pointer = pure(a_903) in
            {- §6.3.2.1#3 -}
            let weak a_905: pointer =
              memop(PtrArrayShift, a_904, 'char', 0) in
            pure(Specified(a_905))
          ,
            let weak a_907: pointer = pure(x) in
            load('signed int', a_907)
          ,
            let weak a_909: pointer = pure(y) in
            load('signed int', a_909)
          ,
            let weak a_915: pointer =
              {- §6.5.3.2 -}
              let weak a_911: loaded pointer =
                let weak a_914: pointer = pure(p) in
                load('signed int*', a_914) in
              let Specified(a_912: pointer) = a_911 in
              let weak a_913: boolean =
                memop(PtrValidForDeref, 'signed int', a_912) in
              pure(
                if a_913 then
                  a_912
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_915)
          ,
            let weak a_921: pointer =
              {- §6.5.3.2 -}
              let weak a_917: loaded pointer =
                let weak a_920: pointer = pure(q) in
                load('signed int*', a_920) in
              let Specified(a_918: pointer) = a_917 in
              let weak a_919: boolean =
                memop(PtrValidForDeref, 'signed int', a_918) in
              pure(
                if a_919 then
                  a_918
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_921)
          ) in
        if not(params_length(a_894) <= 5) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_895) \/ not(are_compatible ('signed int', a_893)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_901: pointer =
              let a_922: ctype = params_nth(a_894, 0) in
              if not(are_compatible ('const char*', a_922)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_923: pointer = create(Ivalignof(a_922), a_922) in
                let weak _: unit = store(a_922, a_923, a_902) in
                pure(a_923) in
            let strong a_900: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_906)) in
            let strong a_899: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_908)) in
            let strong a_898: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_910)) in
            let strong a_897: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_916)) in
            let strong a_924: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_892, a_901,
              [('signed int', a_900), ('signed int', a_899),
              ('signed int', a_898), ('signed int', a_897)]) in
            let strong _: (unit,unit,unit,unit,unit) =
              unseq(
                kill('char*', a_901)
              ,
                kill('signed int', a_900)
              ,
                kill('signed int', a_899)
              ,
                kill('signed int', a_898)
              ,
                kill('signed int', a_897)
              ) in
            pure(a_924)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  kill('signed int', y) ;
  kill('signed int', x) ;
  kill('uintptr_t', ux) ;
  kill('uintptr_t', uy) ;
  kill('uintptr_t', offset) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_785: loaded integer (a_925: loaded integer:= Specified(0)) in
    pure(a_925)

