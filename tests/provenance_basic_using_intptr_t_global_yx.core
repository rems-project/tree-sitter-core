-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_754 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_758 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_913: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_914: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', a_913, conv_loaded_int('signed int', a_914)) ;
  pure(a_913)

glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_911: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_912: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_911, conv_loaded_int('signed int', a_912)) ;
  pure(a_911)

glob a_822: pointer [ail_ctype = 'char[31]'] :=
  create_readonly(Ivalignof('char[31]'), 'char[31]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_888: pointer [ail_ctype = 'char[26]'] :=
  create_readonly(Ivalignof('char[26]'), 'char[26]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong ux: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong uy: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong offset: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_788: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_789: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_791: pointer = pure(x) in
        pure(Specified(a_791)) in
      let Specified(a_790: pointer) = a_789 in
      let weak a_792: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_790) in
      pure(Specified(a_792))
    ) in
  store('intptr_t', ux, conv_loaded_int('intptr_t', a_788)) ;
  let strong a_793: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_794: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_796: pointer = pure(y) in
        pure(Specified(a_796)) in
      let Specified(a_795: pointer) = a_794 in
      let weak a_797: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_795) in
      pure(Specified(a_797))
    ) in
  store('intptr_t', uy, conv_loaded_int('intptr_t', a_793)) ;
  let strong a_798: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(4))) in
  store('intptr_t', offset, conv_loaded_int('intptr_t', a_798)) ;
  let strong a_799: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_800: loaded integer =
        {- §6.5.6 -}
        let weak (a_802: loaded integer, a_803: loaded integer) =
          unseq(
            let weak a_807: pointer = pure(ux) in
            load('intptr_t', a_807)
          ,
            let weak a_808: pointer = pure(offset) in
            load('intptr_t', a_808)
          ) in
        pure(
          let (Specified(a_804: integer), Specified(a_805: integer)) =
            (a_802, a_803) in
          Specified(catch_exceptional_condition('intptr_t',
          conv_int('intptr_t', a_804) + conv_int('intptr_t', a_805)))
        ) in
      let Specified(a_801: integer) = a_800 in
      let weak a_809: pointer =
        memop(PtrFromInt, 'intptr_t', 'signed int', a_801) in
      pure(Specified(a_809))
    ) in
  store('signed int*', p, a_799) ;
  let strong a_810: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_811: pointer = pure(y) in
      pure(Specified(a_811))
    ) in
  store('signed int*', q, a_810) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_812: loaded pointer,
      (a_813: ctype, a_814: [ctype], a_815: boolean, a_816: boolean)),
      a_821: loaded pointer, a_825: loaded integer, a_827: loaded pointer,
      a_832: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_787: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_787, cfunction(a_787)))
        ,
          let weak a_823: pointer = pure(a_822) in
          {- §6.3.2.1#3 -}
          let weak a_824: pointer = memop(PtrArrayShift, a_823, 'char', 0) in
          pure(Specified(a_824))
        ,
          let weak a_826: pointer = pure(ux) in
          load('intptr_t', a_826)
        ,
          {- §6.5.4 -}
          let weak a_830: pointer = pure(p) in
          load('signed int*', a_830)
        ,
          let weak a_833: pointer = pure(uy) in
          load('intptr_t', a_833)
        ) in
      if not(params_length(a_814) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_815) \/ not(are_compatible ('signed int', a_813)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_820: pointer =
            let a_834: ctype = params_nth(a_814, 0) in
            if not(are_compatible ('const char*', a_834)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_835: pointer = create(Ivalignof(a_834), a_834) in
              let weak _: unit = store(a_834, a_835, a_821) in
              pure(a_835) in
          let strong a_819: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_825)) in
          let strong a_818: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_827) in
          let strong a_817: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_832)) in
          let strong a_836: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_812, a_820,
            [('intptr_t', a_819), ('void*', a_818), ('intptr_t', a_817)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_820)
            ,
              kill('intptr_t', a_819)
            ,
              kill('void*', a_818)
            ,
              kill('intptr_t', a_817)
            ) in
          pure(a_836)
    ) in
  pure(Unit) ;
  let strong a_837: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_839: loaded integer, a_840: loaded integer) =
        unseq(
          let weak (a_844: loaded integer, a_845: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_850: loaded pointer,
              (a_851: ctype, a_852: [ctype], a_853: boolean, a_854: boolean)),
              a_858: loaded pointer, a_860: loaded pointer,
              a_862: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_849: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_849, cfunction(a_849)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_859: pointer = pure(p) in
                  pure(Specified(a_859))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_861: pointer = pure(q) in
                  pure(Specified(a_861))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_852) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_853 \/ not(are_compatible ('signed int', a_851)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_857: pointer =
                    let a_863: ctype = params_nth(a_852, 0) in
                    if not(are_compatible ('const void*', a_863)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_864: pointer =
                        create(Ivalignof(a_863), a_863) in
                      let weak _: unit = store(a_863, a_864, a_858) in
                      pure(a_864) in
                  let strong a_856: pointer =
                    let a_865: ctype = params_nth(a_852, 1) in
                    if not(are_compatible ('const void*', a_865)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_866: pointer =
                        create(Ivalignof(a_865), a_865) in
                      let weak _: unit = store(a_865, a_866, a_860) in
                      pure(a_866) in
                  let strong a_855: pointer =
                    let a_867: ctype = params_nth(a_852, 2) in
                    if not(are_compatible ('size_t', a_867)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_868: pointer =
                        create(Ivalignof(a_867), a_867) in
                      let weak _: unit =
                        store(a_867, a_868, conv_loaded_int(a_867, a_862)) in
                      pure(a_868) in
                  let strong a_869: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_850, a_857, a_856, a_855) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_857)
                    ,
                      kill('void*', a_856)
                    ,
                      kill('size_t', a_855)
                    ) in
                  pure(a_869)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_846: integer), Specified(a_847: integer)) =
              (a_844, a_845) in
            if conv_int('signed int', a_846) = conv_int('signed int', a_847) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_841: integer), Specified(a_842: integer)) =
          (a_839, a_840) in
        if conv_int('signed int', a_841) = conv_int('signed int', a_842) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_786: boolean =
    let Specified(a_838: integer) = a_837 in
    pure(if not(a_838 = 1) then True else False) in
  if a_786 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_871: pointer, a_876: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_872: loaded pointer =
              let weak a_875: pointer = pure(p) in
              load('signed int*', a_875) in
            let Specified(a_873: pointer) = a_872 in
            let weak a_874: boolean =
              memop(PtrValidForDeref, 'signed int', a_873) in
            pure(
              if a_874 then
                a_873
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_871, conv_loaded_int('signed int', a_876))) in
        pure(conv_loaded_int('signed int', a_876))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_877: loaded pointer,
        (a_878: ctype, a_879: [ctype], a_880: boolean, a_881: boolean)),
        a_887: loaded pointer, a_891: loaded integer, a_893: loaded integer,
        a_895: loaded integer, a_901: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_870: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_870, cfunction(a_870)))
          ,
            let weak a_889: pointer = pure(a_888) in
            {- §6.3.2.1#3 -}
            let weak a_890: pointer =
              memop(PtrArrayShift, a_889, 'char', 0) in
            pure(Specified(a_890))
          ,
            let weak a_892: pointer = pure(x) in
            load('signed int', a_892)
          ,
            let weak a_894: pointer = pure(y) in
            load('signed int', a_894)
          ,
            let weak a_900: pointer =
              {- §6.5.3.2 -}
              let weak a_896: loaded pointer =
                let weak a_899: pointer = pure(p) in
                load('signed int*', a_899) in
              let Specified(a_897: pointer) = a_896 in
              let weak a_898: boolean =
                memop(PtrValidForDeref, 'signed int', a_897) in
              pure(
                if a_898 then
                  a_897
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_900)
          ,
            let weak a_906: pointer =
              {- §6.5.3.2 -}
              let weak a_902: loaded pointer =
                let weak a_905: pointer = pure(q) in
                load('signed int*', a_905) in
              let Specified(a_903: pointer) = a_902 in
              let weak a_904: boolean =
                memop(PtrValidForDeref, 'signed int', a_903) in
              pure(
                if a_904 then
                  a_903
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_906)
          ) in
        if not(params_length(a_879) <= 5) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_880) \/ not(are_compatible ('signed int', a_878)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_886: pointer =
              let a_907: ctype = params_nth(a_879, 0) in
              if not(are_compatible ('const char*', a_907)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_908: pointer = create(Ivalignof(a_907), a_907) in
                let weak _: unit = store(a_907, a_908, a_887) in
                pure(a_908) in
            let strong a_885: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_891)) in
            let strong a_884: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_893)) in
            let strong a_883: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_895)) in
            let strong a_882: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_901)) in
            let strong a_909: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_877, a_886,
              [('signed int', a_885), ('signed int', a_884),
              ('signed int', a_883), ('signed int', a_882)]) in
            let strong _: (unit,unit,unit,unit,unit) =
              unseq(
                kill('char*', a_886)
              ,
                kill('signed int', a_885)
              ,
                kill('signed int', a_884)
              ,
                kill('signed int', a_883)
              ,
                kill('signed int', a_882)
              ) in
            pure(a_909)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  kill('intptr_t', ux) ;
  kill('intptr_t', uy) ;
  kill('intptr_t', offset) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_785: loaded integer (a_910: loaded integer:= Specified(0)) in
    pure(a_910)

