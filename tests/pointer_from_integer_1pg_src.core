-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_717: pointer [ail_ctype = 'char[12]'] :=
  create_readonly(Ivalignof('char[12]'), 'char[12]', Specified(Array(Specified(conv_int('char',
  38)), Specified(conv_int('char', 106)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_756: pointer [ail_ctype = 'char[7]'] :=
  create_readonly(Ivalignof('char[7]'), 'char[7]', Specified(Array(Specified(conv_int('char',
  101)), Specified(conv_int('char', 113)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_775: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  106)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc f (p: pointer): eff unit :=
  let strong j: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_707: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  store('signed int', j, conv_loaded_int('signed int', a_707)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_708: loaded pointer,
      (a_709: ctype, a_710: [ctype], a_711: boolean, a_712: boolean)),
      a_716: loaded pointer, a_720: loaded pointer, a_725: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_706: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_706, cfunction(a_706)))
        ,
          let weak a_718: pointer = pure(a_717) in
          {- §6.3.2.1#3 -}
          let weak a_719: pointer = memop(PtrArrayShift, a_718, 'char', 0) in
          pure(Specified(a_719))
        ,
          {- §6.5.3.2#3, sentence 5 -}
          {- §6.5.4 -}
          let weak a_723: pointer = pure(j) in
          pure(Specified(a_723))
        ,
          {- §6.5.4 -}
          let weak a_728: pointer = pure(p) in
          load('signed int*', a_728)
        ) in
      if not(params_length(a_710) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_711) \/ not(are_compatible ('signed int', a_709)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_715: pointer =
            let a_730: ctype = params_nth(a_710, 0) in
            if not(are_compatible ('const char*', a_730)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_731: pointer = create(Ivalignof(a_730), a_730) in
              let weak _: unit = store(a_730, a_731, a_716) in
              pure(a_731) in
          let strong a_714: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_720) in
          let strong a_713: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_725) in
          let strong a_732: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_708, a_715,
            [('void*', a_714), ('void*', a_713)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_715)
            ,
              kill('void*', a_714)
            ,
              kill('void*', a_713)
            ) in
          pure(a_732)
    ) in
  pure(Unit) ;
  let strong a_733: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_735: loaded integer, a_736: loaded integer) =
        unseq(
          let weak (a_740: loaded pointer, a_741: loaded pointer) =
            unseq(
              let weak a_745: pointer = pure(p) in
              load('signed int*', a_745)
            ,
              {- §6.5.3.2#3, sentence 5 -}
              let weak a_746: pointer = pure(j) in
              pure(Specified(a_746))
            ) in
          let (Specified(a_742: pointer), Specified(a_743: pointer)) =
            (a_740, a_741) in
          let weak a_744: boolean = memop(PtrEq, a_742, a_743) in
          pure(if a_744 then Specified(1) else Specified(0))
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_737: integer), Specified(a_738: integer)) =
          (a_735, a_736) in
        if conv_int('signed int', a_737) = conv_int('signed int', a_738) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_705: boolean =
    let Specified(a_734: integer) = a_733 in
    pure(if not(a_734 = 1) then True else False) in
  if a_705 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_749: loaded pointer,
        (a_750: ctype, a_751: [ctype], a_752: boolean, a_753: boolean)),
        a_755: loaded pointer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_748: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_748, cfunction(a_748)))
          ,
            let weak a_757: pointer = pure(a_756) in
            {- §6.3.2.1#3 -}
            let weak a_758: pointer =
              memop(PtrArrayShift, a_757, 'char', 0) in
            pure(Specified(a_758))
          ) in
        if not(params_length(a_751) <= 1) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_752) \/ not(are_compatible ('signed int', a_750)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_754: pointer =
              let a_759: ctype = params_nth(a_751, 0) in
              if not(are_compatible ('const char*', a_759)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_760: pointer = create(Ivalignof(a_759), a_759) in
                let weak _: unit = store(a_759, a_760, a_755) in
                pure(a_760) in
            let strong a_761: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_749, a_754,
              []: (ctype,pointer)) in
            kill('char*', a_754) ;
            pure(a_761)
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_747: pointer, a_766: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_762: loaded pointer =
              let weak a_765: pointer = pure(p) in
              load('signed int*', a_765) in
            let Specified(a_763: pointer) = a_762 in
            let weak a_764: boolean =
              memop(PtrValidForDeref, 'signed int', a_763) in
            pure(
              if a_764 then
                a_763
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(1))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_747, conv_loaded_int('signed int', a_766))) in
        pure(conv_loaded_int('signed int', a_766))
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_767: loaded pointer,
      (a_768: ctype, a_769: [ctype], a_770: boolean, a_771: boolean)),
      a_774: loaded pointer, a_778: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_704: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_704, cfunction(a_704)))
        ,
          let weak a_776: pointer = pure(a_775) in
          {- §6.3.2.1#3 -}
          let weak a_777: pointer = memop(PtrArrayShift, a_776, 'char', 0) in
          pure(Specified(a_777))
        ,
          let weak a_779: pointer = pure(j) in
          load('signed int', a_779)
        ) in
      if not(params_length(a_769) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_770) \/ not(are_compatible ('signed int', a_768)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_773: pointer =
            let a_780: ctype = params_nth(a_769, 0) in
            if not(are_compatible ('const char*', a_780)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_781: pointer = create(Ivalignof(a_780), a_780) in
              let weak _: unit = store(a_780, a_781, a_774) in
              pure(a_781) in
          let strong a_772: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_778)) in
          let strong a_782: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_767, a_773,
            [('signed int', a_772)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_773), kill('signed int', a_772)) in
          pure(a_782)
    ) in
  pure(Unit) ;
  kill('signed int', j) ;
  pure(Unit) ;
  save ret_703: unit (a_783: unit:= Unit) in  pure(a_783)

proc main (): eff loaded integer :=
  let strong i: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_684: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(140737488346476))) in
  store('uintptr_t', i, conv_loaded_int('uintptr_t', a_684)) ;
  let strong a_685: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_686: loaded integer =
        let weak a_688: pointer = pure(i) in
        load('uintptr_t', a_688) in
      let Specified(a_687: integer) = a_686 in
      let weak a_689: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_687) in
      pure(Specified(a_689))
    ) in
  store('signed int*', p, a_685) ;
  {- §6.5#2 -}
  bound(
    {- §6.5.2.2#10, sentence 1 -}
    let strong ((a_690: loaded pointer,
    (a_691: ctype, a_692: [ctype], a_693: boolean, a_694: boolean)),
    a_696: loaded pointer) =
      {- §6.5.2.2#4, sentence 2 -}
      unseq(
        let strong a_683: loaded pointer = pure(Specified(Cfunction(f))) in
        pure((a_683, cfunction(a_683)))
      ,
        let weak a_697: pointer = pure(p) in
        load('signed int*', a_697)
      ) in
    if not(params_length(a_692) = 1) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_693 \/ not(are_compatible ('void', a_691)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_695: pointer =
          let a_698: ctype = params_nth(a_692, 0) in
          if not(are_compatible ('signed int*', a_698)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_699: pointer = create(Ivalignof(a_698), a_698) in
            let weak _: unit = store(a_698, a_699, a_696) in
            pure(a_699) in
        let strong a_700: unit =
          ccall('void (*) (signed int*)', a_690, a_695) in
        kill('signed int*', a_695) ;
        pure(a_700)
  ) ;
  pure(Unit) ;
  kill('uintptr_t', i) ;
  kill('signed int*', p) ;
  pure(Unit) ;
  save ret_682: loaded integer (a_701: loaded integer:= Specified(0)) in
    pure(a_701)

