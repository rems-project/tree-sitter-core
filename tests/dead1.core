-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

-- Globals
-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_751: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_752: loaded pointer =
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_755: loaded pointer,
        (a_756: ctype, a_757: [ctype], a_758: boolean, a_759: boolean)),
        a_761: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_754: loaded pointer =
              pure(Specified(Cfunction(malloc_proxy))) in
            pure((a_754, cfunction(a_754)))
          ,
            pure(Specified(Ivsizeof('signed int')))
          ) in
        if not(params_length(a_757) = 1) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if a_758 \/ not(are_compatible ('void*', a_756)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_760: pointer =
              let a_762: ctype = params_nth(a_757, 0) in
              if not(are_compatible ('size_t', a_762)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_763: pointer = create(Ivalignof(a_762), a_762) in
                let weak _: unit =
                  store(a_762, a_763, conv_loaded_int(a_762, a_761)) in
                pure(a_763) in
            let strong a_764: loaded pointer =
              ccall('void* (*) (size_t)', a_755, a_760) in
            kill('size_t', a_760) ;
            pure(a_764) in
      let Specified(a_753: pointer) = a_752 in
      let weak a_765: boolean = memop(PtrWellAligned, 'signed int', a_753) in
      pure(
        Specified(if a_765 then
          a_753
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('signed int*', p, a_751) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_750: pointer, a_770: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_766: loaded pointer =
            let weak a_769: pointer = pure(p) in
            load('signed int*', a_769) in
          let Specified(a_767: pointer) = a_766 in
          let weak a_768: boolean =
            memop(PtrValidForDeref, 'signed int', a_767) in
          pure(
            if a_768 then
              a_767
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(42))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_750, conv_loaded_int('signed int', a_770))) in
      pure(conv_loaded_int('signed int', a_770))
    ) in
  pure(Unit) ;
  {- §6.5#2 -}
  bound(
    {- §6.5.2.2#10, sentence 1 -}
    let strong ((a_771: loaded pointer,
    (a_772: ctype, a_773: [ctype], a_774: boolean, a_775: boolean)),
    a_777: loaded pointer) =
      {- §6.5.2.2#4, sentence 2 -}
      unseq(
        let strong a_749: loaded pointer =
          pure(Specified(Cfunction(free_proxy))) in
        pure((a_749, cfunction(a_749)))
      ,
        let weak a_778: pointer = pure(p) in
        load('signed int*', a_778)
      ) in
    if not(params_length(a_773) = 1) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_774 \/ not(are_compatible ('void', a_772)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_776: pointer =
          let a_779: ctype = params_nth(a_773, 0) in
          if not(are_compatible ('void*', a_779)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_780: pointer = create(Ivalignof(a_779), a_779) in
            let weak _: unit = store(a_779, a_780, a_777) in
            pure(a_780) in
        let strong a_781: unit = ccall('void (*) (void*)', a_771, a_776) in
        kill('void*', a_776) ;
        pure(a_781)
  ) ;
  pure(Unit) ;
  let strong a_787: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak a_786: pointer =
        {- §6.5.3.2 -}
        let weak a_782: loaded pointer =
          let weak a_785: pointer = pure(p) in
          load('signed int*', a_785) in
        let Specified(a_783: pointer) = a_782 in
        let weak a_784: boolean =
          memop(PtrValidForDeref, 'signed int', a_783) in
        pure(
          if a_784 then a_783 else undef(<<UB043_indirection_invalid_value>>)
        ) in
      load('signed int', a_786)
    ) in
  kill('signed int*', p) ;
  run ret_748(conv_loaded_int('signed int', a_787)) ;
  kill('signed int*', p) ;
  pure(Unit) ;
  save ret_748: loaded integer (a_788: loaded integer:= Specified(0)) in
    pure(a_788)

