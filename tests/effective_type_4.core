-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

-- Globals
glob a_919: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  103)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong c: pointer = create(Ivalignof('float'), 'unsigned char[8]') in
  let strong f: pointer = create(Ivalignof('float'), 'float') in
  let strong fp: pointer = create(Ivalignof('float*'), 'float*') in
  let strong g: pointer = create(Ivalignof('float'), 'float') in
  {- §6.2.4#6 -}
  store('unsigned char[8]', c, Unspecified('unsigned ichar[8]')) ;
  let strong a_835: loaded floating =
    {- §6.5#2 -}
    bound(pure(Specified(1.))) in
  store('float', f, a_835) ;
  let strong _: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_836: loaded pointer,
      (a_837: ctype, a_838: [ctype], a_839: boolean, a_840: boolean)),
      a_844: loaded pointer, a_850: loaded pointer, a_855: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_834: loaded pointer =
            pure(Specified(Cfunction(memcpy_proxy))) in
          pure((a_834, cfunction(a_834)))
        ,
          {- §6.5.4 -}
          let weak a_847: pointer = pure(c) in
          {- §6.3.2.1#3 -}
          let weak a_848: pointer =
            memop(PtrArrayShift, a_847, 'unsigned char', 0) in
          pure(Specified(a_848))
        ,
          {- §6.5.3.2#3, sentence 5 -}
          {- §6.5.4 -}
          let weak a_853: pointer = pure(f) in
          pure(Specified(a_853))
        ,
          pure(Specified(Ivsizeof('float')))
        ) in
      if not(params_length(a_838) = 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_839 \/ not(are_compatible ('void*', a_837)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_843: pointer =
            let a_856: ctype = params_nth(a_838, 0) in
            if not(are_compatible ('void*', a_856)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_857: pointer = create(Ivalignof(a_856), a_856) in
              let weak _: unit = store(a_856, a_857, a_844) in
              pure(a_857) in
          let strong a_842: pointer =
            let a_858: ctype = params_nth(a_838, 1) in
            if not(are_compatible ('const void*', a_858)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_859: pointer = create(Ivalignof(a_858), a_858) in
              let weak _: unit = store(a_858, a_859, a_850) in
              pure(a_859) in
          let strong a_841: pointer =
            let a_860: ctype = params_nth(a_838, 2) in
            if not(are_compatible ('size_t', a_860)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_861: pointer = create(Ivalignof(a_860), a_860) in
              let weak _: unit =
                store(a_860, a_861, conv_loaded_int(a_860, a_855)) in
              pure(a_861) in
          let strong a_862: loaded pointer =
            ccall('void* (*) (void*restrict , const void*restrict , size_t)',
            a_836, a_843, a_842, a_841) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('void*', a_843)
            ,
              kill('void*', a_842)
            ,
              kill('size_t', a_841)
            ) in
          pure(a_862)
    ) in
  pure(Unit) ;
  let strong a_863: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_864: loaded pointer =
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_867: loaded pointer,
        (a_868: ctype, a_869: [ctype], a_870: boolean, a_871: boolean)),
        a_873: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_866: loaded pointer =
              pure(Specified(Cfunction(malloc_proxy))) in
            pure((a_866, cfunction(a_866)))
          ,
            pure(Specified(Ivsizeof('float')))
          ) in
        if not(params_length(a_869) = 1) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if a_870 \/ not(are_compatible ('void*', a_868)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_872: pointer =
              let a_874: ctype = params_nth(a_869, 0) in
              if not(are_compatible ('size_t', a_874)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_875: pointer = create(Ivalignof(a_874), a_874) in
                let weak _: unit =
                  store(a_874, a_875, conv_loaded_int(a_874, a_873)) in
                pure(a_875) in
            let strong a_876: loaded pointer =
              ccall('void* (*) (size_t)', a_867, a_872) in
            kill('size_t', a_872) ;
            pure(a_876) in
      let Specified(a_865: pointer) = a_864 in
      let weak a_877: boolean = memop(PtrWellAligned, 'float', a_865) in
      pure(
        Specified(if a_877 then
          a_865
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('float*', fp, a_863) ;
  let strong _: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_878: loaded pointer,
      (a_879: ctype, a_880: [ctype], a_881: boolean, a_882: boolean)),
      a_886: loaded pointer, a_891: loaded pointer, a_897: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_833: loaded pointer =
            pure(Specified(Cfunction(memcpy_proxy))) in
          pure((a_833, cfunction(a_833)))
        ,
          {- §6.5.4 -}
          let weak a_889: pointer = pure(fp) in
          load('float*', a_889)
        ,
          {- §6.5.4 -}
          let weak a_894: pointer = pure(c) in
          {- §6.3.2.1#3 -}
          let weak a_895: pointer =
            memop(PtrArrayShift, a_894, 'unsigned char', 0) in
          pure(Specified(a_895))
        ,
          pure(Specified(Ivsizeof('float')))
        ) in
      if not(params_length(a_880) = 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_881 \/ not(are_compatible ('void*', a_879)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_885: pointer =
            let a_898: ctype = params_nth(a_880, 0) in
            if not(are_compatible ('void*', a_898)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_899: pointer = create(Ivalignof(a_898), a_898) in
              let weak _: unit = store(a_898, a_899, a_886) in
              pure(a_899) in
          let strong a_884: pointer =
            let a_900: ctype = params_nth(a_880, 1) in
            if not(are_compatible ('const void*', a_900)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_901: pointer = create(Ivalignof(a_900), a_900) in
              let weak _: unit = store(a_900, a_901, a_891) in
              pure(a_901) in
          let strong a_883: pointer =
            let a_902: ctype = params_nth(a_880, 2) in
            if not(are_compatible ('size_t', a_902)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_903: pointer = create(Ivalignof(a_902), a_902) in
              let weak _: unit =
                store(a_902, a_903, conv_loaded_int(a_902, a_897)) in
              pure(a_903) in
          let strong a_904: loaded pointer =
            ccall('void* (*) (void*restrict , const void*restrict , size_t)',
            a_878, a_885, a_884, a_883) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('void*', a_885)
            ,
              kill('void*', a_884)
            ,
              kill('size_t', a_883)
            ) in
          pure(a_904)
    ) in
  pure(Unit) ;
  let strong a_905: loaded floating =
    {- §6.5#2 -}
    bound(
      let weak a_910: pointer =
        {- §6.5.3.2 -}
        let weak a_906: loaded pointer =
          let weak a_909: pointer = pure(fp) in
          load('float*', a_909) in
        let Specified(a_907: pointer) = a_906 in
        let weak a_908: boolean = memop(PtrValidForDeref, 'float', a_907) in
        pure(
          if a_908 then a_907 else undef(<<UB043_indirection_invalid_value>>)
        ) in
      load('float', a_910)
    ) in
  store('float', g, a_905) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_911: loaded pointer,
      (a_912: ctype, a_913: [ctype], a_914: boolean, a_915: boolean)),
      a_918: loaded pointer, a_922: loaded floating) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_832: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_832, cfunction(a_832)))
        ,
          let weak a_920: pointer = pure(a_919) in
          {- §6.3.2.1#3 -}
          let weak a_921: pointer = memop(PtrArrayShift, a_920, 'char', 0) in
          pure(Specified(a_921))
        ,
          let weak a_923: pointer = pure(g) in
          load('float', a_923)
        ) in
      if not(params_length(a_913) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_914) \/ not(are_compatible ('signed int', a_912)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_917: pointer =
            let a_924: ctype = params_nth(a_913, 0) in
            if not(are_compatible ('const char*', a_924)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_925: pointer = create(Ivalignof(a_924), a_924) in
              let weak _: unit = store(a_924, a_925, a_918) in
              pure(a_925) in
          let strong a_916: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'double', a_922) in
          let strong a_926: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_911, a_917,
            [('double', a_916)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_917), kill('double', a_916)) in
          pure(a_926)
    ) in
  pure(Unit) ;
  kill('unsigned ichar[8]', c) ;
  kill('float', f) ;
  kill('float*', fp) ;
  kill('float', g) ;
  pure(Unit) ;
  save ret_831: loaded integer (a_927: loaded integer:= Specified(0)) in
    pure(a_927)

