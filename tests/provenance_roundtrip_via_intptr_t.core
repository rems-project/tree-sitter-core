-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_648 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_680 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_752: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_753: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_752, conv_loaded_int('signed int', a_753)) ;
  pure(a_752)

glob a_733: pointer [ail_ctype = 'char[14]'] :=
  create_readonly(Ivalignof('char[14]'), 'char[14]', Specified(Array(Specified(conv_int('char',
  42)), Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong i: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_707: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_708: pointer = pure(x) in
      pure(Specified(a_708))
    ) in
  store('signed int*', p, a_707) ;
  let strong a_709: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_710: loaded pointer =
        let weak a_712: pointer = pure(p) in
        load('signed int*', a_712) in
      let Specified(a_711: pointer) = a_710 in
      let weak a_713: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_711) in
      pure(Specified(a_713))
    ) in
  store('intptr_t', i, conv_loaded_int('intptr_t', a_709)) ;
  let strong a_714: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_715: loaded integer =
        let weak a_717: pointer = pure(i) in
        load('intptr_t', a_717) in
      let Specified(a_716: integer) = a_715 in
      let weak a_718: pointer =
        memop(PtrFromInt, 'intptr_t', 'signed int', a_716) in
      pure(Specified(a_718))
    ) in
  store('signed int*', q, a_714) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_706: pointer, a_723: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_719: loaded pointer =
            let weak a_722: pointer = pure(q) in
            load('signed int*', a_722) in
          let Specified(a_720: pointer) = a_719 in
          let weak a_721: boolean =
            memop(PtrValidForDeref, 'signed int', a_720) in
          pure(
            if a_721 then
              a_720
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(11))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_706, conv_loaded_int('signed int', a_723))) in
      pure(conv_loaded_int('signed int', a_723))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_724: loaded pointer,
      (a_725: ctype, a_726: [ctype], a_727: boolean, a_728: boolean)),
      a_732: loaded pointer, a_736: loaded integer, a_742: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_705: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_705, cfunction(a_705)))
        ,
          let weak a_734: pointer = pure(a_733) in
          {- §6.3.2.1#3 -}
          let weak a_735: pointer = memop(PtrArrayShift, a_734, 'char', 0) in
          pure(Specified(a_735))
        ,
          let weak a_741: pointer =
            {- §6.5.3.2 -}
            let weak a_737: loaded pointer =
              let weak a_740: pointer = pure(p) in
              load('signed int*', a_740) in
            let Specified(a_738: pointer) = a_737 in
            let weak a_739: boolean =
              memop(PtrValidForDeref, 'signed int', a_738) in
            pure(
              if a_739 then
                a_738
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_741)
        ,
          let weak a_747: pointer =
            {- §6.5.3.2 -}
            let weak a_743: loaded pointer =
              let weak a_746: pointer = pure(q) in
              load('signed int*', a_746) in
            let Specified(a_744: pointer) = a_743 in
            let weak a_745: boolean =
              memop(PtrValidForDeref, 'signed int', a_744) in
            pure(
              if a_745 then
                a_744
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_747)
        ) in
      if not(params_length(a_726) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_727) \/ not(are_compatible ('signed int', a_725)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_731: pointer =
            let a_748: ctype = params_nth(a_726, 0) in
            if not(are_compatible ('const char*', a_748)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_749: pointer = create(Ivalignof(a_748), a_748) in
              let weak _: unit = store(a_748, a_749, a_732) in
              pure(a_749) in
          let strong a_730: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_736)) in
          let strong a_729: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_742)) in
          let strong a_750: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_724, a_731,
            [('signed int', a_730), ('signed int', a_729)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_731)
            ,
              kill('signed int', a_730)
            ,
              kill('signed int', a_729)
            ) in
          pure(a_750)
    ) in
  pure(Unit) ;
  kill('signed int*', p) ;
  kill('intptr_t', i) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_704: loaded integer (a_751: loaded integer:= Specified(0)) in
    pure(a_751)

