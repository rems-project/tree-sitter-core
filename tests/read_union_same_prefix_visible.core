-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_646 :=
  i1: 'signed int'
  f1: 'float'
  c1: 'char'

def struct __cerbty_unnamed_tag_648 :=
  i2: 'signed int'
  f2: 'float'
  d2: 'double'

def union __cerbty_unnamed_tag_650 :=
  m1: 'struct __cerbty_unnamed_tag_646'
  m2: 'struct __cerbty_unnamed_tag_648'

-- Globals
glob a_675: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  105)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong u: pointer =
    create(Ivalignof('union __cerbty_unnamed_tag_650'), 'union __cerbty_unnamed_tag_650') in
  let strong i: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_658: loaded union a_650 =
    {- §6.5#2 -}
    bound(
      let weak a_662: loaded struct a_646 =
        let weak (a_661: loaded integer, a_660: loaded floating,
        a_659: loaded integer) =
          {- §6.7.9#23 -}
          unseq(pure(Specified(97)), pure(Specified(1.)), pure(Specified(1))) in
        pure(
          Specified((struct __cerbty_unnamed_tag_646){.i1= conv_loaded_int('signed int',
          a_659), .f1= a_660, .c1= conv_loaded_int('char', a_661)})
        ) in
      pure(Specified((union __cerbty_unnamed_tag_650){.m1= a_662}))
    ) in
  store('union __cerbty_unnamed_tag_650', u, a_658) ;
  let strong a_663: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak a_666: pointer =
        {- §6.5.2.3#3, sentence 2 -}
        let strong a_664: pointer =
          {- §6.5.2.3#3, sentence 2 -}
          let strong a_665: pointer = pure(u) in
          memop(PtrArrayShift[__cerbty_unnamed_tag_650, m2], a_665) in
        memop(PtrArrayShift[__cerbty_unnamed_tag_648, i2], a_664) in
      load('signed int', a_666)
    ) in
  store('signed int', i, conv_loaded_int('signed int', a_663)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_667: loaded pointer,
      (a_668: ctype, a_669: [ctype], a_670: boolean, a_671: boolean)),
      a_674: loaded pointer, a_678: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_657: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_657, cfunction(a_657)))
        ,
          let weak a_676: pointer = pure(a_675) in
          {- §6.3.2.1#3 -}
          let weak a_677: pointer = memop(PtrArrayShift, a_676, 'char', 0) in
          pure(Specified(a_677))
        ,
          let weak a_679: pointer = pure(i) in
          load('signed int', a_679)
        ) in
      if not(params_length(a_669) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_670) \/ not(are_compatible ('signed int', a_668)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_673: pointer =
            let a_680: ctype = params_nth(a_669, 0) in
            if not(are_compatible ('const char*', a_680)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_681: pointer = create(Ivalignof(a_680), a_680) in
              let weak _: unit = store(a_680, a_681, a_674) in
              pure(a_681) in
          let strong a_672: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_678)) in
          let strong a_682: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_667, a_673,
            [('signed int', a_672)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_673), kill('signed int', a_672)) in
          pure(a_682)
    ) in
  pure(Unit) ;
  kill('union __cerbty_unnamed_tag_650', u) ;
  kill('signed int', i) ;
  pure(Unit) ;
  save ret_656: loaded integer (a_683: loaded integer:= Specified(0)) in
    pure(a_683)

