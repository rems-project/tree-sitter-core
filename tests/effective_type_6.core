-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

def struct __cerbty_unnamed_tag_746 :=
  __dummy_max_align_t: 'void*'

-- Globals
glob a_792: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('void*'), 'void*') in
  let strong f: pointer = create(Ivalignof('float'), 'float') in
  let strong a_757: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_759: loaded pointer,
      (a_760: ctype, a_761: [ctype], a_762: boolean, a_763: boolean)),
      a_765: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_758: loaded pointer =
            pure(Specified(Cfunction(malloc_proxy))) in
          pure((a_758, cfunction(a_758)))
        ,
          pure(Specified(Ivsizeof('float')))
        ) in
      if not(params_length(a_761) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_762 \/ not(are_compatible ('void*', a_760)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_764: pointer =
            let a_766: ctype = params_nth(a_761, 0) in
            if not(are_compatible ('size_t', a_766)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_767: pointer = create(Ivalignof(a_766), a_766) in
              let weak _: unit =
                store(a_766, a_767, conv_loaded_int(a_766, a_765)) in
              pure(a_767) in
          let strong a_768: loaded pointer =
            ccall('void* (*) (size_t)', a_759, a_764) in
          kill('size_t', a_764) ;
          pure(a_768)
    ) in
  store('void*', p, a_757) ;
  {- §6.5#2 -}
  bound(
    let strong a_756: loaded integer =
      let weak a_772: loaded pointer =
        let weak a_771: pointer = pure(p) in
        load('void*', a_771) in
      let Specified(a_773: pointer) = a_772 in
      let weak a_774: boolean = memop(PtrNe, a_773, NULL(void*)) in
      {- §6.5.9#3 -}
      pure(if a_774 then Specified(1) else Specified(0)) in
    pure(
      let Specified(a_769: integer) = a_756 in
      if a_769 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  let strong a_775: loaded floating =
    {- §6.5#2 -}
    bound(
      let weak a_783: pointer =
        {- §6.5.3.2 -}
        let weak a_776: loaded pointer =
          {- §6.5.4 -}
          let weak a_779: loaded pointer =
            let weak a_781: pointer = pure(p) in
            load('void*', a_781) in
          let Specified(a_780: pointer) = a_779 in
          let weak a_782: boolean = memop(PtrWellAligned, 'float', a_780) in
          pure(
            Specified(if a_782 then
              a_780
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          ) in
        let Specified(a_777: pointer) = a_776 in
        let weak a_778: boolean = memop(PtrValidForDeref, 'float', a_777) in
        pure(
          if a_778 then a_777 else undef(<<UB043_indirection_invalid_value>>)
        ) in
      load('float', a_783)
    ) in
  store('float', f, a_775) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_784: loaded pointer,
      (a_785: ctype, a_786: [ctype], a_787: boolean, a_788: boolean)),
      a_791: loaded pointer, a_795: loaded floating) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_755: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_755, cfunction(a_755)))
        ,
          let weak a_793: pointer = pure(a_792) in
          {- §6.3.2.1#3 -}
          let weak a_794: pointer = memop(PtrArrayShift, a_793, 'char', 0) in
          pure(Specified(a_794))
        ,
          let weak a_796: pointer = pure(f) in
          load('float', a_796)
        ) in
      if not(params_length(a_786) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_787) \/ not(are_compatible ('signed int', a_785)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_790: pointer =
            let a_797: ctype = params_nth(a_786, 0) in
            if not(are_compatible ('const char*', a_797)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_798: pointer = create(Ivalignof(a_797), a_797) in
              let weak _: unit = store(a_797, a_798, a_791) in
              pure(a_798) in
          let strong a_789: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'double', a_795) in
          let strong a_799: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_784, a_790,
            [('double', a_789)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_790), kill('double', a_789)) in
          pure(a_799)
    ) in
  pure(Unit) ;
  kill('void*', p) ;
  kill('float', f) ;
  pure(Unit) ;
  save ret_754: loaded integer (a_800: loaded integer:= Specified(0)) in
    pure(a_800)

