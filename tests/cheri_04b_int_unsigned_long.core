-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_683: pointer [ail_ctype = 'char[21]'] :=
  create_readonly(Ivalignof('char[21]'), 'char[21]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong px: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong ql: pointer =
    create(Ivalignof('unsigned long'), 'unsigned long') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_655: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  store('signed int', x, conv_loaded_int('signed int', a_655)) ;
  let strong a_656: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_657: pointer = pure(x) in
      pure(Specified(a_657))
    ) in
  store('signed int*', px, a_656) ;
  let strong a_658: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_659: loaded pointer =
        let weak a_661: pointer = pure(px) in
        load('signed int*', a_661) in
      let Specified(a_660: pointer) = a_659 in
      let weak a_662: integer =
        memop(IntFromPtr, 'signed int', 'unsigned long', a_660) in
      pure(Specified(a_662))
    ) in
  store('unsigned long', ql, conv_loaded_int('unsigned long', a_658)) ;
  let strong a_663: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_664: loaded integer =
        let weak a_666: pointer = pure(ql) in
        load('unsigned long', a_666) in
      let Specified(a_665: integer) = a_664 in
      let weak a_667: pointer =
        memop(PtrFromInt, 'unsigned long', 'signed int', a_665) in
      pure(Specified(a_667))
    ) in
  store('signed int*', q, a_663) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_654: pointer, a_672: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_668: loaded pointer =
            let weak a_671: pointer = pure(q) in
            load('signed int*', a_671) in
          let Specified(a_669: pointer) = a_668 in
          let weak a_670: boolean =
            memop(PtrValidForDeref, 'signed int', a_669) in
          pure(
            if a_670 then
              a_669
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(1))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_654, conv_loaded_int('signed int', a_672))) in
      pure(conv_loaded_int('signed int', a_672))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_673: loaded pointer,
      (a_674: ctype, a_675: [ctype], a_676: boolean, a_677: boolean)),
      a_682: loaded pointer, a_686: loaded integer, a_688: loaded integer,
      a_694: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_653: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_653, cfunction(a_653)))
        ,
          let weak a_684: pointer = pure(a_683) in
          {- §6.3.2.1#3 -}
          let weak a_685: pointer = memop(PtrArrayShift, a_684, 'char', 0) in
          pure(Specified(a_685))
        ,
          let weak a_687: pointer = pure(x) in
          load('signed int', a_687)
        ,
          let weak a_693: pointer =
            {- §6.5.3.2 -}
            let weak a_689: loaded pointer =
              let weak a_692: pointer = pure(px) in
              load('signed int*', a_692) in
            let Specified(a_690: pointer) = a_689 in
            let weak a_691: boolean =
              memop(PtrValidForDeref, 'signed int', a_690) in
            pure(
              if a_691 then
                a_690
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_693)
        ,
          let weak a_699: pointer =
            {- §6.5.3.2 -}
            let weak a_695: loaded pointer =
              let weak a_698: pointer = pure(q) in
              load('signed int*', a_698) in
            let Specified(a_696: pointer) = a_695 in
            let weak a_697: boolean =
              memop(PtrValidForDeref, 'signed int', a_696) in
            pure(
              if a_697 then
                a_696
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_699)
        ) in
      if not(params_length(a_675) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_676) \/ not(are_compatible ('signed int', a_674)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_681: pointer =
            let a_700: ctype = params_nth(a_675, 0) in
            if not(are_compatible ('const char*', a_700)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_701: pointer = create(Ivalignof(a_700), a_700) in
              let weak _: unit = store(a_700, a_701, a_682) in
              pure(a_701) in
          let strong a_680: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_686)) in
          let strong a_679: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_688)) in
          let strong a_678: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_694)) in
          let strong a_702: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_673, a_681,
            [('signed int', a_680), ('signed int', a_679),
            ('signed int', a_678)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_681)
            ,
              kill('signed int', a_680)
            ,
              kill('signed int', a_679)
            ,
              kill('signed int', a_678)
            ) in
          pure(a_702)
    ) in
  pure(Unit) ;
  kill('signed int', x) ;
  kill('signed int*', px) ;
  kill('unsigned long', ql) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_652: loaded integer (a_703: loaded integer:= Specified(0)) in
    pure(a_703)

