-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_726 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_758 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

def union __cerbty_unnamed_tag_778 :=
  ui: 'uintptr_t'
  p: 'signed int*'

-- Globals
glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_916: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_917: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', a_916, conv_loaded_int('signed int', a_917)) ;
  pure(a_916)

glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_914: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_915: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_914, conv_loaded_int('signed int', a_915)) ;
  pure(a_914)

glob a_823: pointer [ail_ctype = 'char[22]'] :=
  create_readonly(Ivalignof('char[22]'), 'char[22]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_890: pointer [ail_ctype = 'char[23]'] :=
  create_readonly(Ivalignof('char[23]'), 'char[23]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong u: pointer =
    create(Ivalignof('union __cerbty_unnamed_tag_778'), 'union __cerbty_unnamed_tag_778') in
  let strong px: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong i: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  {- §6.2.4#6 -}
  store('union __cerbty_unnamed_tag_778', u,
  Unspecified('union __cerbty_unnamed_tag_778')) ;
  let strong a_792: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_793: pointer = pure(x) in
      pure(Specified(a_793))
    ) in
  store('signed int*', px, a_792) ;
  let strong a_794: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_795: loaded pointer =
        let weak a_797: pointer = pure(px) in
        load('signed int*', a_797) in
      let Specified(a_796: pointer) = a_795 in
      let weak a_798: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_796) in
      pure(Specified(a_798))
    ) in
  store('uintptr_t', i, conv_loaded_int('uintptr_t', a_794)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_791: pointer, a_805: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          pure(i)
        ,
          {- §6.5.6 -}
          let weak (a_799: loaded integer, a_800: loaded integer) =
            unseq(
              let weak a_804: pointer = pure(i) in
              load('uintptr_t', a_804)
            ,
              pure(Specified(Ivsizeof('signed int')))
            ) in
          pure(
            let (Specified(a_801: integer), Specified(a_802: integer)) =
              (a_799, a_800) in
            Specified(wrapI('size_t',
            conv_int('uintptr_t', a_801) + conv_int('uintptr_t', a_802)))
          )
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('uintptr_t', a_791, conv_loaded_int('uintptr_t', a_805))) in
      pure(conv_loaded_int('uintptr_t', a_805))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_790: pointer, a_808: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.2.3#3, sentence 2 -}
          let strong a_806: pointer = pure(u) in
          memop(PtrArrayShift[__cerbty_unnamed_tag_778, ui], a_806)
        ,
          let weak a_807: pointer = pure(i) in
          load('uintptr_t', a_807)
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('uintptr_t', a_790, conv_loaded_int('uintptr_t', a_808))) in
      pure(conv_loaded_int('uintptr_t', a_808))
    ) in
  pure(Unit) ;
  let strong a_809: loaded pointer =
    {- §6.5#2 -}
    bound(
      let weak a_811: pointer =
        {- §6.5.2.3#3, sentence 2 -}
        let strong a_810: pointer = pure(u) in
        memop(PtrArrayShift[__cerbty_unnamed_tag_778, p], a_810) in
      load('signed int*', a_811)
    ) in
  store('signed int*', p, a_809) ;
  let strong a_812: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_813: pointer = pure(y) in
      pure(Specified(a_813))
    ) in
  store('signed int*', q, a_812) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_814: loaded pointer,
      (a_815: ctype, a_816: [ctype], a_817: boolean, a_818: boolean)),
      a_822: loaded pointer, a_826: loaded pointer, a_831: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_789: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_789, cfunction(a_789)))
        ,
          let weak a_824: pointer = pure(a_823) in
          {- §6.3.2.1#3 -}
          let weak a_825: pointer = memop(PtrArrayShift, a_824, 'char', 0) in
          pure(Specified(a_825))
        ,
          {- §6.5.4 -}
          let weak a_829: pointer = pure(p) in
          load('signed int*', a_829)
        ,
          {- §6.5.4 -}
          let weak a_834: pointer = pure(q) in
          load('signed int*', a_834)
        ) in
      if not(params_length(a_816) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_817) \/ not(are_compatible ('signed int', a_815)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_821: pointer =
            let a_836: ctype = params_nth(a_816, 0) in
            if not(are_compatible ('const char*', a_836)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_837: pointer = create(Ivalignof(a_836), a_836) in
              let weak _: unit = store(a_836, a_837, a_822) in
              pure(a_837) in
          let strong a_820: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_826) in
          let strong a_819: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_831) in
          let strong a_838: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_814, a_821,
            [('void*', a_820), ('void*', a_819)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_821)
            ,
              kill('void*', a_820)
            ,
              kill('void*', a_819)
            ) in
          pure(a_838)
    ) in
  pure(Unit) ;
  let strong a_839: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_841: loaded integer, a_842: loaded integer) =
        unseq(
          let weak (a_846: loaded integer, a_847: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_852: loaded pointer,
              (a_853: ctype, a_854: [ctype], a_855: boolean, a_856: boolean)),
              a_860: loaded pointer, a_862: loaded pointer,
              a_864: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_851: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_851, cfunction(a_851)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_861: pointer = pure(p) in
                  pure(Specified(a_861))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_863: pointer = pure(q) in
                  pure(Specified(a_863))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_854) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_855 \/ not(are_compatible ('signed int', a_853)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_859: pointer =
                    let a_865: ctype = params_nth(a_854, 0) in
                    if not(are_compatible ('const void*', a_865)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_866: pointer =
                        create(Ivalignof(a_865), a_865) in
                      let weak _: unit = store(a_865, a_866, a_860) in
                      pure(a_866) in
                  let strong a_858: pointer =
                    let a_867: ctype = params_nth(a_854, 1) in
                    if not(are_compatible ('const void*', a_867)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_868: pointer =
                        create(Ivalignof(a_867), a_867) in
                      let weak _: unit = store(a_867, a_868, a_862) in
                      pure(a_868) in
                  let strong a_857: pointer =
                    let a_869: ctype = params_nth(a_854, 2) in
                    if not(are_compatible ('size_t', a_869)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_870: pointer =
                        create(Ivalignof(a_869), a_869) in
                      let weak _: unit =
                        store(a_869, a_870, conv_loaded_int(a_869, a_864)) in
                      pure(a_870) in
                  let strong a_871: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_852, a_859, a_858, a_857) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_859)
                    ,
                      kill('void*', a_858)
                    ,
                      kill('size_t', a_857)
                    ) in
                  pure(a_871)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_848: integer), Specified(a_849: integer)) =
              (a_846, a_847) in
            if conv_int('signed int', a_848) = conv_int('signed int', a_849) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_843: integer), Specified(a_844: integer)) =
          (a_841, a_842) in
        if conv_int('signed int', a_843) = conv_int('signed int', a_844) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_788: boolean =
    let Specified(a_840: integer) = a_839 in
    pure(if not(a_840 = 1) then True else False) in
  if a_788 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_873: pointer, a_878: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_874: loaded pointer =
              let weak a_877: pointer = pure(p) in
              load('signed int*', a_877) in
            let Specified(a_875: pointer) = a_874 in
            let weak a_876: boolean =
              memop(PtrValidForDeref, 'signed int', a_875) in
            pure(
              if a_876 then
                a_875
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_873, conv_loaded_int('signed int', a_878))) in
        pure(conv_loaded_int('signed int', a_878))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_879: loaded pointer,
        (a_880: ctype, a_881: [ctype], a_882: boolean, a_883: boolean)),
        a_889: loaded pointer, a_893: loaded integer, a_895: loaded integer,
        a_897: loaded integer, a_903: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_872: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_872, cfunction(a_872)))
          ,
            let weak a_891: pointer = pure(a_890) in
            {- §6.3.2.1#3 -}
            let weak a_892: pointer =
              memop(PtrArrayShift, a_891, 'char', 0) in
            pure(Specified(a_892))
          ,
            let weak a_894: pointer = pure(x) in
            load('signed int', a_894)
          ,
            let weak a_896: pointer = pure(y) in
            load('signed int', a_896)
          ,
            let weak a_902: pointer =
              {- §6.5.3.2 -}
              let weak a_898: loaded pointer =
                let weak a_901: pointer = pure(p) in
                load('signed int*', a_901) in
              let Specified(a_899: pointer) = a_898 in
              let weak a_900: boolean =
                memop(PtrValidForDeref, 'signed int', a_899) in
              pure(
                if a_900 then
                  a_899
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_902)
          ,
            let weak a_908: pointer =
              {- §6.5.3.2 -}
              let weak a_904: loaded pointer =
                let weak a_907: pointer = pure(q) in
                load('signed int*', a_907) in
              let Specified(a_905: pointer) = a_904 in
              let weak a_906: boolean =
                memop(PtrValidForDeref, 'signed int', a_905) in
              pure(
                if a_906 then
                  a_905
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_908)
          ) in
        if not(params_length(a_881) <= 5) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_882) \/ not(are_compatible ('signed int', a_880)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_888: pointer =
              let a_909: ctype = params_nth(a_881, 0) in
              if not(are_compatible ('const char*', a_909)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_910: pointer = create(Ivalignof(a_909), a_909) in
                let weak _: unit = store(a_909, a_910, a_889) in
                pure(a_910) in
            let strong a_887: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_893)) in
            let strong a_886: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_895)) in
            let strong a_885: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_897)) in
            let strong a_884: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_903)) in
            let strong a_911: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_879, a_888,
              [('signed int', a_887), ('signed int', a_886),
              ('signed int', a_885), ('signed int', a_884)]) in
            let strong _: (unit,unit,unit,unit,unit) =
              unseq(
                kill('char*', a_888)
              ,
                kill('signed int', a_887)
              ,
                kill('signed int', a_886)
              ,
                kill('signed int', a_885)
              ,
                kill('signed int', a_884)
              ) in
            pure(a_911)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  let strong a_912: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  kill('union __cerbty_unnamed_tag_778', u) ;
  kill('signed int*', px) ;
  kill('uintptr_t', i) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  run ret_787(conv_loaded_int('signed int', a_912)) ;
  kill('union __cerbty_unnamed_tag_778', u) ;
  kill('signed int*', px) ;
  kill('uintptr_t', i) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_787: loaded integer (a_913: loaded integer:= Specified(0)) in
    pure(a_913)

