-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

def struct __cerbty_unnamed_tag_746 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_750 :=
  c1: 'char'
  f1: 'float'

-- Globals
glob a_839: pointer [ail_ctype = 'char[20]'] :=
  create_readonly(Ivalignof('char[20]'), 'char[20]', Specified(Array(Specified(conv_int('char',
  115)), Specified(conv_int('char', 49)), Specified(conv_int('char', 46)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 49)), Specified(conv_int('char', 46)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('void*'), 'void*') in
  let strong pc: pointer = create(Ivalignof('char*'), 'char*') in
  let strong pf: pointer = create(Ivalignof('float*'), 'float*') in
  let strong pst1: pointer =
    create(Ivalignof('struct __cerbty_unnamed_tag_750*'), 'struct __cerbty_unnamed_tag_750*') in
  let strong s1: pointer =
    create(Ivalignof('struct __cerbty_unnamed_tag_750'), 'struct __cerbty_unnamed_tag_750') in
  let strong a_765: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_767: loaded pointer,
      (a_768: ctype, a_769: [ctype], a_770: boolean, a_771: boolean)),
      a_773: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_766: loaded pointer =
            pure(Specified(Cfunction(malloc_proxy))) in
          pure((a_766, cfunction(a_766)))
        ,
          pure(Specified(Ivsizeof('struct __cerbty_unnamed_tag_750')))
        ) in
      if not(params_length(a_769) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_770 \/ not(are_compatible ('void*', a_768)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_772: pointer =
            let a_774: ctype = params_nth(a_769, 0) in
            if not(are_compatible ('size_t', a_774)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_775: pointer = create(Ivalignof(a_774), a_774) in
              let weak _: unit =
                store(a_774, a_775, conv_loaded_int(a_774, a_773)) in
              pure(a_775) in
          let strong a_776: loaded pointer =
            ccall('void* (*) (size_t)', a_767, a_772) in
          kill('size_t', a_772) ;
          pure(a_776)
    ) in
  store('void*', p, a_765) ;
  {- §6.5#2 -}
  bound(
    let strong a_764: loaded integer =
      let weak a_780: loaded pointer =
        let weak a_779: pointer = pure(p) in
        load('void*', a_779) in
      let Specified(a_781: pointer) = a_780 in
      let weak a_782: boolean = memop(PtrNe, a_781, NULL(void*)) in
      {- §6.5.9#3 -}
      pure(if a_782 then Specified(1) else Specified(0)) in
    pure(
      let Specified(a_777: integer) = a_764 in
      if a_777 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  let strong a_783: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_784: loaded pointer =
        {- §6.5.6 -}
        let weak (a_786: loaded pointer, a_788: loaded integer) =
          unseq(
            {- §6.5.4 -}
            let weak a_791: loaded pointer =
              let weak a_793: pointer = pure(p) in
              load('void*', a_793) in
            let Specified(a_792: pointer) = a_791 in
            let weak a_794: boolean = memop(PtrWellAligned, 'char', a_792) in
            pure(
              Specified(if a_794 then
                a_792
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            )
          ,
            pure(Specified(0))
          ) in
        let (Specified(a_787: pointer), Specified(a_789: integer)) =
          (a_786, a_788) in
        let weak a_790: pointer =
          memop(PtrArrayShift, a_787, 'char', a_789) in
        pure(Specified(a_790)) in
      let Specified(a_785: pointer) = a_784 in
      let weak a_795: boolean = memop(PtrWellAligned, 'char', a_785) in
      pure(
        Specified(if a_795 then
          a_785
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('char*', pc, a_783) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_763: pointer, a_800: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_796: loaded pointer =
            let weak a_799: pointer = pure(pc) in
            load('char*', a_799) in
          let Specified(a_797: pointer) = a_796 in
          let weak a_798: boolean = memop(PtrValidForDeref, 'char', a_797) in
          pure(
            if a_798 then
              a_797
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(65))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('char', a_763, conv_loaded_int('char', a_800))) in
      pure(conv_loaded_int('char', a_800))
    ) in
  pure(Unit) ;
  let strong a_801: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_802: loaded pointer =
        {- §6.5.6 -}
        let weak (a_804: loaded pointer, a_806: loaded integer) =
          unseq(
            {- §6.5.4 -}
            let weak a_809: loaded pointer =
              let weak a_811: pointer = pure(p) in
              load('void*', a_811) in
            let Specified(a_810: pointer) = a_809 in
            let weak a_812: boolean = memop(PtrWellAligned, 'char', a_810) in
            pure(
              Specified(if a_812 then
                a_810
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            )
          ,
            pure(Specified(8))
          ) in
        let (Specified(a_805: pointer), Specified(a_807: integer)) =
          (a_804, a_806) in
        let weak a_808: pointer =
          memop(PtrArrayShift, a_805, 'char', a_807) in
        pure(Specified(a_808)) in
      let Specified(a_803: pointer) = a_802 in
      let weak a_813: boolean = memop(PtrWellAligned, 'float', a_803) in
      pure(
        Specified(if a_813 then
          a_803
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('float*', pf, a_801) ;
  let strong _: loaded floating =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_762: pointer, a_818: loaded floating) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_814: loaded pointer =
            let weak a_817: pointer = pure(pf) in
            load('float*', a_817) in
          let Specified(a_815: pointer) = a_814 in
          let weak a_816: boolean = memop(PtrValidForDeref, 'float', a_815) in
          pure(
            if a_816 then
              a_815
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(1.))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('float', a_762, a_818)) in
      pure(a_818)
    ) in
  pure(Unit) ;
  let strong a_819: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_820: loaded pointer =
        let weak a_822: pointer = pure(p) in
        load('void*', a_822) in
      let Specified(a_821: pointer) = a_820 in
      let weak a_823: boolean =
        memop(PtrWellAligned, 'struct __cerbty_unnamed_tag_750', a_821) in
      pure(
        Specified(if a_823 then
          a_821
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('struct __cerbty_unnamed_tag_750*', pst1, a_819) ;
  {- §6.2.4#6 -}
  store('struct __cerbty_unnamed_tag_750', s1,
  Unspecified('struct __cerbty_unnamed_tag_750')) ;
  let strong _: loaded struct a_750 =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_761: pointer, a_829: loaded struct a_750) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          pure(s1)
        ,
          let weak a_828: pointer =
            {- §6.5.3.2 -}
            let weak a_824: loaded pointer =
              let weak a_827: pointer = pure(pst1) in
              load('struct __cerbty_unnamed_tag_750*', a_827) in
            let Specified(a_825: pointer) = a_824 in
            let weak a_826: boolean =
              memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_750', a_825) in
            pure(
              if a_826 then
                a_825
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('struct __cerbty_unnamed_tag_750', a_828)
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('struct __cerbty_unnamed_tag_750', a_761, a_829)) in
      pure(a_829)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_830: loaded pointer,
      (a_831: ctype, a_832: [ctype], a_833: boolean, a_834: boolean)),
      a_838: loaded pointer, a_842: loaded integer, a_845: loaded floating) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_760: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_760, cfunction(a_760)))
        ,
          let weak a_840: pointer = pure(a_839) in
          {- §6.3.2.1#3 -}
          let weak a_841: pointer = memop(PtrArrayShift, a_840, 'char', 0) in
          pure(Specified(a_841))
        ,
          let weak a_844: pointer =
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_843: pointer = pure(s1) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_750, c1], a_843) in
          load('char', a_844)
        ,
          let weak a_847: pointer =
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_846: pointer = pure(s1) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_750, f1], a_846) in
          load('float', a_847)
        ) in
      if not(params_length(a_832) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_833) \/ not(are_compatible ('signed int', a_831)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_837: pointer =
            let a_848: ctype = params_nth(a_832, 0) in
            if not(are_compatible ('const char*', a_848)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_849: pointer = create(Ivalignof(a_848), a_848) in
              let weak _: unit = store(a_848, a_849, a_838) in
              pure(a_849) in
          let strong a_836: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_842)) in
          let strong a_835: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'double', a_845) in
          let strong a_850: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_830, a_837,
            [('signed int', a_836), ('double', a_835)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_837)
            ,
              kill('signed int', a_836)
            ,
              kill('double', a_835)
            ) in
          pure(a_850)
    ) in
  pure(Unit) ;
  kill('void*', p) ;
  kill('char*', pc) ;
  kill('float*', pf) ;
  kill('struct __cerbty_unnamed_tag_750*', pst1) ;
  kill('struct __cerbty_unnamed_tag_750', s1) ;
  pure(Unit) ;
  save ret_759: loaded integer (a_851: loaded integer:= Specified(0)) in
    pure(a_851)

