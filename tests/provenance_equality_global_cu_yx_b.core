-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_751: pointer [ail_ctype = 'char[13]'] :=
  create_readonly(Ivalignof('char[13]'), 'char[13]', Specified(Array(Specified(conv_int('char',
  40)), Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_763: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_766: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc f (p: pointer, q: pointer): eff unit :=
  let strong b: pointer = create(Ivalignof('_Bool'), '_Bool') in
  let strong a_735: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_736: loaded pointer, a_737: loaded pointer) =
        unseq(
          let weak a_741: pointer = pure(p) in
          load('signed int*', a_741)
        ,
          let weak a_742: pointer = pure(q) in
          load('signed int*', a_742)
        ) in
      let (Specified(a_738: pointer), Specified(a_739: pointer)) =
        (a_736, a_737) in
      let weak a_740: boolean = memop(PtrEq, a_738, a_739) in
      pure(if a_740 then Specified(1) else Specified(0))
    ) in
  store('_Bool', b, conv_loaded_int('_Bool', a_735)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_743: loaded pointer,
      (a_744: ctype, a_745: [ctype], a_746: boolean, a_747: boolean)),
      a_750: loaded pointer, a_754: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_734: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_734, cfunction(a_734)))
        ,
          let weak a_752: pointer = pure(a_751) in
          {- §6.3.2.1#3 -}
          let weak a_753: pointer = memop(PtrArrayShift, a_752, 'char', 0) in
          pure(Specified(a_753))
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_761: loaded integer =
            let weak (a_755: loaded integer, a_756: loaded integer) =
              unseq(
                let weak a_760: pointer = pure(b) in
                load('_Bool', a_760)
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_757: integer), Specified(a_758: integer)) =
                (a_755, a_756) in
              if conv_int('signed int', a_757) = conv_int('signed int', a_758) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_762: integer) = a_761 in
          {- §6.5.15#4, sentence 2 -}
          if a_762 = 0 then
            let weak a_764: pointer = pure(a_763) in
            {- §6.3.2.1#3 -}
            let weak a_765: pointer =
              memop(PtrArrayShift, a_764, 'char', 0) in
            pure(Specified(a_765))
          else
            let weak a_767: pointer = pure(a_766) in
            {- §6.3.2.1#3 -}
            let weak a_768: pointer =
              memop(PtrArrayShift, a_767, 'char', 0) in
            pure(Specified(a_768))
        ) in
      if not(params_length(a_745) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_746) \/ not(are_compatible ('signed int', a_744)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_749: pointer =
            let a_769: ctype = params_nth(a_745, 0) in
            if not(are_compatible ('const char*', a_769)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_770: pointer = create(Ivalignof(a_769), a_769) in
              let weak _: unit = store(a_769, a_770, a_750) in
              pure(a_770) in
          let strong a_748: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_754) in
          let strong a_771: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_743, a_749,
            [('char*', a_748)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_749), kill('char*', a_748)) in
          pure(a_771)
    ) in
  pure(Unit) ;
  kill('_Bool', b) ;
  run ret_733(Unit) ;
  kill('_Bool', b) ;
  pure(Unit) ;
  save ret_733: unit (a_772: unit:= Unit) in  pure(a_772)

