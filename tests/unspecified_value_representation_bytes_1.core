-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_671: pointer [ail_ctype = 'char[16]'] :=
  create_readonly(Ivalignof('char[16]'), 'char[16]', Specified(Array(Specified(conv_int('char',
  105)), Specified(conv_int('char', 61)), Specified(conv_int('char', 48)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 48)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_693: pointer [ail_ctype = 'char[16]'] :=
  create_readonly(Ivalignof('char[16]'), 'char[16]', Specified(Array(Specified(conv_int('char',
  105)), Specified(conv_int('char', 61)), Specified(conv_int('char', 48)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 48)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong i: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong c: pointer =
    create(Ivalignof('unsigned char'), 'unsigned char') in
  {- §6.2.4#6 -}
  store('signed int', i, Unspecified('signed int')) ;
  let strong a_653: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak a_661: pointer =
        {- §6.5.3.2 -}
        let weak a_654: loaded pointer =
          {- §6.5.4 -}
          let weak a_657: loaded pointer =
            {- §6.5.3.2#3, sentence 5 -}
            let weak a_659: pointer = pure(i) in
            pure(Specified(a_659)) in
          let Specified(a_658: pointer) = a_657 in
          let weak a_660: boolean =
            memop(PtrWellAligned, 'unsigned char', a_658) in
          pure(
            Specified(if a_660 then
              a_658
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          ) in
        let Specified(a_655: pointer) = a_654 in
        let weak a_656: boolean =
          memop(PtrValidForDeref, 'unsigned char', a_655) in
        pure(
          if a_656 then a_655 else undef(<<UB043_indirection_invalid_value>>)
        ) in
      load('unsigned char', a_661)
    ) in
  store('unsigned char', c, conv_loaded_int('unsigned char', a_653)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_662: loaded pointer,
      (a_663: ctype, a_664: [ctype], a_665: boolean, a_666: boolean)),
      a_670: loaded pointer, a_674: loaded integer, a_676: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_652: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_652, cfunction(a_652)))
        ,
          let weak a_672: pointer = pure(a_671) in
          {- §6.3.2.1#3 -}
          let weak a_673: pointer = memop(PtrArrayShift, a_672, 'char', 0) in
          pure(Specified(a_673))
        ,
          let weak a_675: pointer = pure(i) in
          load('signed int', a_675)
        ,
          {- §6.5.4 -}
          let weak a_677: loaded integer =
            let weak a_679: pointer = pure(c) in
            load('unsigned char', a_679) in
          pure(conv_loaded_int('signed int', a_677))
        ) in
      if not(params_length(a_664) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_665) \/ not(are_compatible ('signed int', a_663)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_669: pointer =
            let a_681: ctype = params_nth(a_664, 0) in
            if not(are_compatible ('const char*', a_681)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_682: pointer = create(Ivalignof(a_681), a_681) in
              let weak _: unit = store(a_681, a_682, a_670) in
              pure(a_682) in
          let strong a_668: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_674)) in
          let strong a_667: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_676)) in
          let strong a_683: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_662, a_669,
            [('signed int', a_668), ('signed int', a_667)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_669)
            ,
              kill('signed int', a_668)
            ,
              kill('signed int', a_667)
            ) in
          pure(a_683)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_684: loaded pointer,
      (a_685: ctype, a_686: [ctype], a_687: boolean, a_688: boolean)),
      a_692: loaded pointer, a_696: loaded integer, a_698: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_651: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_651, cfunction(a_651)))
        ,
          let weak a_694: pointer = pure(a_693) in
          {- §6.3.2.1#3 -}
          let weak a_695: pointer = memop(PtrArrayShift, a_694, 'char', 0) in
          pure(Specified(a_695))
        ,
          let weak a_697: pointer = pure(i) in
          load('signed int', a_697)
        ,
          {- §6.5.4 -}
          let weak a_699: loaded integer =
            let weak a_701: pointer = pure(c) in
            load('unsigned char', a_701) in
          pure(conv_loaded_int('signed int', a_699))
        ) in
      if not(params_length(a_686) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_687) \/ not(are_compatible ('signed int', a_685)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_691: pointer =
            let a_703: ctype = params_nth(a_686, 0) in
            if not(are_compatible ('const char*', a_703)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_704: pointer = create(Ivalignof(a_703), a_703) in
              let weak _: unit = store(a_703, a_704, a_692) in
              pure(a_704) in
          let strong a_690: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_696)) in
          let strong a_689: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_698)) in
          let strong a_705: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_684, a_691,
            [('signed int', a_690), ('signed int', a_689)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_691)
            ,
              kill('signed int', a_690)
            ,
              kill('signed int', a_689)
            ) in
          pure(a_705)
    ) in
  pure(Unit) ;
  kill('signed int', i) ;
  kill('unsigned ichar', c) ;
  pure(Unit) ;
  save ret_650: loaded integer (a_706: loaded integer:= Specified(0)) in
    pure(a_706)

