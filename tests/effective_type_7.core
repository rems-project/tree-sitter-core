-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

def struct __cerbty_unnamed_tag_746 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_750 :=
  c1: 'char'
  ui1: 'unsigned int'

-- Globals
glob a_805: pointer [ail_ctype = 'char[7]'] :=
  create_readonly(Ivalignof('char[7]'), 'char[7]', Specified(Array(Specified(conv_int('char',
  117)), Specified(conv_int('char', 105)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('void*'), 'void*') in
  let strong ui: pointer =
    create(Ivalignof('unsigned int'), 'unsigned int') in
  let strong a_760: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_762: loaded pointer,
      (a_763: ctype, a_764: [ctype], a_765: boolean, a_766: boolean)),
      a_768: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_761: loaded pointer =
            pure(Specified(Cfunction(malloc_proxy))) in
          pure((a_761, cfunction(a_761)))
        ,
          pure(Specified(Ivsizeof('struct __cerbty_unnamed_tag_750')))
        ) in
      if not(params_length(a_764) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_765 \/ not(are_compatible ('void*', a_763)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_767: pointer =
            let a_769: ctype = params_nth(a_764, 0) in
            if not(are_compatible ('size_t', a_769)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_770: pointer = create(Ivalignof(a_769), a_769) in
              let weak _: unit =
                store(a_769, a_770, conv_loaded_int(a_769, a_768)) in
              pure(a_770) in
          let strong a_771: loaded pointer =
            ccall('void* (*) (size_t)', a_762, a_767) in
          kill('size_t', a_767) ;
          pure(a_771)
    ) in
  store('void*', p, a_760) ;
  {- §6.5#2 -}
  bound(
    let strong a_759: loaded integer =
      let weak a_775: loaded pointer =
        let weak a_774: pointer = pure(p) in
        load('void*', a_774) in
      let Specified(a_776: pointer) = a_775 in
      let weak a_777: boolean = memop(PtrNe, a_776, NULL(void*)) in
      {- §6.5.9#3 -}
      pure(if a_777 then Specified(1) else Specified(0)) in
    pure(
      let Specified(a_772: integer) = a_759 in
      if a_772 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_758: pointer, a_786: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.2.3#4, sentence 2 -}
          let strong a_778: loaded pointer =
            {- §6.5.4 -}
            let weak a_782: loaded pointer =
              let weak a_784: pointer = pure(p) in
              load('void*', a_784) in
            let Specified(a_783: pointer) = a_782 in
            let weak a_785: boolean =
              memop(PtrWellAligned, 'struct __cerbty_unnamed_tag_750', a_783) in
            pure(
              Specified(if a_785 then
                a_783
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            ) in
          let Specified(a_779: pointer) = a_778 in
          let weak a_780: boolean =
            memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_750', a_779) in
          pure(
            if a_780 then
              member_shift(a_779, __cerbty_unnamed_tag_750, .c1)
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(65))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('char', a_758, conv_loaded_int('char', a_786))) in
      pure(conv_loaded_int('char', a_786))
    ) in
  pure(Unit) ;
  let strong a_787: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak a_796: pointer =
        {- §6.5.2.3#4, sentence 2 -}
        let strong a_788: loaded pointer =
          {- §6.5.4 -}
          let weak a_792: loaded pointer =
            let weak a_794: pointer = pure(p) in
            load('void*', a_794) in
          let Specified(a_793: pointer) = a_792 in
          let weak a_795: boolean =
            memop(PtrWellAligned, 'struct __cerbty_unnamed_tag_750', a_793) in
          pure(
            Specified(if a_795 then
              a_793
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          ) in
        let Specified(a_789: pointer) = a_788 in
        let weak a_790: boolean =
          memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_750', a_789) in
        pure(
          if a_790 then
            member_shift(a_789, __cerbty_unnamed_tag_750, .ui1)
          else
            undef(<<UB043_indirection_invalid_value>>)
        ) in
      load('unsigned int', a_796)
    ) in
  store('unsigned int', ui, conv_loaded_int('unsigned int', a_787)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_797: loaded pointer,
      (a_798: ctype, a_799: [ctype], a_800: boolean, a_801: boolean)),
      a_804: loaded pointer, a_808: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_757: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_757, cfunction(a_757)))
        ,
          let weak a_806: pointer = pure(a_805) in
          {- §6.3.2.1#3 -}
          let weak a_807: pointer = memop(PtrArrayShift, a_806, 'char', 0) in
          pure(Specified(a_807))
        ,
          let weak a_809: pointer = pure(ui) in
          load('unsigned int', a_809)
        ) in
      if not(params_length(a_799) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_800) \/ not(are_compatible ('signed int', a_798)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_803: pointer =
            let a_810: ctype = params_nth(a_799, 0) in
            if not(are_compatible ('const char*', a_810)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_811: pointer = create(Ivalignof(a_810), a_810) in
              let weak _: unit = store(a_810, a_811, a_804) in
              pure(a_811) in
          let strong a_802: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'unsigned int',
            conv_loaded_int('unsigned int', a_808)) in
          let strong a_812: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_797, a_803,
            [('unsigned int', a_802)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_803), kill('unsigned int', a_802)) in
          pure(a_812)
    ) in
  pure(Unit) ;
  kill('void*', p) ;
  kill('unsigned int', ui) ;
  pure(Unit) ;
  save ret_756: loaded integer (a_813: loaded integer:= Specified(0)) in
    pure(a_813)

