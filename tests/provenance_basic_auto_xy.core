-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_753: pointer [ail_ctype = 'char[22]'] :=
  create_readonly(Ivalignof('char[22]'), 'char[22]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_820: pointer [ail_ctype = 'char[23]'] :=
  create_readonly(Ivalignof('char[23]'), 'char[23]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong y: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_733: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', x, conv_loaded_int('signed int', a_733)) ;
  let strong a_734: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', y, conv_loaded_int('signed int', a_734)) ;
  let strong a_735: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_736: loaded pointer, a_738: loaded integer) =
        unseq(
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_741: pointer = pure(x) in
          pure(Specified(a_741))
        ,
          pure(Specified(1))
        ) in
      let (Specified(a_737: pointer), Specified(a_739: integer)) =
        (a_736, a_738) in
      let weak a_740: pointer =
        memop(PtrArrayShift, a_737, 'signed int', a_739) in
      pure(Specified(a_740))
    ) in
  store('signed int*', p, a_735) ;
  let strong a_742: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_743: pointer = pure(y) in
      pure(Specified(a_743))
    ) in
  store('signed int*', q, a_742) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_744: loaded pointer,
      (a_745: ctype, a_746: [ctype], a_747: boolean, a_748: boolean)),
      a_752: loaded pointer, a_756: loaded pointer, a_761: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_732: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_732, cfunction(a_732)))
        ,
          let weak a_754: pointer = pure(a_753) in
          {- §6.3.2.1#3 -}
          let weak a_755: pointer = memop(PtrArrayShift, a_754, 'char', 0) in
          pure(Specified(a_755))
        ,
          {- §6.5.4 -}
          let weak a_759: pointer = pure(p) in
          load('signed int*', a_759)
        ,
          {- §6.5.4 -}
          let weak a_764: pointer = pure(q) in
          load('signed int*', a_764)
        ) in
      if not(params_length(a_746) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_747) \/ not(are_compatible ('signed int', a_745)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_751: pointer =
            let a_766: ctype = params_nth(a_746, 0) in
            if not(are_compatible ('const char*', a_766)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_767: pointer = create(Ivalignof(a_766), a_766) in
              let weak _: unit = store(a_766, a_767, a_752) in
              pure(a_767) in
          let strong a_750: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_756) in
          let strong a_749: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_761) in
          let strong a_768: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_744, a_751,
            [('void*', a_750), ('void*', a_749)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_751)
            ,
              kill('void*', a_750)
            ,
              kill('void*', a_749)
            ) in
          pure(a_768)
    ) in
  pure(Unit) ;
  let strong a_769: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_771: loaded integer, a_772: loaded integer) =
        unseq(
          let weak (a_776: loaded integer, a_777: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_782: loaded pointer,
              (a_783: ctype, a_784: [ctype], a_785: boolean, a_786: boolean)),
              a_790: loaded pointer, a_792: loaded pointer,
              a_794: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_781: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_781, cfunction(a_781)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_791: pointer = pure(p) in
                  pure(Specified(a_791))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_793: pointer = pure(q) in
                  pure(Specified(a_793))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_784) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_785 \/ not(are_compatible ('signed int', a_783)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_789: pointer =
                    let a_795: ctype = params_nth(a_784, 0) in
                    if not(are_compatible ('const void*', a_795)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_796: pointer =
                        create(Ivalignof(a_795), a_795) in
                      let weak _: unit = store(a_795, a_796, a_790) in
                      pure(a_796) in
                  let strong a_788: pointer =
                    let a_797: ctype = params_nth(a_784, 1) in
                    if not(are_compatible ('const void*', a_797)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_798: pointer =
                        create(Ivalignof(a_797), a_797) in
                      let weak _: unit = store(a_797, a_798, a_792) in
                      pure(a_798) in
                  let strong a_787: pointer =
                    let a_799: ctype = params_nth(a_784, 2) in
                    if not(are_compatible ('size_t', a_799)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_800: pointer =
                        create(Ivalignof(a_799), a_799) in
                      let weak _: unit =
                        store(a_799, a_800, conv_loaded_int(a_799, a_794)) in
                      pure(a_800) in
                  let strong a_801: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_782, a_789, a_788, a_787) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_789)
                    ,
                      kill('void*', a_788)
                    ,
                      kill('size_t', a_787)
                    ) in
                  pure(a_801)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_778: integer), Specified(a_779: integer)) =
              (a_776, a_777) in
            if conv_int('signed int', a_778) = conv_int('signed int', a_779) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_773: integer), Specified(a_774: integer)) =
          (a_771, a_772) in
        if conv_int('signed int', a_773) = conv_int('signed int', a_774) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_731: boolean =
    let Specified(a_770: integer) = a_769 in
    pure(if not(a_770 = 1) then True else False) in
  if a_731 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_803: pointer, a_808: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_804: loaded pointer =
              let weak a_807: pointer = pure(p) in
              load('signed int*', a_807) in
            let Specified(a_805: pointer) = a_804 in
            let weak a_806: boolean =
              memop(PtrValidForDeref, 'signed int', a_805) in
            pure(
              if a_806 then
                a_805
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_803, conv_loaded_int('signed int', a_808))) in
        pure(conv_loaded_int('signed int', a_808))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_809: loaded pointer,
        (a_810: ctype, a_811: [ctype], a_812: boolean, a_813: boolean)),
        a_819: loaded pointer, a_823: loaded integer, a_825: loaded integer,
        a_827: loaded integer, a_833: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_802: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_802, cfunction(a_802)))
          ,
            let weak a_821: pointer = pure(a_820) in
            {- §6.3.2.1#3 -}
            let weak a_822: pointer =
              memop(PtrArrayShift, a_821, 'char', 0) in
            pure(Specified(a_822))
          ,
            let weak a_824: pointer = pure(x) in
            load('signed int', a_824)
          ,
            let weak a_826: pointer = pure(y) in
            load('signed int', a_826)
          ,
            let weak a_832: pointer =
              {- §6.5.3.2 -}
              let weak a_828: loaded pointer =
                let weak a_831: pointer = pure(p) in
                load('signed int*', a_831) in
              let Specified(a_829: pointer) = a_828 in
              let weak a_830: boolean =
                memop(PtrValidForDeref, 'signed int', a_829) in
              pure(
                if a_830 then
                  a_829
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_832)
          ,
            let weak a_838: pointer =
              {- §6.5.3.2 -}
              let weak a_834: loaded pointer =
                let weak a_837: pointer = pure(q) in
                load('signed int*', a_837) in
              let Specified(a_835: pointer) = a_834 in
              let weak a_836: boolean =
                memop(PtrValidForDeref, 'signed int', a_835) in
              pure(
                if a_836 then
                  a_835
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_838)
          ) in
        if not(params_length(a_811) <= 5) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_812) \/ not(are_compatible ('signed int', a_810)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_818: pointer =
              let a_839: ctype = params_nth(a_811, 0) in
              if not(are_compatible ('const char*', a_839)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_840: pointer = create(Ivalignof(a_839), a_839) in
                let weak _: unit = store(a_839, a_840, a_819) in
                pure(a_840) in
            let strong a_817: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_823)) in
            let strong a_816: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_825)) in
            let strong a_815: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_827)) in
            let strong a_814: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_833)) in
            let strong a_841: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_809, a_818,
              [('signed int', a_817), ('signed int', a_816),
              ('signed int', a_815), ('signed int', a_814)]) in
            let strong _: (unit,unit,unit,unit,unit) =
              unseq(
                kill('char*', a_818)
              ,
                kill('signed int', a_817)
              ,
                kill('signed int', a_816)
              ,
                kill('signed int', a_815)
              ,
                kill('signed int', a_814)
              ) in
            pure(a_841)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  kill('signed int', x) ;
  kill('signed int', y) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_730: loaded integer (a_842: loaded integer:= Specified(0)) in
    pure(a_842)

