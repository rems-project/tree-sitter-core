-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob y: pointer [ail_ctype = 'signed int[2]'] :=
  let strong a_891: pointer =
    create(Ivalignof('signed int[2]'), 'signed int[2]') in
  let strong a_892: loaded array(integer) =
    {- §6.5#2 -}
    bound(pure(Specified(Array(Specified(0), Specified(0))))) in
  store('signed int[2]', a_891, a_892) ;
  pure(a_891)

glob x: pointer [ail_ctype = 'signed int[2]'] :=
  let strong a_889: pointer =
    create(Ivalignof('signed int[2]'), 'signed int[2]') in
  let strong a_890: loaded array(integer) =
    {- §6.5#2 -}
    bound(pure(Specified(Array(Specified(0), Specified(0))))) in
  store('signed int[2]', a_889, a_890) ;
  pure(a_889)

glob a_791: pointer [ail_ctype = 'char[22]'] :=
  create_readonly(Ivalignof('char[22]'), 'char[22]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_857: pointer [ail_ctype = 'char[21]'] :=
  create_readonly(Ivalignof('char[21]'), 'char[21]', Specified(Array(Specified(conv_int('char',
  121)), Specified(conv_int('char', 91)), Specified(conv_int('char', 48)),
  Specified(conv_int('char', 93)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_737: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_738: loaded pointer, a_740: loaded integer) =
        unseq(
          {- §6.5.6 -}
          let weak (a_743: loaded pointer, a_745: loaded integer) =
            unseq(
              {- §6.5.6 -}
              {- §6.5.3.2#3, sentence 3 -}
              let weak (a_748: loaded pointer, a_750: loaded integer) =
                unseq(
                  let weak a_753: pointer = pure(x) in
                  {- §6.3.2.1#3 -}
                  let weak a_754: pointer =
                    memop(PtrArrayShift, a_753, 'signed int', 0) in
                  pure(Specified(a_754))
                ,
                  pure(Specified(1))
                ) in
              let (Specified(a_749: pointer), Specified(a_751: integer)) =
                (a_748, a_750) in
              let weak a_752: pointer =
                memop(PtrArrayShift, a_749, 'signed int', a_751) in
              pure(Specified(a_752))
            ,
              {- §6.5.6 -}
              let weak (a_769: loaded pointer, a_770: loaded pointer) =
                unseq(
                  {- §6.5.6 -}
                  {- §6.5.3.2#3, sentence 3 -}
                  let weak (a_755: loaded pointer, a_757: loaded integer) =
                    unseq(
                      let weak a_760: pointer = pure(y) in
                      {- §6.3.2.1#3 -}
                      let weak a_761: pointer =
                        memop(PtrArrayShift, a_760, 'signed int', 0) in
                      pure(Specified(a_761))
                    ,
                      pure(Specified(1))
                    ) in
                  let (Specified(a_756: pointer), Specified(a_758: integer)) =
                    (a_755, a_757) in
                  let weak a_759: pointer =
                    memop(PtrArrayShift, a_756, 'signed int', a_758) in
                  pure(Specified(a_759))
                ,
                  {- §6.5.6 -}
                  {- §6.5.3.2#3, sentence 3 -}
                  let weak (a_762: loaded pointer, a_764: loaded integer) =
                    unseq(
                      let weak a_767: pointer = pure(y) in
                      {- §6.3.2.1#3 -}
                      let weak a_768: pointer =
                        memop(PtrArrayShift, a_767, 'signed int', 0) in
                      pure(Specified(a_768))
                    ,
                      pure(Specified(0))
                    ) in
                  let (Specified(a_763: pointer), Specified(a_765: integer)) =
                    (a_762, a_764) in
                  let weak a_766: pointer =
                    memop(PtrArrayShift, a_763, 'signed int', a_765) in
                  pure(Specified(a_766))
                ) in
              let (Specified(a_771: pointer), Specified(a_772: pointer)) =
                (a_769, a_770) in
              let weak a_773: integer =
                memop(Ptrdiff, 'signed int', a_771, a_772) in
              pure(
                if is_representable_integer(a_773, 'ptrdiff_t') then
                  Specified(a_773)
                else
                  undef(<<UB050_pointers_subtraction_not_representable>>)
              )
            ) in
          let (Specified(a_744: pointer), Specified(a_746: integer)) =
            (a_743, a_745) in
          let weak a_747: pointer =
            memop(PtrArrayShift, a_744, 'signed int', a_746) in
          pure(Specified(a_747))
        ,
          pure(Specified(0))
        ) in
      let (Specified(a_739: pointer), Specified(a_741: integer)) =
        (a_738, a_740) in
      let weak a_742: pointer =
        memop(PtrArrayShift, a_739, 'signed int', a_741) in
      pure(Specified(a_742))
    ) in
  store('signed int*', p, a_737) ;
  let strong a_774: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      {- §6.5.3.2#3, sentence 3 -}
      let weak (a_775: loaded pointer, a_777: loaded integer) =
        unseq(
          let weak a_780: pointer = pure(y) in
          {- §6.3.2.1#3 -}
          let weak a_781: pointer =
            memop(PtrArrayShift, a_780, 'signed int', 0) in
          pure(Specified(a_781))
        ,
          pure(Specified(0))
        ) in
      let (Specified(a_776: pointer), Specified(a_778: integer)) =
        (a_775, a_777) in
      let weak a_779: pointer =
        memop(PtrArrayShift, a_776, 'signed int', a_778) in
      pure(Specified(a_779))
    ) in
  store('signed int*', q, a_774) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_782: loaded pointer,
      (a_783: ctype, a_784: [ctype], a_785: boolean, a_786: boolean)),
      a_790: loaded pointer, a_794: loaded pointer, a_799: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_736: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_736, cfunction(a_736)))
        ,
          let weak a_792: pointer = pure(a_791) in
          {- §6.3.2.1#3 -}
          let weak a_793: pointer = memop(PtrArrayShift, a_792, 'char', 0) in
          pure(Specified(a_793))
        ,
          {- §6.5.4 -}
          let weak a_797: pointer = pure(p) in
          load('signed int*', a_797)
        ,
          {- §6.5.4 -}
          let weak a_802: pointer = pure(q) in
          load('signed int*', a_802)
        ) in
      if not(params_length(a_784) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_785) \/ not(are_compatible ('signed int', a_783)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_789: pointer =
            let a_804: ctype = params_nth(a_784, 0) in
            if not(are_compatible ('const char*', a_804)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_805: pointer = create(Ivalignof(a_804), a_804) in
              let weak _: unit = store(a_804, a_805, a_790) in
              pure(a_805) in
          let strong a_788: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_794) in
          let strong a_787: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_799) in
          let strong a_806: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_782, a_789,
            [('void*', a_788), ('void*', a_787)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_789)
            ,
              kill('void*', a_788)
            ,
              kill('void*', a_787)
            ) in
          pure(a_806)
    ) in
  pure(Unit) ;
  let strong a_807: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_809: loaded integer, a_810: loaded integer) =
        unseq(
          let weak (a_814: loaded integer, a_815: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_820: loaded pointer,
              (a_821: ctype, a_822: [ctype], a_823: boolean, a_824: boolean)),
              a_828: loaded pointer, a_830: loaded pointer,
              a_832: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_819: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_819, cfunction(a_819)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_829: pointer = pure(p) in
                  pure(Specified(a_829))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_831: pointer = pure(q) in
                  pure(Specified(a_831))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_822) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_823 \/ not(are_compatible ('signed int', a_821)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_827: pointer =
                    let a_833: ctype = params_nth(a_822, 0) in
                    if not(are_compatible ('const void*', a_833)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_834: pointer =
                        create(Ivalignof(a_833), a_833) in
                      let weak _: unit = store(a_833, a_834, a_828) in
                      pure(a_834) in
                  let strong a_826: pointer =
                    let a_835: ctype = params_nth(a_822, 1) in
                    if not(are_compatible ('const void*', a_835)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_836: pointer =
                        create(Ivalignof(a_835), a_835) in
                      let weak _: unit = store(a_835, a_836, a_830) in
                      pure(a_836) in
                  let strong a_825: pointer =
                    let a_837: ctype = params_nth(a_822, 2) in
                    if not(are_compatible ('size_t', a_837)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_838: pointer =
                        create(Ivalignof(a_837), a_837) in
                      let weak _: unit =
                        store(a_837, a_838, conv_loaded_int(a_837, a_832)) in
                      pure(a_838) in
                  let strong a_839: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_820, a_827, a_826, a_825) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_827)
                    ,
                      kill('void*', a_826)
                    ,
                      kill('size_t', a_825)
                    ) in
                  pure(a_839)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_816: integer), Specified(a_817: integer)) =
              (a_814, a_815) in
            if conv_int('signed int', a_816) = conv_int('signed int', a_817) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_811: integer), Specified(a_812: integer)) =
          (a_809, a_810) in
        if conv_int('signed int', a_811) = conv_int('signed int', a_812) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_735: boolean =
    let Specified(a_808: integer) = a_807 in
    pure(if not(a_808 = 1) then True else False) in
  if a_735 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_841: pointer, a_846: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_842: loaded pointer =
              let weak a_845: pointer = pure(p) in
              load('signed int*', a_845) in
            let Specified(a_843: pointer) = a_842 in
            let weak a_844: boolean =
              memop(PtrValidForDeref, 'signed int', a_843) in
            pure(
              if a_844 then
                a_843
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_841, conv_loaded_int('signed int', a_846))) in
        pure(conv_loaded_int('signed int', a_846))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_847: loaded pointer,
        (a_848: ctype, a_849: [ctype], a_850: boolean, a_851: boolean)),
        a_856: loaded pointer, a_860: loaded integer, a_872: loaded integer,
        a_878: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_840: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_840, cfunction(a_840)))
          ,
            let weak a_858: pointer = pure(a_857) in
            {- §6.3.2.1#3 -}
            let weak a_859: pointer =
              memop(PtrArrayShift, a_858, 'char', 0) in
            pure(Specified(a_859))
          ,
            let weak a_871: pointer =
              {- §6.5.3.2 -}
              let weak a_861: loaded pointer =
                {- §6.5.6 -}
                let weak (a_864: loaded pointer, a_866: loaded integer) =
                  unseq(
                    let weak a_869: pointer = pure(y) in
                    {- §6.3.2.1#3 -}
                    let weak a_870: pointer =
                      memop(PtrArrayShift, a_869, 'signed int', 0) in
                    pure(Specified(a_870))
                  ,
                    pure(Specified(0))
                  ) in
                let (Specified(a_865: pointer), Specified(a_867: integer)) =
                  (a_864, a_866) in
                let weak a_868: pointer =
                  memop(PtrArrayShift, a_865, 'signed int', a_867) in
                pure(Specified(a_868)) in
              let Specified(a_862: pointer) = a_861 in
              let weak a_863: boolean =
                memop(PtrValidForDeref, 'signed int', a_862) in
              pure(
                if a_863 then
                  a_862
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_871)
          ,
            let weak a_877: pointer =
              {- §6.5.3.2 -}
              let weak a_873: loaded pointer =
                let weak a_876: pointer = pure(p) in
                load('signed int*', a_876) in
              let Specified(a_874: pointer) = a_873 in
              let weak a_875: boolean =
                memop(PtrValidForDeref, 'signed int', a_874) in
              pure(
                if a_875 then
                  a_874
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_877)
          ,
            let weak a_883: pointer =
              {- §6.5.3.2 -}
              let weak a_879: loaded pointer =
                let weak a_882: pointer = pure(q) in
                load('signed int*', a_882) in
              let Specified(a_880: pointer) = a_879 in
              let weak a_881: boolean =
                memop(PtrValidForDeref, 'signed int', a_880) in
              pure(
                if a_881 then
                  a_880
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_883)
          ) in
        if not(params_length(a_849) <= 4) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_850) \/ not(are_compatible ('signed int', a_848)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_855: pointer =
              let a_884: ctype = params_nth(a_849, 0) in
              if not(are_compatible ('const char*', a_884)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_885: pointer = create(Ivalignof(a_884), a_884) in
                let weak _: unit = store(a_884, a_885, a_856) in
                pure(a_885) in
            let strong a_854: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_860)) in
            let strong a_853: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_872)) in
            let strong a_852: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_878)) in
            let strong a_886: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_847, a_855,
              [('signed int', a_854), ('signed int', a_853),
              ('signed int', a_852)]) in
            let strong _: (unit,unit,unit,unit) =
              unseq(
                kill('char*', a_855)
              ,
                kill('signed int', a_854)
              ,
                kill('signed int', a_853)
              ,
                kill('signed int', a_852)
              ) in
            pure(a_886)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  let strong a_887: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  run ret_734(conv_loaded_int('signed int', a_887)) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_734: loaded integer (a_888: loaded integer:= Specified(0)) in
    pure(a_888)

