-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_646 :=
  i: 'signed int'

-- Globals
glob a_693: pointer [ail_ctype = 'char[25]'] :=
  create_readonly(Ivalignof('char[25]'), 'char[25]', Specified(Array(Specified(conv_int('char',
  115)), Specified(conv_int('char', 46)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 62)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_742: pointer [ail_ctype = 'char[20]'] :=
  create_readonly(Ivalignof('char[20]'), 'char[20]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 45)), Specified(conv_int('char', 62)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc f (sp: pointer, p: pointer): eff unit :=
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_721: pointer, a_727: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.2.3#4, sentence 2 -}
          let strong a_722: loaded pointer =
            let weak a_726: pointer = pure(sp) in
            load('struct __cerbty_unnamed_tag_646*', a_726) in
          let Specified(a_723: pointer) = a_722 in
          let weak a_724: boolean =
            memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_646', a_723) in
          pure(
            if a_724 then
              member_shift(a_723, __cerbty_unnamed_tag_646, .i)
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(2))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_721, conv_loaded_int('signed int', a_727))) in
      pure(conv_loaded_int('signed int', a_727))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_720: pointer, a_732: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_728: loaded pointer =
            let weak a_731: pointer = pure(p) in
            load('signed int*', a_731) in
          let Specified(a_729: pointer) = a_728 in
          let weak a_730: boolean =
            memop(PtrValidForDeref, 'signed int', a_729) in
          pure(
            if a_730 then
              a_729
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(3))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_720, conv_loaded_int('signed int', a_732))) in
      pure(conv_loaded_int('signed int', a_732))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_733: loaded pointer,
      (a_734: ctype, a_735: [ctype], a_736: boolean, a_737: boolean)),
      a_741: loaded pointer, a_745: loaded integer, a_752: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_719: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_719, cfunction(a_719)))
        ,
          let weak a_743: pointer = pure(a_742) in
          {- §6.3.2.1#3 -}
          let weak a_744: pointer = memop(PtrArrayShift, a_743, 'char', 0) in
          pure(Specified(a_744))
        ,
          let weak a_751: pointer =
            {- §6.5.2.3#4, sentence 2 -}
            let strong a_746: loaded pointer =
              let weak a_750: pointer = pure(sp) in
              load('struct __cerbty_unnamed_tag_646*', a_750) in
            let Specified(a_747: pointer) = a_746 in
            let weak a_748: boolean =
              memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_646', a_747) in
            pure(
              if a_748 then
                member_shift(a_747, __cerbty_unnamed_tag_646, .i)
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_751)
        ,
          let weak a_757: pointer =
            {- §6.5.3.2 -}
            let weak a_753: loaded pointer =
              let weak a_756: pointer = pure(p) in
              load('signed int*', a_756) in
            let Specified(a_754: pointer) = a_753 in
            let weak a_755: boolean =
              memop(PtrValidForDeref, 'signed int', a_754) in
            pure(
              if a_755 then
                a_754
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_757)
        ) in
      if not(params_length(a_735) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_736) \/ not(are_compatible ('signed int', a_734)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_740: pointer =
            let a_758: ctype = params_nth(a_735, 0) in
            if not(are_compatible ('const char*', a_758)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_759: pointer = create(Ivalignof(a_758), a_758) in
              let weak _: unit = store(a_758, a_759, a_741) in
              pure(a_759) in
          let strong a_739: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_745)) in
          let strong a_738: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_752)) in
          let strong a_760: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_733, a_740,
            [('signed int', a_739), ('signed int', a_738)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_740)
            ,
              kill('signed int', a_739)
            ,
              kill('signed int', a_738)
            ) in
          pure(a_760)
    ) in
  pure(Unit) ;
  pure(Unit) ;
  save ret_718: unit (a_761: unit:= Unit) in  pure(a_761)

proc main (): eff loaded integer :=
  let strong s: pointer =
    create(Ivalignof('struct __cerbty_unnamed_tag_646'), 'struct __cerbty_unnamed_tag_646') in
  let strong sp: pointer =
    create(Ivalignof('struct __cerbty_unnamed_tag_646*'), 'struct __cerbty_unnamed_tag_646*') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_660: loaded struct a_646 =
    {- §6.5#2 -}
    bound(
      let weak a_661: loaded integer = pure(Specified(1)) in
      pure(
        Specified((struct __cerbty_unnamed_tag_646){.i= conv_loaded_int('signed int',
        a_661)})
      )
    ) in
  store('struct __cerbty_unnamed_tag_646', s, a_660) ;
  let strong a_662: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_663: pointer = pure(s) in
      pure(Specified(a_663))
    ) in
  store('struct __cerbty_unnamed_tag_646*', sp, a_662) ;
  let strong a_664: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_665: pointer =
        {- §6.5.2.3#3, sentence 2 -}
        let strong a_666: pointer = pure(s) in
        memop(PtrArrayShift[__cerbty_unnamed_tag_646, i], a_666) in
      pure(Specified(a_665))
    ) in
  store('signed int*', p, a_664) ;
  {- §6.5#2 -}
  bound(
    {- §6.5.2.2#10, sentence 1 -}
    let strong ((a_667: loaded pointer,
    (a_668: ctype, a_669: [ctype], a_670: boolean, a_671: boolean)),
    a_674: loaded pointer, a_676: loaded pointer) =
      {- §6.5.2.2#4, sentence 2 -}
      unseq(
        let strong a_659: loaded pointer = pure(Specified(Cfunction(f))) in
        pure((a_659, cfunction(a_659)))
      ,
        let weak a_675: pointer = pure(sp) in
        load('struct __cerbty_unnamed_tag_646*', a_675)
      ,
        let weak a_677: pointer = pure(p) in
        load('signed int*', a_677)
      ) in
    if not(params_length(a_669) = 2) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_670 \/ not(are_compatible ('void', a_668)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_673: pointer =
          let a_678: ctype = params_nth(a_669, 0) in
          if not(are_compatible ('struct __cerbty_unnamed_tag_646*', a_678)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_679: pointer = create(Ivalignof(a_678), a_678) in
            let weak _: unit = store(a_678, a_679, a_674) in
            pure(a_679) in
        let strong a_672: pointer =
          let a_680: ctype = params_nth(a_669, 1) in
          if not(are_compatible ('signed int*', a_680)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_681: pointer = create(Ivalignof(a_680), a_680) in
            let weak _: unit = store(a_680, a_681, a_676) in
            pure(a_681) in
        let strong a_682: unit =
          ccall('void (*) (struct __cerbty_unnamed_tag_646*, signed int*)',
          a_667, a_673, a_672) in
        let strong _: (unit,unit) =
          unseq(
            kill('struct __cerbty_unnamed_tag_646*', a_673)
          ,
            kill('signed int*', a_672)
          ) in
        pure(a_682)
  ) ;
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_683: loaded pointer,
      (a_684: ctype, a_685: [ctype], a_686: boolean, a_687: boolean)),
      a_692: loaded pointer, a_696: loaded integer, a_699: loaded integer,
      a_706: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_658: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_658, cfunction(a_658)))
        ,
          let weak a_694: pointer = pure(a_693) in
          {- §6.3.2.1#3 -}
          let weak a_695: pointer = memop(PtrArrayShift, a_694, 'char', 0) in
          pure(Specified(a_695))
        ,
          let weak a_698: pointer =
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_697: pointer = pure(s) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_646, i], a_697) in
          load('signed int', a_698)
        ,
          let weak a_705: pointer =
            {- §6.5.2.3#4, sentence 2 -}
            let strong a_700: loaded pointer =
              let weak a_704: pointer = pure(sp) in
              load('struct __cerbty_unnamed_tag_646*', a_704) in
            let Specified(a_701: pointer) = a_700 in
            let weak a_702: boolean =
              memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_646', a_701) in
            pure(
              if a_702 then
                member_shift(a_701, __cerbty_unnamed_tag_646, .i)
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_705)
        ,
          let weak a_711: pointer =
            {- §6.5.3.2 -}
            let weak a_707: loaded pointer =
              let weak a_710: pointer = pure(p) in
              load('signed int*', a_710) in
            let Specified(a_708: pointer) = a_707 in
            let weak a_709: boolean =
              memop(PtrValidForDeref, 'signed int', a_708) in
            pure(
              if a_709 then
                a_708
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_711)
        ) in
      if not(params_length(a_685) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_686) \/ not(are_compatible ('signed int', a_684)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_691: pointer =
            let a_712: ctype = params_nth(a_685, 0) in
            if not(are_compatible ('const char*', a_712)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_713: pointer = create(Ivalignof(a_712), a_712) in
              let weak _: unit = store(a_712, a_713, a_692) in
              pure(a_713) in
          let strong a_690: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_696)) in
          let strong a_689: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_699)) in
          let strong a_688: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_706)) in
          let strong a_714: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_683, a_691,
            [('signed int', a_690), ('signed int', a_689),
            ('signed int', a_688)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_691)
            ,
              kill('signed int', a_690)
            ,
              kill('signed int', a_689)
            ,
              kill('signed int', a_688)
            ) in
          pure(a_714)
    ) in
  pure(Unit) ;
  kill('struct __cerbty_unnamed_tag_646', s) ;
  kill('struct __cerbty_unnamed_tag_646*', sp) ;
  kill('signed int*', p) ;
  pure(Unit) ;
  save ret_657: loaded integer (a_715: loaded integer:= Specified(0)) in
    pure(a_715)

