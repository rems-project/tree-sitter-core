-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_648 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_680 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob c: pointer [ail_ctype = 'char[5]'] :=
  let strong a_767: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  let strong a_768: loaded array(integer) =
    {- §6.5#2 -}
    bound(
      pure(
        Specified(Array(Specified(0), Specified(0), Specified(0), Specified(0),
        Specified(0)))
      )
    ) in
  store('char[5]', a_767, a_768) ;
  pure(a_767)

glob a_756: pointer [ail_ctype = 'char[14]'] :=
  create_readonly(Ivalignof('char[14]'), 'char[14]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 48)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong cp: pointer = create(Ivalignof('char*'), 'char*') in
  let strong x0: pointer =
    create(Ivalignof('unsigned int'), 'unsigned int') in
  let strong x1: pointer =
    create(Ivalignof('unsigned int'), 'unsigned int') in
  let strong a_709: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      {- §6.5.3.2#3, sentence 3 -}
      let weak (a_710: loaded pointer, a_712: loaded integer) =
        unseq(
          let weak a_715: pointer = pure(c) in
          {- §6.3.2.1#3 -}
          let weak a_716: pointer = memop(PtrArrayShift, a_715, 'char', 0) in
          pure(Specified(a_716))
        ,
          pure(Specified(0))
        ) in
      let (Specified(a_711: pointer), Specified(a_713: integer)) =
        (a_710, a_712) in
      let weak a_714: pointer = memop(PtrArrayShift, a_711, 'char', a_713) in
      pure(Specified(a_714))
    ) in
  store('char*', cp, a_709) ;
  {- §6.5#2 -}
  bound(
    let strong a_708: loaded integer =
      let weak (a_719: loaded integer, a_720: loaded integer) =
        unseq(pure(Specified(Ivsizeof('unsigned int'))), pure(Specified(4))) in
      pure(
        let (Specified(a_721: integer), Specified(a_722: integer)) =
          (a_719, a_720) in
        if if all_values_representable_in('size_t', 'signed int') then
          conv_int('signed int', a_721)
        else
          conv_int('unsigned int', a_721) =
        if all_values_representable_in('size_t', 'signed int') then
          conv_int('signed int', a_722)
        else
          conv_int('unsigned int', a_722) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_717: integer) = a_708 in
      if a_717 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  let strong a_724: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak a_732: pointer =
        {- §6.5.3.2 -}
        let weak a_725: loaded pointer =
          {- §6.5.4 -}
          let weak a_728: loaded pointer =
            let weak a_730: pointer = pure(cp) in
            load('char*', a_730) in
          let Specified(a_729: pointer) = a_728 in
          let weak a_731: boolean =
            memop(PtrWellAligned, 'unsigned int', a_729) in
          pure(
            Specified(if a_731 then
              a_729
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          ) in
        let Specified(a_726: pointer) = a_725 in
        let weak a_727: boolean =
          memop(PtrValidForDeref, 'unsigned int', a_726) in
        pure(
          if a_727 then a_726 else undef(<<UB043_indirection_invalid_value>>)
        ) in
      load('unsigned int', a_732)
    ) in
  store('unsigned int', x0, conv_loaded_int('unsigned int', a_724)) ;
  let strong a_733: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak a_746: pointer =
        {- §6.5.3.2 -}
        let weak a_734: loaded pointer =
          {- §6.5.4 -}
          let weak a_737: loaded pointer =
            {- §6.5.6 -}
            let weak (a_739: loaded pointer, a_741: loaded integer) =
              unseq(
                let weak a_744: pointer = pure(cp) in
                load('char*', a_744)
              ,
                pure(Specified(4))
              ) in
            let (Specified(a_740: pointer), Specified(a_742: integer)) =
              (a_739, a_741) in
            let weak a_743: pointer =
              memop(PtrArrayShift, a_740, 'char', a_742) in
            pure(Specified(a_743)) in
          let Specified(a_738: pointer) = a_737 in
          let weak a_745: boolean =
            memop(PtrWellAligned, 'unsigned int', a_738) in
          pure(
            Specified(if a_745 then
              a_738
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          ) in
        let Specified(a_735: pointer) = a_734 in
        let weak a_736: boolean =
          memop(PtrValidForDeref, 'unsigned int', a_735) in
        pure(
          if a_736 then a_735 else undef(<<UB043_indirection_invalid_value>>)
        ) in
      load('unsigned int', a_746)
    ) in
  store('unsigned int', x1, conv_loaded_int('unsigned int', a_733)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_747: loaded pointer,
      (a_748: ctype, a_749: [ctype], a_750: boolean, a_751: boolean)),
      a_755: loaded pointer, a_759: loaded integer, a_761: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_707: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_707, cfunction(a_707)))
        ,
          let weak a_757: pointer = pure(a_756) in
          {- §6.3.2.1#3 -}
          let weak a_758: pointer = memop(PtrArrayShift, a_757, 'char', 0) in
          pure(Specified(a_758))
        ,
          let weak a_760: pointer = pure(x0) in
          load('unsigned int', a_760)
        ,
          let weak a_762: pointer = pure(x1) in
          load('unsigned int', a_762)
        ) in
      if not(params_length(a_749) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_750) \/ not(are_compatible ('signed int', a_748)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_754: pointer =
            let a_763: ctype = params_nth(a_749, 0) in
            if not(are_compatible ('const char*', a_763)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_764: pointer = create(Ivalignof(a_763), a_763) in
              let weak _: unit = store(a_763, a_764, a_755) in
              pure(a_764) in
          let strong a_753: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'unsigned int',
            conv_loaded_int('unsigned int', a_759)) in
          let strong a_752: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'unsigned int',
            conv_loaded_int('unsigned int', a_761)) in
          let strong a_765: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_747, a_754,
            [('unsigned int', a_753), ('unsigned int', a_752)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_754)
            ,
              kill('unsigned int', a_753)
            ,
              kill('unsigned int', a_752)
            ) in
          pure(a_765)
    ) in
  pure(Unit) ;
  kill('char*', cp) ;
  kill('unsigned int', x0) ;
  kill('unsigned int', x1) ;
  pure(Unit) ;
  save ret_706: loaded integer (a_766: loaded integer:= Specified(0)) in
    pure(a_766)

