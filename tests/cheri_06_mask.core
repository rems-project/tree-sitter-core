-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_808: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_809: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_808, conv_loaded_int('signed int', a_809)) ;
  pure(a_808)

glob a_782: pointer [ail_ctype = 'char[21]'] :=
  create_readonly(Ivalignof('char[21]'), 'char[21]', Specified(Array(Specified(conv_int('char',
  121)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 40)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 41)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 122)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_796: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_799: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong i: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong j: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong r: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong y: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong b: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong z: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_691: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_692: pointer = pure(x) in
      pure(Specified(a_692))
    ) in
  store('signed int*', p, a_691) ;
  let strong a_693: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_694: loaded pointer =
        let weak a_696: pointer = pure(p) in
        load('signed int*', a_696) in
      let Specified(a_695: pointer) = a_694 in
      let weak a_697: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_695) in
      pure(Specified(a_697))
    ) in
  store('uintptr_t', i, conv_loaded_int('uintptr_t', a_693)) ;
  {- §6.5#2 -}
  bound(
    let strong a_690: loaded integer =
      {- §6.5.8 -}
      let weak (a_700: loaded integer, a_701: loaded integer) =
        unseq(pure(Specified(Ivalignof('signed int'))), pure(Specified(4))) in
      let (Specified(a_702: integer), Specified(a_703: integer)) =
        (a_700, a_701) in
      {- §6.5.8#6 -}
      pure(
        if if all_values_representable_in('size_t', 'signed int') then
          conv_int('signed int', a_702)
        else
          conv_int('unsigned int', a_702) >=
        if all_values_representable_in('size_t', 'signed int') then
          conv_int('signed int', a_703)
        else
          conv_int('unsigned int', a_703) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_698: integer) = a_690 in
      if a_698 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  {- §6.5#2 -}
  bound(
    let strong a_689: loaded integer =
      let weak (a_707: loaded integer, a_708: loaded integer) =
        unseq(
          {- §6.5.10 -}
          let weak (a_712: loaded integer, a_713: loaded integer) =
            unseq(
              let weak a_716: pointer = pure(i) in
              load('uintptr_t', a_716)
            ,
              pure(Specified(3))
            ) in
          pure(
            let (Specified(a_714: integer), Specified(a_715: integer)) =
              (a_712, a_713) in
            Specified(IvAND('uintptr_t', conv_int('uintptr_t', a_714),
            conv_int('uintptr_t', a_715)))
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_709: integer), Specified(a_710: integer)) =
          (a_707, a_708) in
        if conv_int('uintptr_t', a_709) = conv_int('uintptr_t', a_710) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_705: integer) = a_689 in
      if a_705 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_688: pointer, a_722: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          pure(i)
        ,
          {- §6.5.12 -}
          let weak (a_717: loaded integer, a_718: loaded integer) =
            unseq(
              let weak a_721: pointer = pure(i) in
              load('uintptr_t', a_721)
            ,
              pure(Specified(1))
            ) in
          pure(
            let (Specified(a_719: integer), Specified(a_720: integer)) =
              (a_717, a_718) in
            Specified(IvOR('uintptr_t', conv_int('uintptr_t', a_719),
            conv_int('uintptr_t', a_720)))
          )
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('uintptr_t', a_688, conv_loaded_int('uintptr_t', a_722))) in
      pure(conv_loaded_int('uintptr_t', a_722))
    ) in
  pure(Unit) ;
  let strong a_723: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_724: loaded integer =
        let weak a_726: pointer = pure(i) in
        load('uintptr_t', a_726) in
      let Specified(a_725: integer) = a_724 in
      let weak a_727: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_725) in
      pure(Specified(a_727))
    ) in
  store('signed int*', q, a_723) ;
  let strong a_728: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.10 -}
      let weak (a_729: loaded integer, a_730: loaded integer) =
        unseq(
          {- §6.5.4 -}
          let weak a_733: loaded pointer =
            let weak a_735: pointer = pure(q) in
            load('signed int*', a_735) in
          let Specified(a_734: pointer) = a_733 in
          let weak a_736: integer =
            memop(IntFromPtr, 'signed int', 'uintptr_t', a_734) in
          pure(Specified(a_736))
        ,
          {- §6.5.3.3#4 -}
          let weak a_737: loaded integer =
            {- §6.5.4 -}
            let weak a_739: loaded integer = pure(Specified(3)) in
            pure(conv_loaded_int('uintptr_t', a_739)) in
          pure(
            let Specified(a_738: integer) = a_737 in
            Specified(Ivmax('uintptr_t') - conv_int('uintptr_t', a_738))
          )
        ) in
      pure(
        let (Specified(a_731: integer), Specified(a_732: integer)) =
          (a_729, a_730) in
        Specified(IvAND('uintptr_t', conv_int('uintptr_t', a_731),
        conv_int('uintptr_t', a_732)))
      )
    ) in
  store('uintptr_t', j, conv_loaded_int('uintptr_t', a_728)) ;
  let strong a_742: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_743: loaded integer =
        let weak a_745: pointer = pure(j) in
        load('uintptr_t', a_745) in
      let Specified(a_744: integer) = a_743 in
      let weak a_746: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_744) in
      pure(Specified(a_746))
    ) in
  store('signed int*', r, a_742) ;
  let strong a_747: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak a_752: pointer =
        {- §6.5.3.2 -}
        let weak a_748: loaded pointer =
          let weak a_751: pointer = pure(r) in
          load('signed int*', a_751) in
        let Specified(a_749: pointer) = a_748 in
        let weak a_750: boolean =
          memop(PtrValidForDeref, 'signed int', a_749) in
        pure(
          if a_750 then a_749 else undef(<<UB043_indirection_invalid_value>>)
        ) in
      load('signed int', a_752)
    ) in
  store('signed int', y, conv_loaded_int('signed int', a_747)) ;
  let strong a_753: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_754: loaded pointer, a_755: loaded pointer) =
        unseq(
          let weak a_759: pointer = pure(r) in
          load('signed int*', a_759)
        ,
          let weak a_760: pointer = pure(p) in
          load('signed int*', a_760)
        ) in
      let (Specified(a_756: pointer), Specified(a_757: pointer)) =
        (a_754, a_755) in
      let weak a_758: boolean = memop(PtrEq, a_756, a_757) in
      pure(if a_758 then Specified(1) else Specified(0))
    ) in
  store('signed int', b, conv_loaded_int('signed int', a_753)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_687: pointer, a_765: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_761: loaded pointer =
            let weak a_764: pointer = pure(r) in
            load('signed int*', a_764) in
          let Specified(a_762: pointer) = a_761 in
          let weak a_763: boolean =
            memop(PtrValidForDeref, 'signed int', a_762) in
          pure(
            if a_763 then
              a_762
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(2))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_687, conv_loaded_int('signed int', a_765))) in
      pure(conv_loaded_int('signed int', a_765))
    ) in
  pure(Unit) ;
  let strong a_766: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak a_771: pointer =
        {- §6.5.3.2 -}
        let weak a_767: loaded pointer =
          let weak a_770: pointer = pure(p) in
          load('signed int*', a_770) in
        let Specified(a_768: pointer) = a_767 in
        let weak a_769: boolean =
          memop(PtrValidForDeref, 'signed int', a_768) in
        pure(
          if a_769 then a_768 else undef(<<UB043_indirection_invalid_value>>)
        ) in
      load('signed int', a_771)
    ) in
  store('signed int', z, conv_loaded_int('signed int', a_766)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_772: loaded pointer,
      (a_773: ctype, a_774: [ctype], a_775: boolean, a_776: boolean)),
      a_781: loaded pointer, a_785: loaded integer, a_787: loaded pointer,
      a_802: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_686: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_686, cfunction(a_686)))
        ,
          let weak a_783: pointer = pure(a_782) in
          {- §6.3.2.1#3 -}
          let weak a_784: pointer = memop(PtrArrayShift, a_783, 'char', 0) in
          pure(Specified(a_784))
        ,
          let weak a_786: pointer = pure(y) in
          load('signed int', a_786)
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_794: loaded integer =
            let weak (a_788: loaded integer, a_789: loaded integer) =
              unseq(
                let weak a_793: pointer = pure(b) in
                load('signed int', a_793)
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_790: integer), Specified(a_791: integer)) =
                (a_788, a_789) in
              if conv_int('signed int', a_790) = conv_int('signed int', a_791) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_795: integer) = a_794 in
          {- §6.5.15#4, sentence 2 -}
          if a_795 = 0 then
            let weak a_797: pointer = pure(a_796) in
            {- §6.3.2.1#3 -}
            let weak a_798: pointer =
              memop(PtrArrayShift, a_797, 'char', 0) in
            pure(Specified(a_798))
          else
            let weak a_800: pointer = pure(a_799) in
            {- §6.3.2.1#3 -}
            let weak a_801: pointer =
              memop(PtrArrayShift, a_800, 'char', 0) in
            pure(Specified(a_801))
        ,
          let weak a_803: pointer = pure(z) in
          load('signed int', a_803)
        ) in
      if not(params_length(a_774) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_775) \/ not(are_compatible ('signed int', a_773)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_780: pointer =
            let a_804: ctype = params_nth(a_774, 0) in
            if not(are_compatible ('const char*', a_804)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_805: pointer = create(Ivalignof(a_804), a_804) in
              let weak _: unit = store(a_804, a_805, a_781) in
              pure(a_805) in
          let strong a_779: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_785)) in
          let strong a_778: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_787) in
          let strong a_777: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_802)) in
          let strong a_806: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_772, a_780,
            [('signed int', a_779), ('char*', a_778), ('signed int', a_777)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_780)
            ,
              kill('signed int', a_779)
            ,
              kill('char*', a_778)
            ,
              kill('signed int', a_777)
            ) in
          pure(a_806)
    ) in
  pure(Unit) ;
  kill('signed int*', p) ;
  kill('uintptr_t', i) ;
  kill('signed int*', q) ;
  kill('uintptr_t', j) ;
  kill('signed int*', r) ;
  kill('signed int', y) ;
  kill('signed int', b) ;
  kill('signed int', z) ;
  pure(Unit) ;
  save ret_685: loaded integer (a_807: loaded integer:= Specified(0)) in
    pure(a_807)

