-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_757: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  121)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc foo (a: pointer, b: pointer): eff loaded integer :=
  let strong a_787: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.15#4, sentence 1 -}
      let strong a_781: loaded integer =
        let weak (a_769: loaded integer, a_770: loaded integer) =
          unseq(
            let weak (a_774: loaded integer, a_775: loaded integer) =
              unseq(
                let weak a_779: pointer = pure(a) in
                load('intptr_t', a_779)
              ,
                let weak a_780: pointer = pure(b) in
                load('intptr_t', a_780)
              ) in
            pure(
              let (Specified(a_776: integer), Specified(a_777: integer)) =
                (a_774, a_775) in
              if conv_int('intptr_t', a_776) = conv_int('intptr_t', a_777) then
                Specified(1)
              else
                Specified(0)
            )
          ,
            pure(Specified(0))
          ) in
        pure(
          let (Specified(a_771: integer), Specified(a_772: integer)) =
            (a_769, a_770) in
          if conv_int('signed int', a_771) = conv_int('signed int', a_772) then
            Specified(1)
          else
            Specified(0)
        ) in
      let Specified(a_782: integer) = a_781 in
      {- §6.5.15#4, sentence 2 -}
      if a_782 = 0 then
        let strong a_784: loaded integer =
          let weak a_783: pointer = pure(b) in
          load('intptr_t', a_783) in
        pure(conv_loaded_int('intptr_t', a_784))
      else
        let strong a_786: loaded integer =
          let weak a_785: pointer = pure(a) in
          load('intptr_t', a_785) in
        pure(conv_loaded_int('intptr_t', a_786))
    ) in
  run ret_768(conv_loaded_int('intptr_t', a_787)) ;
  pure(Unit) ;
  save ret_768: loaded integer (a_788: loaded integer:= undef(<<UB088_reached_end_of_function>>)) in
    pure(a_788)

proc main (): eff loaded integer :=
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong y: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong b: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong a_688: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  store('signed int', x, conv_loaded_int('signed int', a_688)) ;
  let strong a_689: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  store('signed int', y, conv_loaded_int('signed int', a_689)) ;
  let strong a_690: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_691: loaded pointer =
        {- §6.5.6 -}
        let weak (a_693: loaded pointer, a_695: loaded integer) =
          unseq(
            {- §6.5.3.2#3, sentence 5 -}
            let weak a_698: pointer = pure(x) in
            pure(Specified(a_698))
          ,
            pure(Specified(1))
          ) in
        let (Specified(a_694: pointer), Specified(a_696: integer)) =
          (a_693, a_695) in
        let weak a_697: pointer =
          memop(PtrArrayShift, a_694, 'signed int', a_696) in
        pure(Specified(a_697)) in
      let Specified(a_692: pointer) = a_691 in
      let weak a_699: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_692) in
      pure(Specified(a_699))
    ) in
  store('intptr_t', a, conv_loaded_int('intptr_t', a_690)) ;
  let strong a_700: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_701: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_703: pointer = pure(y) in
        pure(Specified(a_703)) in
      let Specified(a_702: pointer) = a_701 in
      let weak a_704: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_702) in
      pure(Specified(a_704))
    ) in
  store('intptr_t', b, conv_loaded_int('intptr_t', a_700)) ;
  let strong a_705: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_707: loaded integer, a_708: loaded integer) =
        unseq(
          let weak (a_712: loaded integer, a_713: loaded integer) =
            unseq(
              let weak a_717: pointer = pure(a) in
              load('intptr_t', a_717)
            ,
              let weak a_718: pointer = pure(b) in
              load('intptr_t', a_718)
            ) in
          pure(
            let (Specified(a_714: integer), Specified(a_715: integer)) =
              (a_712, a_713) in
            if conv_int('intptr_t', a_714) = conv_int('intptr_t', a_715) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_709: integer), Specified(a_710: integer)) =
          (a_707, a_708) in
        if conv_int('signed int', a_709) = conv_int('signed int', a_710) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_687: boolean =
    let Specified(a_706: integer) = a_705 in
    pure(if not(a_706 = 1) then True else False) in
  if a_687 then
    let strong c: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
    let strong r: pointer = create(Ivalignof('signed int*'), 'signed int*') in
    let strong a_721: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_723: loaded pointer,
        (a_724: ctype, a_725: [ctype], a_726: boolean, a_727: boolean)),
        a_730: loaded integer, a_732: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_722: loaded pointer =
              pure(Specified(Cfunction(foo))) in
            pure((a_722, cfunction(a_722)))
          ,
            let weak a_731: pointer = pure(a) in
            load('intptr_t', a_731)
          ,
            let weak a_733: pointer = pure(b) in
            load('intptr_t', a_733)
          ) in
        if not(params_length(a_725) = 2) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if a_726 \/ not(are_compatible ('intptr_t', a_724)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_729: pointer =
              let a_734: ctype = params_nth(a_725, 0) in
              if not(are_compatible ('intptr_t', a_734)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_735: pointer = create(Ivalignof(a_734), a_734) in
                let weak _: unit =
                  store(a_734, a_735, conv_loaded_int(a_734, a_730)) in
                pure(a_735) in
            let strong a_728: pointer =
              let a_736: ctype = params_nth(a_725, 1) in
              if not(are_compatible ('intptr_t', a_736)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_737: pointer = create(Ivalignof(a_736), a_736) in
                let weak _: unit =
                  store(a_736, a_737, conv_loaded_int(a_736, a_732)) in
                pure(a_737) in
            let strong a_738: loaded integer =
              ccall('intptr_t (*) (intptr_t, intptr_t)', a_723, a_729, a_728) in
            let strong _: (unit,unit) =
              unseq(kill('intptr_t', a_729), kill('intptr_t', a_728)) in
            pure(a_738)
      ) in
    store('intptr_t', c, conv_loaded_int('intptr_t', a_721)) ;
    let strong a_739: loaded pointer =
      {- §6.5#2 -}
      bound(
        {- §6.5.4 -}
        let weak a_740: loaded integer =
          let weak a_742: pointer = pure(c) in
          load('intptr_t', a_742) in
        let Specified(a_741: integer) = a_740 in
        let weak a_743: pointer =
          memop(PtrFromInt, 'intptr_t', 'signed int', a_741) in
        pure(Specified(a_743))
      ) in
    store('signed int*', r, a_739) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_720: pointer, a_748: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_744: loaded pointer =
              let weak a_747: pointer = pure(r) in
              load('signed int*', a_747) in
            let Specified(a_745: pointer) = a_744 in
            let weak a_746: boolean =
              memop(PtrValidForDeref, 'signed int', a_745) in
            pure(
              if a_746 then
                a_745
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(42))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_720, conv_loaded_int('signed int', a_748))) in
        pure(conv_loaded_int('signed int', a_748))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_749: loaded pointer,
        (a_750: ctype, a_751: [ctype], a_752: boolean, a_753: boolean)),
        a_756: loaded pointer, a_760: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_719: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_719, cfunction(a_719)))
          ,
            let weak a_758: pointer = pure(a_757) in
            {- §6.3.2.1#3 -}
            let weak a_759: pointer =
              memop(PtrArrayShift, a_758, 'char', 0) in
            pure(Specified(a_759))
          ,
            let weak a_761: pointer = pure(y) in
            load('signed int', a_761)
          ) in
        if not(params_length(a_751) <= 2) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_752) \/ not(are_compatible ('signed int', a_750)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_755: pointer =
              let a_762: ctype = params_nth(a_751, 0) in
              if not(are_compatible ('const char*', a_762)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_763: pointer = create(Ivalignof(a_762), a_762) in
                let weak _: unit = store(a_762, a_763, a_756) in
                pure(a_763) in
            let strong a_754: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_760)) in
            let strong a_764: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_749, a_755,
              [('signed int', a_754)]) in
            let strong _: (unit,unit) =
              unseq(kill('char*', a_755), kill('signed int', a_754)) in
            pure(a_764)
      ) in
    pure(Unit) ;
    kill('intptr_t', c) ;
    kill('signed int*', r) ;
    pure(Unit)
  else
    pure(Unit) ;
  kill('signed int', x) ;
  kill('signed int', y) ;
  kill('intptr_t', a) ;
  kill('intptr_t', b) ;
  pure(Unit) ;
  save ret_686: loaded integer (a_765: loaded integer:= Specified(0)) in
    pure(a_765)

