-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

def struct __cerbty_unnamed_tag_824 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_828 :=
  c: 'char'
  i: 'signed int'

-- Globals
glob a_996: pointer [ail_ctype = 'char[29]'] :=
  create_readonly(Ivalignof('char[29]'), 'char[29]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 51)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 51)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_1063: pointer [ail_ctype = 'char[16]'] :=
  create_readonly(Ivalignof('char[16]'), 'char[16]', Specified(Array(Specified(conv_int('char',
  42)), Specified(conv_int('char', 112)), Specified(conv_int('char', 51)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 51)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong a: pointer = create(Ivalignof('void*'), 'void*') in
  let strong p1: pointer = create(Ivalignof('char*'), 'char*') in
  let strong p3: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong offset: pointer = create(Ivalignof('ptrdiff_t'), 'ptrdiff_t') in
  let strong q1: pointer =
    create(Ivalignof('unsigned char*'), 'unsigned char*') in
  let strong q3: pointer =
    create(Ivalignof('unsigned char*'), 'unsigned char*') in
  let strong q3i: pointer =
    create(Ivalignof('unsigned char*'), 'unsigned char*') in
  let strong r1: pointer = create(Ivalignof('char*'), 'char*') in
  let strong r3: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_846: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_848: loaded pointer,
      (a_849: ctype, a_850: [ctype], a_851: boolean, a_852: boolean)),
      a_854: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_847: loaded pointer =
            pure(Specified(Cfunction(malloc_proxy))) in
          pure((a_847, cfunction(a_847)))
        ,
          {- §6.5.5 -}
          let weak (a_855: loaded integer, a_856: loaded integer) =
            unseq(
              pure(Specified(4))
            ,
              pure(Specified(Ivsizeof('struct __cerbty_unnamed_tag_828')))
            ) in
          pure(
            let (Specified(a_857: integer), Specified(a_858: integer)) =
              (a_855, a_856) in
            Specified(wrapI('size_t',
            if all_values_representable_in('size_t', 'signed int') then
              conv_int('signed int', a_857)
            else
              conv_int('unsigned int', a_857) *
            if all_values_representable_in('size_t', 'signed int') then
              conv_int('signed int', a_858)
            else
              conv_int('unsigned int', a_858)))
          )
        ) in
      if not(params_length(a_850) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_851 \/ not(are_compatible ('void*', a_849)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_853: pointer =
            let a_860: ctype = params_nth(a_850, 0) in
            if not(are_compatible ('size_t', a_860)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_861: pointer = create(Ivalignof(a_860), a_860) in
              let weak _: unit =
                store(a_860, a_861, conv_loaded_int(a_860, a_854)) in
              pure(a_861) in
          let strong a_862: loaded pointer =
            ccall('void* (*) (size_t)', a_848, a_853) in
          kill('size_t', a_853) ;
          pure(a_862)
    ) in
  store('void*', a, a_846) ;
  let strong a_863: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_864: loaded pointer =
        {- §6.5.6 -}
        let weak (a_866: loaded pointer, a_868: loaded integer) =
          unseq(
            {- §6.5.6 -}
            let weak (a_871: loaded pointer, a_873: loaded integer) =
              unseq(
                {- §6.5.4 -}
                let weak a_876: loaded pointer =
                  let weak a_878: pointer = pure(a) in
                  load('void*', a_878) in
                let Specified(a_877: pointer) = a_876 in
                let weak a_879: boolean =
                  memop(PtrWellAligned, 'unsigned char', a_877) in
                pure(
                  Specified(if a_879 then
                    a_877
                  else
                    undef(<<UB025_misaligned_pointer_conversion>>))
                )
              ,
                {- §6.5.5 -}
                let weak (a_880: loaded integer, a_881: loaded integer) =
                  unseq(
                    pure(Specified(1))
                  ,
                    pure(Specified(Ivsizeof('signed int')))
                  ) in
                pure(
                  let (Specified(a_882: integer), Specified(a_883: integer)) =
                    (a_880, a_881) in
                  Specified(wrapI('size_t',
                  if all_values_representable_in('size_t', 'signed int') then
                    conv_int('signed int', a_882)
                  else
                    conv_int('unsigned int', a_882) *
                  if all_values_representable_in('size_t', 'signed int') then
                    conv_int('signed int', a_883)
                  else
                    conv_int('unsigned int', a_883)))
                )
              ) in
            let (Specified(a_872: pointer), Specified(a_874: integer)) =
              (a_871, a_873) in
            let weak a_875: pointer =
              memop(PtrArrayShift, a_872, 'unsigned char', a_874) in
            pure(Specified(a_875))
          ,
            pure(Specified(0))
          ) in
        let (Specified(a_867: pointer), Specified(a_869: integer)) =
          (a_866, a_868) in
        let weak a_870: pointer =
          memop(PtrArrayShift, a_867, 'unsigned char', a_869) in
        pure(Specified(a_870)) in
      let Specified(a_865: pointer) = a_864 in
      let weak a_885: boolean = memop(PtrWellAligned, 'char', a_865) in
      pure(
        Specified(if a_885 then
          a_865
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('char*', p1, a_863) ;
  let strong a_886: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_887: loaded pointer =
        {- §6.5.6 -}
        let weak (a_889: loaded pointer, a_891: loaded integer) =
          unseq(
            {- §6.5.6 -}
            let weak (a_894: loaded pointer, a_896: loaded integer) =
              unseq(
                {- §6.5.4 -}
                let weak a_899: loaded pointer =
                  let weak a_901: pointer = pure(a) in
                  load('void*', a_901) in
                let Specified(a_900: pointer) = a_899 in
                let weak a_902: boolean =
                  memop(PtrWellAligned, 'unsigned char', a_900) in
                pure(
                  Specified(if a_902 then
                    a_900
                  else
                    undef(<<UB025_misaligned_pointer_conversion>>))
                )
              ,
                {- §6.5.5 -}
                let weak (a_903: loaded integer, a_904: loaded integer) =
                  unseq(
                    pure(Specified(3))
                  ,
                    pure(Specified(Ivsizeof('signed int')))
                  ) in
                pure(
                  let (Specified(a_905: integer), Specified(a_906: integer)) =
                    (a_903, a_904) in
                  Specified(wrapI('size_t',
                  if all_values_representable_in('size_t', 'signed int') then
                    conv_int('signed int', a_905)
                  else
                    conv_int('unsigned int', a_905) *
                  if all_values_representable_in('size_t', 'signed int') then
                    conv_int('signed int', a_906)
                  else
                    conv_int('unsigned int', a_906)))
                )
              ) in
            let (Specified(a_895: pointer), Specified(a_897: integer)) =
              (a_894, a_896) in
            let weak a_898: pointer =
              memop(PtrArrayShift, a_895, 'unsigned char', a_897) in
            pure(Specified(a_898))
          ,
            pure(Specified(4))
          ) in
        let (Specified(a_890: pointer), Specified(a_892: integer)) =
          (a_889, a_891) in
        let weak a_893: pointer =
          memop(PtrArrayShift, a_890, 'unsigned char', a_892) in
        pure(Specified(a_893)) in
      let Specified(a_888: pointer) = a_887 in
      let weak a_908: boolean = memop(PtrWellAligned, 'signed int', a_888) in
      pure(
        Specified(if a_908 then
          a_888
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('signed int*', p3, a_886) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_845: pointer, a_913: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_909: loaded pointer =
            let weak a_912: pointer = pure(p1) in
            load('char*', a_912) in
          let Specified(a_910: pointer) = a_909 in
          let weak a_911: boolean = memop(PtrValidForDeref, 'char', a_910) in
          pure(
            if a_911 then
              a_910
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(97))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('char', a_845, conv_loaded_int('char', a_913))) in
      pure(conv_loaded_int('char', a_913))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_844: pointer, a_918: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_914: loaded pointer =
            let weak a_917: pointer = pure(p3) in
            load('signed int*', a_917) in
          let Specified(a_915: pointer) = a_914 in
          let weak a_916: boolean =
            memop(PtrValidForDeref, 'signed int', a_915) in
          pure(
            if a_916 then
              a_915
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(3))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_844, conv_loaded_int('signed int', a_918))) in
      pure(conv_loaded_int('signed int', a_918))
    ) in
  pure(Unit) ;
  let strong a_919: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_938: loaded pointer, a_939: loaded pointer) =
        unseq(
          {- §6.5.6 -}
          let weak (a_924: loaded pointer, a_925: loaded integer) =
            unseq(
              {- §6.5.4 -}
              let weak a_920: loaded pointer =
                let weak a_922: pointer = pure(p3) in
                load('signed int*', a_922) in
              let Specified(a_921: pointer) = a_920 in
              let weak a_923: boolean =
                memop(PtrWellAligned, 'unsigned char', a_921) in
              pure(
                Specified(if a_923 then
                  a_921
                else
                  undef(<<UB025_misaligned_pointer_conversion>>))
              )
            ,
              pure(Specified(4))
            ) in
          let (Specified(a_926: pointer), Specified(a_927: integer)) =
            (a_924, a_925) in
          let weak a_928: pointer =
            memop(PtrArrayShift, a_926, 'unsigned char', 0 - a_927) in
          pure(Specified(a_928))
        ,
          {- §6.5.6 -}
          let weak (a_933: loaded pointer, a_934: loaded integer) =
            unseq(
              {- §6.5.4 -}
              let weak a_929: loaded pointer =
                let weak a_931: pointer = pure(p1) in
                load('char*', a_931) in
              let Specified(a_930: pointer) = a_929 in
              let weak a_932: boolean =
                memop(PtrWellAligned, 'unsigned char', a_930) in
              pure(
                Specified(if a_932 then
                  a_930
                else
                  undef(<<UB025_misaligned_pointer_conversion>>))
              )
            ,
              pure(Specified(0))
            ) in
          let (Specified(a_935: pointer), Specified(a_936: integer)) =
            (a_933, a_934) in
          let weak a_937: pointer =
            memop(PtrArrayShift, a_935, 'unsigned char', 0 - a_936) in
          pure(Specified(a_937))
        ) in
      let (Specified(a_940: pointer), Specified(a_941: pointer)) =
        (a_938, a_939) in
      let weak a_942: integer =
        memop(Ptrdiff, 'unsigned char', a_940, a_941) in
      pure(
        if is_representable_integer(a_942, 'ptrdiff_t') then
          Specified(a_942)
        else
          undef(<<UB050_pointers_subtraction_not_representable>>)
      )
    ) in
  store('ptrdiff_t', offset, conv_loaded_int('ptrdiff_t', a_919)) ;
  let strong a_943: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_948: loaded pointer, a_949: loaded integer) =
        unseq(
          {- §6.5.4 -}
          let weak a_944: loaded pointer =
            let weak a_946: pointer = pure(p1) in
            load('char*', a_946) in
          let Specified(a_945: pointer) = a_944 in
          let weak a_947: boolean =
            memop(PtrWellAligned, 'unsigned char', a_945) in
          pure(
            Specified(if a_947 then
              a_945
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          )
        ,
          pure(Specified(0))
        ) in
      let (Specified(a_950: pointer), Specified(a_951: integer)) =
        (a_948, a_949) in
      let weak a_952: pointer =
        memop(PtrArrayShift, a_950, 'unsigned char', 0 - a_951) in
      pure(Specified(a_952))
    ) in
  store('unsigned char*', q1, a_943) ;
  let strong a_953: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_954: loaded pointer, a_956: loaded integer) =
        unseq(
          {- §6.5.6 -}
          let weak (a_963: loaded pointer, a_964: loaded integer) =
            unseq(
              {- §6.5.4 -}
              let weak a_959: loaded pointer =
                let weak a_961: pointer = pure(p1) in
                load('char*', a_961) in
              let Specified(a_960: pointer) = a_959 in
              let weak a_962: boolean =
                memop(PtrWellAligned, 'unsigned char', a_960) in
              pure(
                Specified(if a_962 then
                  a_960
                else
                  undef(<<UB025_misaligned_pointer_conversion>>))
              )
            ,
              pure(Specified(0))
            ) in
          let (Specified(a_965: pointer), Specified(a_966: integer)) =
            (a_963, a_964) in
          let weak a_967: pointer =
            memop(PtrArrayShift, a_965, 'unsigned char', 0 - a_966) in
          pure(Specified(a_967))
        ,
          let weak a_968: pointer = pure(offset) in
          load('ptrdiff_t', a_968)
        ) in
      let (Specified(a_955: pointer), Specified(a_957: integer)) =
        (a_954, a_956) in
      let weak a_958: pointer =
        memop(PtrArrayShift, a_955, 'unsigned char', a_957) in
      pure(Specified(a_958))
    ) in
  store('unsigned char*', q3, a_953) ;
  let strong a_969: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_970: loaded pointer, a_972: loaded integer) =
        unseq(
          let weak a_975: pointer = pure(q3) in
          load('unsigned char*', a_975)
        ,
          pure(Specified(4))
        ) in
      let (Specified(a_971: pointer), Specified(a_973: integer)) =
        (a_970, a_972) in
      let weak a_974: pointer =
        memop(PtrArrayShift, a_971, 'unsigned char', a_973) in
      pure(Specified(a_974))
    ) in
  store('unsigned char*', q3i, a_969) ;
  let strong a_976: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_977: loaded pointer =
        let weak a_979: pointer = pure(q1) in
        load('unsigned char*', a_979) in
      let Specified(a_978: pointer) = a_977 in
      let weak a_980: boolean = memop(PtrWellAligned, 'char', a_978) in
      pure(
        Specified(if a_980 then
          a_978
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('char*', r1, a_976) ;
  let strong a_981: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_982: loaded pointer =
        let weak a_984: pointer = pure(q3i) in
        load('unsigned char*', a_984) in
      let Specified(a_983: pointer) = a_982 in
      let weak a_985: boolean = memop(PtrWellAligned, 'signed int', a_983) in
      pure(
        Specified(if a_985 then
          a_983
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('signed int*', r3, a_981) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_986: loaded pointer,
      (a_987: ctype, a_988: [ctype], a_989: boolean, a_990: boolean)),
      a_995: loaded pointer, a_999: loaded pointer, a_1001: loaded pointer,
      a_1006: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_843: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_843, cfunction(a_843)))
        ,
          let weak a_997: pointer = pure(a_996) in
          {- §6.3.2.1#3 -}
          let weak a_998: pointer = memop(PtrArrayShift, a_997, 'char', 0) in
          pure(Specified(a_998))
        ,
          let weak a_1000: pointer = pure(a) in
          load('void*', a_1000)
        ,
          {- §6.5.4 -}
          let weak a_1004: pointer = pure(p3) in
          load('signed int*', a_1004)
        ,
          {- §6.5.4 -}
          let weak a_1009: pointer = pure(r3) in
          load('signed int*', a_1009)
        ) in
      if not(params_length(a_988) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_989) \/ not(are_compatible ('signed int', a_987)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_994: pointer =
            let a_1011: ctype = params_nth(a_988, 0) in
            if not(are_compatible ('const char*', a_1011)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_1012: pointer = create(Ivalignof(a_1011), a_1011) in
              let weak _: unit = store(a_1011, a_1012, a_995) in
              pure(a_1012) in
          let strong a_993: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_999) in
          let strong a_992: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_1001) in
          let strong a_991: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_1006) in
          let strong a_1013: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_986, a_994,
            [('void*', a_993), ('void*', a_992), ('void*', a_991)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_994)
            ,
              kill('void*', a_993)
            ,
              kill('void*', a_992)
            ,
              kill('void*', a_991)
            ) in
          pure(a_1013)
    ) in
  pure(Unit) ;
  let strong a_1014: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_1016: loaded integer, a_1017: loaded integer) =
        unseq(
          let weak (a_1021: loaded integer, a_1022: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_1027: loaded pointer,
              (a_1028: ctype, a_1029: [ctype], a_1030: boolean,
              a_1031: boolean)), a_1035: loaded pointer,
              a_1037: loaded pointer, a_1039: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_1026: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_1026, cfunction(a_1026)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_1036: pointer = pure(p3) in
                  pure(Specified(a_1036))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_1038: pointer = pure(r3) in
                  pure(Specified(a_1038))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_1029) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_1030 \/ not(are_compatible ('signed int', a_1028)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_1034: pointer =
                    let a_1040: ctype = params_nth(a_1029, 0) in
                    if not(are_compatible ('const void*', a_1040)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_1041: pointer =
                        create(Ivalignof(a_1040), a_1040) in
                      let weak _: unit = store(a_1040, a_1041, a_1035) in
                      pure(a_1041) in
                  let strong a_1033: pointer =
                    let a_1042: ctype = params_nth(a_1029, 1) in
                    if not(are_compatible ('const void*', a_1042)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_1043: pointer =
                        create(Ivalignof(a_1042), a_1042) in
                      let weak _: unit = store(a_1042, a_1043, a_1037) in
                      pure(a_1043) in
                  let strong a_1032: pointer =
                    let a_1044: ctype = params_nth(a_1029, 2) in
                    if not(are_compatible ('size_t', a_1044)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_1045: pointer =
                        create(Ivalignof(a_1044), a_1044) in
                      let weak _: unit =
                        store(a_1044, a_1045, conv_loaded_int(a_1044, a_1039)) in
                      pure(a_1045) in
                  let strong a_1046: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_1027, a_1034, a_1033, a_1032) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_1034)
                    ,
                      kill('void*', a_1033)
                    ,
                      kill('size_t', a_1032)
                    ) in
                  pure(a_1046)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_1023: integer), Specified(a_1024: integer)) =
              (a_1021, a_1022) in
            if conv_int('signed int', a_1023) = conv_int('signed int', a_1024) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_1018: integer), Specified(a_1019: integer)) =
          (a_1016, a_1017) in
        if conv_int('signed int', a_1018) = conv_int('signed int', a_1019) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_842: boolean =
    let Specified(a_1015: integer) = a_1014 in
    pure(if not(a_1015 = 1) then True else False) in
  if a_842 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_1048: pointer, a_1053: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_1049: loaded pointer =
              let weak a_1052: pointer = pure(r3) in
              load('signed int*', a_1052) in
            let Specified(a_1050: pointer) = a_1049 in
            let weak a_1051: boolean =
              memop(PtrValidForDeref, 'signed int', a_1050) in
            pure(
              if a_1051 then
                a_1050
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(33))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_1048,
          conv_loaded_int('signed int', a_1053))) in
        pure(conv_loaded_int('signed int', a_1053))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_1054: loaded pointer,
        (a_1055: ctype, a_1056: [ctype], a_1057: boolean, a_1058: boolean)),
        a_1062: loaded pointer, a_1066: loaded integer, a_1072: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_1047: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_1047, cfunction(a_1047)))
          ,
            let weak a_1064: pointer = pure(a_1063) in
            {- §6.3.2.1#3 -}
            let weak a_1065: pointer =
              memop(PtrArrayShift, a_1064, 'char', 0) in
            pure(Specified(a_1065))
          ,
            let weak a_1071: pointer =
              {- §6.5.3.2 -}
              let weak a_1067: loaded pointer =
                let weak a_1070: pointer = pure(p3) in
                load('signed int*', a_1070) in
              let Specified(a_1068: pointer) = a_1067 in
              let weak a_1069: boolean =
                memop(PtrValidForDeref, 'signed int', a_1068) in
              pure(
                if a_1069 then
                  a_1068
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_1071)
          ,
            let weak a_1077: pointer =
              {- §6.5.3.2 -}
              let weak a_1073: loaded pointer =
                let weak a_1076: pointer = pure(r3) in
                load('signed int*', a_1076) in
              let Specified(a_1074: pointer) = a_1073 in
              let weak a_1075: boolean =
                memop(PtrValidForDeref, 'signed int', a_1074) in
              pure(
                if a_1075 then
                  a_1074
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_1077)
          ) in
        if not(params_length(a_1056) <= 3) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_1057) \/ not(are_compatible ('signed int', a_1055)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_1061: pointer =
              let a_1078: ctype = params_nth(a_1056, 0) in
              if not(are_compatible ('const char*', a_1078)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_1079: pointer =
                  create(Ivalignof(a_1078), a_1078) in
                let weak _: unit = store(a_1078, a_1079, a_1062) in
                pure(a_1079) in
            let strong a_1060: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1066)) in
            let strong a_1059: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1072)) in
            let strong a_1080: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_1054,
              a_1061, [('signed int', a_1060), ('signed int', a_1059)]) in
            let strong _: (unit,unit,unit) =
              unseq(
                kill('char*', a_1061)
              ,
                kill('signed int', a_1060)
              ,
                kill('signed int', a_1059)
              ) in
            pure(a_1080)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  let strong a_1081: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  kill('void*', a) ;
  kill('char*', p1) ;
  kill('signed int*', p3) ;
  kill('ptrdiff_t', offset) ;
  kill('unsigned ichar*', q1) ;
  kill('unsigned ichar*', q3) ;
  kill('unsigned ichar*', q3i) ;
  kill('char*', r1) ;
  kill('signed int*', r3) ;
  run ret_841(conv_loaded_int('signed int', a_1081)) ;
  kill('void*', a) ;
  kill('char*', p1) ;
  kill('signed int*', p3) ;
  kill('ptrdiff_t', offset) ;
  kill('unsigned ichar*', q1) ;
  kill('unsigned ichar*', q3) ;
  kill('unsigned ichar*', q3i) ;
  kill('char*', r1) ;
  kill('signed int*', r3) ;
  pure(Unit) ;
  save ret_841: loaded integer (a_1082: loaded integer:= Specified(0)) in
    pure(a_1082)

