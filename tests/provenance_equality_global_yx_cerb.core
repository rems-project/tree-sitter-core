-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_842: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_843: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', a_842, conv_loaded_int('signed int', a_843)) ;
  pure(a_842)

glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_840: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_841: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_840, conv_loaded_int('signed int', a_841)) ;
  pure(a_840)

glob a_752: pointer [ail_ctype = 'char[22]'] :=
  create_readonly(Ivalignof('char[22]'), 'char[22]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_818: pointer [ail_ctype = 'char[13]'] :=
  create_readonly(Ivalignof('char[13]'), 'char[13]', Specified(Array(Specified(conv_int('char',
  40)), Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_830: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_833: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_734: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_735: loaded pointer, a_737: loaded integer) =
        unseq(
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_740: pointer = pure(x) in
          pure(Specified(a_740))
        ,
          pure(Specified(1))
        ) in
      let (Specified(a_736: pointer), Specified(a_738: integer)) =
        (a_735, a_737) in
      let weak a_739: pointer =
        memop(PtrArrayShift, a_736, 'signed int', a_738) in
      pure(Specified(a_739))
    ) in
  store('signed int*', p, a_734) ;
  let strong a_741: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_742: pointer = pure(y) in
      pure(Specified(a_742))
    ) in
  store('signed int*', q, a_741) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_743: loaded pointer,
      (a_744: ctype, a_745: [ctype], a_746: boolean, a_747: boolean)),
      a_751: loaded pointer, a_755: loaded pointer, a_760: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_733: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_733, cfunction(a_733)))
        ,
          let weak a_753: pointer = pure(a_752) in
          {- §6.3.2.1#3 -}
          let weak a_754: pointer = memop(PtrArrayShift, a_753, 'char', 0) in
          pure(Specified(a_754))
        ,
          {- §6.5.4 -}
          let weak a_758: pointer = pure(p) in
          load('signed int*', a_758)
        ,
          {- §6.5.4 -}
          let weak a_763: pointer = pure(q) in
          load('signed int*', a_763)
        ) in
      if not(params_length(a_745) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_746) \/ not(are_compatible ('signed int', a_744)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_750: pointer =
            let a_765: ctype = params_nth(a_745, 0) in
            if not(are_compatible ('const char*', a_765)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_766: pointer = create(Ivalignof(a_765), a_765) in
              let weak _: unit = store(a_765, a_766, a_751) in
              pure(a_766) in
          let strong a_749: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_755) in
          let strong a_748: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_760) in
          let strong a_767: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_743, a_750,
            [('void*', a_749), ('void*', a_748)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_750)
            ,
              kill('void*', a_749)
            ,
              kill('void*', a_748)
            ) in
          pure(a_767)
    ) in
  pure(Unit) ;
  let strong a_768: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_770: loaded integer, a_771: loaded integer) =
        unseq(
          let weak (a_775: loaded integer, a_776: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_781: loaded pointer,
              (a_782: ctype, a_783: [ctype], a_784: boolean, a_785: boolean)),
              a_789: loaded pointer, a_791: loaded pointer,
              a_793: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_780: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_780, cfunction(a_780)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_790: pointer = pure(p) in
                  pure(Specified(a_790))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_792: pointer = pure(q) in
                  pure(Specified(a_792))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_783) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_784 \/ not(are_compatible ('signed int', a_782)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_788: pointer =
                    let a_794: ctype = params_nth(a_783, 0) in
                    if not(are_compatible ('const void*', a_794)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_795: pointer =
                        create(Ivalignof(a_794), a_794) in
                      let weak _: unit = store(a_794, a_795, a_789) in
                      pure(a_795) in
                  let strong a_787: pointer =
                    let a_796: ctype = params_nth(a_783, 1) in
                    if not(are_compatible ('const void*', a_796)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_797: pointer =
                        create(Ivalignof(a_796), a_796) in
                      let weak _: unit = store(a_796, a_797, a_791) in
                      pure(a_797) in
                  let strong a_786: pointer =
                    let a_798: ctype = params_nth(a_783, 2) in
                    if not(are_compatible ('size_t', a_798)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_799: pointer =
                        create(Ivalignof(a_798), a_798) in
                      let weak _: unit =
                        store(a_798, a_799, conv_loaded_int(a_798, a_793)) in
                      pure(a_799) in
                  let strong a_800: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_781, a_788, a_787, a_786) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_788)
                    ,
                      kill('void*', a_787)
                    ,
                      kill('size_t', a_786)
                    ) in
                  pure(a_800)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_777: integer), Specified(a_778: integer)) =
              (a_775, a_776) in
            if conv_int('signed int', a_777) = conv_int('signed int', a_778) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_772: integer), Specified(a_773: integer)) =
          (a_770, a_771) in
        if conv_int('signed int', a_772) = conv_int('signed int', a_773) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_732: boolean =
    let Specified(a_769: integer) = a_768 in
    pure(if not(a_769 = 1) then True else False) in
  if a_732 then
    let strong b: pointer = create(Ivalignof('_Bool'), '_Bool') in
    let strong a_802: loaded integer =
      {- §6.5#2 -}
      bound(
        let weak (a_803: loaded pointer, a_804: loaded pointer) =
          unseq(
            let weak a_808: pointer = pure(p) in
            load('signed int*', a_808)
          ,
            let weak a_809: pointer = pure(q) in
            load('signed int*', a_809)
          ) in
        let (Specified(a_805: pointer), Specified(a_806: pointer)) =
          (a_803, a_804) in
        let weak a_807: boolean = memop(PtrEq, a_805, a_806) in
        pure(if a_807 then Specified(1) else Specified(0))
      ) in
    store('_Bool', b, conv_loaded_int('_Bool', a_802)) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_810: loaded pointer,
        (a_811: ctype, a_812: [ctype], a_813: boolean, a_814: boolean)),
        a_817: loaded pointer, a_821: loaded pointer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_801: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_801, cfunction(a_801)))
          ,
            let weak a_819: pointer = pure(a_818) in
            {- §6.3.2.1#3 -}
            let weak a_820: pointer =
              memop(PtrArrayShift, a_819, 'char', 0) in
            pure(Specified(a_820))
          ,
            {- §6.5.15#4, sentence 1 -}
            let strong a_828: loaded integer =
              let weak (a_822: loaded integer, a_823: loaded integer) =
                unseq(
                  let weak a_827: pointer = pure(b) in
                  load('_Bool', a_827)
                ,
                  pure(Specified(0))
                ) in
              pure(
                let (Specified(a_824: integer), Specified(a_825: integer)) =
                  (a_822, a_823) in
                if conv_int('signed int', a_824) =
                conv_int('signed int', a_825) then
                  Specified(1)
                else
                  Specified(0)
              ) in
            let Specified(a_829: integer) = a_828 in
            {- §6.5.15#4, sentence 2 -}
            if a_829 = 0 then
              let weak a_831: pointer = pure(a_830) in
              {- §6.3.2.1#3 -}
              let weak a_832: pointer =
                memop(PtrArrayShift, a_831, 'char', 0) in
              pure(Specified(a_832))
            else
              let weak a_834: pointer = pure(a_833) in
              {- §6.3.2.1#3 -}
              let weak a_835: pointer =
                memop(PtrArrayShift, a_834, 'char', 0) in
              pure(Specified(a_835))
          ) in
        if not(params_length(a_812) <= 2) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_813) \/ not(are_compatible ('signed int', a_811)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_816: pointer =
              let a_836: ctype = params_nth(a_812, 0) in
              if not(are_compatible ('const char*', a_836)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_837: pointer = create(Ivalignof(a_836), a_836) in
                let weak _: unit = store(a_836, a_837, a_817) in
                pure(a_837) in
            let strong a_815: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'char*', a_821) in
            let strong a_838: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_810, a_816,
              [('char*', a_815)]) in
            let strong _: (unit,unit) =
              unseq(kill('char*', a_816), kill('char*', a_815)) in
            pure(a_838)
      ) in
    pure(Unit) ;
    kill('_Bool', b) ;
    pure(Unit)
  else
    pure(Unit) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_731: loaded integer (a_839: loaded integer:= Specified(0)) in
    pure(a_839)

