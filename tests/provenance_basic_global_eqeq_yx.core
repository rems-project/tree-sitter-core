-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_809: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_810: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', a_809, conv_loaded_int('signed int', a_810)) ;
  pure(a_809)

glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_807: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_808: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_807, conv_loaded_int('signed int', a_808)) ;
  pure(a_807)

glob a_752: pointer [ail_ctype = 'char[22]'] :=
  create_readonly(Ivalignof('char[22]'), 'char[22]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_784: pointer [ail_ctype = 'char[23]'] :=
  create_readonly(Ivalignof('char[23]'), 'char[23]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_734: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_735: loaded pointer, a_737: loaded integer) =
        unseq(
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_740: pointer = pure(x) in
          pure(Specified(a_740))
        ,
          pure(Specified(1))
        ) in
      let (Specified(a_736: pointer), Specified(a_738: integer)) =
        (a_735, a_737) in
      let weak a_739: pointer =
        memop(PtrArrayShift, a_736, 'signed int', a_738) in
      pure(Specified(a_739))
    ) in
  store('signed int*', p, a_734) ;
  let strong a_741: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_742: pointer = pure(y) in
      pure(Specified(a_742))
    ) in
  store('signed int*', q, a_741) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_743: loaded pointer,
      (a_744: ctype, a_745: [ctype], a_746: boolean, a_747: boolean)),
      a_751: loaded pointer, a_755: loaded pointer, a_760: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_733: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_733, cfunction(a_733)))
        ,
          let weak a_753: pointer = pure(a_752) in
          {- §6.3.2.1#3 -}
          let weak a_754: pointer = memop(PtrArrayShift, a_753, 'char', 0) in
          pure(Specified(a_754))
        ,
          {- §6.5.4 -}
          let weak a_758: pointer = pure(p) in
          load('signed int*', a_758)
        ,
          {- §6.5.4 -}
          let weak a_763: pointer = pure(q) in
          load('signed int*', a_763)
        ) in
      if not(params_length(a_745) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_746) \/ not(are_compatible ('signed int', a_744)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_750: pointer =
            let a_765: ctype = params_nth(a_745, 0) in
            if not(are_compatible ('const char*', a_765)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_766: pointer = create(Ivalignof(a_765), a_765) in
              let weak _: unit = store(a_765, a_766, a_751) in
              pure(a_766) in
          let strong a_749: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_755) in
          let strong a_748: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_760) in
          let strong a_767: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_743, a_750,
            [('void*', a_749), ('void*', a_748)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_750)
            ,
              kill('void*', a_749)
            ,
              kill('void*', a_748)
            ) in
          pure(a_767)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_732: pointer, a_772: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_768: loaded pointer =
            let weak a_771: pointer = pure(p) in
            load('signed int*', a_771) in
          let Specified(a_769: pointer) = a_768 in
          let weak a_770: boolean =
            memop(PtrValidForDeref, 'signed int', a_769) in
          pure(
            if a_770 then
              a_769
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(11))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_732, conv_loaded_int('signed int', a_772))) in
      pure(conv_loaded_int('signed int', a_772))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_773: loaded pointer,
      (a_774: ctype, a_775: [ctype], a_776: boolean, a_777: boolean)),
      a_783: loaded pointer, a_787: loaded integer, a_789: loaded integer,
      a_791: loaded integer, a_797: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_731: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_731, cfunction(a_731)))
        ,
          let weak a_785: pointer = pure(a_784) in
          {- §6.3.2.1#3 -}
          let weak a_786: pointer = memop(PtrArrayShift, a_785, 'char', 0) in
          pure(Specified(a_786))
        ,
          let weak a_788: pointer = pure(x) in
          load('signed int', a_788)
        ,
          let weak a_790: pointer = pure(y) in
          load('signed int', a_790)
        ,
          let weak a_796: pointer =
            {- §6.5.3.2 -}
            let weak a_792: loaded pointer =
              let weak a_795: pointer = pure(p) in
              load('signed int*', a_795) in
            let Specified(a_793: pointer) = a_792 in
            let weak a_794: boolean =
              memop(PtrValidForDeref, 'signed int', a_793) in
            pure(
              if a_794 then
                a_793
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_796)
        ,
          let weak a_802: pointer =
            {- §6.5.3.2 -}
            let weak a_798: loaded pointer =
              let weak a_801: pointer = pure(q) in
              load('signed int*', a_801) in
            let Specified(a_799: pointer) = a_798 in
            let weak a_800: boolean =
              memop(PtrValidForDeref, 'signed int', a_799) in
            pure(
              if a_800 then
                a_799
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_802)
        ) in
      if not(params_length(a_775) <= 5) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_776) \/ not(are_compatible ('signed int', a_774)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_782: pointer =
            let a_803: ctype = params_nth(a_775, 0) in
            if not(are_compatible ('const char*', a_803)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_804: pointer = create(Ivalignof(a_803), a_803) in
              let weak _: unit = store(a_803, a_804, a_783) in
              pure(a_804) in
          let strong a_781: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_787)) in
          let strong a_780: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_789)) in
          let strong a_779: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_791)) in
          let strong a_778: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_797)) in
          let strong a_805: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_773, a_782,
            [('signed int', a_781), ('signed int', a_780),
            ('signed int', a_779), ('signed int', a_778)]) in
          let strong _: (unit,unit,unit,unit,unit) =
            unseq(
              kill('char*', a_782)
            ,
              kill('signed int', a_781)
            ,
              kill('signed int', a_780)
            ,
              kill('signed int', a_779)
            ,
              kill('signed int', a_778)
            ) in
          pure(a_805)
    ) in
  pure(Unit) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_730: loaded integer (a_806: loaded integer:= Specified(0)) in
    pure(a_806)

