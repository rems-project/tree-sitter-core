-- Aggregates
def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('void*'), 'void*') in
  let strong b: pointer = create(Ivalignof('_Bool'), '_Bool') in
  let strong a_607: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_609: loaded pointer,
      (a_610: ctype, a_611: [ctype], a_612: boolean, a_613: boolean)),
      a_615: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_608: loaded pointer =
            pure(Specified(Cfunction(malloc_proxy))) in
          pure((a_608, cfunction(a_608)))
        ,
          pure(Specified(Ivsizeof('signed int')))
        ) in
      if not(params_length(a_611) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_612 \/ not(are_compatible ('void*', a_610)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_614: pointer =
            let a_616: ctype = params_nth(a_611, 0) in
            if not(are_compatible ('size_t', a_616)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_617: pointer = create(Ivalignof(a_616), a_616) in
              let weak _: unit =
                store(a_616, a_617, conv_loaded_int(a_616, a_615)) in
              pure(a_617) in
          let strong a_618: loaded pointer =
            ccall('void* (*) (size_t)', a_609, a_614) in
          kill('size_t', a_614) ;
          pure(a_618)
    ) in
  store('void*', p, a_607) ;
  let strong a_619: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_620: loaded pointer, a_621: loaded pointer) =
        unseq(
          let weak a_625: pointer = pure(p) in
          load('void*', a_625)
        ,
          {- §6.5.4 -}
          let weak a_626: loaded integer =
            {- §6.5.3.3#3 -}
            let weak a_629: loaded integer = pure(Specified(1)) in
            pure(
              let Specified(a_628: integer) = a_629 in
              Specified(catch_exceptional_condition('signed int',
              0 - conv_int('signed int', a_628)))
            ) in
          let Specified(a_627: integer) = a_626 in
          let weak a_630: pointer =
            memop(PtrFromInt, 'signed int', 'void', a_627) in
          pure(Specified(a_630))
        ) in
      let (Specified(a_622: pointer), Specified(a_623: pointer)) =
        (a_620, a_621) in
      let weak a_624: boolean = memop(PtrEq, a_622, a_623) in
      pure(if a_624 then Specified(1) else Specified(0))
    ) in
  store('_Bool', b, conv_loaded_int('_Bool', a_619)) ;
  kill('void*', p) ;
  kill('_Bool', b) ;
  pure(Unit) ;
  save ret_606: loaded integer (a_631: loaded integer:= Specified(0)) in
    pure(a_631)

