-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_726 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_758 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob a_824: pointer [ail_ctype = 'char[11]'] :=
  create_readonly(Ivalignof('char[11]'), 'char[11]', Specified(Array(Specified(conv_int('char',
  40)), Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_836: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_839: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong b: pointer = create(Ivalignof('_Bool'), '_Bool') in
  let strong a_784: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', x, conv_loaded_int('signed int', a_784)) ;
  let strong a_785: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_786: pointer = pure(x) in
      pure(Specified(a_786))
    ) in
  store('signed int*', p, a_785) ;
  let strong a_787: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_788: pointer = pure(x) in
      pure(Specified(a_788))
    ) in
  store('signed int*', q, a_787) ;
  let strong a_789: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_790: loaded integer, a_791: loaded integer) =
        unseq(
          pure(Specified(0))
        ,
          {- §6.5.2.2#10, sentence 1 -}
          let strong ((a_796: loaded pointer,
          (a_797: ctype, a_798: [ctype], a_799: boolean, a_800: boolean)),
          a_804: loaded pointer, a_806: loaded pointer, a_808: loaded integer) =
            {- §6.5.2.2#4, sentence 2 -}
            unseq(
              let strong a_795: loaded pointer =
                pure(Specified(Cfunction(memcmp_proxy))) in
              pure((a_795, cfunction(a_795)))
            ,
              {- §6.5.3.2#3, sentence 5 -}
              let weak a_805: pointer = pure(p) in
              pure(Specified(a_805))
            ,
              {- §6.5.3.2#3, sentence 5 -}
              let weak a_807: pointer = pure(q) in
              pure(Specified(a_807))
            ,
              pure(Specified(Ivsizeof('signed int*')))
            ) in
          if not(params_length(a_798) = 3) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_799 \/ not(are_compatible ('signed int', a_797)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_803: pointer =
                let a_809: ctype = params_nth(a_798, 0) in
                if not(are_compatible ('const void*', a_809)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {- §6.5.2.2#7, sentence 1 -}
                  let weak a_810: pointer = create(Ivalignof(a_809), a_809) in
                  let weak _: unit = store(a_809, a_810, a_804) in
                  pure(a_810) in
              let strong a_802: pointer =
                let a_811: ctype = params_nth(a_798, 1) in
                if not(are_compatible ('const void*', a_811)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {- §6.5.2.2#7, sentence 1 -}
                  let weak a_812: pointer = create(Ivalignof(a_811), a_811) in
                  let weak _: unit = store(a_811, a_812, a_806) in
                  pure(a_812) in
              let strong a_801: pointer =
                let a_813: ctype = params_nth(a_798, 2) in
                if not(are_compatible ('size_t', a_813)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {- §6.5.2.2#7, sentence 1 -}
                  let weak a_814: pointer = create(Ivalignof(a_813), a_813) in
                  let weak _: unit =
                    store(a_813, a_814, conv_loaded_int(a_813, a_808)) in
                  pure(a_814) in
              let strong a_815: loaded integer =
                ccall('signed int (*) (const void*, const void*, size_t)',
                a_796, a_803, a_802, a_801) in
              let strong _: (unit,unit,unit) =
                unseq(
                  kill('void*', a_803)
                ,
                  kill('void*', a_802)
                ,
                  kill('size_t', a_801)
                ) in
              pure(a_815)
        ) in
      pure(
        let (Specified(a_792: integer), Specified(a_793: integer)) =
          (a_790, a_791) in
        if conv_int('signed int', a_792) = conv_int('signed int', a_793) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  store('_Bool', b, conv_loaded_int('_Bool', a_789)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_816: loaded pointer,
      (a_817: ctype, a_818: [ctype], a_819: boolean, a_820: boolean)),
      a_823: loaded pointer, a_827: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_783: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_783, cfunction(a_783)))
        ,
          let weak a_825: pointer = pure(a_824) in
          {- §6.3.2.1#3 -}
          let weak a_826: pointer = memop(PtrArrayShift, a_825, 'char', 0) in
          pure(Specified(a_826))
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_834: loaded integer =
            let weak (a_828: loaded integer, a_829: loaded integer) =
              unseq(
                let weak a_833: pointer = pure(b) in
                load('_Bool', a_833)
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_830: integer), Specified(a_831: integer)) =
                (a_828, a_829) in
              if conv_int('signed int', a_830) = conv_int('signed int', a_831) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_835: integer) = a_834 in
          {- §6.5.15#4, sentence 2 -}
          if a_835 = 0 then
            let weak a_837: pointer = pure(a_836) in
            {- §6.3.2.1#3 -}
            let weak a_838: pointer =
              memop(PtrArrayShift, a_837, 'char', 0) in
            pure(Specified(a_838))
          else
            let weak a_840: pointer = pure(a_839) in
            {- §6.3.2.1#3 -}
            let weak a_841: pointer =
              memop(PtrArrayShift, a_840, 'char', 0) in
            pure(Specified(a_841))
        ) in
      if not(params_length(a_818) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_819) \/ not(are_compatible ('signed int', a_817)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_822: pointer =
            let a_842: ctype = params_nth(a_818, 0) in
            if not(are_compatible ('const char*', a_842)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_843: pointer = create(Ivalignof(a_842), a_842) in
              let weak _: unit = store(a_842, a_843, a_823) in
              pure(a_843) in
          let strong a_821: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_827) in
          let strong a_844: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_816, a_822,
            [('char*', a_821)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_822), kill('char*', a_821)) in
          pure(a_844)
    ) in
  pure(Unit) ;
  let strong a_845: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  kill('signed int', x) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  kill('_Bool', b) ;
  run ret_782(conv_loaded_int('signed int', a_845)) ;
  kill('signed int', x) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  kill('_Bool', b) ;
  pure(Unit) ;
  save ret_782: loaded integer (a_846: loaded integer:= Specified(0)) in
    pure(a_846)

