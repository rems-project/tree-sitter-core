-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_648 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_680 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob a_735: pointer [ail_ctype = 'char[21]'] :=
  create_readonly(Ivalignof('char[21]'), 'char[21]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong px: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong ql: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_707: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  store('signed int', x, conv_loaded_int('signed int', a_707)) ;
  let strong a_708: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_709: pointer = pure(x) in
      pure(Specified(a_709))
    ) in
  store('signed int*', px, a_708) ;
  let strong a_710: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_711: loaded pointer =
        let weak a_713: pointer = pure(px) in
        load('signed int*', a_713) in
      let Specified(a_712: pointer) = a_711 in
      let weak a_714: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_712) in
      pure(Specified(a_714))
    ) in
  store('uintptr_t', ql, conv_loaded_int('uintptr_t', a_710)) ;
  let strong a_715: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_716: loaded integer =
        let weak a_718: pointer = pure(ql) in
        load('uintptr_t', a_718) in
      let Specified(a_717: integer) = a_716 in
      let weak a_719: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_717) in
      pure(Specified(a_719))
    ) in
  store('signed int*', q, a_715) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_706: pointer, a_724: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_720: loaded pointer =
            let weak a_723: pointer = pure(q) in
            load('signed int*', a_723) in
          let Specified(a_721: pointer) = a_720 in
          let weak a_722: boolean =
            memop(PtrValidForDeref, 'signed int', a_721) in
          pure(
            if a_722 then
              a_721
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(1))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_706, conv_loaded_int('signed int', a_724))) in
      pure(conv_loaded_int('signed int', a_724))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_725: loaded pointer,
      (a_726: ctype, a_727: [ctype], a_728: boolean, a_729: boolean)),
      a_734: loaded pointer, a_738: loaded integer, a_740: loaded integer,
      a_746: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_705: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_705, cfunction(a_705)))
        ,
          let weak a_736: pointer = pure(a_735) in
          {- §6.3.2.1#3 -}
          let weak a_737: pointer = memop(PtrArrayShift, a_736, 'char', 0) in
          pure(Specified(a_737))
        ,
          let weak a_739: pointer = pure(x) in
          load('signed int', a_739)
        ,
          let weak a_745: pointer =
            {- §6.5.3.2 -}
            let weak a_741: loaded pointer =
              let weak a_744: pointer = pure(px) in
              load('signed int*', a_744) in
            let Specified(a_742: pointer) = a_741 in
            let weak a_743: boolean =
              memop(PtrValidForDeref, 'signed int', a_742) in
            pure(
              if a_743 then
                a_742
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_745)
        ,
          let weak a_751: pointer =
            {- §6.5.3.2 -}
            let weak a_747: loaded pointer =
              let weak a_750: pointer = pure(q) in
              load('signed int*', a_750) in
            let Specified(a_748: pointer) = a_747 in
            let weak a_749: boolean =
              memop(PtrValidForDeref, 'signed int', a_748) in
            pure(
              if a_749 then
                a_748
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_751)
        ) in
      if not(params_length(a_727) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_728) \/ not(are_compatible ('signed int', a_726)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_733: pointer =
            let a_752: ctype = params_nth(a_727, 0) in
            if not(are_compatible ('const char*', a_752)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_753: pointer = create(Ivalignof(a_752), a_752) in
              let weak _: unit = store(a_752, a_753, a_734) in
              pure(a_753) in
          let strong a_732: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_738)) in
          let strong a_731: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_740)) in
          let strong a_730: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_746)) in
          let strong a_754: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_725, a_733,
            [('signed int', a_732), ('signed int', a_731),
            ('signed int', a_730)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_733)
            ,
              kill('signed int', a_732)
            ,
              kill('signed int', a_731)
            ,
              kill('signed int', a_730)
            ) in
          pure(a_754)
    ) in
  pure(Unit) ;
  kill('signed int', x) ;
  kill('signed int*', px) ;
  kill('uintptr_t', ql) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_704: loaded integer (a_755: loaded integer:= Specified(0)) in
    pure(a_755)

