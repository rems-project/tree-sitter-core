-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_648 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_680 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob a_748: pointer [ail_ctype = 'char[9]'] :=
  create_readonly(Ivalignof('char[9]'), 'char[9]', Specified(Array(Specified(conv_int('char',
  97)), Specified(conv_int('char', 91)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 93)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong a: pointer =
    create(Ivalignof('signed int[2]'), 'signed int[2]') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong i: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong j: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  {- §6.2.4#6 -}
  store('signed int[2]', a, Unspecified('signed int[2]')) ;
  let strong a_710: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      {- §6.5.3.2#3, sentence 3 -}
      let weak (a_711: loaded pointer, a_713: loaded integer) =
        unseq(
          let weak a_716: pointer = pure(a) in
          {- §6.3.2.1#3 -}
          let weak a_717: pointer =
            memop(PtrArrayShift, a_716, 'signed int', 0) in
          pure(Specified(a_717))
        ,
          pure(Specified(0))
        ) in
      let (Specified(a_712: pointer), Specified(a_714: integer)) =
        (a_711, a_713) in
      let weak a_715: pointer =
        memop(PtrArrayShift, a_712, 'signed int', a_714) in
      pure(Specified(a_715))
    ) in
  store('signed int*', p, a_710) ;
  let strong a_718: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_719: loaded pointer =
        let weak a_721: pointer = pure(p) in
        load('signed int*', a_721) in
      let Specified(a_720: pointer) = a_719 in
      let weak a_722: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_720) in
      pure(Specified(a_722))
    ) in
  store('uintptr_t', i, conv_loaded_int('uintptr_t', a_718)) ;
  let strong a_723: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_724: loaded integer, a_725: loaded integer) =
        unseq(
          let weak a_729: pointer = pure(i) in
          load('uintptr_t', a_729)
        ,
          pure(Specified(Ivsizeof('signed int')))
        ) in
      pure(
        let (Specified(a_726: integer), Specified(a_727: integer)) =
          (a_724, a_725) in
        Specified(wrapI('size_t',
        conv_int('uintptr_t', a_726) + conv_int('uintptr_t', a_727)))
      )
    ) in
  store('uintptr_t', j, conv_loaded_int('uintptr_t', a_723)) ;
  let strong a_730: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_731: loaded integer =
        let weak a_733: pointer = pure(j) in
        load('uintptr_t', a_733) in
      let Specified(a_732: integer) = a_731 in
      let weak a_734: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_732) in
      pure(Specified(a_734))
    ) in
  store('signed int*', q, a_730) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_709: pointer, a_739: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_735: loaded pointer =
            let weak a_738: pointer = pure(q) in
            load('signed int*', a_738) in
          let Specified(a_736: pointer) = a_735 in
          let weak a_737: boolean =
            memop(PtrValidForDeref, 'signed int', a_736) in
          pure(
            if a_737 then
              a_736
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(11))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_709, conv_loaded_int('signed int', a_739))) in
      pure(conv_loaded_int('signed int', a_739))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_740: loaded pointer,
      (a_741: ctype, a_742: [ctype], a_743: boolean, a_744: boolean)),
      a_747: loaded pointer, a_751: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_708: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_708, cfunction(a_708)))
        ,
          let weak a_749: pointer = pure(a_748) in
          {- §6.3.2.1#3 -}
          let weak a_750: pointer = memop(PtrArrayShift, a_749, 'char', 0) in
          pure(Specified(a_750))
        ,
          let weak a_762: pointer =
            {- §6.5.3.2 -}
            let weak a_752: loaded pointer =
              {- §6.5.6 -}
              let weak (a_755: loaded pointer, a_757: loaded integer) =
                unseq(
                  let weak a_760: pointer = pure(a) in
                  {- §6.3.2.1#3 -}
                  let weak a_761: pointer =
                    memop(PtrArrayShift, a_760, 'signed int', 0) in
                  pure(Specified(a_761))
                ,
                  pure(Specified(1))
                ) in
              let (Specified(a_756: pointer), Specified(a_758: integer)) =
                (a_755, a_757) in
              let weak a_759: pointer =
                memop(PtrArrayShift, a_756, 'signed int', a_758) in
              pure(Specified(a_759)) in
            let Specified(a_753: pointer) = a_752 in
            let weak a_754: boolean =
              memop(PtrValidForDeref, 'signed int', a_753) in
            pure(
              if a_754 then
                a_753
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_762)
        ) in
      if not(params_length(a_742) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_743) \/ not(are_compatible ('signed int', a_741)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_746: pointer =
            let a_763: ctype = params_nth(a_742, 0) in
            if not(are_compatible ('const char*', a_763)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_764: pointer = create(Ivalignof(a_763), a_763) in
              let weak _: unit = store(a_763, a_764, a_747) in
              pure(a_764) in
          let strong a_745: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_751)) in
          let strong a_765: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_740, a_746,
            [('signed int', a_745)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_746), kill('signed int', a_745)) in
          pure(a_765)
    ) in
  pure(Unit) ;
  kill('signed int[2]', a) ;
  kill('signed int*', p) ;
  kill('uintptr_t', i) ;
  kill('uintptr_t', j) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_707: loaded integer (a_766: loaded integer:= Specified(0)) in
    pure(a_766)

