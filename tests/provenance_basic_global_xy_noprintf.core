-- Globals
glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_644: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_645: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_644, conv_loaded_int('signed int', a_645)) ;
  pure(a_644)

glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_642: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_643: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', a_642, conv_loaded_int('signed int', a_643)) ;
  pure(a_642)

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_590: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_591: pointer = pure(x) in
      pure(Specified(a_591))
    ) in
  store('signed int*', p, a_590) ;
  let strong a_592: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_593: pointer = pure(y) in
      pure(Specified(a_593))
    ) in
  store('signed int*', q, a_592) ;
  let strong _: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_589: pointer, a_600: loaded pointer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          pure(p)
        ,
          {- §6.5.6 -}
          let weak (a_594: loaded pointer, a_596: loaded integer) =
            unseq(
              let weak a_599: pointer = pure(p) in
              load('signed int*', a_599)
            ,
              pure(Specified(1))
            ) in
          let (Specified(a_595: pointer), Specified(a_597: integer)) =
            (a_594, a_596) in
          let weak a_598: pointer =
            memop(PtrArrayShift, a_595, 'signed int', a_597) in
          pure(Specified(a_598))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int*', a_589, a_600)) in
      pure(a_600)
    ) in
  pure(Unit) ;
  let strong a_601: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_603: loaded integer, a_604: loaded integer) =
        unseq(
          let weak (a_608: loaded integer, a_609: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_614: loaded pointer,
              (a_615: ctype, a_616: [ctype], a_617: boolean, a_618: boolean)),
              a_622: loaded pointer, a_624: loaded pointer,
              a_626: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_613: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_613, cfunction(a_613)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_623: pointer = pure(p) in
                  pure(Specified(a_623))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_625: pointer = pure(q) in
                  pure(Specified(a_625))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_616) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_617 \/ not(are_compatible ('signed int', a_615)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_621: pointer =
                    let a_627: ctype = params_nth(a_616, 0) in
                    if not(are_compatible ('const void*', a_627)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_628: pointer =
                        create(Ivalignof(a_627), a_627) in
                      let weak _: unit = store(a_627, a_628, a_622) in
                      pure(a_628) in
                  let strong a_620: pointer =
                    let a_629: ctype = params_nth(a_616, 1) in
                    if not(are_compatible ('const void*', a_629)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_630: pointer =
                        create(Ivalignof(a_629), a_629) in
                      let weak _: unit = store(a_629, a_630, a_624) in
                      pure(a_630) in
                  let strong a_619: pointer =
                    let a_631: ctype = params_nth(a_616, 2) in
                    if not(are_compatible ('size_t', a_631)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_632: pointer =
                        create(Ivalignof(a_631), a_631) in
                      let weak _: unit =
                        store(a_631, a_632, conv_loaded_int(a_631, a_626)) in
                      pure(a_632) in
                  let strong a_633: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_614, a_621, a_620, a_619) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_621)
                    ,
                      kill('void*', a_620)
                    ,
                      kill('size_t', a_619)
                    ) in
                  pure(a_633)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_610: integer), Specified(a_611: integer)) =
              (a_608, a_609) in
            if conv_int('signed int', a_610) = conv_int('signed int', a_611) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_605: integer), Specified(a_606: integer)) =
          (a_603, a_604) in
        if conv_int('signed int', a_605) = conv_int('signed int', a_606) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_588: boolean =
    let Specified(a_602: integer) = a_601 in
    pure(if not(a_602 = 1) then True else False) in
  if a_588 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_634: pointer, a_639: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_635: loaded pointer =
              let weak a_638: pointer = pure(p) in
              load('signed int*', a_638) in
            let Specified(a_636: pointer) = a_635 in
            let weak a_637: boolean =
              memop(PtrValidForDeref, 'signed int', a_636) in
            pure(
              if a_637 then
                a_636
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_634, conv_loaded_int('signed int', a_639))) in
        pure(conv_loaded_int('signed int', a_639))
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  let strong a_640: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  run ret_587(conv_loaded_int('signed int', a_640)) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_587: loaded integer (a_641: loaded integer:= Specified(0)) in
    pure(a_641)

