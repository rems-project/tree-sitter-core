-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_726: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  106)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc f (i: pointer): eff unit :=
  let strong j: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong k: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_702: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(5))) in
  store('signed int', j, conv_loaded_int('signed int', a_702)) ;
  let strong a_703: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_704: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_706: pointer = pure(j) in
        pure(Specified(a_706)) in
      let Specified(a_705: pointer) = a_704 in
      let weak a_707: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_705) in
      pure(Specified(a_707))
    ) in
  store('uintptr_t', k, conv_loaded_int('uintptr_t', a_703)) ;
  let strong a_708: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_709: loaded integer =
        let weak a_711: pointer = pure(i) in
        load('uintptr_t', a_711) in
      let Specified(a_710: integer) = a_709 in
      let weak a_712: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_710) in
      pure(Specified(a_712))
    ) in
  store('signed int*', p, a_708) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_701: pointer, a_717: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_713: loaded pointer =
            let weak a_716: pointer = pure(p) in
            load('signed int*', a_716) in
          let Specified(a_714: pointer) = a_713 in
          let weak a_715: boolean =
            memop(PtrValidForDeref, 'signed int', a_714) in
          pure(
            if a_715 then
              a_714
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(7))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_701, conv_loaded_int('signed int', a_717))) in
      pure(conv_loaded_int('signed int', a_717))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_718: loaded pointer,
      (a_719: ctype, a_720: [ctype], a_721: boolean, a_722: boolean)),
      a_725: loaded pointer, a_729: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_700: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_700, cfunction(a_700)))
        ,
          let weak a_727: pointer = pure(a_726) in
          {- §6.3.2.1#3 -}
          let weak a_728: pointer = memop(PtrArrayShift, a_727, 'char', 0) in
          pure(Specified(a_728))
        ,
          let weak a_730: pointer = pure(j) in
          load('signed int', a_730)
        ) in
      if not(params_length(a_720) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_721) \/ not(are_compatible ('signed int', a_719)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_724: pointer =
            let a_731: ctype = params_nth(a_720, 0) in
            if not(are_compatible ('const char*', a_731)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_732: pointer = create(Ivalignof(a_731), a_731) in
              let weak _: unit = store(a_731, a_732, a_725) in
              pure(a_732) in
          let strong a_723: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_729)) in
          let strong a_733: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_718, a_724,
            [('signed int', a_723)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_724), kill('signed int', a_723)) in
          pure(a_733)
    ) in
  pure(Unit) ;
  kill('signed int', j) ;
  kill('uintptr_t', k) ;
  kill('signed int*', p) ;
  pure(Unit) ;
  save ret_699: unit (a_734: unit:= Unit) in  pure(a_734)

proc main (): eff loaded integer :=
  let strong j: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong a_685: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(4294962676))) in
  store('uintptr_t', j, conv_loaded_int('uintptr_t', a_685)) ;
  {- §6.5#2 -}
  bound(
    {- §6.5.2.2#10, sentence 1 -}
    let strong ((a_686: loaded pointer,
    (a_687: ctype, a_688: [ctype], a_689: boolean, a_690: boolean)),
    a_692: loaded integer) =
      {- §6.5.2.2#4, sentence 2 -}
      unseq(
        let strong a_684: loaded pointer = pure(Specified(Cfunction(f))) in
        pure((a_684, cfunction(a_684)))
      ,
        let weak a_693: pointer = pure(j) in
        load('uintptr_t', a_693)
      ) in
    if not(params_length(a_688) = 1) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_689 \/ not(are_compatible ('void', a_687)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_691: pointer =
          let a_694: ctype = params_nth(a_688, 0) in
          if not(are_compatible ('uintptr_t', a_694)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_695: pointer = create(Ivalignof(a_694), a_694) in
            let weak _: unit =
              store(a_694, a_695, conv_loaded_int(a_694, a_692)) in
            pure(a_695) in
        let strong a_696: unit =
          ccall('void (*) (uintptr_t)', a_686, a_691) in
        kill('uintptr_t', a_691) ;
        pure(a_696)
  ) ;
  pure(Unit) ;
  kill('uintptr_t', j) ;
  pure(Unit) ;
  save ret_683: loaded integer (a_697: loaded integer:= Specified(0)) in
    pure(a_697)

