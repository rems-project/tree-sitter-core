-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_785: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_786: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_785, conv_loaded_int('signed int', a_786)) ;
  pure(a_785)

glob a_755: pointer [ail_ctype = 'char[22]'] :=
  create_readonly(Ivalignof('char[22]'), 'char[22]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 40)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 41)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_775: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_778: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong i: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong j: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong r: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong b: pointer = create(Ivalignof('_Bool'), '_Bool') in
  let strong a_688: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_689: pointer = pure(x) in
      pure(Specified(a_689))
    ) in
  store('signed int*', p, a_688) ;
  let strong a_690: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_691: loaded pointer =
        let weak a_693: pointer = pure(p) in
        load('signed int*', a_693) in
      let Specified(a_692: pointer) = a_691 in
      let weak a_694: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_692) in
      pure(Specified(a_694))
    ) in
  store('uintptr_t', i, conv_loaded_int('uintptr_t', a_690)) ;
  {- §6.5#2 -}
  bound(
    let strong a_687: loaded integer =
      {- §6.5.8 -}
      let weak (a_697: loaded integer, a_698: loaded integer) =
        unseq(pure(Specified(Ivalignof('signed int'))), pure(Specified(4))) in
      let (Specified(a_699: integer), Specified(a_700: integer)) =
        (a_697, a_698) in
      {- §6.5.8#6 -}
      pure(
        if if all_values_representable_in('size_t', 'signed int') then
          conv_int('signed int', a_699)
        else
          conv_int('unsigned int', a_699) >=
        if all_values_representable_in('size_t', 'signed int') then
          conv_int('signed int', a_700)
        else
          conv_int('unsigned int', a_700) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_695: integer) = a_687 in
      if a_695 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_686: pointer, a_707: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          pure(i)
        ,
          {- §6.5.12 -}
          let weak (a_702: loaded integer, a_703: loaded integer) =
            unseq(
              let weak a_706: pointer = pure(i) in
              load('uintptr_t', a_706)
            ,
              pure(Specified(1))
            ) in
          pure(
            let (Specified(a_704: integer), Specified(a_705: integer)) =
              (a_702, a_703) in
            Specified(IvOR('uintptr_t', conv_int('uintptr_t', a_704),
            conv_int('uintptr_t', a_705)))
          )
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('uintptr_t', a_686, conv_loaded_int('uintptr_t', a_707))) in
      pure(conv_loaded_int('uintptr_t', a_707))
    ) in
  pure(Unit) ;
  let strong a_708: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_709: loaded integer =
        let weak a_711: pointer = pure(i) in
        load('uintptr_t', a_711) in
      let Specified(a_710: integer) = a_709 in
      let weak a_712: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_710) in
      pure(Specified(a_712))
    ) in
  store('signed int*', q, a_708) ;
  let strong a_713: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.10 -}
      let weak (a_714: loaded integer, a_715: loaded integer) =
        unseq(
          {- §6.5.4 -}
          let weak a_718: loaded pointer =
            let weak a_720: pointer = pure(q) in
            load('signed int*', a_720) in
          let Specified(a_719: pointer) = a_718 in
          let weak a_721: integer =
            memop(IntFromPtr, 'signed int', 'uintptr_t', a_719) in
          pure(Specified(a_721))
        ,
          {- §6.5.3.3#4 -}
          let weak a_722: loaded integer =
            {- §6.5.4 -}
            let weak a_724: loaded integer = pure(Specified(3)) in
            pure(conv_loaded_int('uintptr_t', a_724)) in
          pure(
            let Specified(a_723: integer) = a_722 in
            Specified(Ivmax('uintptr_t') - conv_int('uintptr_t', a_723))
          )
        ) in
      pure(
        let (Specified(a_716: integer), Specified(a_717: integer)) =
          (a_714, a_715) in
        Specified(IvAND('uintptr_t', conv_int('uintptr_t', a_716),
        conv_int('uintptr_t', a_717)))
      )
    ) in
  store('uintptr_t', j, conv_loaded_int('uintptr_t', a_713)) ;
  let strong a_727: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_728: loaded integer =
        let weak a_730: pointer = pure(j) in
        load('uintptr_t', a_730) in
      let Specified(a_729: integer) = a_728 in
      let weak a_731: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_729) in
      pure(Specified(a_731))
    ) in
  store('signed int*', r, a_727) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_685: pointer, a_736: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_732: loaded pointer =
            let weak a_735: pointer = pure(r) in
            load('signed int*', a_735) in
          let Specified(a_733: pointer) = a_732 in
          let weak a_734: boolean =
            memop(PtrValidForDeref, 'signed int', a_733) in
          pure(
            if a_734 then
              a_733
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(11))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_685, conv_loaded_int('signed int', a_736))) in
      pure(conv_loaded_int('signed int', a_736))
    ) in
  pure(Unit) ;
  let strong a_737: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_738: loaded pointer, a_739: loaded pointer) =
        unseq(
          let weak a_743: pointer = pure(r) in
          load('signed int*', a_743)
        ,
          let weak a_744: pointer = pure(p) in
          load('signed int*', a_744)
        ) in
      let (Specified(a_740: pointer), Specified(a_741: pointer)) =
        (a_738, a_739) in
      let weak a_742: boolean = memop(PtrEq, a_740, a_741) in
      pure(if a_742 then Specified(1) else Specified(0))
    ) in
  store('_Bool', b, conv_loaded_int('_Bool', a_737)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_745: loaded pointer,
      (a_746: ctype, a_747: [ctype], a_748: boolean, a_749: boolean)),
      a_754: loaded pointer, a_758: loaded integer, a_760: loaded integer,
      a_766: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_684: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_684, cfunction(a_684)))
        ,
          let weak a_756: pointer = pure(a_755) in
          {- §6.3.2.1#3 -}
          let weak a_757: pointer = memop(PtrArrayShift, a_756, 'char', 0) in
          pure(Specified(a_757))
        ,
          let weak a_759: pointer = pure(x) in
          load('signed int', a_759)
        ,
          let weak a_765: pointer =
            {- §6.5.3.2 -}
            let weak a_761: loaded pointer =
              let weak a_764: pointer = pure(r) in
              load('signed int*', a_764) in
            let Specified(a_762: pointer) = a_761 in
            let weak a_763: boolean =
              memop(PtrValidForDeref, 'signed int', a_762) in
            pure(
              if a_763 then
                a_762
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_765)
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_773: loaded integer =
            let weak (a_767: loaded integer, a_768: loaded integer) =
              unseq(
                let weak a_772: pointer = pure(b) in
                load('_Bool', a_772)
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_769: integer), Specified(a_770: integer)) =
                (a_767, a_768) in
              if conv_int('signed int', a_769) = conv_int('signed int', a_770) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_774: integer) = a_773 in
          {- §6.5.15#4, sentence 2 -}
          if a_774 = 0 then
            let weak a_776: pointer = pure(a_775) in
            {- §6.3.2.1#3 -}
            let weak a_777: pointer =
              memop(PtrArrayShift, a_776, 'char', 0) in
            pure(Specified(a_777))
          else
            let weak a_779: pointer = pure(a_778) in
            {- §6.3.2.1#3 -}
            let weak a_780: pointer =
              memop(PtrArrayShift, a_779, 'char', 0) in
            pure(Specified(a_780))
        ) in
      if not(params_length(a_747) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_748) \/ not(are_compatible ('signed int', a_746)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_753: pointer =
            let a_781: ctype = params_nth(a_747, 0) in
            if not(are_compatible ('const char*', a_781)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_782: pointer = create(Ivalignof(a_781), a_781) in
              let weak _: unit = store(a_781, a_782, a_754) in
              pure(a_782) in
          let strong a_752: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_758)) in
          let strong a_751: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_760)) in
          let strong a_750: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_766) in
          let strong a_783: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_745, a_753,
            [('signed int', a_752), ('signed int', a_751), ('char*', a_750)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_753)
            ,
              kill('signed int', a_752)
            ,
              kill('signed int', a_751)
            ,
              kill('char*', a_750)
            ) in
          pure(a_783)
    ) in
  pure(Unit) ;
  kill('signed int*', p) ;
  kill('uintptr_t', i) ;
  kill('signed int*', q) ;
  kill('uintptr_t', j) ;
  kill('signed int*', r) ;
  kill('_Bool', b) ;
  pure(Unit) ;
  save ret_683: loaded integer (a_784: loaded integer:= Specified(0)) in
    pure(a_784)

