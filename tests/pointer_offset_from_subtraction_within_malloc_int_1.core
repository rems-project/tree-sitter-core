-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

def struct __cerbty_unnamed_tag_824 :=
  __dummy_max_align_t: 'void*'

-- Globals
glob a_956: pointer [ail_ctype = 'char[29]'] :=
  create_readonly(Ivalignof('char[29]'), 'char[29]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 51)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 51)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_1024: pointer [ail_ctype = 'char[23]'] :=
  create_readonly(Ivalignof('char[23]'), 'char[23]', Specified(Array(Specified(conv_int('char',
  42)), Specified(conv_int('char', 112)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 49)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 51)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong a: pointer = create(Ivalignof('void*'), 'void*') in
  let strong p1: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong p3: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong offset: pointer = create(Ivalignof('ptrdiff_t'), 'ptrdiff_t') in
  let strong q1: pointer =
    create(Ivalignof('unsigned char*'), 'unsigned char*') in
  let strong q3: pointer =
    create(Ivalignof('unsigned char*'), 'unsigned char*') in
  let strong r1: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong r3: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_843: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_845: loaded pointer,
      (a_846: ctype, a_847: [ctype], a_848: boolean, a_849: boolean)),
      a_851: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_844: loaded pointer =
            pure(Specified(Cfunction(malloc_proxy))) in
          pure((a_844, cfunction(a_844)))
        ,
          {- §6.5.5 -}
          let weak (a_852: loaded integer, a_853: loaded integer) =
            unseq(pure(Specified(4)), pure(Specified(Ivsizeof('signed int')))) in
          pure(
            let (Specified(a_854: integer), Specified(a_855: integer)) =
              (a_852, a_853) in
            Specified(wrapI('size_t',
            if all_values_representable_in('size_t', 'signed int') then
              conv_int('signed int', a_854)
            else
              conv_int('unsigned int', a_854) *
            if all_values_representable_in('size_t', 'signed int') then
              conv_int('signed int', a_855)
            else
              conv_int('unsigned int', a_855)))
          )
        ) in
      if not(params_length(a_847) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_848 \/ not(are_compatible ('void*', a_846)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_850: pointer =
            let a_857: ctype = params_nth(a_847, 0) in
            if not(are_compatible ('size_t', a_857)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_858: pointer = create(Ivalignof(a_857), a_857) in
              let weak _: unit =
                store(a_857, a_858, conv_loaded_int(a_857, a_851)) in
              pure(a_858) in
          let strong a_859: loaded pointer =
            ccall('void* (*) (size_t)', a_845, a_850) in
          kill('size_t', a_850) ;
          pure(a_859)
    ) in
  store('void*', a, a_843) ;
  let strong a_860: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_861: loaded pointer =
        {- §6.5.6 -}
        let weak (a_863: loaded pointer, a_865: loaded integer) =
          unseq(
            {- §6.5.4 -}
            let weak a_868: loaded pointer =
              let weak a_870: pointer = pure(a) in
              load('void*', a_870) in
            let Specified(a_869: pointer) = a_868 in
            let weak a_871: boolean =
              memop(PtrWellAligned, 'unsigned char', a_869) in
            pure(
              Specified(if a_871 then
                a_869
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            )
          ,
            {- §6.5.5 -}
            let weak (a_872: loaded integer, a_873: loaded integer) =
              unseq(
                pure(Specified(1))
              ,
                pure(Specified(Ivsizeof('signed int')))
              ) in
            pure(
              let (Specified(a_874: integer), Specified(a_875: integer)) =
                (a_872, a_873) in
              Specified(wrapI('size_t',
              if all_values_representable_in('size_t', 'signed int') then
                conv_int('signed int', a_874)
              else
                conv_int('unsigned int', a_874) *
              if all_values_representable_in('size_t', 'signed int') then
                conv_int('signed int', a_875)
              else
                conv_int('unsigned int', a_875)))
            )
          ) in
        let (Specified(a_864: pointer), Specified(a_866: integer)) =
          (a_863, a_865) in
        let weak a_867: pointer =
          memop(PtrArrayShift, a_864, 'unsigned char', a_866) in
        pure(Specified(a_867)) in
      let Specified(a_862: pointer) = a_861 in
      let weak a_877: boolean = memop(PtrWellAligned, 'signed int', a_862) in
      pure(
        Specified(if a_877 then
          a_862
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('signed int*', p1, a_860) ;
  let strong a_878: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_879: loaded pointer =
        {- §6.5.6 -}
        let weak (a_881: loaded pointer, a_883: loaded integer) =
          unseq(
            {- §6.5.4 -}
            let weak a_886: loaded pointer =
              let weak a_888: pointer = pure(a) in
              load('void*', a_888) in
            let Specified(a_887: pointer) = a_886 in
            let weak a_889: boolean =
              memop(PtrWellAligned, 'unsigned char', a_887) in
            pure(
              Specified(if a_889 then
                a_887
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            )
          ,
            {- §6.5.5 -}
            let weak (a_890: loaded integer, a_891: loaded integer) =
              unseq(
                pure(Specified(3))
              ,
                pure(Specified(Ivsizeof('signed int')))
              ) in
            pure(
              let (Specified(a_892: integer), Specified(a_893: integer)) =
                (a_890, a_891) in
              Specified(wrapI('size_t',
              if all_values_representable_in('size_t', 'signed int') then
                conv_int('signed int', a_892)
              else
                conv_int('unsigned int', a_892) *
              if all_values_representable_in('size_t', 'signed int') then
                conv_int('signed int', a_893)
              else
                conv_int('unsigned int', a_893)))
            )
          ) in
        let (Specified(a_882: pointer), Specified(a_884: integer)) =
          (a_881, a_883) in
        let weak a_885: pointer =
          memop(PtrArrayShift, a_882, 'unsigned char', a_884) in
        pure(Specified(a_885)) in
      let Specified(a_880: pointer) = a_879 in
      let weak a_895: boolean = memop(PtrWellAligned, 'signed int', a_880) in
      pure(
        Specified(if a_895 then
          a_880
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('signed int*', p3, a_878) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_842: pointer, a_900: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_896: loaded pointer =
            let weak a_899: pointer = pure(p1) in
            load('signed int*', a_899) in
          let Specified(a_897: pointer) = a_896 in
          let weak a_898: boolean =
            memop(PtrValidForDeref, 'signed int', a_897) in
          pure(
            if a_898 then
              a_897
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(1))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_842, conv_loaded_int('signed int', a_900))) in
      pure(conv_loaded_int('signed int', a_900))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_841: pointer, a_905: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_901: loaded pointer =
            let weak a_904: pointer = pure(p3) in
            load('signed int*', a_904) in
          let Specified(a_902: pointer) = a_901 in
          let weak a_903: boolean =
            memop(PtrValidForDeref, 'signed int', a_902) in
          pure(
            if a_903 then
              a_902
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(3))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_841, conv_loaded_int('signed int', a_905))) in
      pure(conv_loaded_int('signed int', a_905))
    ) in
  pure(Unit) ;
  let strong a_906: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_915: loaded pointer, a_916: loaded pointer) =
        unseq(
          {- §6.5.4 -}
          let weak a_907: loaded pointer =
            let weak a_909: pointer = pure(p3) in
            load('signed int*', a_909) in
          let Specified(a_908: pointer) = a_907 in
          let weak a_910: boolean =
            memop(PtrWellAligned, 'unsigned char', a_908) in
          pure(
            Specified(if a_910 then
              a_908
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          )
        ,
          {- §6.5.4 -}
          let weak a_911: loaded pointer =
            let weak a_913: pointer = pure(p1) in
            load('signed int*', a_913) in
          let Specified(a_912: pointer) = a_911 in
          let weak a_914: boolean =
            memop(PtrWellAligned, 'unsigned char', a_912) in
          pure(
            Specified(if a_914 then
              a_912
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          )
        ) in
      let (Specified(a_917: pointer), Specified(a_918: pointer)) =
        (a_915, a_916) in
      let weak a_919: integer =
        memop(Ptrdiff, 'unsigned char', a_917, a_918) in
      pure(
        if is_representable_integer(a_919, 'ptrdiff_t') then
          Specified(a_919)
        else
          undef(<<UB050_pointers_subtraction_not_representable>>)
      )
    ) in
  store('ptrdiff_t', offset, conv_loaded_int('ptrdiff_t', a_906)) ;
  let strong a_920: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_921: loaded pointer =
        let weak a_923: pointer = pure(p1) in
        load('signed int*', a_923) in
      let Specified(a_922: pointer) = a_921 in
      let weak a_924: boolean =
        memop(PtrWellAligned, 'unsigned char', a_922) in
      pure(
        Specified(if a_924 then
          a_922
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('unsigned char*', q1, a_920) ;
  let strong a_925: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_926: loaded pointer, a_928: loaded integer) =
        unseq(
          {- §6.5.4 -}
          let weak a_931: loaded pointer =
            let weak a_933: pointer = pure(p1) in
            load('signed int*', a_933) in
          let Specified(a_932: pointer) = a_931 in
          let weak a_934: boolean =
            memop(PtrWellAligned, 'unsigned char', a_932) in
          pure(
            Specified(if a_934 then
              a_932
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          )
        ,
          let weak a_935: pointer = pure(offset) in
          load('ptrdiff_t', a_935)
        ) in
      let (Specified(a_927: pointer), Specified(a_929: integer)) =
        (a_926, a_928) in
      let weak a_930: pointer =
        memop(PtrArrayShift, a_927, 'unsigned char', a_929) in
      pure(Specified(a_930))
    ) in
  store('unsigned char*', q3, a_925) ;
  let strong a_936: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_937: loaded pointer =
        let weak a_939: pointer = pure(q1) in
        load('unsigned char*', a_939) in
      let Specified(a_938: pointer) = a_937 in
      let weak a_940: boolean = memop(PtrWellAligned, 'signed int', a_938) in
      pure(
        Specified(if a_940 then
          a_938
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('signed int*', r1, a_936) ;
  let strong a_941: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_942: loaded pointer =
        let weak a_944: pointer = pure(q3) in
        load('unsigned char*', a_944) in
      let Specified(a_943: pointer) = a_942 in
      let weak a_945: boolean = memop(PtrWellAligned, 'signed int', a_943) in
      pure(
        Specified(if a_945 then
          a_943
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('signed int*', r3, a_941) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_946: loaded pointer,
      (a_947: ctype, a_948: [ctype], a_949: boolean, a_950: boolean)),
      a_955: loaded pointer, a_959: loaded pointer, a_961: loaded pointer,
      a_966: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_840: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_840, cfunction(a_840)))
        ,
          let weak a_957: pointer = pure(a_956) in
          {- §6.3.2.1#3 -}
          let weak a_958: pointer = memop(PtrArrayShift, a_957, 'char', 0) in
          pure(Specified(a_958))
        ,
          let weak a_960: pointer = pure(a) in
          load('void*', a_960)
        ,
          {- §6.5.4 -}
          let weak a_964: pointer = pure(p3) in
          load('signed int*', a_964)
        ,
          {- §6.5.4 -}
          let weak a_969: pointer = pure(r3) in
          load('signed int*', a_969)
        ) in
      if not(params_length(a_948) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_949) \/ not(are_compatible ('signed int', a_947)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_954: pointer =
            let a_971: ctype = params_nth(a_948, 0) in
            if not(are_compatible ('const char*', a_971)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_972: pointer = create(Ivalignof(a_971), a_971) in
              let weak _: unit = store(a_971, a_972, a_955) in
              pure(a_972) in
          let strong a_953: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_959) in
          let strong a_952: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_961) in
          let strong a_951: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_966) in
          let strong a_973: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_946, a_954,
            [('void*', a_953), ('void*', a_952), ('void*', a_951)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_954)
            ,
              kill('void*', a_953)
            ,
              kill('void*', a_952)
            ,
              kill('void*', a_951)
            ) in
          pure(a_973)
    ) in
  pure(Unit) ;
  let strong a_974: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_976: loaded integer, a_977: loaded integer) =
        unseq(
          let weak (a_981: loaded integer, a_982: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_987: loaded pointer,
              (a_988: ctype, a_989: [ctype], a_990: boolean, a_991: boolean)),
              a_995: loaded pointer, a_997: loaded pointer,
              a_999: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_986: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_986, cfunction(a_986)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_996: pointer = pure(p3) in
                  pure(Specified(a_996))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_998: pointer = pure(r3) in
                  pure(Specified(a_998))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_989) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_990 \/ not(are_compatible ('signed int', a_988)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_994: pointer =
                    let a_1000: ctype = params_nth(a_989, 0) in
                    if not(are_compatible ('const void*', a_1000)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_1001: pointer =
                        create(Ivalignof(a_1000), a_1000) in
                      let weak _: unit = store(a_1000, a_1001, a_995) in
                      pure(a_1001) in
                  let strong a_993: pointer =
                    let a_1002: ctype = params_nth(a_989, 1) in
                    if not(are_compatible ('const void*', a_1002)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_1003: pointer =
                        create(Ivalignof(a_1002), a_1002) in
                      let weak _: unit = store(a_1002, a_1003, a_997) in
                      pure(a_1003) in
                  let strong a_992: pointer =
                    let a_1004: ctype = params_nth(a_989, 2) in
                    if not(are_compatible ('size_t', a_1004)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_1005: pointer =
                        create(Ivalignof(a_1004), a_1004) in
                      let weak _: unit =
                        store(a_1004, a_1005, conv_loaded_int(a_1004, a_999)) in
                      pure(a_1005) in
                  let strong a_1006: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_987, a_994, a_993, a_992) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_994)
                    ,
                      kill('void*', a_993)
                    ,
                      kill('size_t', a_992)
                    ) in
                  pure(a_1006)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_983: integer), Specified(a_984: integer)) =
              (a_981, a_982) in
            if conv_int('signed int', a_983) = conv_int('signed int', a_984) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_978: integer), Specified(a_979: integer)) =
          (a_976, a_977) in
        if conv_int('signed int', a_978) = conv_int('signed int', a_979) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_839: boolean =
    let Specified(a_975: integer) = a_974 in
    pure(if not(a_975 = 1) then True else False) in
  if a_839 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_1008: pointer, a_1013: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_1009: loaded pointer =
              let weak a_1012: pointer = pure(r3) in
              load('signed int*', a_1012) in
            let Specified(a_1010: pointer) = a_1009 in
            let weak a_1011: boolean =
              memop(PtrValidForDeref, 'signed int', a_1010) in
            pure(
              if a_1011 then
                a_1010
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_1008,
          conv_loaded_int('signed int', a_1013))) in
        pure(conv_loaded_int('signed int', a_1013))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_1014: loaded pointer,
        (a_1015: ctype, a_1016: [ctype], a_1017: boolean, a_1018: boolean)),
        a_1023: loaded pointer, a_1027: loaded integer, a_1033: loaded integer,
        a_1039: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_1007: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_1007, cfunction(a_1007)))
          ,
            let weak a_1025: pointer = pure(a_1024) in
            {- §6.3.2.1#3 -}
            let weak a_1026: pointer =
              memop(PtrArrayShift, a_1025, 'char', 0) in
            pure(Specified(a_1026))
          ,
            let weak a_1032: pointer =
              {- §6.5.3.2 -}
              let weak a_1028: loaded pointer =
                let weak a_1031: pointer = pure(p1) in
                load('signed int*', a_1031) in
              let Specified(a_1029: pointer) = a_1028 in
              let weak a_1030: boolean =
                memop(PtrValidForDeref, 'signed int', a_1029) in
              pure(
                if a_1030 then
                  a_1029
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_1032)
          ,
            let weak a_1038: pointer =
              {- §6.5.3.2 -}
              let weak a_1034: loaded pointer =
                let weak a_1037: pointer = pure(r1) in
                load('signed int*', a_1037) in
              let Specified(a_1035: pointer) = a_1034 in
              let weak a_1036: boolean =
                memop(PtrValidForDeref, 'signed int', a_1035) in
              pure(
                if a_1036 then
                  a_1035
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_1038)
          ,
            let weak a_1044: pointer =
              {- §6.5.3.2 -}
              let weak a_1040: loaded pointer =
                let weak a_1043: pointer = pure(r3) in
                load('signed int*', a_1043) in
              let Specified(a_1041: pointer) = a_1040 in
              let weak a_1042: boolean =
                memop(PtrValidForDeref, 'signed int', a_1041) in
              pure(
                if a_1042 then
                  a_1041
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_1044)
          ) in
        if not(params_length(a_1016) <= 4) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_1017) \/ not(are_compatible ('signed int', a_1015)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_1022: pointer =
              let a_1045: ctype = params_nth(a_1016, 0) in
              if not(are_compatible ('const char*', a_1045)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_1046: pointer =
                  create(Ivalignof(a_1045), a_1045) in
                let weak _: unit = store(a_1045, a_1046, a_1023) in
                pure(a_1046) in
            let strong a_1021: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1027)) in
            let strong a_1020: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1033)) in
            let strong a_1019: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1039)) in
            let strong a_1047: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_1014,
              a_1022,
              [('signed int', a_1021), ('signed int', a_1020),
              ('signed int', a_1019)]) in
            let strong _: (unit,unit,unit,unit) =
              unseq(
                kill('char*', a_1022)
              ,
                kill('signed int', a_1021)
              ,
                kill('signed int', a_1020)
              ,
                kill('signed int', a_1019)
              ) in
            pure(a_1047)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  let strong a_1048: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  kill('void*', a) ;
  kill('signed int*', p1) ;
  kill('signed int*', p3) ;
  kill('ptrdiff_t', offset) ;
  kill('unsigned ichar*', q1) ;
  kill('unsigned ichar*', q3) ;
  kill('signed int*', r1) ;
  kill('signed int*', r3) ;
  run ret_838(conv_loaded_int('signed int', a_1048)) ;
  kill('void*', a) ;
  kill('signed int*', p1) ;
  kill('signed int*', p3) ;
  kill('ptrdiff_t', offset) ;
  kill('unsigned ichar*', q1) ;
  kill('unsigned ichar*', q3) ;
  kill('signed int*', r1) ;
  kill('signed int*', r3) ;
  pure(Unit) ;
  save ret_838: loaded integer (a_1049: loaded integer:= Specified(0)) in
    pure(a_1049)

