-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_713: pointer [ail_ctype = 'char[12]'] :=
  create_readonly(Ivalignof('char[12]'), 'char[12]', Specified(Array(Specified(conv_int('char',
  106)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 106)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc f (): eff unit :=
  let strong i: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_729: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(4294962680))) in
  store('uintptr_t', i, conv_loaded_int('uintptr_t', a_729)) ;
  let strong a_730: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_731: loaded integer =
        let weak a_733: pointer = pure(i) in
        load('uintptr_t', a_733) in
      let Specified(a_732: integer) = a_731 in
      let weak a_734: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_732) in
      pure(Specified(a_734))
    ) in
  store('signed int*', p, a_730) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_728: pointer, a_739: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_735: loaded pointer =
            let weak a_738: pointer = pure(p) in
            load('signed int*', a_738) in
          let Specified(a_736: pointer) = a_735 in
          let weak a_737: boolean =
            memop(PtrValidForDeref, 'signed int', a_736) in
          pure(
            if a_737 then
              a_736
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(7))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_728, conv_loaded_int('signed int', a_739))) in
      pure(conv_loaded_int('signed int', a_739))
    ) in
  pure(Unit) ;
  kill('uintptr_t', i) ;
  kill('signed int*', p) ;
  pure(Unit) ;
  save ret_727: unit (a_740: unit:= Unit) in  pure(a_740)

proc main (): eff loaded integer :=
  let strong j: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_684: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(5))) in
  store('signed int', j, conv_loaded_int('signed int', a_684)) ;
  let strong a_685: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_687: loaded integer, a_688: loaded integer) =
        unseq(
          let weak (a_692: loaded integer, a_693: loaded integer) =
            unseq(
              {- §6.5.4 -}
              let weak a_697: loaded pointer =
                {- §6.5.3.2#3, sentence 5 -}
                let weak a_699: pointer = pure(j) in
                pure(Specified(a_699)) in
              let Specified(a_698: pointer) = a_697 in
              let weak a_700: integer =
                memop(IntFromPtr, 'signed int', 'uintptr_t', a_698) in
              pure(Specified(a_700))
            ,
              pure(Specified(4294962680))
            ) in
          pure(
            let (Specified(a_694: integer), Specified(a_695: integer)) =
              (a_692, a_693) in
            if conv_int('uintptr_t', a_694) = conv_int('uintptr_t', a_695) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_689: integer), Specified(a_690: integer)) =
          (a_687, a_688) in
        if conv_int('signed int', a_689) = conv_int('signed int', a_690) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_683: boolean =
    let Specified(a_686: integer) = a_685 in
    pure(if not(a_686 = 1) then True else False) in
  if a_683 then
    {- §6.5#2 -}
    bound(
      let strong a_701: loaded pointer = pure(Specified(Cfunction(f))) in
      let (a_702: ctype, a_703: [ctype], _: boolean, _: boolean) =
        cfunction(a_701) in
      if params_length(a_703) = 0 then
        if are_compatible ('void', a_702) then
          ccall('void (*) (void)', a_701)
        else
          pure(undef(<<UB041_function_not_compatible>>))
      else
        pure(undef(<<UB038_number_of_args>>))
    ) ;
    pure(Unit)
  else
    pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_704: loaded pointer,
      (a_705: ctype, a_706: [ctype], a_707: boolean, a_708: boolean)),
      a_712: loaded pointer, a_716: loaded integer, a_718: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_682: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_682, cfunction(a_682)))
        ,
          let weak a_714: pointer = pure(a_713) in
          {- §6.3.2.1#3 -}
          let weak a_715: pointer = memop(PtrArrayShift, a_714, 'char', 0) in
          pure(Specified(a_715))
        ,
          let weak a_717: pointer = pure(j) in
          load('signed int', a_717)
        ,
          {- §6.5.3.2#3, sentence 5 -}
          {- §6.5.4 -}
          let weak a_721: pointer = pure(j) in
          pure(Specified(a_721))
        ) in
      if not(params_length(a_706) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_707) \/ not(are_compatible ('signed int', a_705)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_711: pointer =
            let a_723: ctype = params_nth(a_706, 0) in
            if not(are_compatible ('const char*', a_723)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_724: pointer = create(Ivalignof(a_723), a_723) in
              let weak _: unit = store(a_723, a_724, a_712) in
              pure(a_724) in
          let strong a_710: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_716)) in
          let strong a_709: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_718) in
          let strong a_725: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_704, a_711,
            [('signed int', a_710), ('void*', a_709)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_711)
            ,
              kill('signed int', a_710)
            ,
              kill('void*', a_709)
            ) in
          pure(a_725)
    ) in
  pure(Unit) ;
  kill('signed int', j) ;
  pure(Unit) ;
  save ret_681: loaded integer (a_726: loaded integer:= Specified(0)) in
    pure(a_726)

