-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

-- Globals
glob a_898: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  106)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc user_memcpy (dest: pointer, src: pointer, n: pointer): eff unit :=
  save while_913: unit () in
    let strong a_916: loaded integer =
      {- §6.5#2 -}
      bound(
        let weak (a_918: loaded integer, a_919: loaded integer) =
          unseq(
            {- §6.5.8 -}
            let weak (a_924: loaded integer, a_925: loaded integer) =
              unseq(
                let weak a_923: pointer = pure(n) in
                load('size_t', a_923)
              ,
                pure(Specified(0))
              ) in
            let (Specified(a_926: integer), Specified(a_927: integer)) =
              (a_924, a_925) in
            {- §6.5.8#6 -}
            pure(
              if if all_values_representable_in('size_t', 'signed int') then
                conv_int('signed int', a_926)
              else
                conv_int('unsigned int', a_926) >
              if all_values_representable_in('size_t', 'signed int') then
                conv_int('signed int', a_927)
              else
                conv_int('unsigned int', a_927) then
                Specified(1)
              else
                Specified(0)
            )
          ,
            pure(Specified(0))
          ) in
        pure(
          let (Specified(a_920: integer), Specified(a_921: integer)) =
            (a_918, a_919) in
          if conv_int('signed int', a_920) = conv_int('signed int', a_921) then
            Specified(1)
          else
            Specified(0)
        )
      ) in
    let strong a_915: boolean =
      let Specified(a_917: integer) = a_916 in
      pure(if not(a_917 = 1) then True else False) in
    if a_915 then
      save while_body_914: unit () in
        let strong _: loaded integer =
          {- §6.5#2 -}
          bound(
            {- §6.5.16#3, sentence 4 -}
            let weak (a_932: pointer, a_942: loaded integer) =
              {- §6.5.16#3, sentence 5 -}
              unseq(
                {- §6.5.3.2 -}
                let weak a_933: loaded pointer =
                  let weak a_936: pointer = pure(dest) in
                  load('unsigned char*', a_936) in
                let Specified(a_934: pointer) = a_933 in
                let weak a_935: boolean =
                  memop(PtrValidForDeref, 'unsigned char', a_934) in
                pure(
                  if a_935 then
                    a_934
                  else
                    undef(<<UB043_indirection_invalid_value>>)
                )
              ,
                let weak a_941: pointer =
                  {- §6.5.3.2 -}
                  let weak a_937: loaded pointer =
                    let weak a_940: pointer = pure(src) in
                    load('unsigned char*', a_940) in
                  let Specified(a_938: pointer) = a_937 in
                  let weak a_939: boolean =
                    memop(PtrValidForDeref, 'unsigned char', a_938) in
                  pure(
                    if a_939 then
                      a_938
                    else
                      undef(<<UB043_indirection_invalid_value>>)
                  ) in
                load('unsigned char', a_941)
              ) in
            let weak _: unit =
              {- §6.5.16.1#2, store -}
              neg(store('unsigned char', a_932,
              conv_loaded_int('unsigned char', a_942))) in
            pure(conv_loaded_int('unsigned char', a_942))
          ) in
        pure(Unit) ;
        let strong _: loaded pointer =
          {- §6.5#2 -}
          bound(
            {- §6.5.16#3, sentence 4 -}
            let weak (a_931: pointer, a_949: loaded pointer) =
              {- §6.5.16#3, sentence 5 -}
              unseq(
                pure(src)
              ,
                {- §6.5.6 -}
                let weak (a_943: loaded pointer, a_945: loaded integer) =
                  unseq(
                    let weak a_948: pointer = pure(src) in
                    load('unsigned char*', a_948)
                  ,
                    pure(Specified(1))
                  ) in
                let (Specified(a_944: pointer), Specified(a_946: integer)) =
                  (a_943, a_945) in
                let weak a_947: pointer =
                  memop(PtrArrayShift, a_944, 'unsigned char', a_946) in
                pure(Specified(a_947))
              ) in
            let weak _: unit =
              {- §6.5.16.1#2, store -}
              neg(store('unsigned char*', a_931, a_949)) in
            pure(a_949)
          ) in
        pure(Unit) ;
        let strong _: loaded pointer =
          {- §6.5#2 -}
          bound(
            {- §6.5.16#3, sentence 4 -}
            let weak (a_930: pointer, a_956: loaded pointer) =
              {- §6.5.16#3, sentence 5 -}
              unseq(
                pure(dest)
              ,
                {- §6.5.6 -}
                let weak (a_950: loaded pointer, a_952: loaded integer) =
                  unseq(
                    let weak a_955: pointer = pure(dest) in
                    load('unsigned char*', a_955)
                  ,
                    pure(Specified(1))
                  ) in
                let (Specified(a_951: pointer), Specified(a_953: integer)) =
                  (a_950, a_952) in
                let weak a_954: pointer =
                  memop(PtrArrayShift, a_951, 'unsigned char', a_953) in
                pure(Specified(a_954))
              ) in
            let weak _: unit =
              {- §6.5.16.1#2, store -}
              neg(store('unsigned char*', a_930, a_956)) in
            pure(a_956)
          ) in
        pure(Unit) ;
        let strong _: loaded integer =
          {- §6.5#2 -}
          bound(
            {- §6.5.16#3, sentence 4 -}
            let weak (a_929: pointer, a_963: loaded integer) =
              {- §6.5.16#3, sentence 5 -}
              unseq(
                pure(n)
              ,
                {- §6.5.6 -}
                let weak (a_958: loaded integer, a_959: loaded integer) =
                  unseq(
                    let weak a_957: pointer = pure(n) in
                    load('size_t', a_957)
                  ,
                    pure(Specified(1))
                  ) in
                pure(
                  let (Specified(a_960: integer), Specified(a_961: integer)) =
                    (a_958, a_959) in
                  Specified(wrapI('size_t',
                  if all_values_representable_in('size_t', 'signed int') then
                    conv_int('signed int', a_960)
                  else
                    conv_int('unsigned int', a_960) -
                  if all_values_representable_in('size_t', 'signed int') then
                    conv_int('signed int', a_961)
                  else
                    conv_int('unsigned int', a_961)))
                )
              ) in
            let weak _: unit =
              {- §6.5.16.1#2, store -}
              neg(store('size_t', a_929, conv_loaded_int('size_t', a_963))) in
            pure(conv_loaded_int('size_t', a_963))
          ) in
        pure(Unit) ;
        pure(Unit) ;
        save continue_911: unit () in  pure(Unit) ;
        pure(Unit) ;
        run while_913()
    else
      pure(Unit) ;
  save break_912: unit () in  pure(Unit) ;
  pure(Unit) ;
  pure(Unit) ;
  save ret_910: unit (a_964: unit:= Unit) in  pure(a_964)

proc main (): eff loaded integer :=
  let strong i: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong p: pointer = create(Ivalignof('void*'), 'void*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong j: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_840: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', i, conv_loaded_int('signed int', a_840)) ;
  let strong a_841: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_843: loaded pointer,
      (a_844: ctype, a_845: [ctype], a_846: boolean, a_847: boolean)),
      a_849: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_842: loaded pointer =
            pure(Specified(Cfunction(malloc_proxy))) in
          pure((a_842, cfunction(a_842)))
        ,
          pure(Specified(Ivsizeof('signed int')))
        ) in
      if not(params_length(a_845) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_846 \/ not(are_compatible ('void*', a_844)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_848: pointer =
            let a_850: ctype = params_nth(a_845, 0) in
            if not(are_compatible ('size_t', a_850)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_851: pointer = create(Ivalignof(a_850), a_850) in
              let weak _: unit =
                store(a_850, a_851, conv_loaded_int(a_850, a_849)) in
              pure(a_851) in
          let strong a_852: loaded pointer =
            ccall('void* (*) (size_t)', a_843, a_848) in
          kill('size_t', a_848) ;
          pure(a_852)
    ) in
  store('void*', p, a_841) ;
  {- §6.5#2 -}
  bound(
    {- §6.5.2.2#10, sentence 1 -}
    let strong ((a_853: loaded pointer,
    (a_854: ctype, a_855: [ctype], a_856: boolean, a_857: boolean)),
    a_861: loaded pointer, a_866: loaded pointer, a_871: loaded integer) =
      {- §6.5.2.2#4, sentence 2 -}
      unseq(
        let strong a_839: loaded pointer =
          pure(Specified(Cfunction(user_memcpy))) in
        pure((a_839, cfunction(a_839)))
      ,
        {- §6.5.4 -}
        let weak a_862: loaded pointer =
          let weak a_864: pointer = pure(p) in
          load('void*', a_864) in
        let Specified(a_863: pointer) = a_862 in
        let weak a_865: boolean =
          memop(PtrWellAligned, 'unsigned char', a_863) in
        pure(
          Specified(if a_865 then
            a_863
          else
            undef(<<UB025_misaligned_pointer_conversion>>))
        )
      ,
        {- §6.5.4 -}
        let weak a_867: loaded pointer =
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_869: pointer = pure(i) in
          pure(Specified(a_869)) in
        let Specified(a_868: pointer) = a_867 in
        let weak a_870: boolean =
          memop(PtrWellAligned, 'unsigned char', a_868) in
        pure(
          Specified(if a_870 then
            a_868
          else
            undef(<<UB025_misaligned_pointer_conversion>>))
        )
      ,
        pure(Specified(Ivsizeof('signed int')))
      ) in
    if not(params_length(a_855) = 3) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_856 \/ not(are_compatible ('void', a_854)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_860: pointer =
          let a_872: ctype = params_nth(a_855, 0) in
          if not(are_compatible ('unsigned char*', a_872)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_873: pointer = create(Ivalignof(a_872), a_872) in
            let weak _: unit = store(a_872, a_873, a_861) in
            pure(a_873) in
        let strong a_859: pointer =
          let a_874: ctype = params_nth(a_855, 1) in
          if not(are_compatible ('unsigned char*', a_874)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_875: pointer = create(Ivalignof(a_874), a_874) in
            let weak _: unit = store(a_874, a_875, a_866) in
            pure(a_875) in
        let strong a_858: pointer =
          let a_876: ctype = params_nth(a_855, 2) in
          if not(are_compatible ('size_t', a_876)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_877: pointer = create(Ivalignof(a_876), a_876) in
            let weak _: unit =
              store(a_876, a_877, conv_loaded_int(a_876, a_871)) in
            pure(a_877) in
        let strong a_878: unit =
          ccall('void (*) (unsigned char*, unsigned char*, size_t)', a_853,
          a_860, a_859, a_858) in
        let strong _: (unit,unit,unit) =
          unseq(
            kill('unsigned ichar*', a_860)
          ,
            kill('unsigned ichar*', a_859)
          ,
            kill('size_t', a_858)
          ) in
        pure(a_878)
  ) ;
  pure(Unit) ;
  let strong a_879: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_880: loaded pointer =
        let weak a_882: pointer = pure(p) in
        load('void*', a_882) in
      let Specified(a_881: pointer) = a_880 in
      let weak a_883: boolean = memop(PtrWellAligned, 'signed int', a_881) in
      pure(
        Specified(if a_883 then
          a_881
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('signed int*', q, a_879) ;
  let strong a_884: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak a_889: pointer =
        {- §6.5.3.2 -}
        let weak a_885: loaded pointer =
          let weak a_888: pointer = pure(q) in
          load('signed int*', a_888) in
        let Specified(a_886: pointer) = a_885 in
        let weak a_887: boolean =
          memop(PtrValidForDeref, 'signed int', a_886) in
        pure(
          if a_887 then a_886 else undef(<<UB043_indirection_invalid_value>>)
        ) in
      load('signed int', a_889)
    ) in
  store('signed int', j, conv_loaded_int('signed int', a_884)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_890: loaded pointer,
      (a_891: ctype, a_892: [ctype], a_893: boolean, a_894: boolean)),
      a_897: loaded pointer, a_901: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_838: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_838, cfunction(a_838)))
        ,
          let weak a_899: pointer = pure(a_898) in
          {- §6.3.2.1#3 -}
          let weak a_900: pointer = memop(PtrArrayShift, a_899, 'char', 0) in
          pure(Specified(a_900))
        ,
          let weak a_902: pointer = pure(j) in
          load('signed int', a_902)
        ) in
      if not(params_length(a_892) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_893) \/ not(are_compatible ('signed int', a_891)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_896: pointer =
            let a_903: ctype = params_nth(a_892, 0) in
            if not(are_compatible ('const char*', a_903)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_904: pointer = create(Ivalignof(a_903), a_903) in
              let weak _: unit = store(a_903, a_904, a_897) in
              pure(a_904) in
          let strong a_895: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_901)) in
          let strong a_905: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_890, a_896,
            [('signed int', a_895)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_896), kill('signed int', a_895)) in
          pure(a_905)
    ) in
  pure(Unit) ;
  kill('signed int', i) ;
  kill('void*', p) ;
  kill('signed int*', q) ;
  kill('signed int', j) ;
  pure(Unit) ;
  save ret_837: loaded integer (a_906: loaded integer:= Specified(0)) in
    pure(a_906)

