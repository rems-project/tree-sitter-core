-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_834: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_835: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_834, conv_loaded_int('signed int', a_835)) ;
  pure(a_834)

glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_832: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_833: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', a_832, conv_loaded_int('signed int', a_833)) ;
  pure(a_832)

glob a_756: pointer [ail_ctype = 'char[22]'] :=
  create_readonly(Ivalignof('char[22]'), 'char[22]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_810: pointer [ail_ctype = 'char[13]'] :=
  create_readonly(Ivalignof('char[13]'), 'char[13]', Specified(Array(Specified(conv_int('char',
  40)), Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_822: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_825: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc f (p: pointer, q: pointer): eff unit :=
  let strong b: pointer = create(Ivalignof('_Bool'), '_Bool') in
  let strong a_794: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_795: loaded pointer, a_796: loaded pointer) =
        unseq(
          let weak a_800: pointer = pure(p) in
          load('signed int*', a_800)
        ,
          let weak a_801: pointer = pure(q) in
          load('signed int*', a_801)
        ) in
      let (Specified(a_797: pointer), Specified(a_798: pointer)) =
        (a_795, a_796) in
      let weak a_799: boolean = memop(PtrEq, a_797, a_798) in
      pure(if a_799 then Specified(1) else Specified(0))
    ) in
  store('_Bool', b, conv_loaded_int('_Bool', a_794)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_802: loaded pointer,
      (a_803: ctype, a_804: [ctype], a_805: boolean, a_806: boolean)),
      a_809: loaded pointer, a_813: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_793: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_793, cfunction(a_793)))
        ,
          let weak a_811: pointer = pure(a_810) in
          {- §6.3.2.1#3 -}
          let weak a_812: pointer = memop(PtrArrayShift, a_811, 'char', 0) in
          pure(Specified(a_812))
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_820: loaded integer =
            let weak (a_814: loaded integer, a_815: loaded integer) =
              unseq(
                let weak a_819: pointer = pure(b) in
                load('_Bool', a_819)
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_816: integer), Specified(a_817: integer)) =
                (a_814, a_815) in
              if conv_int('signed int', a_816) = conv_int('signed int', a_817) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_821: integer) = a_820 in
          {- §6.5.15#4, sentence 2 -}
          if a_821 = 0 then
            let weak a_823: pointer = pure(a_822) in
            {- §6.3.2.1#3 -}
            let weak a_824: pointer =
              memop(PtrArrayShift, a_823, 'char', 0) in
            pure(Specified(a_824))
          else
            let weak a_826: pointer = pure(a_825) in
            {- §6.3.2.1#3 -}
            let weak a_827: pointer =
              memop(PtrArrayShift, a_826, 'char', 0) in
            pure(Specified(a_827))
        ) in
      if not(params_length(a_804) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_805) \/ not(are_compatible ('signed int', a_803)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_808: pointer =
            let a_828: ctype = params_nth(a_804, 0) in
            if not(are_compatible ('const char*', a_828)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_829: pointer = create(Ivalignof(a_828), a_828) in
              let weak _: unit = store(a_828, a_829, a_809) in
              pure(a_829) in
          let strong a_807: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_813) in
          let strong a_830: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_802, a_808,
            [('char*', a_807)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_808), kill('char*', a_807)) in
          pure(a_830)
    ) in
  pure(Unit) ;
  kill('_Bool', b) ;
  run ret_792(Unit) ;
  kill('_Bool', b) ;
  pure(Unit) ;
  save ret_792: unit (a_831: unit:= Unit) in  pure(a_831)

proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_738: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_739: loaded pointer, a_741: loaded integer) =
        unseq(
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_744: pointer = pure(x) in
          pure(Specified(a_744))
        ,
          pure(Specified(1))
        ) in
      let (Specified(a_740: pointer), Specified(a_742: integer)) =
        (a_739, a_741) in
      let weak a_743: pointer =
        memop(PtrArrayShift, a_740, 'signed int', a_742) in
      pure(Specified(a_743))
    ) in
  store('signed int*', p, a_738) ;
  let strong a_745: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_746: pointer = pure(y) in
      pure(Specified(a_746))
    ) in
  store('signed int*', q, a_745) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_747: loaded pointer,
      (a_748: ctype, a_749: [ctype], a_750: boolean, a_751: boolean)),
      a_755: loaded pointer, a_759: loaded pointer, a_764: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_737: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_737, cfunction(a_737)))
        ,
          let weak a_757: pointer = pure(a_756) in
          {- §6.3.2.1#3 -}
          let weak a_758: pointer = memop(PtrArrayShift, a_757, 'char', 0) in
          pure(Specified(a_758))
        ,
          {- §6.5.4 -}
          let weak a_762: pointer = pure(p) in
          load('signed int*', a_762)
        ,
          {- §6.5.4 -}
          let weak a_767: pointer = pure(q) in
          load('signed int*', a_767)
        ) in
      if not(params_length(a_749) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_750) \/ not(are_compatible ('signed int', a_748)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_754: pointer =
            let a_769: ctype = params_nth(a_749, 0) in
            if not(are_compatible ('const char*', a_769)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_770: pointer = create(Ivalignof(a_769), a_769) in
              let weak _: unit = store(a_769, a_770, a_755) in
              pure(a_770) in
          let strong a_753: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_759) in
          let strong a_752: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_764) in
          let strong a_771: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_747, a_754,
            [('void*', a_753), ('void*', a_752)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_754)
            ,
              kill('void*', a_753)
            ,
              kill('void*', a_752)
            ) in
          pure(a_771)
    ) in
  pure(Unit) ;
  {- §6.5#2 -}
  bound(
    {- §6.5.2.2#10, sentence 1 -}
    let strong ((a_772: loaded pointer,
    (a_773: ctype, a_774: [ctype], a_775: boolean, a_776: boolean)),
    a_779: loaded pointer, a_781: loaded pointer) =
      {- §6.5.2.2#4, sentence 2 -}
      unseq(
        let strong a_736: loaded pointer = pure(Specified(Cfunction(f))) in
        pure((a_736, cfunction(a_736)))
      ,
        let weak a_780: pointer = pure(p) in
        load('signed int*', a_780)
      ,
        let weak a_782: pointer = pure(q) in
        load('signed int*', a_782)
      ) in
    if not(params_length(a_774) = 2) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_775 \/ not(are_compatible ('void', a_773)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_778: pointer =
          let a_783: ctype = params_nth(a_774, 0) in
          if not(are_compatible ('signed int*', a_783)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_784: pointer = create(Ivalignof(a_783), a_783) in
            let weak _: unit = store(a_783, a_784, a_779) in
            pure(a_784) in
        let strong a_777: pointer =
          let a_785: ctype = params_nth(a_774, 1) in
          if not(are_compatible ('signed int*', a_785)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_786: pointer = create(Ivalignof(a_785), a_785) in
            let weak _: unit = store(a_785, a_786, a_781) in
            pure(a_786) in
        let strong a_787: unit =
          ccall('void (*) (signed int*, signed int*)', a_772, a_778, a_777) in
        let strong _: (unit,unit) =
          unseq(kill('signed int*', a_778), kill('signed int*', a_777)) in
        pure(a_787)
  ) ;
  pure(Unit) ;
  let strong a_788: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  run ret_735(conv_loaded_int('signed int', a_788)) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_735: loaded integer (a_789: loaded integer:= Specified(0)) in
    pure(a_789)

