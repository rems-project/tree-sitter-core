-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_648 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_680 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_790: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_791: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_790, conv_loaded_int('signed int', a_791)) ;
  pure(a_790)

glob a_756: pointer [ail_ctype = 'char[39]'] :=
  create_readonly(Ivalignof('char[39]'), 'char[39]', Specified(Array(Specified(conv_int('char',
  105)), Specified(conv_int('char', 61)), Specified(conv_int('char', 48)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 85)),
  Specified(conv_int('char', 73)), Specified(conv_int('char', 78)),
  Specified(conv_int('char', 84)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 77)), Specified(conv_int('char', 65)),
  Specified(conv_int('char', 88)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 48)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 85)),
  Specified(conv_int('char', 76)), Specified(conv_int('char', 79)),
  Specified(conv_int('char', 78)), Specified(conv_int('char', 71)),
  Specified(conv_int('char', 95)), Specified(conv_int('char', 77)),
  Specified(conv_int('char', 65)), Specified(conv_int('char', 88)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 48)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_775: pointer [ail_ctype = 'char[13]'] :=
  create_readonly(Ivalignof('char[13]'), 'char[13]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong i: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong j: pointer = create(Ivalignof('unsigned int'), 'unsigned int') in
  let strong k: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_711: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_712: pointer = pure(x) in
      pure(Specified(a_712))
    ) in
  store('signed int*', p, a_711) ;
  let strong a_713: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_714: loaded pointer =
        let weak a_716: pointer = pure(p) in
        load('signed int*', a_716) in
      let Specified(a_715: pointer) = a_714 in
      let weak a_717: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_715) in
      pure(Specified(a_717))
    ) in
  store('uintptr_t', i, conv_loaded_int('uintptr_t', a_713)) ;
  {- §6.5#2 -}
  bound(
    let strong a_710: loaded integer =
      {- §6.5.8 -}
      let weak (a_721: loaded integer, a_722: loaded integer) =
        unseq(
          let weak a_720: pointer = pure(i) in
          load('uintptr_t', a_720)
        ,
          pure(Specified(4294967295))
        ) in
      let (Specified(a_723: integer), Specified(a_724: integer)) =
        (a_721, a_722) in
      {- §6.5.8#6 -}
      pure(
        if conv_int('uintptr_t', a_723) <= conv_int('uintptr_t', a_724) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_718: integer) = a_710 in
      if a_718 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  let strong a_726: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_727: loaded integer =
        let weak a_729: pointer = pure(i) in
        load('uintptr_t', a_729) in
      pure(conv_loaded_int('unsigned int', a_727))
    ) in
  store('unsigned int', j, conv_loaded_int('unsigned int', a_726)) ;
  let strong a_731: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_732: loaded integer =
        let weak a_734: pointer = pure(j) in
        load('unsigned int', a_734) in
      pure(conv_loaded_int('uintptr_t', a_732))
    ) in
  store('uintptr_t', k, conv_loaded_int('uintptr_t', a_731)) ;
  let strong a_736: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_737: loaded integer =
        let weak a_739: pointer = pure(k) in
        load('uintptr_t', a_739) in
      let Specified(a_738: integer) = a_737 in
      let weak a_740: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_738) in
      pure(Specified(a_740))
    ) in
  store('signed int*', q, a_736) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_709: pointer, a_745: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_741: loaded pointer =
            let weak a_744: pointer = pure(q) in
            load('signed int*', a_744) in
          let Specified(a_742: pointer) = a_741 in
          let weak a_743: boolean =
            memop(PtrValidForDeref, 'signed int', a_742) in
          pure(
            if a_743 then
              a_742
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(2))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_709, conv_loaded_int('signed int', a_745))) in
      pure(conv_loaded_int('signed int', a_745))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_746: loaded pointer,
      (a_747: ctype, a_748: [ctype], a_749: boolean, a_750: boolean)),
      a_755: loaded pointer, a_759: loaded integer, a_761: loaded integer,
      a_762: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_708: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_708, cfunction(a_708)))
        ,
          let weak a_757: pointer = pure(a_756) in
          {- §6.3.2.1#3 -}
          let weak a_758: pointer = memop(PtrArrayShift, a_757, 'char', 0) in
          pure(Specified(a_758))
        ,
          let weak a_760: pointer = pure(i) in
          load('uintptr_t', a_760)
        ,
          pure(Specified(4294967295))
        ,
          pure(Specified(18446744073709551615))
        ) in
      if not(params_length(a_748) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_749) \/ not(are_compatible ('signed int', a_747)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_754: pointer =
            let a_763: ctype = params_nth(a_748, 0) in
            if not(are_compatible ('const char*', a_763)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_764: pointer = create(Ivalignof(a_763), a_763) in
              let weak _: unit = store(a_763, a_764, a_755) in
              pure(a_764) in
          let strong a_753: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'uintptr_t',
            conv_loaded_int('uintptr_t', a_759)) in
          let strong a_752: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'unsigned int',
            conv_loaded_int('unsigned int', a_761)) in
          let strong a_751: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'unsigned long',
            conv_loaded_int('unsigned long', a_762)) in
          let strong a_765: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_746, a_754,
            [('uintptr_t', a_753), ('unsigned int', a_752),
            ('unsigned long', a_751)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_754)
            ,
              kill('uintptr_t', a_753)
            ,
              kill('unsigned int', a_752)
            ,
              kill('unsigned long', a_751)
            ) in
          pure(a_765)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_766: loaded pointer,
      (a_767: ctype, a_768: [ctype], a_769: boolean, a_770: boolean)),
      a_774: loaded pointer, a_778: loaded integer, a_780: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_707: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_707, cfunction(a_707)))
        ,
          let weak a_776: pointer = pure(a_775) in
          {- §6.3.2.1#3 -}
          let weak a_777: pointer = memop(PtrArrayShift, a_776, 'char', 0) in
          pure(Specified(a_777))
        ,
          let weak a_779: pointer = pure(x) in
          load('signed int', a_779)
        ,
          let weak a_785: pointer =
            {- §6.5.3.2 -}
            let weak a_781: loaded pointer =
              let weak a_784: pointer = pure(q) in
              load('signed int*', a_784) in
            let Specified(a_782: pointer) = a_781 in
            let weak a_783: boolean =
              memop(PtrValidForDeref, 'signed int', a_782) in
            pure(
              if a_783 then
                a_782
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_785)
        ) in
      if not(params_length(a_768) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_769) \/ not(are_compatible ('signed int', a_767)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_773: pointer =
            let a_786: ctype = params_nth(a_768, 0) in
            if not(are_compatible ('const char*', a_786)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_787: pointer = create(Ivalignof(a_786), a_786) in
              let weak _: unit = store(a_786, a_787, a_774) in
              pure(a_787) in
          let strong a_772: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_778)) in
          let strong a_771: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_780)) in
          let strong a_788: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_766, a_773,
            [('signed int', a_772), ('signed int', a_771)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_773)
            ,
              kill('signed int', a_772)
            ,
              kill('signed int', a_771)
            ) in
          pure(a_788)
    ) in
  pure(Unit) ;
  kill('signed int*', p) ;
  kill('uintptr_t', i) ;
  kill('unsigned int', j) ;
  kill('uintptr_t', k) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_706: loaded integer (a_789: loaded integer:= Specified(0)) in
    pure(a_789)

