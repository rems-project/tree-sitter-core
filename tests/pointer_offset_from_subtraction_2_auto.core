-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_754 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_758 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob a_845: pointer [ail_ctype = 'char[40]'] :=
  create_readonly(Ivalignof('char[40]'), 'char[40]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 38)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_867: pointer [ail_ctype = 'char[40]'] :=
  create_readonly(Ivalignof('char[40]'), 'char[40]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 122)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 38)),
  Specified(conv_int('char', 119)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 122)), Specified(conv_int('char', 119)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_952: pointer [ail_ctype = 'char[26]'] :=
  create_readonly(Ivalignof('char[26]'), 'char[26]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong w: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong z: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong y: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong ux: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong uy: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong offsetxy: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong uz: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong uw: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong offsetzw: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_795: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(4))) in
  store('signed int', w, conv_loaded_int('signed int', a_795)) ;
  let strong a_796: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(3))) in
  store('signed int', z, conv_loaded_int('signed int', a_796)) ;
  let strong a_797: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', y, conv_loaded_int('signed int', a_797)) ;
  let strong a_798: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', x, conv_loaded_int('signed int', a_798)) ;
  let strong a_799: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_800: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_802: pointer = pure(x) in
        pure(Specified(a_802)) in
      let Specified(a_801: pointer) = a_800 in
      let weak a_803: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_801) in
      pure(Specified(a_803))
    ) in
  store('intptr_t', ux, conv_loaded_int('intptr_t', a_799)) ;
  let strong a_804: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_805: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_807: pointer = pure(y) in
        pure(Specified(a_807)) in
      let Specified(a_806: pointer) = a_805 in
      let weak a_808: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_806) in
      pure(Specified(a_808))
    ) in
  store('intptr_t', uy, conv_loaded_int('intptr_t', a_804)) ;
  let strong a_809: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_812: loaded integer, a_813: loaded integer) =
        unseq(
          let weak a_810: pointer = pure(uy) in
          load('intptr_t', a_810)
        ,
          let weak a_811: pointer = pure(ux) in
          load('intptr_t', a_811)
        ) in
      pure(
        let (Specified(a_814: integer), Specified(a_815: integer)) =
          (a_812, a_813) in
        Specified(catch_exceptional_condition('intptr_t',
        conv_int('intptr_t', a_814) - conv_int('intptr_t', a_815)))
      )
    ) in
  store('intptr_t', offsetxy, conv_loaded_int('intptr_t', a_809)) ;
  let strong a_817: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_818: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_820: pointer = pure(z) in
        pure(Specified(a_820)) in
      let Specified(a_819: pointer) = a_818 in
      let weak a_821: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_819) in
      pure(Specified(a_821))
    ) in
  store('intptr_t', uz, conv_loaded_int('intptr_t', a_817)) ;
  let strong a_822: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_823: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_825: pointer = pure(w) in
        pure(Specified(a_825)) in
      let Specified(a_824: pointer) = a_823 in
      let weak a_826: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_824) in
      pure(Specified(a_826))
    ) in
  store('intptr_t', uw, conv_loaded_int('intptr_t', a_822)) ;
  let strong a_827: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_830: loaded integer, a_831: loaded integer) =
        unseq(
          let weak a_828: pointer = pure(uw) in
          load('intptr_t', a_828)
        ,
          let weak a_829: pointer = pure(uz) in
          load('intptr_t', a_829)
        ) in
      pure(
        let (Specified(a_832: integer), Specified(a_833: integer)) =
          (a_830, a_831) in
        Specified(catch_exceptional_condition('intptr_t',
        conv_int('intptr_t', a_832) - conv_int('intptr_t', a_833)))
      )
    ) in
  store('intptr_t', offsetzw, conv_loaded_int('intptr_t', a_827)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_835: loaded pointer,
      (a_836: ctype, a_837: [ctype], a_838: boolean, a_839: boolean)),
      a_844: loaded pointer, a_848: loaded integer, a_850: loaded integer,
      a_852: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_794: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_794, cfunction(a_794)))
        ,
          let weak a_846: pointer = pure(a_845) in
          {- §6.3.2.1#3 -}
          let weak a_847: pointer = memop(PtrArrayShift, a_846, 'char', 0) in
          pure(Specified(a_847))
        ,
          let weak a_849: pointer = pure(ux) in
          load('intptr_t', a_849)
        ,
          let weak a_851: pointer = pure(uy) in
          load('intptr_t', a_851)
        ,
          let weak a_853: pointer = pure(offsetxy) in
          load('intptr_t', a_853)
        ) in
      if not(params_length(a_837) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_838) \/ not(are_compatible ('signed int', a_836)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_843: pointer =
            let a_854: ctype = params_nth(a_837, 0) in
            if not(are_compatible ('const char*', a_854)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_855: pointer = create(Ivalignof(a_854), a_854) in
              let weak _: unit = store(a_854, a_855, a_844) in
              pure(a_855) in
          let strong a_842: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_848)) in
          let strong a_841: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_850)) in
          let strong a_840: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_852)) in
          let strong a_856: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_835, a_843,
            [('intptr_t', a_842), ('intptr_t', a_841), ('intptr_t', a_840)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_843)
            ,
              kill('intptr_t', a_842)
            ,
              kill('intptr_t', a_841)
            ,
              kill('intptr_t', a_840)
            ) in
          pure(a_856)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_857: loaded pointer,
      (a_858: ctype, a_859: [ctype], a_860: boolean, a_861: boolean)),
      a_866: loaded pointer, a_870: loaded integer, a_872: loaded integer,
      a_874: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_793: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_793, cfunction(a_793)))
        ,
          let weak a_868: pointer = pure(a_867) in
          {- §6.3.2.1#3 -}
          let weak a_869: pointer = memop(PtrArrayShift, a_868, 'char', 0) in
          pure(Specified(a_869))
        ,
          let weak a_871: pointer = pure(uz) in
          load('intptr_t', a_871)
        ,
          let weak a_873: pointer = pure(uw) in
          load('intptr_t', a_873)
        ,
          let weak a_875: pointer = pure(offsetzw) in
          load('intptr_t', a_875)
        ) in
      if not(params_length(a_859) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_860) \/ not(are_compatible ('signed int', a_858)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_865: pointer =
            let a_876: ctype = params_nth(a_859, 0) in
            if not(are_compatible ('const char*', a_876)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_877: pointer = create(Ivalignof(a_876), a_876) in
              let weak _: unit = store(a_876, a_877, a_866) in
              pure(a_877) in
          let strong a_864: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_870)) in
          let strong a_863: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_872)) in
          let strong a_862: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_874)) in
          let strong a_878: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_857, a_865,
            [('intptr_t', a_864), ('intptr_t', a_863), ('intptr_t', a_862)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_865)
            ,
              kill('intptr_t', a_864)
            ,
              kill('intptr_t', a_863)
            ,
              kill('intptr_t', a_862)
            ) in
          pure(a_878)
    ) in
  pure(Unit) ;
  {- §6.5#2 -}
  bound(
    let strong a_792: loaded integer =
      let weak (a_881: loaded integer, a_882: loaded integer) =
        unseq(
          let weak a_886: pointer = pure(offsetzw) in
          load('intptr_t', a_886)
        ,
          let weak a_887: pointer = pure(offsetxy) in
          load('intptr_t', a_887)
        ) in
      pure(
        let (Specified(a_883: integer), Specified(a_884: integer)) =
          (a_881, a_882) in
        if conv_int('intptr_t', a_883) = conv_int('intptr_t', a_884) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_879: integer) = a_792 in
      if a_879 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  let strong a_888: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_889: loaded integer =
        {- §6.5.6 -}
        let weak (a_891: loaded integer, a_892: loaded integer) =
          unseq(
            let weak a_896: pointer = pure(ux) in
            load('intptr_t', a_896)
          ,
            let weak a_897: pointer = pure(offsetzw) in
            load('intptr_t', a_897)
          ) in
        pure(
          let (Specified(a_893: integer), Specified(a_894: integer)) =
            (a_891, a_892) in
          Specified(catch_exceptional_condition('intptr_t',
          conv_int('intptr_t', a_893) + conv_int('intptr_t', a_894)))
        ) in
      let Specified(a_890: integer) = a_889 in
      let weak a_898: pointer =
        memop(PtrFromInt, 'intptr_t', 'signed int', a_890) in
      pure(Specified(a_898))
    ) in
  store('signed int*', p, a_888) ;
  let strong a_899: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_900: pointer = pure(y) in
      pure(Specified(a_900))
    ) in
  store('signed int*', q, a_899) ;
  let strong a_901: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_903: loaded integer, a_904: loaded integer) =
        unseq(
          let weak (a_908: loaded integer, a_909: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_914: loaded pointer,
              (a_915: ctype, a_916: [ctype], a_917: boolean, a_918: boolean)),
              a_922: loaded pointer, a_924: loaded pointer,
              a_926: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_913: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_913, cfunction(a_913)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_923: pointer = pure(p) in
                  pure(Specified(a_923))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_925: pointer = pure(q) in
                  pure(Specified(a_925))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_916) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_917 \/ not(are_compatible ('signed int', a_915)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_921: pointer =
                    let a_927: ctype = params_nth(a_916, 0) in
                    if not(are_compatible ('const void*', a_927)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_928: pointer =
                        create(Ivalignof(a_927), a_927) in
                      let weak _: unit = store(a_927, a_928, a_922) in
                      pure(a_928) in
                  let strong a_920: pointer =
                    let a_929: ctype = params_nth(a_916, 1) in
                    if not(are_compatible ('const void*', a_929)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_930: pointer =
                        create(Ivalignof(a_929), a_929) in
                      let weak _: unit = store(a_929, a_930, a_924) in
                      pure(a_930) in
                  let strong a_919: pointer =
                    let a_931: ctype = params_nth(a_916, 2) in
                    if not(are_compatible ('size_t', a_931)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_932: pointer =
                        create(Ivalignof(a_931), a_931) in
                      let weak _: unit =
                        store(a_931, a_932, conv_loaded_int(a_931, a_926)) in
                      pure(a_932) in
                  let strong a_933: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_914, a_921, a_920, a_919) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_921)
                    ,
                      kill('void*', a_920)
                    ,
                      kill('size_t', a_919)
                    ) in
                  pure(a_933)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_910: integer), Specified(a_911: integer)) =
              (a_908, a_909) in
            if conv_int('signed int', a_910) = conv_int('signed int', a_911) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_905: integer), Specified(a_906: integer)) =
          (a_903, a_904) in
        if conv_int('signed int', a_905) = conv_int('signed int', a_906) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_791: boolean =
    let Specified(a_902: integer) = a_901 in
    pure(if not(a_902 = 1) then True else False) in
  if a_791 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_935: pointer, a_940: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_936: loaded pointer =
              let weak a_939: pointer = pure(p) in
              load('signed int*', a_939) in
            let Specified(a_937: pointer) = a_936 in
            let weak a_938: boolean =
              memop(PtrValidForDeref, 'signed int', a_937) in
            pure(
              if a_938 then
                a_937
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_935, conv_loaded_int('signed int', a_940))) in
        pure(conv_loaded_int('signed int', a_940))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_941: loaded pointer,
        (a_942: ctype, a_943: [ctype], a_944: boolean, a_945: boolean)),
        a_951: loaded pointer, a_955: loaded integer, a_957: loaded integer,
        a_959: loaded integer, a_965: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_934: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_934, cfunction(a_934)))
          ,
            let weak a_953: pointer = pure(a_952) in
            {- §6.3.2.1#3 -}
            let weak a_954: pointer =
              memop(PtrArrayShift, a_953, 'char', 0) in
            pure(Specified(a_954))
          ,
            let weak a_956: pointer = pure(x) in
            load('signed int', a_956)
          ,
            let weak a_958: pointer = pure(y) in
            load('signed int', a_958)
          ,
            let weak a_964: pointer =
              {- §6.5.3.2 -}
              let weak a_960: loaded pointer =
                let weak a_963: pointer = pure(p) in
                load('signed int*', a_963) in
              let Specified(a_961: pointer) = a_960 in
              let weak a_962: boolean =
                memop(PtrValidForDeref, 'signed int', a_961) in
              pure(
                if a_962 then
                  a_961
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_964)
          ,
            let weak a_970: pointer =
              {- §6.5.3.2 -}
              let weak a_966: loaded pointer =
                let weak a_969: pointer = pure(q) in
                load('signed int*', a_969) in
              let Specified(a_967: pointer) = a_966 in
              let weak a_968: boolean =
                memop(PtrValidForDeref, 'signed int', a_967) in
              pure(
                if a_968 then
                  a_967
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_970)
          ) in
        if not(params_length(a_943) <= 5) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_944) \/ not(are_compatible ('signed int', a_942)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_950: pointer =
              let a_971: ctype = params_nth(a_943, 0) in
              if not(are_compatible ('const char*', a_971)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_972: pointer = create(Ivalignof(a_971), a_971) in
                let weak _: unit = store(a_971, a_972, a_951) in
                pure(a_972) in
            let strong a_949: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_955)) in
            let strong a_948: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_957)) in
            let strong a_947: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_959)) in
            let strong a_946: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_965)) in
            let strong a_973: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_941, a_950,
              [('signed int', a_949), ('signed int', a_948),
              ('signed int', a_947), ('signed int', a_946)]) in
            let strong _: (unit,unit,unit,unit,unit) =
              unseq(
                kill('char*', a_950)
              ,
                kill('signed int', a_949)
              ,
                kill('signed int', a_948)
              ,
                kill('signed int', a_947)
              ,
                kill('signed int', a_946)
              ) in
            pure(a_973)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  kill('signed int', w) ;
  kill('signed int', z) ;
  kill('signed int', y) ;
  kill('signed int', x) ;
  kill('intptr_t', ux) ;
  kill('intptr_t', uy) ;
  kill('intptr_t', offsetxy) ;
  kill('intptr_t', uz) ;
  kill('intptr_t', uw) ;
  kill('intptr_t', offsetzw) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_790: loaded integer (a_974: loaded integer:= Specified(0)) in
    pure(a_974)

