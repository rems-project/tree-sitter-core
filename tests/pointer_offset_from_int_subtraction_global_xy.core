-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_754 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_758 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_926: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_927: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_926, conv_loaded_int('signed int', a_927)) ;
  pure(a_926)

glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_924: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_925: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', a_924, conv_loaded_int('signed int', a_925)) ;
  pure(a_924)

glob a_816: pointer [ail_ctype = 'char[38]'] :=
  create_readonly(Ivalignof('char[38]'), 'char[38]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 38)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_901: pointer [ail_ctype = 'char[23]'] :=
  create_readonly(Ivalignof('char[23]'), 'char[23]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong ux: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong uy: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong offset: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_788: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_789: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_791: pointer = pure(x) in
        pure(Specified(a_791)) in
      let Specified(a_790: pointer) = a_789 in
      let weak a_792: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_790) in
      pure(Specified(a_792))
    ) in
  store('uintptr_t', ux, conv_loaded_int('uintptr_t', a_788)) ;
  let strong a_793: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_794: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_796: pointer = pure(y) in
        pure(Specified(a_796)) in
      let Specified(a_795: pointer) = a_794 in
      let weak a_797: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_795) in
      pure(Specified(a_797))
    ) in
  store('uintptr_t', uy, conv_loaded_int('uintptr_t', a_793)) ;
  let strong a_798: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_801: loaded integer, a_802: loaded integer) =
        unseq(
          let weak a_799: pointer = pure(uy) in
          load('uintptr_t', a_799)
        ,
          let weak a_800: pointer = pure(ux) in
          load('uintptr_t', a_800)
        ) in
      pure(
        let (Specified(a_803: integer), Specified(a_804: integer)) =
          (a_801, a_802) in
        Specified(wrapI('uintptr_t',
        conv_int('uintptr_t', a_803) - conv_int('uintptr_t', a_804)))
      )
    ) in
  store('uintptr_t', offset, conv_loaded_int('uintptr_t', a_798)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_806: loaded pointer,
      (a_807: ctype, a_808: [ctype], a_809: boolean, a_810: boolean)),
      a_815: loaded pointer, a_819: loaded integer, a_824: loaded integer,
      a_829: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_787: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_787, cfunction(a_787)))
        ,
          let weak a_817: pointer = pure(a_816) in
          {- §6.3.2.1#3 -}
          let weak a_818: pointer = memop(PtrArrayShift, a_817, 'char', 0) in
          pure(Specified(a_818))
        ,
          {- §6.5.4 -}
          let weak a_820: loaded integer =
            let weak a_822: pointer = pure(ux) in
            load('uintptr_t', a_822) in
          pure(conv_loaded_int('unsigned long', a_820))
        ,
          {- §6.5.4 -}
          let weak a_825: loaded integer =
            let weak a_827: pointer = pure(uy) in
            load('uintptr_t', a_827) in
          pure(conv_loaded_int('unsigned long', a_825))
        ,
          {- §6.5.4 -}
          let weak a_830: loaded integer =
            let weak a_832: pointer = pure(offset) in
            load('uintptr_t', a_832) in
          pure(conv_loaded_int('unsigned long', a_830))
        ) in
      if not(params_length(a_808) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_809) \/ not(are_compatible ('signed int', a_807)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_814: pointer =
            let a_834: ctype = params_nth(a_808, 0) in
            if not(are_compatible ('const char*', a_834)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_835: pointer = create(Ivalignof(a_834), a_834) in
              let weak _: unit = store(a_834, a_835, a_815) in
              pure(a_835) in
          let strong a_813: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'unsigned long',
            conv_loaded_int('unsigned long', a_819)) in
          let strong a_812: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'unsigned long',
            conv_loaded_int('unsigned long', a_824)) in
          let strong a_811: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'unsigned long',
            conv_loaded_int('unsigned long', a_829)) in
          let strong a_836: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_806, a_814,
            [('unsigned long', a_813), ('unsigned long', a_812),
            ('unsigned long', a_811)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_814)
            ,
              kill('unsigned long', a_813)
            ,
              kill('unsigned long', a_812)
            ,
              kill('unsigned long', a_811)
            ) in
          pure(a_836)
    ) in
  pure(Unit) ;
  let strong a_837: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_838: loaded integer =
        {- §6.5.6 -}
        let weak (a_840: loaded integer, a_841: loaded integer) =
          unseq(
            let weak a_845: pointer = pure(ux) in
            load('uintptr_t', a_845)
          ,
            let weak a_846: pointer = pure(offset) in
            load('uintptr_t', a_846)
          ) in
        pure(
          let (Specified(a_842: integer), Specified(a_843: integer)) =
            (a_840, a_841) in
          Specified(wrapI('uintptr_t',
          conv_int('uintptr_t', a_842) + conv_int('uintptr_t', a_843)))
        ) in
      let Specified(a_839: integer) = a_838 in
      let weak a_847: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_839) in
      pure(Specified(a_847))
    ) in
  store('signed int*', p, a_837) ;
  let strong a_848: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_849: pointer = pure(y) in
      pure(Specified(a_849))
    ) in
  store('signed int*', q, a_848) ;
  let strong a_850: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_852: loaded integer, a_853: loaded integer) =
        unseq(
          let weak (a_857: loaded integer, a_858: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_863: loaded pointer,
              (a_864: ctype, a_865: [ctype], a_866: boolean, a_867: boolean)),
              a_871: loaded pointer, a_873: loaded pointer,
              a_875: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_862: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_862, cfunction(a_862)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_872: pointer = pure(p) in
                  pure(Specified(a_872))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_874: pointer = pure(q) in
                  pure(Specified(a_874))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_865) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_866 \/ not(are_compatible ('signed int', a_864)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_870: pointer =
                    let a_876: ctype = params_nth(a_865, 0) in
                    if not(are_compatible ('const void*', a_876)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_877: pointer =
                        create(Ivalignof(a_876), a_876) in
                      let weak _: unit = store(a_876, a_877, a_871) in
                      pure(a_877) in
                  let strong a_869: pointer =
                    let a_878: ctype = params_nth(a_865, 1) in
                    if not(are_compatible ('const void*', a_878)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_879: pointer =
                        create(Ivalignof(a_878), a_878) in
                      let weak _: unit = store(a_878, a_879, a_873) in
                      pure(a_879) in
                  let strong a_868: pointer =
                    let a_880: ctype = params_nth(a_865, 2) in
                    if not(are_compatible ('size_t', a_880)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_881: pointer =
                        create(Ivalignof(a_880), a_880) in
                      let weak _: unit =
                        store(a_880, a_881, conv_loaded_int(a_880, a_875)) in
                      pure(a_881) in
                  let strong a_882: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_863, a_870, a_869, a_868) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_870)
                    ,
                      kill('void*', a_869)
                    ,
                      kill('size_t', a_868)
                    ) in
                  pure(a_882)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_859: integer), Specified(a_860: integer)) =
              (a_857, a_858) in
            if conv_int('signed int', a_859) = conv_int('signed int', a_860) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_854: integer), Specified(a_855: integer)) =
          (a_852, a_853) in
        if conv_int('signed int', a_854) = conv_int('signed int', a_855) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_786: boolean =
    let Specified(a_851: integer) = a_850 in
    pure(if not(a_851 = 1) then True else False) in
  if a_786 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_884: pointer, a_889: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_885: loaded pointer =
              let weak a_888: pointer = pure(p) in
              load('signed int*', a_888) in
            let Specified(a_886: pointer) = a_885 in
            let weak a_887: boolean =
              memop(PtrValidForDeref, 'signed int', a_886) in
            pure(
              if a_887 then
                a_886
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_884, conv_loaded_int('signed int', a_889))) in
        pure(conv_loaded_int('signed int', a_889))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_890: loaded pointer,
        (a_891: ctype, a_892: [ctype], a_893: boolean, a_894: boolean)),
        a_900: loaded pointer, a_904: loaded integer, a_906: loaded integer,
        a_908: loaded integer, a_914: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_883: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_883, cfunction(a_883)))
          ,
            let weak a_902: pointer = pure(a_901) in
            {- §6.3.2.1#3 -}
            let weak a_903: pointer =
              memop(PtrArrayShift, a_902, 'char', 0) in
            pure(Specified(a_903))
          ,
            let weak a_905: pointer = pure(x) in
            load('signed int', a_905)
          ,
            let weak a_907: pointer = pure(y) in
            load('signed int', a_907)
          ,
            let weak a_913: pointer =
              {- §6.5.3.2 -}
              let weak a_909: loaded pointer =
                let weak a_912: pointer = pure(p) in
                load('signed int*', a_912) in
              let Specified(a_910: pointer) = a_909 in
              let weak a_911: boolean =
                memop(PtrValidForDeref, 'signed int', a_910) in
              pure(
                if a_911 then
                  a_910
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_913)
          ,
            let weak a_919: pointer =
              {- §6.5.3.2 -}
              let weak a_915: loaded pointer =
                let weak a_918: pointer = pure(q) in
                load('signed int*', a_918) in
              let Specified(a_916: pointer) = a_915 in
              let weak a_917: boolean =
                memop(PtrValidForDeref, 'signed int', a_916) in
              pure(
                if a_917 then
                  a_916
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_919)
          ) in
        if not(params_length(a_892) <= 5) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_893) \/ not(are_compatible ('signed int', a_891)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_899: pointer =
              let a_920: ctype = params_nth(a_892, 0) in
              if not(are_compatible ('const char*', a_920)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_921: pointer = create(Ivalignof(a_920), a_920) in
                let weak _: unit = store(a_920, a_921, a_900) in
                pure(a_921) in
            let strong a_898: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_904)) in
            let strong a_897: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_906)) in
            let strong a_896: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_908)) in
            let strong a_895: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_914)) in
            let strong a_922: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_890, a_899,
              [('signed int', a_898), ('signed int', a_897),
              ('signed int', a_896), ('signed int', a_895)]) in
            let strong _: (unit,unit,unit,unit,unit) =
              unseq(
                kill('char*', a_899)
              ,
                kill('signed int', a_898)
              ,
                kill('signed int', a_897)
              ,
                kill('signed int', a_896)
              ,
                kill('signed int', a_895)
              ) in
            pure(a_922)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  kill('uintptr_t', ux) ;
  kill('uintptr_t', uy) ;
  kill('uintptr_t', offset) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_785: loaded integer (a_923: loaded integer:= Specified(0)) in
    pure(a_923)

