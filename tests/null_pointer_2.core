-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_648 :=
  __dummy_max_align_t: 'void*'

-- Globals
glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_831: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_832: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  store('signed int', a_831, conv_loaded_int('signed int', a_832)) ;
  pure(a_831)

glob a_785: pointer [ail_ctype = 'char[11]'] :=
  create_readonly(Ivalignof('char[11]'), 'char[11]', Specified(Array(Specified(conv_int('char',
  112)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_809: pointer [ail_ctype = 'char[4]'] :=
  create_readonly(Ivalignof('char[4]'), 'char[4]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_821: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  101)), Specified(conv_int('char', 113)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(0))))

glob a_824: pointer [ail_ctype = 'char[8]'] :=
  create_readonly(Ivalignof('char[8]'), 'char[8]', Specified(Array(Specified(conv_int('char',
  117)), Specified(conv_int('char', 110)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('char*'), 'char*') in
  let strong b: pointer = create(Ivalignof('_Bool'), '_Bool') in
  {- §6.5#2 -}
  bound(
    let strong a_739: loaded integer =
      let weak (a_742: loaded integer, a_743: loaded integer) =
        unseq(
          pure(Specified(Ivsizeof('signed int*')))
        ,
          pure(Specified(Ivsizeof('char*')))
        ) in
      pure(
        let (Specified(a_744: integer), Specified(a_745: integer)) =
          (a_742, a_743) in
        if conv_int('size_t', a_744) = conv_int('size_t', a_745) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_740: integer) = a_739 in
      if a_740 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  store('signed int*', p, Specified(NULL(signed int))) ;
  store('char*', q, Specified(NULL(char))) ;
  let strong a_749: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_750: loaded integer, a_751: loaded integer) =
        unseq(
          {- §6.5.2.2#10, sentence 1 -}
          let strong ((a_756: loaded pointer,
          (a_757: ctype, a_758: [ctype], a_759: boolean, a_760: boolean)),
          a_764: loaded pointer, a_766: loaded pointer, a_768: loaded integer) =
            {- §6.5.2.2#4, sentence 2 -}
            unseq(
              let strong a_755: loaded pointer =
                pure(Specified(Cfunction(memcmp_proxy))) in
              pure((a_755, cfunction(a_755)))
            ,
              {- §6.5.3.2#3, sentence 5 -}
              let weak a_765: pointer = pure(p) in
              pure(Specified(a_765))
            ,
              {- §6.5.3.2#3, sentence 5 -}
              let weak a_767: pointer = pure(q) in
              pure(Specified(a_767))
            ,
              pure(Specified(Ivsizeof('signed int*')))
            ) in
          if not(params_length(a_758) = 3) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_759 \/ not(are_compatible ('signed int', a_757)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_763: pointer =
                let a_769: ctype = params_nth(a_758, 0) in
                if not(are_compatible ('const void*', a_769)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {- §6.5.2.2#7, sentence 1 -}
                  let weak a_770: pointer = create(Ivalignof(a_769), a_769) in
                  let weak _: unit = store(a_769, a_770, a_764) in
                  pure(a_770) in
              let strong a_762: pointer =
                let a_771: ctype = params_nth(a_758, 1) in
                if not(are_compatible ('const void*', a_771)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {- §6.5.2.2#7, sentence 1 -}
                  let weak a_772: pointer = create(Ivalignof(a_771), a_771) in
                  let weak _: unit = store(a_771, a_772, a_766) in
                  pure(a_772) in
              let strong a_761: pointer =
                let a_773: ctype = params_nth(a_758, 2) in
                if not(are_compatible ('size_t', a_773)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {- §6.5.2.2#7, sentence 1 -}
                  let weak a_774: pointer = create(Ivalignof(a_773), a_773) in
                  let weak _: unit =
                    store(a_773, a_774, conv_loaded_int(a_773, a_768)) in
                  pure(a_774) in
              let strong a_775: loaded integer =
                ccall('signed int (*) (const void*, const void*, size_t)',
                a_756, a_763, a_762, a_761) in
              let strong _: (unit,unit,unit) =
                unseq(
                  kill('void*', a_763)
                ,
                  kill('void*', a_762)
                ,
                  kill('size_t', a_761)
                ) in
              pure(a_775)
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_752: integer), Specified(a_753: integer)) =
          (a_750, a_751) in
        if conv_int('signed int', a_752) = conv_int('signed int', a_753) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  store('_Bool', b, conv_loaded_int('_Bool', a_749)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_776: loaded pointer,
      (a_777: ctype, a_778: [ctype], a_779: boolean, a_780: boolean)),
      a_784: loaded pointer, a_788: loaded pointer, a_793: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_738: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_738, cfunction(a_738)))
        ,
          let weak a_786: pointer = pure(a_785) in
          {- §6.3.2.1#3 -}
          let weak a_787: pointer = memop(PtrArrayShift, a_786, 'char', 0) in
          pure(Specified(a_787))
        ,
          {- §6.5.4 -}
          let weak a_791: pointer = pure(p) in
          load('signed int*', a_791)
        ,
          {- §6.5.4 -}
          let weak a_796: pointer = pure(q) in
          load('char*', a_796)
        ) in
      if not(params_length(a_778) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_779) \/ not(are_compatible ('signed int', a_777)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_783: pointer =
            let a_798: ctype = params_nth(a_778, 0) in
            if not(are_compatible ('const char*', a_798)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_799: pointer = create(Ivalignof(a_798), a_798) in
              let weak _: unit = store(a_798, a_799, a_784) in
              pure(a_799) in
          let strong a_782: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_788) in
          let strong a_781: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_793) in
          let strong a_800: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_776, a_783,
            [('void*', a_782), ('void*', a_781)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_783)
            ,
              kill('void*', a_782)
            ,
              kill('void*', a_781)
            ) in
          pure(a_800)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_801: loaded pointer,
      (a_802: ctype, a_803: [ctype], a_804: boolean, a_805: boolean)),
      a_808: loaded pointer, a_812: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_737: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_737, cfunction(a_737)))
        ,
          let weak a_810: pointer = pure(a_809) in
          {- §6.3.2.1#3 -}
          let weak a_811: pointer = memop(PtrArrayShift, a_810, 'char', 0) in
          pure(Specified(a_811))
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_819: loaded integer =
            let weak (a_813: loaded integer, a_814: loaded integer) =
              unseq(
                let weak a_818: pointer = pure(b) in
                load('_Bool', a_818)
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_815: integer), Specified(a_816: integer)) =
                (a_813, a_814) in
              if conv_int('signed int', a_815) = conv_int('signed int', a_816) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_820: integer) = a_819 in
          {- §6.5.15#4, sentence 2 -}
          if a_820 = 0 then
            let weak a_822: pointer = pure(a_821) in
            {- §6.3.2.1#3 -}
            let weak a_823: pointer =
              memop(PtrArrayShift, a_822, 'char', 0) in
            pure(Specified(a_823))
          else
            let weak a_825: pointer = pure(a_824) in
            {- §6.3.2.1#3 -}
            let weak a_826: pointer =
              memop(PtrArrayShift, a_825, 'char', 0) in
            pure(Specified(a_826))
        ) in
      if not(params_length(a_803) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_804) \/ not(are_compatible ('signed int', a_802)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_807: pointer =
            let a_827: ctype = params_nth(a_803, 0) in
            if not(are_compatible ('const char*', a_827)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_828: pointer = create(Ivalignof(a_827), a_827) in
              let weak _: unit = store(a_827, a_828, a_808) in
              pure(a_828) in
          let strong a_806: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_812) in
          let strong a_829: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_801, a_807,
            [('char*', a_806)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_807), kill('char*', a_806)) in
          pure(a_829)
    ) in
  pure(Unit) ;
  kill('signed int*', p) ;
  kill('char*', q) ;
  kill('_Bool', b) ;
  pure(Unit) ;
  save ret_736: loaded integer (a_830: loaded integer:= Specified(0)) in
    pure(a_830)

