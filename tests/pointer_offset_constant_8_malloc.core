-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

def struct __cerbty_unnamed_tag_824 :=
  __dummy_max_align_t: 'void*'

-- Globals
glob a_917: pointer [ail_ctype = 'char[34]'] :=
  create_readonly(Ivalignof('char[34]'), 'char[34]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_988: pointer [ail_ctype = 'char[27]'] :=
  create_readonly(Ivalignof('char[27]'), 'char[27]', Specified(Array(Specified(conv_int('char',
  42)), Specified(conv_int('char', 120)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong xp: pointer = create(Ivalignof('void*'), 'void*') in
  let strong yp: pointer = create(Ivalignof('void*'), 'void*') in
  let strong offset: pointer = create(Ivalignof('ptrdiff_t'), 'ptrdiff_t') in
  let strong p1: pointer =
    create(Ivalignof('unsigned char*'), 'unsigned char*') in
  let strong p2: pointer =
    create(Ivalignof('unsigned char*'), 'unsigned char*') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_842: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_844: loaded pointer,
      (a_845: ctype, a_846: [ctype], a_847: boolean, a_848: boolean)),
      a_850: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_843: loaded pointer =
            pure(Specified(Cfunction(malloc_proxy))) in
          pure((a_843, cfunction(a_843)))
        ,
          pure(Specified(Ivsizeof('signed int')))
        ) in
      if not(params_length(a_846) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_847 \/ not(are_compatible ('void*', a_845)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_849: pointer =
            let a_851: ctype = params_nth(a_846, 0) in
            if not(are_compatible ('size_t', a_851)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_852: pointer = create(Ivalignof(a_851), a_851) in
              let weak _: unit =
                store(a_851, a_852, conv_loaded_int(a_851, a_850)) in
              pure(a_852) in
          let strong a_853: loaded pointer =
            ccall('void* (*) (size_t)', a_844, a_849) in
          kill('size_t', a_849) ;
          pure(a_853)
    ) in
  store('void*', xp, a_842) ;
  let strong a_854: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_856: loaded pointer,
      (a_857: ctype, a_858: [ctype], a_859: boolean, a_860: boolean)),
      a_862: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_855: loaded pointer =
            pure(Specified(Cfunction(malloc_proxy))) in
          pure((a_855, cfunction(a_855)))
        ,
          pure(Specified(Ivsizeof('signed int')))
        ) in
      if not(params_length(a_858) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_859 \/ not(are_compatible ('void*', a_857)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_861: pointer =
            let a_863: ctype = params_nth(a_858, 0) in
            if not(are_compatible ('size_t', a_863)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_864: pointer = create(Ivalignof(a_863), a_863) in
              let weak _: unit =
                store(a_863, a_864, conv_loaded_int(a_863, a_862)) in
              pure(a_864) in
          let strong a_865: loaded pointer =
            ccall('void* (*) (size_t)', a_856, a_861) in
          kill('size_t', a_861) ;
          pure(a_865)
    ) in
  store('void*', yp, a_854) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_841: pointer, a_873: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_866: loaded pointer =
            {- §6.5.4 -}
            let weak a_869: loaded pointer =
              let weak a_871: pointer = pure(xp) in
              load('void*', a_871) in
            let Specified(a_870: pointer) = a_869 in
            let weak a_872: boolean =
              memop(PtrWellAligned, 'signed int', a_870) in
            pure(
              Specified(if a_872 then
                a_870
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            ) in
          let Specified(a_867: pointer) = a_866 in
          let weak a_868: boolean =
            memop(PtrValidForDeref, 'signed int', a_867) in
          pure(
            if a_868 then
              a_867
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(1))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_841, conv_loaded_int('signed int', a_873))) in
      pure(conv_loaded_int('signed int', a_873))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_840: pointer, a_881: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_874: loaded pointer =
            {- §6.5.4 -}
            let weak a_877: loaded pointer =
              let weak a_879: pointer = pure(yp) in
              load('void*', a_879) in
            let Specified(a_878: pointer) = a_877 in
            let weak a_880: boolean =
              memop(PtrWellAligned, 'signed int', a_878) in
            pure(
              Specified(if a_880 then
                a_878
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            ) in
          let Specified(a_875: pointer) = a_874 in
          let weak a_876: boolean =
            memop(PtrValidForDeref, 'signed int', a_875) in
          pure(
            if a_876 then
              a_875
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(2))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_840, conv_loaded_int('signed int', a_881))) in
      pure(conv_loaded_int('signed int', a_881))
    ) in
  pure(Unit) ;
  let strong a_882: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(32))) in
  store('ptrdiff_t', offset, conv_loaded_int('ptrdiff_t', a_882)) ;
  let strong a_883: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_884: loaded pointer =
        let weak a_886: pointer = pure(xp) in
        load('void*', a_886) in
      let Specified(a_885: pointer) = a_884 in
      let weak a_887: boolean =
        memop(PtrWellAligned, 'unsigned char', a_885) in
      pure(
        Specified(if a_887 then
          a_885
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('unsigned char*', p1, a_883) ;
  let strong a_888: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_889: loaded pointer, a_891: loaded integer) =
        unseq(
          let weak a_894: pointer = pure(p1) in
          load('unsigned char*', a_894)
        ,
          let weak a_895: pointer = pure(offset) in
          load('ptrdiff_t', a_895)
        ) in
      let (Specified(a_890: pointer), Specified(a_892: integer)) =
        (a_889, a_891) in
      let weak a_893: pointer =
        memop(PtrArrayShift, a_890, 'unsigned char', a_892) in
      pure(Specified(a_893))
    ) in
  store('unsigned char*', p2, a_888) ;
  let strong a_896: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_897: loaded pointer =
        let weak a_899: pointer = pure(p2) in
        load('unsigned char*', a_899) in
      let Specified(a_898: pointer) = a_897 in
      let weak a_900: boolean = memop(PtrWellAligned, 'signed int', a_898) in
      pure(
        Specified(if a_900 then
          a_898
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('signed int*', p, a_896) ;
  let strong a_901: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_902: loaded pointer =
        let weak a_904: pointer = pure(yp) in
        load('void*', a_904) in
      let Specified(a_903: pointer) = a_902 in
      let weak a_905: boolean = memop(PtrWellAligned, 'signed int', a_903) in
      pure(
        Specified(if a_905 then
          a_903
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('signed int*', q, a_901) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_906: loaded pointer,
      (a_907: ctype, a_908: [ctype], a_909: boolean, a_910: boolean)),
      a_916: loaded pointer, a_920: loaded pointer, a_922: loaded pointer,
      a_924: loaded pointer, a_929: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_839: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_839, cfunction(a_839)))
        ,
          let weak a_918: pointer = pure(a_917) in
          {- §6.3.2.1#3 -}
          let weak a_919: pointer = memop(PtrArrayShift, a_918, 'char', 0) in
          pure(Specified(a_919))
        ,
          let weak a_921: pointer = pure(xp) in
          load('void*', a_921)
        ,
          let weak a_923: pointer = pure(yp) in
          load('void*', a_923)
        ,
          {- §6.5.4 -}
          let weak a_927: pointer = pure(p) in
          load('signed int*', a_927)
        ,
          {- §6.5.4 -}
          let weak a_932: pointer = pure(q) in
          load('signed int*', a_932)
        ) in
      if not(params_length(a_908) <= 5) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_909) \/ not(are_compatible ('signed int', a_907)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_915: pointer =
            let a_934: ctype = params_nth(a_908, 0) in
            if not(are_compatible ('const char*', a_934)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_935: pointer = create(Ivalignof(a_934), a_934) in
              let weak _: unit = store(a_934, a_935, a_916) in
              pure(a_935) in
          let strong a_914: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_920) in
          let strong a_913: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_922) in
          let strong a_912: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_924) in
          let strong a_911: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_929) in
          let strong a_936: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_906, a_915,
            [('void*', a_914), ('void*', a_913), ('void*', a_912),
            ('void*', a_911)]) in
          let strong _: (unit,unit,unit,unit,unit) =
            unseq(
              kill('char*', a_915)
            ,
              kill('void*', a_914)
            ,
              kill('void*', a_913)
            ,
              kill('void*', a_912)
            ,
              kill('void*', a_911)
            ) in
          pure(a_936)
    ) in
  pure(Unit) ;
  let strong a_937: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_939: loaded integer, a_940: loaded integer) =
        unseq(
          let weak (a_944: loaded integer, a_945: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_950: loaded pointer,
              (a_951: ctype, a_952: [ctype], a_953: boolean, a_954: boolean)),
              a_958: loaded pointer, a_960: loaded pointer,
              a_962: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_949: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_949, cfunction(a_949)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_959: pointer = pure(p) in
                  pure(Specified(a_959))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_961: pointer = pure(q) in
                  pure(Specified(a_961))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_952) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_953 \/ not(are_compatible ('signed int', a_951)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_957: pointer =
                    let a_963: ctype = params_nth(a_952, 0) in
                    if not(are_compatible ('const void*', a_963)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_964: pointer =
                        create(Ivalignof(a_963), a_963) in
                      let weak _: unit = store(a_963, a_964, a_958) in
                      pure(a_964) in
                  let strong a_956: pointer =
                    let a_965: ctype = params_nth(a_952, 1) in
                    if not(are_compatible ('const void*', a_965)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_966: pointer =
                        create(Ivalignof(a_965), a_965) in
                      let weak _: unit = store(a_965, a_966, a_960) in
                      pure(a_966) in
                  let strong a_955: pointer =
                    let a_967: ctype = params_nth(a_952, 2) in
                    if not(are_compatible ('size_t', a_967)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_968: pointer =
                        create(Ivalignof(a_967), a_967) in
                      let weak _: unit =
                        store(a_967, a_968, conv_loaded_int(a_967, a_962)) in
                      pure(a_968) in
                  let strong a_969: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_950, a_957, a_956, a_955) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_957)
                    ,
                      kill('void*', a_956)
                    ,
                      kill('size_t', a_955)
                    ) in
                  pure(a_969)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_946: integer), Specified(a_947: integer)) =
              (a_944, a_945) in
            if conv_int('signed int', a_946) = conv_int('signed int', a_947) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_941: integer), Specified(a_942: integer)) =
          (a_939, a_940) in
        if conv_int('signed int', a_941) = conv_int('signed int', a_942) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_838: boolean =
    let Specified(a_938: integer) = a_937 in
    pure(if not(a_938 = 1) then True else False) in
  if a_838 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_971: pointer, a_976: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_972: loaded pointer =
              let weak a_975: pointer = pure(p) in
              load('signed int*', a_975) in
            let Specified(a_973: pointer) = a_972 in
            let weak a_974: boolean =
              memop(PtrValidForDeref, 'signed int', a_973) in
            pure(
              if a_974 then
                a_973
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_971, conv_loaded_int('signed int', a_976))) in
        pure(conv_loaded_int('signed int', a_976))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_977: loaded pointer,
        (a_978: ctype, a_979: [ctype], a_980: boolean, a_981: boolean)),
        a_987: loaded pointer, a_991: loaded integer, a_1000: loaded integer,
        a_1009: loaded integer, a_1018: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_970: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_970, cfunction(a_970)))
          ,
            let weak a_989: pointer = pure(a_988) in
            {- §6.3.2.1#3 -}
            let weak a_990: pointer =
              memop(PtrArrayShift, a_989, 'char', 0) in
            pure(Specified(a_990))
          ,
            let weak a_999: pointer =
              {- §6.5.3.2 -}
              let weak a_992: loaded pointer =
                {- §6.5.4 -}
                let weak a_995: loaded pointer =
                  let weak a_997: pointer = pure(xp) in
                  load('void*', a_997) in
                let Specified(a_996: pointer) = a_995 in
                let weak a_998: boolean =
                  memop(PtrWellAligned, 'signed int', a_996) in
                pure(
                  Specified(if a_998 then
                    a_996
                  else
                    undef(<<UB025_misaligned_pointer_conversion>>))
                ) in
              let Specified(a_993: pointer) = a_992 in
              let weak a_994: boolean =
                memop(PtrValidForDeref, 'signed int', a_993) in
              pure(
                if a_994 then
                  a_993
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_999)
          ,
            let weak a_1008: pointer =
              {- §6.5.3.2 -}
              let weak a_1001: loaded pointer =
                {- §6.5.4 -}
                let weak a_1004: loaded pointer =
                  let weak a_1006: pointer = pure(yp) in
                  load('void*', a_1006) in
                let Specified(a_1005: pointer) = a_1004 in
                let weak a_1007: boolean =
                  memop(PtrWellAligned, 'signed int', a_1005) in
                pure(
                  Specified(if a_1007 then
                    a_1005
                  else
                    undef(<<UB025_misaligned_pointer_conversion>>))
                ) in
              let Specified(a_1002: pointer) = a_1001 in
              let weak a_1003: boolean =
                memop(PtrValidForDeref, 'signed int', a_1002) in
              pure(
                if a_1003 then
                  a_1002
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_1008)
          ,
            let weak a_1017: pointer =
              {- §6.5.3.2 -}
              let weak a_1010: loaded pointer =
                {- §6.5.4 -}
                let weak a_1013: loaded pointer =
                  let weak a_1015: pointer = pure(p) in
                  load('signed int*', a_1015) in
                let Specified(a_1014: pointer) = a_1013 in
                let weak a_1016: boolean =
                  memop(PtrWellAligned, 'signed int', a_1014) in
                pure(
                  Specified(if a_1016 then
                    a_1014
                  else
                    undef(<<UB025_misaligned_pointer_conversion>>))
                ) in
              let Specified(a_1011: pointer) = a_1010 in
              let weak a_1012: boolean =
                memop(PtrValidForDeref, 'signed int', a_1011) in
              pure(
                if a_1012 then
                  a_1011
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_1017)
          ,
            let weak a_1026: pointer =
              {- §6.5.3.2 -}
              let weak a_1019: loaded pointer =
                {- §6.5.4 -}
                let weak a_1022: loaded pointer =
                  let weak a_1024: pointer = pure(q) in
                  load('signed int*', a_1024) in
                let Specified(a_1023: pointer) = a_1022 in
                let weak a_1025: boolean =
                  memop(PtrWellAligned, 'signed int', a_1023) in
                pure(
                  Specified(if a_1025 then
                    a_1023
                  else
                    undef(<<UB025_misaligned_pointer_conversion>>))
                ) in
              let Specified(a_1020: pointer) = a_1019 in
              let weak a_1021: boolean =
                memop(PtrValidForDeref, 'signed int', a_1020) in
              pure(
                if a_1021 then
                  a_1020
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_1026)
          ) in
        if not(params_length(a_979) <= 5) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_980) \/ not(are_compatible ('signed int', a_978)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_986: pointer =
              let a_1027: ctype = params_nth(a_979, 0) in
              if not(are_compatible ('const char*', a_1027)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_1028: pointer =
                  create(Ivalignof(a_1027), a_1027) in
                let weak _: unit = store(a_1027, a_1028, a_987) in
                pure(a_1028) in
            let strong a_985: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_991)) in
            let strong a_984: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1000)) in
            let strong a_983: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1009)) in
            let strong a_982: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1018)) in
            let strong a_1029: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_977, a_986,
              [('signed int', a_985), ('signed int', a_984),
              ('signed int', a_983), ('signed int', a_982)]) in
            let strong _: (unit,unit,unit,unit,unit) =
              unseq(
                kill('char*', a_986)
              ,
                kill('signed int', a_985)
              ,
                kill('signed int', a_984)
              ,
                kill('signed int', a_983)
              ,
                kill('signed int', a_982)
              ) in
            pure(a_1029)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  let strong a_1030: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  kill('void*', xp) ;
  kill('void*', yp) ;
  kill('ptrdiff_t', offset) ;
  kill('unsigned ichar*', p1) ;
  kill('unsigned ichar*', p2) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  run ret_837(conv_loaded_int('signed int', a_1030)) ;
  kill('void*', xp) ;
  kill('void*', yp) ;
  kill('ptrdiff_t', offset) ;
  kill('unsigned ichar*', p1) ;
  kill('unsigned ichar*', p2) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_837: loaded integer (a_1031: loaded integer:= Specified(0)) in
    pure(a_1031)

