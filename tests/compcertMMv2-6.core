-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_721: pointer [ail_ctype = 'char[17]'] :=
  create_readonly(Ivalignof('char[17]'), 'char[17]', Specified(Array(Specified(conv_int('char',
  121)), Specified(conv_int('char', 91)), Specified(conv_int('char', 48)),
  Specified(conv_int('char', 93)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 91)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 93)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc memcpy (dest: pointer, src: pointer, n: pointer): eff loaded pointer :=
  let strong i: pointer =
    create(Ivalignof('unsigned long'), 'unsigned long') in
  {- §6.2.4#6 -}
  store('unsigned long', i, Unspecified('unsigned long')) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_761: pointer, a_762: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(pure(i), pure(Specified(0))) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('unsigned long', a_761,
        conv_loaded_int('unsigned long', a_762))) in
      pure(conv_loaded_int('unsigned long', a_762))
    ) in
  pure(Unit) ;
  save while_758: unit (i: pointer:= i) in
    let strong a_763: loaded integer =
      {- §6.5#2 -}
      bound(
        let weak (a_765: loaded integer, a_766: loaded integer) =
          unseq(
            {- §6.5.8 -}
            let weak (a_772: loaded integer, a_773: loaded integer) =
              unseq(
                let weak a_770: pointer = pure(i) in
                load('unsigned long', a_770)
              ,
                let weak a_771: pointer = pure(n) in
                load('size_t', a_771)
              ) in
            let (Specified(a_774: integer), Specified(a_775: integer)) =
              (a_772, a_773) in
            {- §6.5.8#6 -}
            pure(
              if conv_int('unsigned long', a_774) <
              conv_int('unsigned long', a_775) then
                Specified(1)
              else
                Specified(0)
            )
          ,
            pure(Specified(0))
          ) in
        pure(
          let (Specified(a_767: integer), Specified(a_768: integer)) =
            (a_765, a_766) in
          if conv_int('signed int', a_767) = conv_int('signed int', a_768) then
            Specified(1)
          else
            Specified(0)
        )
      ) in
    let strong a_760: boolean =
      let Specified(a_764: integer) = a_763 in
      pure(if not(a_764 = 1) then True else False) in
    if a_760 then
      save while_body_759: unit (i: pointer:= i) in
        let strong _: loaded integer =
          {- §6.5#2 -}
          bound(
            {- §6.5.16#3, sentence 4 -}
            let weak (a_777: pointer, a_805: loaded integer) =
              {- §6.5.16#3, sentence 5 -}
              unseq(
                {- §6.5.3.2 -}
                let weak a_778: loaded pointer =
                  {- §6.5.6 -}
                  let weak (a_781: loaded pointer, a_783: loaded integer) =
                    unseq(
                      {- §6.5.4 -}
                      let weak a_786: loaded pointer =
                        let weak a_788: pointer = pure(dest) in
                        load('void*', a_788) in
                      let Specified(a_787: pointer) = a_786 in
                      let weak a_789: boolean =
                        memop(PtrWellAligned, 'char', a_787) in
                      pure(
                        Specified(if a_789 then
                          a_787
                        else
                          undef(<<UB025_misaligned_pointer_conversion>>))
                      )
                    ,
                      let weak a_790: pointer = pure(i) in
                      load('unsigned long', a_790)
                    ) in
                  let (Specified(a_782: pointer), Specified(a_784: integer)) =
                    (a_781, a_783) in
                  let weak a_785: pointer =
                    memop(PtrArrayShift, a_782, 'char', a_784) in
                  pure(Specified(a_785)) in
                let Specified(a_779: pointer) = a_778 in
                let weak a_780: boolean =
                  memop(PtrValidForDeref, 'char', a_779) in
                pure(
                  if a_780 then
                    a_779
                  else
                    undef(<<UB043_indirection_invalid_value>>)
                )
              ,
                let weak a_804: pointer =
                  {- §6.5.3.2 -}
                  let weak a_791: loaded pointer =
                    {- §6.5.6 -}
                    let weak (a_794: loaded pointer, a_796: loaded integer) =
                      unseq(
                        {- §6.5.4 -}
                        let weak a_799: loaded pointer =
                          let weak a_801: pointer = pure(src) in
                          load('const void*', a_801) in
                        let Specified(a_800: pointer) = a_799 in
                        let weak a_802: boolean =
                          memop(PtrWellAligned, 'char', a_800) in
                        pure(
                          Specified(if a_802 then
                            a_800
                          else
                            undef(<<UB025_misaligned_pointer_conversion>>))
                        )
                      ,
                        let weak a_803: pointer = pure(i) in
                        load('unsigned long', a_803)
                      ) in
                    let (Specified(a_795: pointer), Specified(a_797: integer)) =
                      (a_794, a_796) in
                    let weak a_798: pointer =
                      memop(PtrArrayShift, a_795, 'char', a_797) in
                    pure(Specified(a_798)) in
                  let Specified(a_792: pointer) = a_791 in
                  let weak a_793: boolean =
                    memop(PtrValidForDeref, 'char', a_792) in
                  pure(
                    if a_793 then
                      a_792
                    else
                      undef(<<UB043_indirection_invalid_value>>)
                  ) in
                load('char', a_804)
              ) in
            let weak _: unit =
              {- §6.5.16.1#2, store -}
              neg(store('char', a_777, conv_loaded_int('char', a_805))) in
            pure(conv_loaded_int('char', a_805))
          ) in
        pure(Unit) ;
        save __cerb_continue0: unit (i: pointer:= i) in
          let strong _: loaded integer =
            {- §6.5#2 -}
            bound(
              {- §6.5.2.4#2, sentence 3 -}
              {- §6.5.2.4#2, sentence 1 -}
              {- §6.5.2.4 -}
              let weak a_806: pointer = pure(i) in
              seq_rmw('unsigned long', a_806, a_807 => let Specified(a_808: integer) =
                a_807 in
              Specified(conv_int('unsigned long',
              wrapI('unsigned long', a_808 + 1))))
            ) in
          pure(Unit) ;
        pure(Unit) ;
        save continue_756: unit (i: pointer:= i) in  pure(Unit) ;
        pure(Unit) ;
        run while_758(i)
    else
      pure(Unit) ;
  save break_757: unit (i: pointer:= i) in  pure(Unit) ;
  pure(Unit) ;
  let strong a_810: loaded pointer =
    {- §6.5#2 -}
    bound(
      let weak a_809: pointer = pure(dest) in
      load('void*', a_809)
    ) in
  kill('unsigned long', i) ;
  run ret_755(a_810) ;
  kill('unsigned long', i) ;
  pure(Unit) ;
  save ret_755: loaded pointer (a_811: loaded pointer:= undef(<<UB088_reached_end_of_function>>)) in
    pure(a_811)

proc main (): eff loaded integer :=
  let strong x: pointer =
    create(Ivalignof('signed int[2]'), 'signed int[2]') in
  let strong y: pointer =
    create(Ivalignof('signed int[2]'), 'signed int[2]') in
  {- §6.2.4#6 -}
  store('signed int[2]', x, Unspecified('signed int[2]')) ;
  {- §6.2.4#6 -}
  store('signed int[2]', y, Unspecified('signed int[2]')) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_667: pointer, a_678: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_668: loaded pointer =
            {- §6.5.6 -}
            let weak (a_671: loaded pointer, a_673: loaded integer) =
              unseq(
                let weak a_676: pointer = pure(x) in
                {- §6.3.2.1#3 -}
                let weak a_677: pointer =
                  memop(PtrArrayShift, a_676, 'signed int', 0) in
                pure(Specified(a_677))
              ,
                pure(Specified(0))
              ) in
            let (Specified(a_672: pointer), Specified(a_674: integer)) =
              (a_671, a_673) in
            let weak a_675: pointer =
              memop(PtrArrayShift, a_672, 'signed int', a_674) in
            pure(Specified(a_675)) in
          let Specified(a_669: pointer) = a_668 in
          let weak a_670: boolean =
            memop(PtrValidForDeref, 'signed int', a_669) in
          pure(
            if a_670 then
              a_669
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(0))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_667, conv_loaded_int('signed int', a_678))) in
      pure(conv_loaded_int('signed int', a_678))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_666: pointer, a_689: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_679: loaded pointer =
            {- §6.5.6 -}
            let weak (a_682: loaded pointer, a_684: loaded integer) =
              unseq(
                let weak a_687: pointer = pure(x) in
                {- §6.3.2.1#3 -}
                let weak a_688: pointer =
                  memop(PtrArrayShift, a_687, 'signed int', 0) in
                pure(Specified(a_688))
              ,
                pure(Specified(1))
              ) in
            let (Specified(a_683: pointer), Specified(a_685: integer)) =
              (a_682, a_684) in
            let weak a_686: pointer =
              memop(PtrArrayShift, a_683, 'signed int', a_685) in
            pure(Specified(a_686)) in
          let Specified(a_680: pointer) = a_679 in
          let weak a_681: boolean =
            memop(PtrValidForDeref, 'signed int', a_680) in
          pure(
            if a_681 then
              a_680
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(1))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_666, conv_loaded_int('signed int', a_689))) in
      pure(conv_loaded_int('signed int', a_689))
    ) in
  pure(Unit) ;
  let strong _: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_690: loaded pointer,
      (a_691: ctype, a_692: [ctype], a_693: boolean, a_694: boolean)),
      a_698: loaded pointer, a_701: loaded pointer, a_704: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_665: loaded pointer =
            pure(Specified(Cfunction(memcpy_proxy))) in
          pure((a_665, cfunction(a_665)))
        ,
          let weak a_699: pointer = pure(y) in
          {- §6.3.2.1#3 -}
          let weak a_700: pointer =
            memop(PtrArrayShift, a_699, 'signed int', 0) in
          pure(Specified(a_700))
        ,
          let weak a_702: pointer = pure(x) in
          {- §6.3.2.1#3 -}
          let weak a_703: pointer =
            memop(PtrArrayShift, a_702, 'signed int', 0) in
          pure(Specified(a_703))
        ,
          pure(Specified(Ivsizeof('signed int[2]')))
        ) in
      if not(params_length(a_692) = 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_693 \/ not(are_compatible ('void*', a_691)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_697: pointer =
            let a_705: ctype = params_nth(a_692, 0) in
            if not(are_compatible ('void*', a_705)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_706: pointer = create(Ivalignof(a_705), a_705) in
              let weak _: unit = store(a_705, a_706, a_698) in
              pure(a_706) in
          let strong a_696: pointer =
            let a_707: ctype = params_nth(a_692, 1) in
            if not(are_compatible ('const void*', a_707)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_708: pointer = create(Ivalignof(a_707), a_707) in
              let weak _: unit = store(a_707, a_708, a_701) in
              pure(a_708) in
          let strong a_695: pointer =
            let a_709: ctype = params_nth(a_692, 2) in
            if not(are_compatible ('size_t', a_709)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_710: pointer = create(Ivalignof(a_709), a_709) in
              let weak _: unit =
                store(a_709, a_710, conv_loaded_int(a_709, a_704)) in
              pure(a_710) in
          let strong a_711: loaded pointer =
            ccall('void* (*) (void*, const void*, size_t)', a_690, a_697,
            a_696, a_695) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('void*', a_697)
            ,
              kill('void*', a_696)
            ,
              kill('size_t', a_695)
            ) in
          pure(a_711)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_712: loaded pointer,
      (a_713: ctype, a_714: [ctype], a_715: boolean, a_716: boolean)),
      a_720: loaded pointer, a_724: loaded integer, a_736: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_664: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_664, cfunction(a_664)))
        ,
          let weak a_722: pointer = pure(a_721) in
          {- §6.3.2.1#3 -}
          let weak a_723: pointer = memop(PtrArrayShift, a_722, 'char', 0) in
          pure(Specified(a_723))
        ,
          let weak a_735: pointer =
            {- §6.5.3.2 -}
            let weak a_725: loaded pointer =
              {- §6.5.6 -}
              let weak (a_728: loaded pointer, a_730: loaded integer) =
                unseq(
                  let weak a_733: pointer = pure(y) in
                  {- §6.3.2.1#3 -}
                  let weak a_734: pointer =
                    memop(PtrArrayShift, a_733, 'signed int', 0) in
                  pure(Specified(a_734))
                ,
                  pure(Specified(0))
                ) in
              let (Specified(a_729: pointer), Specified(a_731: integer)) =
                (a_728, a_730) in
              let weak a_732: pointer =
                memop(PtrArrayShift, a_729, 'signed int', a_731) in
              pure(Specified(a_732)) in
            let Specified(a_726: pointer) = a_725 in
            let weak a_727: boolean =
              memop(PtrValidForDeref, 'signed int', a_726) in
            pure(
              if a_727 then
                a_726
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_735)
        ,
          let weak a_747: pointer =
            {- §6.5.3.2 -}
            let weak a_737: loaded pointer =
              {- §6.5.6 -}
              let weak (a_740: loaded pointer, a_742: loaded integer) =
                unseq(
                  let weak a_745: pointer = pure(y) in
                  {- §6.3.2.1#3 -}
                  let weak a_746: pointer =
                    memop(PtrArrayShift, a_745, 'signed int', 0) in
                  pure(Specified(a_746))
                ,
                  pure(Specified(1))
                ) in
              let (Specified(a_741: pointer), Specified(a_743: integer)) =
                (a_740, a_742) in
              let weak a_744: pointer =
                memop(PtrArrayShift, a_741, 'signed int', a_743) in
              pure(Specified(a_744)) in
            let Specified(a_738: pointer) = a_737 in
            let weak a_739: boolean =
              memop(PtrValidForDeref, 'signed int', a_738) in
            pure(
              if a_739 then
                a_738
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_747)
        ) in
      if not(params_length(a_714) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_715) \/ not(are_compatible ('signed int', a_713)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_719: pointer =
            let a_748: ctype = params_nth(a_714, 0) in
            if not(are_compatible ('const char*', a_748)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_749: pointer = create(Ivalignof(a_748), a_748) in
              let weak _: unit = store(a_748, a_749, a_720) in
              pure(a_749) in
          let strong a_718: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_724)) in
          let strong a_717: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_736)) in
          let strong a_750: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_712, a_719,
            [('signed int', a_718), ('signed int', a_717)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_719)
            ,
              kill('signed int', a_718)
            ,
              kill('signed int', a_717)
            ) in
          pure(a_750)
    ) in
  pure(Unit) ;
  kill('signed int[2]', x) ;
  kill('signed int[2]', y) ;
  pure(Unit) ;
  save ret_663: loaded integer (a_751: loaded integer:= Specified(0)) in
    pure(a_751)

