-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_856: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_857: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', a_856, conv_loaded_int('signed int', a_857)) ;
  pure(a_856)

glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_854: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_855: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_854, conv_loaded_int('signed int', a_855)) ;
  pure(a_854)

glob a_763: pointer [ail_ctype = 'char[22]'] :=
  create_readonly(Ivalignof('char[22]'), 'char[22]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_830: pointer [ail_ctype = 'char[23]'] :=
  create_readonly(Ivalignof('char[23]'), 'char[23]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_733: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_734: loaded pointer, a_736: loaded integer) =
        unseq(
          {- §6.5.6 -}
          let weak (a_739: loaded pointer, a_741: loaded integer) =
            unseq(
              {- §6.5.3.2#3, sentence 5 -}
              let weak a_744: pointer = pure(x) in
              pure(Specified(a_744))
            ,
              {- §6.5.6 -}
              let weak (a_747: loaded pointer, a_748: loaded pointer) =
                unseq(
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_745: pointer = pure(y) in
                  pure(Specified(a_745))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_746: pointer = pure(y) in
                  pure(Specified(a_746))
                ) in
              let (Specified(a_749: pointer), Specified(a_750: pointer)) =
                (a_747, a_748) in
              let weak a_751: integer =
                memop(Ptrdiff, 'signed int', a_749, a_750) in
              pure(
                if is_representable_integer(a_751, 'ptrdiff_t') then
                  Specified(a_751)
                else
                  undef(<<UB050_pointers_subtraction_not_representable>>)
              )
            ) in
          let (Specified(a_740: pointer), Specified(a_742: integer)) =
            (a_739, a_741) in
          let weak a_743: pointer =
            memop(PtrArrayShift, a_740, 'signed int', a_742) in
          pure(Specified(a_743))
        ,
          pure(Specified(1))
        ) in
      let (Specified(a_735: pointer), Specified(a_737: integer)) =
        (a_734, a_736) in
      let weak a_738: pointer =
        memop(PtrArrayShift, a_735, 'signed int', a_737) in
      pure(Specified(a_738))
    ) in
  store('signed int*', p, a_733) ;
  let strong a_752: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_753: pointer = pure(y) in
      pure(Specified(a_753))
    ) in
  store('signed int*', q, a_752) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_754: loaded pointer,
      (a_755: ctype, a_756: [ctype], a_757: boolean, a_758: boolean)),
      a_762: loaded pointer, a_766: loaded pointer, a_771: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_732: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_732, cfunction(a_732)))
        ,
          let weak a_764: pointer = pure(a_763) in
          {- §6.3.2.1#3 -}
          let weak a_765: pointer = memop(PtrArrayShift, a_764, 'char', 0) in
          pure(Specified(a_765))
        ,
          {- §6.5.4 -}
          let weak a_769: pointer = pure(p) in
          load('signed int*', a_769)
        ,
          {- §6.5.4 -}
          let weak a_774: pointer = pure(q) in
          load('signed int*', a_774)
        ) in
      if not(params_length(a_756) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_757) \/ not(are_compatible ('signed int', a_755)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_761: pointer =
            let a_776: ctype = params_nth(a_756, 0) in
            if not(are_compatible ('const char*', a_776)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_777: pointer = create(Ivalignof(a_776), a_776) in
              let weak _: unit = store(a_776, a_777, a_762) in
              pure(a_777) in
          let strong a_760: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_766) in
          let strong a_759: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_771) in
          let strong a_778: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_754, a_761,
            [('void*', a_760), ('void*', a_759)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_761)
            ,
              kill('void*', a_760)
            ,
              kill('void*', a_759)
            ) in
          pure(a_778)
    ) in
  pure(Unit) ;
  let strong a_779: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_781: loaded integer, a_782: loaded integer) =
        unseq(
          let weak (a_786: loaded integer, a_787: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_792: loaded pointer,
              (a_793: ctype, a_794: [ctype], a_795: boolean, a_796: boolean)),
              a_800: loaded pointer, a_802: loaded pointer,
              a_804: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_791: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_791, cfunction(a_791)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_801: pointer = pure(p) in
                  pure(Specified(a_801))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_803: pointer = pure(q) in
                  pure(Specified(a_803))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_794) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_795 \/ not(are_compatible ('signed int', a_793)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_799: pointer =
                    let a_805: ctype = params_nth(a_794, 0) in
                    if not(are_compatible ('const void*', a_805)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_806: pointer =
                        create(Ivalignof(a_805), a_805) in
                      let weak _: unit = store(a_805, a_806, a_800) in
                      pure(a_806) in
                  let strong a_798: pointer =
                    let a_807: ctype = params_nth(a_794, 1) in
                    if not(are_compatible ('const void*', a_807)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_808: pointer =
                        create(Ivalignof(a_807), a_807) in
                      let weak _: unit = store(a_807, a_808, a_802) in
                      pure(a_808) in
                  let strong a_797: pointer =
                    let a_809: ctype = params_nth(a_794, 2) in
                    if not(are_compatible ('size_t', a_809)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_810: pointer =
                        create(Ivalignof(a_809), a_809) in
                      let weak _: unit =
                        store(a_809, a_810, conv_loaded_int(a_809, a_804)) in
                      pure(a_810) in
                  let strong a_811: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_792, a_799, a_798, a_797) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_799)
                    ,
                      kill('void*', a_798)
                    ,
                      kill('size_t', a_797)
                    ) in
                  pure(a_811)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_788: integer), Specified(a_789: integer)) =
              (a_786, a_787) in
            if conv_int('signed int', a_788) = conv_int('signed int', a_789) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_783: integer), Specified(a_784: integer)) =
          (a_781, a_782) in
        if conv_int('signed int', a_783) = conv_int('signed int', a_784) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_731: boolean =
    let Specified(a_780: integer) = a_779 in
    pure(if not(a_780 = 1) then True else False) in
  if a_731 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_813: pointer, a_818: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_814: loaded pointer =
              let weak a_817: pointer = pure(p) in
              load('signed int*', a_817) in
            let Specified(a_815: pointer) = a_814 in
            let weak a_816: boolean =
              memop(PtrValidForDeref, 'signed int', a_815) in
            pure(
              if a_816 then
                a_815
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_813, conv_loaded_int('signed int', a_818))) in
        pure(conv_loaded_int('signed int', a_818))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_819: loaded pointer,
        (a_820: ctype, a_821: [ctype], a_822: boolean, a_823: boolean)),
        a_829: loaded pointer, a_833: loaded integer, a_835: loaded integer,
        a_837: loaded integer, a_843: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_812: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_812, cfunction(a_812)))
          ,
            let weak a_831: pointer = pure(a_830) in
            {- §6.3.2.1#3 -}
            let weak a_832: pointer =
              memop(PtrArrayShift, a_831, 'char', 0) in
            pure(Specified(a_832))
          ,
            let weak a_834: pointer = pure(x) in
            load('signed int', a_834)
          ,
            let weak a_836: pointer = pure(y) in
            load('signed int', a_836)
          ,
            let weak a_842: pointer =
              {- §6.5.3.2 -}
              let weak a_838: loaded pointer =
                let weak a_841: pointer = pure(p) in
                load('signed int*', a_841) in
              let Specified(a_839: pointer) = a_838 in
              let weak a_840: boolean =
                memop(PtrValidForDeref, 'signed int', a_839) in
              pure(
                if a_840 then
                  a_839
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_842)
          ,
            let weak a_848: pointer =
              {- §6.5.3.2 -}
              let weak a_844: loaded pointer =
                let weak a_847: pointer = pure(q) in
                load('signed int*', a_847) in
              let Specified(a_845: pointer) = a_844 in
              let weak a_846: boolean =
                memop(PtrValidForDeref, 'signed int', a_845) in
              pure(
                if a_846 then
                  a_845
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_848)
          ) in
        if not(params_length(a_821) <= 5) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_822) \/ not(are_compatible ('signed int', a_820)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_828: pointer =
              let a_849: ctype = params_nth(a_821, 0) in
              if not(are_compatible ('const char*', a_849)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_850: pointer = create(Ivalignof(a_849), a_849) in
                let weak _: unit = store(a_849, a_850, a_829) in
                pure(a_850) in
            let strong a_827: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_833)) in
            let strong a_826: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_835)) in
            let strong a_825: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_837)) in
            let strong a_824: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_843)) in
            let strong a_851: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_819, a_828,
              [('signed int', a_827), ('signed int', a_826),
              ('signed int', a_825), ('signed int', a_824)]) in
            let strong _: (unit,unit,unit,unit,unit) =
              unseq(
                kill('char*', a_828)
              ,
                kill('signed int', a_827)
              ,
                kill('signed int', a_826)
              ,
                kill('signed int', a_825)
              ,
                kill('signed int', a_824)
              ) in
            pure(a_851)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  let strong a_852: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  run ret_730(conv_loaded_int('signed int', a_852)) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_730: loaded integer (a_853: loaded integer:= Specified(0)) in
    pure(a_853)

