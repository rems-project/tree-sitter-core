-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_674: pointer [ail_ctype = 'char[8]'] :=
  create_readonly(Ivalignof('char[8]'), 'char[8]', Specified(Array(Specified(conv_int('char',
  105)), Specified(conv_int('char', 61)), Specified(conv_int('char', 48)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_690: pointer [ail_ctype = 'char[8]'] :=
  create_readonly(Ivalignof('char[8]'), 'char[8]', Specified(Array(Specified(conv_int('char',
  105)), Specified(conv_int('char', 61)), Specified(conv_int('char', 48)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong i: pointer = create(Ivalignof('signed int'), 'signed int') in
  {- §6.2.4#6 -}
  store('signed int', i, Unspecified('signed int')) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_652: pointer, a_665: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_653: loaded pointer =
            {- §6.5.6 -}
            let weak (a_656: loaded pointer, a_658: loaded integer) =
              unseq(
                {- §6.5.4 -}
                let weak a_661: loaded pointer =
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_663: pointer = pure(i) in
                  pure(Specified(a_663)) in
                let Specified(a_662: pointer) = a_661 in
                let weak a_664: boolean =
                  memop(PtrWellAligned, 'unsigned char', a_662) in
                pure(
                  Specified(if a_664 then
                    a_662
                  else
                    undef(<<UB025_misaligned_pointer_conversion>>))
                )
              ,
                pure(Specified(1))
              ) in
            let (Specified(a_657: pointer), Specified(a_659: integer)) =
              (a_656, a_658) in
            let weak a_660: pointer =
              memop(PtrArrayShift, a_657, 'unsigned char', a_659) in
            pure(Specified(a_660)) in
          let Specified(a_654: pointer) = a_653 in
          let weak a_655: boolean =
            memop(PtrValidForDeref, 'unsigned char', a_654) in
          pure(
            if a_655 then
              a_654
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(34))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('unsigned char', a_652,
        conv_loaded_int('unsigned char', a_665))) in
      pure(conv_loaded_int('unsigned char', a_665))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_666: loaded pointer,
      (a_667: ctype, a_668: [ctype], a_669: boolean, a_670: boolean)),
      a_673: loaded pointer, a_677: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_651: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_651, cfunction(a_651)))
        ,
          let weak a_675: pointer = pure(a_674) in
          {- §6.3.2.1#3 -}
          let weak a_676: pointer = memop(PtrArrayShift, a_675, 'char', 0) in
          pure(Specified(a_676))
        ,
          let weak a_678: pointer = pure(i) in
          load('signed int', a_678)
        ) in
      if not(params_length(a_668) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_669) \/ not(are_compatible ('signed int', a_667)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_672: pointer =
            let a_679: ctype = params_nth(a_668, 0) in
            if not(are_compatible ('const char*', a_679)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_680: pointer = create(Ivalignof(a_679), a_679) in
              let weak _: unit = store(a_679, a_680, a_673) in
              pure(a_680) in
          let strong a_671: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_677)) in
          let strong a_681: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_666, a_672,
            [('signed int', a_671)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_672), kill('signed int', a_671)) in
          pure(a_681)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_682: loaded pointer,
      (a_683: ctype, a_684: [ctype], a_685: boolean, a_686: boolean)),
      a_689: loaded pointer, a_693: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_650: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_650, cfunction(a_650)))
        ,
          let weak a_691: pointer = pure(a_690) in
          {- §6.3.2.1#3 -}
          let weak a_692: pointer = memop(PtrArrayShift, a_691, 'char', 0) in
          pure(Specified(a_692))
        ,
          let weak a_694: pointer = pure(i) in
          load('signed int', a_694)
        ) in
      if not(params_length(a_684) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_685) \/ not(are_compatible ('signed int', a_683)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_688: pointer =
            let a_695: ctype = params_nth(a_684, 0) in
            if not(are_compatible ('const char*', a_695)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_696: pointer = create(Ivalignof(a_695), a_695) in
              let weak _: unit = store(a_695, a_696, a_689) in
              pure(a_696) in
          let strong a_687: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_693)) in
          let strong a_697: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_682, a_688,
            [('signed int', a_687)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_688), kill('signed int', a_687)) in
          pure(a_697)
    ) in
  pure(Unit) ;
  kill('signed int', i) ;
  pure(Unit) ;
  save ret_649: loaded integer (a_698: loaded integer:= Specified(0)) in
    pure(a_698)

