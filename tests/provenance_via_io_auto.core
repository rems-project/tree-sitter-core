-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

def struct __cerbty_unnamed_tag_824 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_856 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob a_911: pointer [ail_ctype = 'char[27]'] :=
  create_readonly(Ivalignof('char[27]'), 'char[27]', Specified(Array(Specified(conv_int('char',
  112)), Specified(conv_int('char', 114)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 118)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 118)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 95)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 46)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 109)),
  Specified(conv_int('char', 112)), Specified(0))))

glob a_915: pointer [ail_ctype = 'char[4]'] :=
  create_readonly(Ivalignof('char[4]'), 'char[4]', Specified(Array(Specified(conv_int('char',
  119)), Specified(conv_int('char', 43)), Specified(conv_int('char', 98)),
  Specified(0))))

glob a_931: pointer [ail_ctype = 'char[18]'] :=
  create_readonly(Ivalignof('char[18]'), 'char[18]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_950: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 108)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_984: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 108)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_1026: pointer [ail_ctype = 'char[18]'] :=
  create_readonly(Ivalignof('char[18]'), 'char[18]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 107)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_1090: pointer [ail_ctype = 'char[24]'] :=
  create_readonly(Ivalignof('char[24]'), 'char[24]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 98)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 98)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_1110: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_1113: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

glob a_1125: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_1128: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong i: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong f: pointer =
    create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
  let strong k: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong n: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong r: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong b1: pointer = create(Ivalignof('_Bool'), '_Bool') in
  let strong b2: pointer = create(Ivalignof('_Bool'), '_Bool') in
  let strong a_893: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', x, conv_loaded_int('signed int', a_893)) ;
  let strong a_894: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_895: pointer = pure(x) in
      pure(Specified(a_895))
    ) in
  store('signed int*', p, a_894) ;
  let strong a_896: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_897: loaded pointer =
        let weak a_899: pointer = pure(p) in
        load('signed int*', a_899) in
      let Specified(a_898: pointer) = a_897 in
      let weak a_900: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_898) in
      pure(Specified(a_900))
    ) in
  store('uintptr_t', i, conv_loaded_int('uintptr_t', a_896)) ;
  let strong a_901: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_903: loaded pointer,
      (a_904: ctype, a_905: [ctype], a_906: boolean, a_907: boolean)),
      a_910: loaded pointer, a_914: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_902: loaded pointer =
            pure(Specified(Cfunction(fopen))) in
          pure((a_902, cfunction(a_902)))
        ,
          let weak a_912: pointer = pure(a_911) in
          {- §6.3.2.1#3 -}
          let weak a_913: pointer = memop(PtrArrayShift, a_912, 'char', 0) in
          pure(Specified(a_913))
        ,
          let weak a_916: pointer = pure(a_915) in
          {- §6.3.2.1#3 -}
          let weak a_917: pointer = memop(PtrArrayShift, a_916, 'char', 0) in
          pure(Specified(a_917))
        ) in
      if not(params_length(a_905) = 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_906 \/ not(are_compatible ('struct _IO_FILE*', a_904)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_909: pointer =
            let a_918: ctype = params_nth(a_905, 0) in
            if not(are_compatible ('const char*', a_918)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_919: pointer = create(Ivalignof(a_918), a_918) in
              let weak _: unit = store(a_918, a_919, a_910) in
              pure(a_919) in
          let strong a_908: pointer =
            let a_920: ctype = params_nth(a_905, 1) in
            if not(are_compatible ('const char*', a_920)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_921: pointer = create(Ivalignof(a_920), a_920) in
              let weak _: unit = store(a_920, a_921, a_914) in
              pure(a_921) in
          let strong a_922: loaded pointer =
            ccall('struct _IO_FILE* (*) (const char*restrict , const char*restrict )',
            a_903, a_909, a_908) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_909), kill('char*', a_908)) in
          pure(a_922)
    ) in
  store('struct _IO_FILE*', f, a_901) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_923: loaded pointer,
      (a_924: ctype, a_925: [ctype], a_926: boolean, a_927: boolean)),
      a_930: loaded pointer, a_934: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_892: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_892, cfunction(a_892)))
        ,
          let weak a_932: pointer = pure(a_931) in
          {- §6.3.2.1#3 -}
          let weak a_933: pointer = memop(PtrArrayShift, a_932, 'char', 0) in
          pure(Specified(a_933))
        ,
          let weak a_935: pointer = pure(i) in
          load('uintptr_t', a_935)
        ) in
      if not(params_length(a_925) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_926) \/ not(are_compatible ('signed int', a_924)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_929: pointer =
            let a_936: ctype = params_nth(a_925, 0) in
            if not(are_compatible ('const char*', a_936)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_937: pointer = create(Ivalignof(a_936), a_936) in
              let weak _: unit = store(a_936, a_937, a_930) in
              pure(a_937) in
          let strong a_928: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'uintptr_t',
            conv_loaded_int('uintptr_t', a_934)) in
          let strong a_938: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_923, a_929,
            [('uintptr_t', a_928)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_929), kill('uintptr_t', a_928)) in
          pure(a_938)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_939: loaded pointer,
      (a_940: ctype, a_941: [ctype], a_942: boolean, a_943: boolean)),
      a_947: loaded pointer, a_949: loaded pointer, a_953: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_891: loaded pointer =
            pure(Specified(Cfunction(fprintf))) in
          pure((a_891, cfunction(a_891)))
        ,
          let weak a_948: pointer = pure(f) in
          load('struct _IO_FILE*', a_948)
        ,
          let weak a_951: pointer = pure(a_950) in
          {- §6.3.2.1#3 -}
          let weak a_952: pointer = memop(PtrArrayShift, a_951, 'char', 0) in
          pure(Specified(a_952))
        ,
          let weak a_954: pointer = pure(i) in
          load('uintptr_t', a_954)
        ) in
      if not(params_length(a_941) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_942) \/ not(are_compatible ('signed int', a_940)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_946: pointer =
            let a_955: ctype = params_nth(a_941, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_955)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_956: pointer = create(Ivalignof(a_955), a_955) in
              let weak _: unit = store(a_955, a_956, a_947) in
              pure(a_956) in
          let strong a_945: pointer =
            let a_957: ctype = params_nth(a_941, 1) in
            if not(are_compatible ('const char*', a_957)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_958: pointer = create(Ivalignof(a_957), a_957) in
              let weak _: unit = store(a_957, a_958, a_949) in
              pure(a_958) in
          let strong a_944: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'uintptr_t',
            conv_loaded_int('uintptr_t', a_953)) in
          let strong a_959: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_939, a_946, a_945, [('uintptr_t', a_944)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_946)
            ,
              kill('char*', a_945)
            ,
              kill('uintptr_t', a_944)
            ) in
          pure(a_959)
    ) in
  pure(Unit) ;
  {- §6.5#2 -}
  bound(
    {- §6.5.2.2#10, sentence 1 -}
    let strong ((a_960: loaded pointer,
    (a_961: ctype, a_962: [ctype], a_963: boolean, a_964: boolean)),
    a_966: loaded pointer) =
      {- §6.5.2.2#4, sentence 2 -}
      unseq(
        let strong a_890: loaded pointer =
          pure(Specified(Cfunction(rewind))) in
        pure((a_890, cfunction(a_890)))
      ,
        let weak a_967: pointer = pure(f) in
        load('struct _IO_FILE*', a_967)
      ) in
    if not(params_length(a_962) = 1) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_963 \/ not(are_compatible ('void', a_961)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_965: pointer =
          let a_968: ctype = params_nth(a_962, 0) in
          if not(are_compatible ('struct _IO_FILE*', a_968)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_969: pointer = create(Ivalignof(a_968), a_968) in
            let weak _: unit = store(a_968, a_969, a_966) in
            pure(a_969) in
        let strong a_970: unit =
          ccall('void (*) (struct _IO_FILE*)', a_960, a_965) in
        kill('struct _IO_FILE*', a_965) ;
        pure(a_970)
  ) ;
  pure(Unit) ;
  {- §6.2.4#6 -}
  store('uintptr_t', k, Unspecified('uintptr_t')) ;
  let strong a_971: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_973: loaded pointer,
      (a_974: ctype, a_975: [ctype], a_976: boolean, a_977: boolean)),
      a_981: loaded pointer, a_983: loaded pointer, a_987: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_972: loaded pointer =
            pure(Specified(Cfunction(fscanf))) in
          pure((a_972, cfunction(a_972)))
        ,
          let weak a_982: pointer = pure(f) in
          load('struct _IO_FILE*', a_982)
        ,
          let weak a_985: pointer = pure(a_984) in
          {- §6.3.2.1#3 -}
          let weak a_986: pointer = memop(PtrArrayShift, a_985, 'char', 0) in
          pure(Specified(a_986))
        ,
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_988: pointer = pure(k) in
          pure(Specified(a_988))
        ) in
      if not(params_length(a_975) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_976) \/ not(are_compatible ('signed int', a_974)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_980: pointer =
            let a_989: ctype = params_nth(a_975, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_989)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_990: pointer = create(Ivalignof(a_989), a_989) in
              let weak _: unit = store(a_989, a_990, a_981) in
              pure(a_990) in
          let strong a_979: pointer =
            let a_991: ctype = params_nth(a_975, 1) in
            if not(are_compatible ('const char*', a_991)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_992: pointer = create(Ivalignof(a_991), a_991) in
              let weak _: unit = store(a_991, a_992, a_983) in
              pure(a_992) in
          let strong a_978: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'uintptr_t*', a_987) in
          let strong a_993: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_973, a_980, a_979, [('uintptr_t*', a_978)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_980)
            ,
              kill('char*', a_979)
            ,
              kill('uintptr_t*', a_978)
            ) in
          pure(a_993)
    ) in
  store('signed int', n, conv_loaded_int('signed int', a_971)) ;
  let strong a_994: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_996: loaded integer, a_997: loaded integer) =
        unseq(
          let weak (a_1001: loaded integer, a_1002: loaded integer) =
            unseq(
              let weak a_1006: pointer = pure(n) in
              load('signed int', a_1006)
            ,
              pure(Specified(1))
            ) in
          pure(
            let (Specified(a_1003: integer), Specified(a_1004: integer)) =
              (a_1001, a_1002) in
            if not(conv_int('signed int', a_1003) =
            conv_int('signed int', a_1004)) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_998: integer), Specified(a_999: integer)) =
          (a_996, a_997) in
        if conv_int('signed int', a_998) = conv_int('signed int', a_999) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_889: boolean =
    let Specified(a_995: integer) = a_994 in
    pure(if not(a_995 = 1) then True else False) in
  if a_889 then
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_1008: loaded pointer,
      (a_1009: ctype, a_1010: [ctype], a_1011: boolean, a_1012: boolean)),
      a_1014: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_1007: loaded pointer =
            pure(Specified(Cfunction(exit))) in
          pure((a_1007, cfunction(a_1007)))
        ,
          pure(Specified(1))
        ) in
      if not(params_length(a_1010) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_1011 \/ not(are_compatible ('void', a_1009)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1013: pointer =
            let a_1015: ctype = params_nth(a_1010, 0) in
            if not(are_compatible ('signed int', a_1015)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_1016: pointer = create(Ivalignof(a_1015), a_1015) in
              let weak _: unit =
                store(a_1015, a_1016, conv_loaded_int(a_1015, a_1014)) in
              pure(a_1016) in
          let strong a_1017: unit =
            ccall('void (*) (signed int)', a_1008, a_1013) in
          kill('signed int', a_1013) ;
          pure(a_1017)
    ) ;
    pure(Unit)
  else
    pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_1018: loaded pointer,
      (a_1019: ctype, a_1020: [ctype], a_1021: boolean, a_1022: boolean)),
      a_1025: loaded pointer, a_1029: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_888: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_888, cfunction(a_888)))
        ,
          let weak a_1027: pointer = pure(a_1026) in
          {- §6.3.2.1#3 -}
          let weak a_1028: pointer =
            memop(PtrArrayShift, a_1027, 'char', 0) in
          pure(Specified(a_1028))
        ,
          let weak a_1030: pointer = pure(k) in
          load('uintptr_t', a_1030)
        ) in
      if not(params_length(a_1020) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1021) \/ not(are_compatible ('signed int', a_1019)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1024: pointer =
            let a_1031: ctype = params_nth(a_1020, 0) in
            if not(are_compatible ('const char*', a_1031)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_1032: pointer = create(Ivalignof(a_1031), a_1031) in
              let weak _: unit = store(a_1031, a_1032, a_1025) in
              pure(a_1032) in
          let strong a_1023: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'uintptr_t',
            conv_loaded_int('uintptr_t', a_1029)) in
          let strong a_1033: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_1018, a_1024,
            [('uintptr_t', a_1023)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_1024), kill('uintptr_t', a_1023)) in
          pure(a_1033)
    ) in
  pure(Unit) ;
  let strong a_1034: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_1035: loaded integer =
        let weak a_1037: pointer = pure(k) in
        load('uintptr_t', a_1037) in
      let Specified(a_1036: integer) = a_1035 in
      let weak a_1038: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_1036) in
      pure(Specified(a_1038))
    ) in
  store('signed int*', r, a_1034) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_887: pointer, a_1043: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_1039: loaded pointer =
            let weak a_1042: pointer = pure(r) in
            load('signed int*', a_1042) in
          let Specified(a_1040: pointer) = a_1039 in
          let weak a_1041: boolean =
            memop(PtrValidForDeref, 'signed int', a_1040) in
          pure(
            if a_1041 then
              a_1040
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(12))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_887, conv_loaded_int('signed int', a_1043))) in
      pure(conv_loaded_int('signed int', a_1043))
    ) in
  pure(Unit) ;
  let strong a_1044: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_1045: loaded pointer, a_1046: loaded pointer) =
        unseq(
          let weak a_1050: pointer = pure(r) in
          load('signed int*', a_1050)
        ,
          let weak a_1051: pointer = pure(p) in
          load('signed int*', a_1051)
        ) in
      let (Specified(a_1047: pointer), Specified(a_1048: pointer)) =
        (a_1045, a_1046) in
      let weak a_1049: boolean = memop(PtrEq, a_1047, a_1048) in
      pure(if a_1049 then Specified(1) else Specified(0))
    ) in
  store('_Bool', b1, conv_loaded_int('_Bool', a_1044)) ;
  let strong a_1052: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_1053: loaded integer, a_1054: loaded integer) =
        unseq(
          pure(Specified(0))
        ,
          {- §6.5.2.2#10, sentence 1 -}
          let strong ((a_1059: loaded pointer,
          (a_1060: ctype, a_1061: [ctype], a_1062: boolean, a_1063: boolean)),
          a_1067: loaded pointer, a_1069: loaded pointer,
          a_1071: loaded integer) =
            {- §6.5.2.2#4, sentence 2 -}
            unseq(
              let strong a_1058: loaded pointer =
                pure(Specified(Cfunction(memcmp_proxy))) in
              pure((a_1058, cfunction(a_1058)))
            ,
              {- §6.5.3.2#3, sentence 5 -}
              let weak a_1068: pointer = pure(r) in
              pure(Specified(a_1068))
            ,
              {- §6.5.3.2#3, sentence 5 -}
              let weak a_1070: pointer = pure(p) in
              pure(Specified(a_1070))
            ,
              pure(Specified(Ivsizeof('signed int*')))
            ) in
          if not(params_length(a_1061) = 3) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_1062 \/ not(are_compatible ('signed int', a_1060)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1066: pointer =
                let a_1072: ctype = params_nth(a_1061, 0) in
                if not(are_compatible ('const void*', a_1072)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {- §6.5.2.2#7, sentence 1 -}
                  let weak a_1073: pointer =
                    create(Ivalignof(a_1072), a_1072) in
                  let weak _: unit = store(a_1072, a_1073, a_1067) in
                  pure(a_1073) in
              let strong a_1065: pointer =
                let a_1074: ctype = params_nth(a_1061, 1) in
                if not(are_compatible ('const void*', a_1074)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {- §6.5.2.2#7, sentence 1 -}
                  let weak a_1075: pointer =
                    create(Ivalignof(a_1074), a_1074) in
                  let weak _: unit = store(a_1074, a_1075, a_1069) in
                  pure(a_1075) in
              let strong a_1064: pointer =
                let a_1076: ctype = params_nth(a_1061, 2) in
                if not(are_compatible ('size_t', a_1076)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {- §6.5.2.2#7, sentence 1 -}
                  let weak a_1077: pointer =
                    create(Ivalignof(a_1076), a_1076) in
                  let weak _: unit =
                    store(a_1076, a_1077, conv_loaded_int(a_1076, a_1071)) in
                  pure(a_1077) in
              let strong a_1078: loaded integer =
                ccall('signed int (*) (const void*, const void*, size_t)',
                a_1059, a_1066, a_1065, a_1064) in
              let strong _: (unit,unit,unit) =
                unseq(
                  kill('void*', a_1066)
                ,
                  kill('void*', a_1065)
                ,
                  kill('size_t', a_1064)
                ) in
              pure(a_1078)
        ) in
      pure(
        let (Specified(a_1055: integer), Specified(a_1056: integer)) =
          (a_1053, a_1054) in
        if conv_int('signed int', a_1055) = conv_int('signed int', a_1056) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  store('_Bool', b2, conv_loaded_int('_Bool', a_1052)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_1079: loaded pointer,
      (a_1080: ctype, a_1081: [ctype], a_1082: boolean, a_1083: boolean)),
      a_1089: loaded pointer, a_1093: loaded integer, a_1095: loaded integer,
      a_1101: loaded pointer, a_1116: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_886: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_886, cfunction(a_886)))
        ,
          let weak a_1091: pointer = pure(a_1090) in
          {- §6.3.2.1#3 -}
          let weak a_1092: pointer =
            memop(PtrArrayShift, a_1091, 'char', 0) in
          pure(Specified(a_1092))
        ,
          let weak a_1094: pointer = pure(x) in
          load('signed int', a_1094)
        ,
          let weak a_1100: pointer =
            {- §6.5.3.2 -}
            let weak a_1096: loaded pointer =
              let weak a_1099: pointer = pure(r) in
              load('signed int*', a_1099) in
            let Specified(a_1097: pointer) = a_1096 in
            let weak a_1098: boolean =
              memop(PtrValidForDeref, 'signed int', a_1097) in
            pure(
              if a_1098 then
                a_1097
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_1100)
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_1108: loaded integer =
            let weak (a_1102: loaded integer, a_1103: loaded integer) =
              unseq(
                let weak a_1107: pointer = pure(b1) in
                load('_Bool', a_1107)
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_1104: integer), Specified(a_1105: integer)) =
                (a_1102, a_1103) in
              if conv_int('signed int', a_1104) =
              conv_int('signed int', a_1105) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_1109: integer) = a_1108 in
          {- §6.5.15#4, sentence 2 -}
          if a_1109 = 0 then
            let weak a_1111: pointer = pure(a_1110) in
            {- §6.3.2.1#3 -}
            let weak a_1112: pointer =
              memop(PtrArrayShift, a_1111, 'char', 0) in
            pure(Specified(a_1112))
          else
            let weak a_1114: pointer = pure(a_1113) in
            {- §6.3.2.1#3 -}
            let weak a_1115: pointer =
              memop(PtrArrayShift, a_1114, 'char', 0) in
            pure(Specified(a_1115))
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_1123: loaded integer =
            let weak (a_1117: loaded integer, a_1118: loaded integer) =
              unseq(
                let weak a_1122: pointer = pure(b2) in
                load('_Bool', a_1122)
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_1119: integer), Specified(a_1120: integer)) =
                (a_1117, a_1118) in
              if conv_int('signed int', a_1119) =
              conv_int('signed int', a_1120) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_1124: integer) = a_1123 in
          {- §6.5.15#4, sentence 2 -}
          if a_1124 = 0 then
            let weak a_1126: pointer = pure(a_1125) in
            {- §6.3.2.1#3 -}
            let weak a_1127: pointer =
              memop(PtrArrayShift, a_1126, 'char', 0) in
            pure(Specified(a_1127))
          else
            let weak a_1129: pointer = pure(a_1128) in
            {- §6.3.2.1#3 -}
            let weak a_1130: pointer =
              memop(PtrArrayShift, a_1129, 'char', 0) in
            pure(Specified(a_1130))
        ) in
      if not(params_length(a_1081) <= 5) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1082) \/ not(are_compatible ('signed int', a_1080)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1088: pointer =
            let a_1131: ctype = params_nth(a_1081, 0) in
            if not(are_compatible ('const char*', a_1131)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_1132: pointer = create(Ivalignof(a_1131), a_1131) in
              let weak _: unit = store(a_1131, a_1132, a_1089) in
              pure(a_1132) in
          let strong a_1087: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_1093)) in
          let strong a_1086: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_1095)) in
          let strong a_1085: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_1101) in
          let strong a_1084: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_1116) in
          let strong a_1133: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_1079, a_1088,
            [('signed int', a_1087), ('signed int', a_1086), ('char*', a_1085),
            ('char*', a_1084)]) in
          let strong _: (unit,unit,unit,unit,unit) =
            unseq(
              kill('char*', a_1088)
            ,
              kill('signed int', a_1087)
            ,
              kill('signed int', a_1086)
            ,
              kill('char*', a_1085)
            ,
              kill('char*', a_1084)
            ) in
          pure(a_1133)
    ) in
  pure(Unit) ;
  kill('signed int', x) ;
  kill('signed int*', p) ;
  kill('uintptr_t', i) ;
  kill('struct _IO_FILE*', f) ;
  kill('uintptr_t', k) ;
  kill('signed int', n) ;
  kill('signed int*', r) ;
  kill('_Bool', b1) ;
  kill('_Bool', b2) ;
  pure(Unit) ;
  save ret_885: loaded integer (a_1134: loaded integer:= Specified(0)) in
    pure(a_1134)

