-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_693: pointer [ail_ctype = 'char[16]'] :=
  create_readonly(Ivalignof('char[16]'), 'char[16]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 91)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 93)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong x: pointer =
    create(Ivalignof('signed int[2]'), 'signed int[2]') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  {- §6.2.4#6 -}
  store('signed int[2]', x, Unspecified('signed int[2]')) ;
  let strong a_657: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      {- §6.5.3.2#3, sentence 3 -}
      let weak (a_658: loaded pointer, a_660: loaded integer) =
        unseq(
          let weak a_663: pointer = pure(x) in
          {- §6.3.2.1#3 -}
          let weak a_664: pointer =
            memop(PtrArrayShift, a_663, 'signed int', 0) in
          pure(Specified(a_664))
        ,
          pure(Specified(0))
        ) in
      let (Specified(a_659: pointer), Specified(a_661: integer)) =
        (a_658, a_660) in
      let weak a_662: pointer =
        memop(PtrArrayShift, a_659, 'signed int', a_661) in
      pure(Specified(a_662))
    ) in
  store('signed int*', p, a_657) ;
  let strong a_665: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_666: loaded pointer, a_668: loaded integer) =
        unseq(
          let weak a_671: pointer = pure(p) in
          load('signed int*', a_671)
        ,
          pure(Specified(11))
        ) in
      let (Specified(a_667: pointer), Specified(a_669: integer)) =
        (a_666, a_668) in
      let weak a_670: pointer =
        memop(PtrArrayShift, a_667, 'signed int', a_669) in
      pure(Specified(a_670))
    ) in
  store('signed int*', q, a_665) ;
  let strong _: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_656: pointer, a_678: loaded pointer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          pure(q)
        ,
          {- §6.5.6 -}
          let weak (a_673: loaded pointer, a_674: loaded integer) =
            unseq(
              let weak a_672: pointer = pure(q) in
              load('signed int*', a_672)
            ,
              pure(Specified(10))
            ) in
          let (Specified(a_675: pointer), Specified(a_676: integer)) =
            (a_673, a_674) in
          let weak a_677: pointer =
            memop(PtrArrayShift, a_675, 'signed int', 0 - a_676) in
          pure(Specified(a_677))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int*', a_656, a_678)) in
      pure(a_678)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_655: pointer, a_683: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_679: loaded pointer =
            let weak a_682: pointer = pure(q) in
            load('signed int*', a_682) in
          let Specified(a_680: pointer) = a_679 in
          let weak a_681: boolean =
            memop(PtrValidForDeref, 'signed int', a_680) in
          pure(
            if a_681 then
              a_680
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(1))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_655, conv_loaded_int('signed int', a_683))) in
      pure(conv_loaded_int('signed int', a_683))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_684: loaded pointer,
      (a_685: ctype, a_686: [ctype], a_687: boolean, a_688: boolean)),
      a_692: loaded pointer, a_696: loaded integer, a_708: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_654: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_654, cfunction(a_654)))
        ,
          let weak a_694: pointer = pure(a_693) in
          {- §6.3.2.1#3 -}
          let weak a_695: pointer = memop(PtrArrayShift, a_694, 'char', 0) in
          pure(Specified(a_695))
        ,
          let weak a_707: pointer =
            {- §6.5.3.2 -}
            let weak a_697: loaded pointer =
              {- §6.5.6 -}
              let weak (a_700: loaded pointer, a_702: loaded integer) =
                unseq(
                  let weak a_705: pointer = pure(x) in
                  {- §6.3.2.1#3 -}
                  let weak a_706: pointer =
                    memop(PtrArrayShift, a_705, 'signed int', 0) in
                  pure(Specified(a_706))
                ,
                  pure(Specified(1))
                ) in
              let (Specified(a_701: pointer), Specified(a_703: integer)) =
                (a_700, a_702) in
              let weak a_704: pointer =
                memop(PtrArrayShift, a_701, 'signed int', a_703) in
              pure(Specified(a_704)) in
            let Specified(a_698: pointer) = a_697 in
            let weak a_699: boolean =
              memop(PtrValidForDeref, 'signed int', a_698) in
            pure(
              if a_699 then
                a_698
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_707)
        ,
          let weak a_713: pointer =
            {- §6.5.3.2 -}
            let weak a_709: loaded pointer =
              let weak a_712: pointer = pure(q) in
              load('signed int*', a_712) in
            let Specified(a_710: pointer) = a_709 in
            let weak a_711: boolean =
              memop(PtrValidForDeref, 'signed int', a_710) in
            pure(
              if a_711 then
                a_710
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_713)
        ) in
      if not(params_length(a_686) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_687) \/ not(are_compatible ('signed int', a_685)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_691: pointer =
            let a_714: ctype = params_nth(a_686, 0) in
            if not(are_compatible ('const char*', a_714)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_715: pointer = create(Ivalignof(a_714), a_714) in
              let weak _: unit = store(a_714, a_715, a_692) in
              pure(a_715) in
          let strong a_690: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_696)) in
          let strong a_689: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_708)) in
          let strong a_716: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_684, a_691,
            [('signed int', a_690), ('signed int', a_689)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_691)
            ,
              kill('signed int', a_690)
            ,
              kill('signed int', a_689)
            ) in
          pure(a_716)
    ) in
  pure(Unit) ;
  kill('signed int[2]', x) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_653: loaded integer (a_717: loaded integer:= Specified(0)) in
    pure(a_717)

