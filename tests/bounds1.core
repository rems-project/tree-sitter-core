-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_679: pointer [ail_ctype = 'char[10]'] :=
  create_readonly(Ivalignof('char[10]'), 'char[10]', Specified(Array(Specified(conv_int('char',
  82)), Specified(conv_int('char', 101)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 58)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong y: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong z: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong v: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_654: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(42))) in
  store('signed int', y, conv_loaded_int('signed int', a_654)) ;
  let strong a_655: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(43))) in
  store('signed int', x, conv_loaded_int('signed int', a_655)) ;
  let strong a_656: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(44))) in
  store('signed int', z, conv_loaded_int('signed int', a_656)) ;
  let strong a_657: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak a_667: pointer =
        {- §6.5.3.2 -}
        let weak a_658: loaded pointer =
          {- §6.5.6 -}
          let weak (a_662: loaded pointer, a_663: loaded integer) =
            unseq(
              {- §6.5.3.2#3, sentence 5 -}
              let weak a_661: pointer = pure(x) in
              pure(Specified(a_661))
            ,
              pure(Specified(1))
            ) in
          let (Specified(a_664: pointer), Specified(a_665: integer)) =
            (a_662, a_663) in
          let weak a_666: pointer =
            memop(PtrArrayShift, a_664, 'signed int', 0 - a_665) in
          pure(Specified(a_666)) in
        let Specified(a_659: pointer) = a_658 in
        let weak a_660: boolean =
          memop(PtrValidForDeref, 'signed int', a_659) in
        pure(
          if a_660 then a_659 else undef(<<UB043_indirection_invalid_value>>)
        ) in
      load('signed int', a_667)
    ) in
  store('signed int', v, conv_loaded_int('signed int', a_657)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_668: loaded pointer,
      (a_669: ctype, a_670: [ctype], a_671: boolean, a_672: boolean)),
      a_676: loaded pointer, a_678: loaded pointer, a_682: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_653: loaded pointer =
            pure(Specified(Cfunction(fprintf))) in
          pure((a_653, cfunction(a_653)))
        ,
          let weak a_677: pointer = pure(__stderr) in
          load('struct _IO_FILE*', a_677)
        ,
          let weak a_680: pointer = pure(a_679) in
          {- §6.3.2.1#3 -}
          let weak a_681: pointer = memop(PtrArrayShift, a_680, 'char', 0) in
          pure(Specified(a_681))
        ,
          let weak a_683: pointer = pure(v) in
          load('signed int', a_683)
        ) in
      if not(params_length(a_670) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_671) \/ not(are_compatible ('signed int', a_669)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_675: pointer =
            let a_684: ctype = params_nth(a_670, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_684)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_685: pointer = create(Ivalignof(a_684), a_684) in
              let weak _: unit = store(a_684, a_685, a_676) in
              pure(a_685) in
          let strong a_674: pointer =
            let a_686: ctype = params_nth(a_670, 1) in
            if not(are_compatible ('const char*', a_686)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_687: pointer = create(Ivalignof(a_686), a_686) in
              let weak _: unit = store(a_686, a_687, a_678) in
              pure(a_687) in
          let strong a_673: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_682)) in
          let strong a_688: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_668, a_675, a_674, [('signed int', a_673)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_675)
            ,
              kill('char*', a_674)
            ,
              kill('signed int', a_673)
            ) in
          pure(a_688)
    ) in
  pure(Unit) ;
  kill('signed int', y) ;
  kill('signed int', x) ;
  kill('signed int', z) ;
  kill('signed int', v) ;
  pure(Unit) ;
  save ret_652: loaded integer (a_689: loaded integer:= Specified(0)) in
    pure(a_689)

