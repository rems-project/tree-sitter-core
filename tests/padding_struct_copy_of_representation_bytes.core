-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_648 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_730 :=
  c: 'char'
  f: 'float'

-- Globals
glob a_832: pointer [ail_ctype = 'char[17]'] :=
  create_readonly(Ivalignof('char[17]'), 'char[17]', Specified(Array(Specified(conv_int('char',
  115)), Specified(conv_int('char', 50)), Specified(conv_int('char', 46)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 50)), Specified(conv_int('char', 46)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong s1: pointer =
    create(Ivalignof('struct __cerbty_unnamed_tag_730'), 'struct __cerbty_unnamed_tag_730') in
  let strong s2: pointer =
    create(Ivalignof('struct __cerbty_unnamed_tag_730'), 'struct __cerbty_unnamed_tag_730') in
  let strong a_741: loaded struct a_730 =
    {- §6.5#2 -}
    bound(
      let weak (a_743: loaded floating, a_742: loaded integer) =
        {- §6.7.9#23 -}
        unseq(pure(Specified(1.)), pure(Specified(65))) in
      pure(
        Specified((struct __cerbty_unnamed_tag_730){.c= conv_loaded_int('char',
        a_742), .f= a_743})
      )
    ) in
  store('struct __cerbty_unnamed_tag_730', s1, a_741) ;
  {- §6.2.4#6 -}
  store('struct __cerbty_unnamed_tag_730', s2,
  Unspecified('struct __cerbty_unnamed_tag_730')) ;
  let strong _: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_744: loaded pointer,
      (a_745: ctype, a_746: [ctype], a_747: boolean, a_748: boolean)),
      a_752: loaded pointer, a_755: loaded pointer, a_758: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_740: loaded pointer =
            pure(Specified(Cfunction(memcpy_proxy))) in
          pure((a_740, cfunction(a_740)))
        ,
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_753: pointer =
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_754: pointer = pure(s2) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_730, c], a_754) in
          pure(Specified(a_753))
        ,
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_756: pointer =
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_757: pointer = pure(s1) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_730, c], a_757) in
          pure(Specified(a_756))
        ,
          {- §6.5.3.4#4, sentence 1 -}
          pure(Specified(1))
        ) in
      if not(params_length(a_746) = 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_747 \/ not(are_compatible ('void*', a_745)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_751: pointer =
            let a_759: ctype = params_nth(a_746, 0) in
            if not(are_compatible ('void*', a_759)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_760: pointer = create(Ivalignof(a_759), a_759) in
              let weak _: unit = store(a_759, a_760, a_752) in
              pure(a_760) in
          let strong a_750: pointer =
            let a_761: ctype = params_nth(a_746, 1) in
            if not(are_compatible ('const void*', a_761)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_762: pointer = create(Ivalignof(a_761), a_761) in
              let weak _: unit = store(a_761, a_762, a_755) in
              pure(a_762) in
          let strong a_749: pointer =
            let a_763: ctype = params_nth(a_746, 2) in
            if not(are_compatible ('size_t', a_763)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_764: pointer = create(Ivalignof(a_763), a_763) in
              let weak _: unit =
                store(a_763, a_764, conv_loaded_int(a_763, a_758)) in
              pure(a_764) in
          let strong a_765: loaded pointer =
            ccall('void* (*) (void*restrict , const void*restrict , size_t)',
            a_744, a_751, a_750, a_749) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('void*', a_751)
            ,
              kill('void*', a_750)
            ,
              kill('size_t', a_749)
            ) in
          pure(a_765)
    ) in
  pure(Unit) ;
  let strong _: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_766: loaded pointer,
      (a_767: ctype, a_768: [ctype], a_769: boolean, a_770: boolean)),
      a_774: loaded pointer, a_782: loaded integer, a_783: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_739: loaded pointer =
            pure(Specified(Cfunction(memset))) in
          pure((a_739, cfunction(a_739)))
        ,
          {- §6.5.6 -}
          let weak (a_775: loaded pointer, a_777: loaded integer) =
            unseq(
              {- §6.5.3.2#3, sentence 5 -}
              let weak a_780: pointer =
                {- §6.5.2.3#3, sentence 2 -}
                let strong a_781: pointer = pure(s2) in
                memop(PtrArrayShift[__cerbty_unnamed_tag_730, c], a_781) in
              pure(Specified(a_780))
            ,
              {- §6.5.3.4#4, sentence 1 -}
              pure(Specified(1))
            ) in
          let (Specified(a_776: pointer), Specified(a_778: integer)) =
            (a_775, a_777) in
          let weak a_779: pointer =
            memop(PtrArrayShift, a_776, 'char', a_778) in
          pure(Specified(a_779))
        ,
          pure(Specified(88))
        ,
          {- §6.5.6 -}
          let weak (a_789: loaded integer, a_790: loaded integer) =
            unseq(
              {- §6.5.6 -}
              let weak (a_784: loaded integer, a_785: loaded integer) =
                unseq(pure(Specified(8)), pure(Specified(0))) in
              pure(
                let (Specified(a_786: integer), Specified(a_787: integer)) =
                  (a_784, a_785) in
                Specified(wrapI('size_t',
                conv_int('size_t', a_786) - conv_int('size_t', a_787)))
              )
            ,
              {- §6.5.3.4#4, sentence 1 -}
              pure(Specified(1))
            ) in
          pure(
            let (Specified(a_791: integer), Specified(a_792: integer)) =
              (a_789, a_790) in
            Specified(wrapI('size_t',
            conv_int('size_t', a_791) - conv_int('size_t', a_792)))
          )
        ) in
      if not(params_length(a_768) = 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_769 \/ not(are_compatible ('void*', a_767)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_773: pointer =
            let a_794: ctype = params_nth(a_768, 0) in
            if not(are_compatible ('void*', a_794)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_795: pointer = create(Ivalignof(a_794), a_794) in
              let weak _: unit = store(a_794, a_795, a_774) in
              pure(a_795) in
          let strong a_772: pointer =
            let a_796: ctype = params_nth(a_768, 1) in
            if not(are_compatible ('signed int', a_796)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_797: pointer = create(Ivalignof(a_796), a_796) in
              let weak _: unit =
                store(a_796, a_797, conv_loaded_int(a_796, a_782)) in
              pure(a_797) in
          let strong a_771: pointer =
            let a_798: ctype = params_nth(a_768, 2) in
            if not(are_compatible ('size_t', a_798)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_799: pointer = create(Ivalignof(a_798), a_798) in
              let weak _: unit =
                store(a_798, a_799, conv_loaded_int(a_798, a_783)) in
              pure(a_799) in
          let strong a_800: loaded pointer =
            ccall('void* (*) (void*, signed int, size_t)', a_766, a_773, a_772,
            a_771) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('void*', a_773)
            ,
              kill('signed int', a_772)
            ,
              kill('size_t', a_771)
            ) in
          pure(a_800)
    ) in
  pure(Unit) ;
  let strong _: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_801: loaded pointer,
      (a_802: ctype, a_803: [ctype], a_804: boolean, a_805: boolean)),
      a_809: loaded pointer, a_812: loaded pointer, a_815: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_738: loaded pointer =
            pure(Specified(Cfunction(memcpy_proxy))) in
          pure((a_738, cfunction(a_738)))
        ,
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_810: pointer =
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_811: pointer = pure(s2) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_730, f], a_811) in
          pure(Specified(a_810))
        ,
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_813: pointer =
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_814: pointer = pure(s1) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_730, f], a_814) in
          pure(Specified(a_813))
        ,
          pure(Specified(Ivsizeof('float')))
        ) in
      if not(params_length(a_803) = 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_804 \/ not(are_compatible ('void*', a_802)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_808: pointer =
            let a_816: ctype = params_nth(a_803, 0) in
            if not(are_compatible ('void*', a_816)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_817: pointer = create(Ivalignof(a_816), a_816) in
              let weak _: unit = store(a_816, a_817, a_809) in
              pure(a_817) in
          let strong a_807: pointer =
            let a_818: ctype = params_nth(a_803, 1) in
            if not(are_compatible ('const void*', a_818)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_819: pointer = create(Ivalignof(a_818), a_818) in
              let weak _: unit = store(a_818, a_819, a_812) in
              pure(a_819) in
          let strong a_806: pointer =
            let a_820: ctype = params_nth(a_803, 2) in
            if not(are_compatible ('size_t', a_820)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_821: pointer = create(Ivalignof(a_820), a_820) in
              let weak _: unit =
                store(a_820, a_821, conv_loaded_int(a_820, a_815)) in
              pure(a_821) in
          let strong a_822: loaded pointer =
            ccall('void* (*) (void*restrict , const void*restrict , size_t)',
            a_801, a_808, a_807, a_806) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('void*', a_808)
            ,
              kill('void*', a_807)
            ,
              kill('size_t', a_806)
            ) in
          pure(a_822)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_823: loaded pointer,
      (a_824: ctype, a_825: [ctype], a_826: boolean, a_827: boolean)),
      a_831: loaded pointer, a_835: loaded integer, a_838: loaded floating) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_737: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_737, cfunction(a_737)))
        ,
          let weak a_833: pointer = pure(a_832) in
          {- §6.3.2.1#3 -}
          let weak a_834: pointer = memop(PtrArrayShift, a_833, 'char', 0) in
          pure(Specified(a_834))
        ,
          let weak a_837: pointer =
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_836: pointer = pure(s2) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_730, c], a_836) in
          load('char', a_837)
        ,
          let weak a_840: pointer =
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_839: pointer = pure(s2) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_730, f], a_839) in
          load('float', a_840)
        ) in
      if not(params_length(a_825) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_826) \/ not(are_compatible ('signed int', a_824)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_830: pointer =
            let a_841: ctype = params_nth(a_825, 0) in
            if not(are_compatible ('const char*', a_841)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_842: pointer = create(Ivalignof(a_841), a_841) in
              let weak _: unit = store(a_841, a_842, a_831) in
              pure(a_842) in
          let strong a_829: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_835)) in
          let strong a_828: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'double', a_838) in
          let strong a_843: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_823, a_830,
            [('signed int', a_829), ('double', a_828)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_830)
            ,
              kill('signed int', a_829)
            ,
              kill('double', a_828)
            ) in
          pure(a_843)
    ) in
  pure(Unit) ;
  kill('struct __cerbty_unnamed_tag_730', s1) ;
  kill('struct __cerbty_unnamed_tag_730', s2) ;
  pure(Unit) ;
  save ret_736: loaded integer (a_844: loaded integer:= Specified(0)) in
    pure(a_844)

