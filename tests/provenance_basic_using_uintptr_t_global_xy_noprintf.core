-- Aggregates
def struct __cerbty_unnamed_tag_505 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_537 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_713: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_714: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_713, conv_loaded_int('signed int', a_714)) ;
  pure(a_713)

glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_711: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_712: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', a_711, conv_loaded_int('signed int', a_712)) ;
  pure(a_711)

-- Fun map
proc main (): eff loaded integer :=
  let strong ux: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong uy: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong offset: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_645: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_646: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_648: pointer = pure(x) in
        pure(Specified(a_648)) in
      let Specified(a_647: pointer) = a_646 in
      let weak a_649: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_647) in
      pure(Specified(a_649))
    ) in
  store('uintptr_t', ux, conv_loaded_int('uintptr_t', a_645)) ;
  let strong a_650: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_651: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_653: pointer = pure(y) in
        pure(Specified(a_653)) in
      let Specified(a_652: pointer) = a_651 in
      let weak a_654: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_652) in
      pure(Specified(a_654))
    ) in
  store('uintptr_t', uy, conv_loaded_int('uintptr_t', a_650)) ;
  let strong a_655: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(4))) in
  store('uintptr_t', offset, conv_loaded_int('uintptr_t', a_655)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_644: pointer, a_663: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          pure(ux)
        ,
          {- §6.5.6 -}
          let weak (a_656: loaded integer, a_657: loaded integer) =
            unseq(
              let weak a_661: pointer = pure(ux) in
              load('uintptr_t', a_661)
            ,
              let weak a_662: pointer = pure(offset) in
              load('uintptr_t', a_662)
            ) in
          pure(
            let (Specified(a_658: integer), Specified(a_659: integer)) =
              (a_656, a_657) in
            Specified(wrapI('uintptr_t',
            conv_int('uintptr_t', a_658) + conv_int('uintptr_t', a_659)))
          )
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('uintptr_t', a_644, conv_loaded_int('uintptr_t', a_663))) in
      pure(conv_loaded_int('uintptr_t', a_663))
    ) in
  pure(Unit) ;
  let strong a_664: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_665: loaded integer =
        let weak a_667: pointer = pure(ux) in
        load('uintptr_t', a_667) in
      let Specified(a_666: integer) = a_665 in
      let weak a_668: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_666) in
      pure(Specified(a_668))
    ) in
  store('signed int*', p, a_664) ;
  let strong a_669: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_670: pointer = pure(y) in
      pure(Specified(a_670))
    ) in
  store('signed int*', q, a_669) ;
  let strong a_671: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_673: loaded integer, a_674: loaded integer) =
        unseq(
          let weak (a_678: loaded integer, a_679: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_684: loaded pointer,
              (a_685: ctype, a_686: [ctype], a_687: boolean, a_688: boolean)),
              a_692: loaded pointer, a_694: loaded pointer,
              a_696: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_683: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_683, cfunction(a_683)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_693: pointer = pure(p) in
                  pure(Specified(a_693))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_695: pointer = pure(q) in
                  pure(Specified(a_695))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_686) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_687 \/ not(are_compatible ('signed int', a_685)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_691: pointer =
                    let a_697: ctype = params_nth(a_686, 0) in
                    if not(are_compatible ('const void*', a_697)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_698: pointer =
                        create(Ivalignof(a_697), a_697) in
                      let weak _: unit = store(a_697, a_698, a_692) in
                      pure(a_698) in
                  let strong a_690: pointer =
                    let a_699: ctype = params_nth(a_686, 1) in
                    if not(are_compatible ('const void*', a_699)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_700: pointer =
                        create(Ivalignof(a_699), a_699) in
                      let weak _: unit = store(a_699, a_700, a_694) in
                      pure(a_700) in
                  let strong a_689: pointer =
                    let a_701: ctype = params_nth(a_686, 2) in
                    if not(are_compatible ('size_t', a_701)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_702: pointer =
                        create(Ivalignof(a_701), a_701) in
                      let weak _: unit =
                        store(a_701, a_702, conv_loaded_int(a_701, a_696)) in
                      pure(a_702) in
                  let strong a_703: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_684, a_691, a_690, a_689) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_691)
                    ,
                      kill('void*', a_690)
                    ,
                      kill('size_t', a_689)
                    ) in
                  pure(a_703)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_680: integer), Specified(a_681: integer)) =
              (a_678, a_679) in
            if conv_int('signed int', a_680) = conv_int('signed int', a_681) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_675: integer), Specified(a_676: integer)) =
          (a_673, a_674) in
        if conv_int('signed int', a_675) = conv_int('signed int', a_676) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_643: boolean =
    let Specified(a_672: integer) = a_671 in
    pure(if not(a_672 = 1) then True else False) in
  if a_643 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_704: pointer, a_709: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_705: loaded pointer =
              let weak a_708: pointer = pure(p) in
              load('signed int*', a_708) in
            let Specified(a_706: pointer) = a_705 in
            let weak a_707: boolean =
              memop(PtrValidForDeref, 'signed int', a_706) in
            pure(
              if a_707 then
                a_706
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_704, conv_loaded_int('signed int', a_709))) in
        pure(conv_loaded_int('signed int', a_709))
      ) in
    pure(Unit)
  else
    pure(Unit) ;
  kill('uintptr_t', ux) ;
  kill('uintptr_t', uy) ;
  kill('uintptr_t', offset) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_642: loaded integer (a_710: loaded integer:= Specified(0)) in
    pure(a_710)

