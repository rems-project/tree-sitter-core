-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

-- Globals
glob a_766: pointer [ail_ctype = 'char[13]'] :=
  create_readonly(Ivalignof('char[13]'), 'char[13]', Specified(Array(Specified(conv_int('char',
  40)), Specified(conv_int('char', 38)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 106)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_784: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_787: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

glob a_801: pointer [ail_ctype = 'char[13]'] :=
  create_readonly(Ivalignof('char[13]'), 'char[13]', Specified(Array(Specified(conv_int('char',
  40)), Specified(conv_int('char', 38)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 106)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_819: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_822: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong i: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong pj: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_754: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  store('signed int', i, conv_loaded_int('signed int', a_754)) ;
  {- §6.2.4#6 -}
  store('signed int*', pj, Unspecified('signed int*')) ;
  let strong j: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_755: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', j, conv_loaded_int('signed int', a_755)) ;
  let strong _: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_753: pointer, a_757: loaded pointer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          pure(pj)
        ,
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_756: pointer = pure(j) in
          pure(Specified(a_756))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int*', a_753, a_757)) in
      pure(a_757)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_758: loaded pointer,
      (a_759: ctype, a_760: [ctype], a_761: boolean, a_762: boolean)),
      a_765: loaded pointer, a_769: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_752: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_752, cfunction(a_752)))
        ,
          let weak a_767: pointer = pure(a_766) in
          {- §6.3.2.1#3 -}
          let weak a_768: pointer = memop(PtrArrayShift, a_767, 'char', 0) in
          pure(Specified(a_768))
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_782: loaded integer =
            let weak (a_770: loaded integer, a_771: loaded integer) =
              unseq(
                let weak (a_775: loaded pointer, a_776: loaded pointer) =
                  unseq(
                    {- §6.5.3.2#3, sentence 5 -}
                    let weak a_780: pointer = pure(i) in
                    pure(Specified(a_780))
                  ,
                    let weak a_781: pointer = pure(pj) in
                    load('signed int*', a_781)
                  ) in
                let (Specified(a_777: pointer), Specified(a_778: pointer)) =
                  (a_775, a_776) in
                let weak a_779: boolean = memop(PtrEq, a_777, a_778) in
                pure(if a_779 then Specified(1) else Specified(0))
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_772: integer), Specified(a_773: integer)) =
                (a_770, a_771) in
              if conv_int('signed int', a_772) = conv_int('signed int', a_773) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_783: integer) = a_782 in
          {- §6.5.15#4, sentence 2 -}
          if a_783 = 0 then
            let weak a_785: pointer = pure(a_784) in
            {- §6.3.2.1#3 -}
            let weak a_786: pointer =
              memop(PtrArrayShift, a_785, 'char', 0) in
            pure(Specified(a_786))
          else
            let weak a_788: pointer = pure(a_787) in
            {- §6.3.2.1#3 -}
            let weak a_789: pointer =
              memop(PtrArrayShift, a_788, 'char', 0) in
            pure(Specified(a_789))
        ) in
      if not(params_length(a_760) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_761) \/ not(are_compatible ('signed int', a_759)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_764: pointer =
            let a_790: ctype = params_nth(a_760, 0) in
            if not(are_compatible ('const char*', a_790)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_791: pointer = create(Ivalignof(a_790), a_790) in
              let weak _: unit = store(a_790, a_791, a_765) in
              pure(a_791) in
          let strong a_763: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_769) in
          let strong a_792: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_758, a_764,
            [('char*', a_763)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_764), kill('char*', a_763)) in
          pure(a_792)
    ) in
  pure(Unit) ;
  kill('signed int', j) ;
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_793: loaded pointer,
      (a_794: ctype, a_795: [ctype], a_796: boolean, a_797: boolean)),
      a_800: loaded pointer, a_804: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_751: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_751, cfunction(a_751)))
        ,
          let weak a_802: pointer = pure(a_801) in
          {- §6.3.2.1#3 -}
          let weak a_803: pointer = memop(PtrArrayShift, a_802, 'char', 0) in
          pure(Specified(a_803))
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_817: loaded integer =
            let weak (a_805: loaded integer, a_806: loaded integer) =
              unseq(
                let weak (a_810: loaded pointer, a_811: loaded pointer) =
                  unseq(
                    {- §6.5.3.2#3, sentence 5 -}
                    let weak a_815: pointer = pure(i) in
                    pure(Specified(a_815))
                  ,
                    let weak a_816: pointer = pure(pj) in
                    load('signed int*', a_816)
                  ) in
                let (Specified(a_812: pointer), Specified(a_813: pointer)) =
                  (a_810, a_811) in
                let weak a_814: boolean = memop(PtrEq, a_812, a_813) in
                pure(if a_814 then Specified(1) else Specified(0))
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_807: integer), Specified(a_808: integer)) =
                (a_805, a_806) in
              if conv_int('signed int', a_807) = conv_int('signed int', a_808) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_818: integer) = a_817 in
          {- §6.5.15#4, sentence 2 -}
          if a_818 = 0 then
            let weak a_820: pointer = pure(a_819) in
            {- §6.3.2.1#3 -}
            let weak a_821: pointer =
              memop(PtrArrayShift, a_820, 'char', 0) in
            pure(Specified(a_821))
          else
            let weak a_823: pointer = pure(a_822) in
            {- §6.3.2.1#3 -}
            let weak a_824: pointer =
              memop(PtrArrayShift, a_823, 'char', 0) in
            pure(Specified(a_824))
        ) in
      if not(params_length(a_795) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_796) \/ not(are_compatible ('signed int', a_794)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_799: pointer =
            let a_825: ctype = params_nth(a_795, 0) in
            if not(are_compatible ('const char*', a_825)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_826: pointer = create(Ivalignof(a_825), a_825) in
              let weak _: unit = store(a_825, a_826, a_800) in
              pure(a_826) in
          let strong a_798: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_804) in
          let strong a_827: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_793, a_799,
            [('char*', a_798)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_799), kill('char*', a_798)) in
          pure(a_827)
    ) in
  pure(Unit) ;
  let strong a_828: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  kill('signed int', i) ;
  kill('signed int*', pj) ;
  run ret_750(conv_loaded_int('signed int', a_828)) ;
  kill('signed int', i) ;
  kill('signed int*', pj) ;
  pure(Unit) ;
  save ret_750: loaded integer (a_829: loaded integer:= Specified(0)) in
    pure(a_829)

