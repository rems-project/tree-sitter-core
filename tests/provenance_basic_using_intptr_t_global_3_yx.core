-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_887: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_888: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', a_887, conv_loaded_int('signed int', a_888)) ;
  pure(a_887)

glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_885: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_886: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_885, conv_loaded_int('signed int', a_886)) ;
  pure(a_885)

glob a_794: pointer [ail_ctype = 'char[23]'] :=
  create_readonly(Ivalignof('char[23]'), 'char[23]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_861: pointer [ail_ctype = 'char[24]'] :=
  create_readonly(Ivalignof('char[24]'), 'char[24]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong i: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong pi: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_764: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_765: pointer = pure(x) in
      pure(Specified(a_765))
    ) in
  store('signed int*', p, a_764) ;
  let strong a_766: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_767: loaded pointer =
        let weak a_769: pointer = pure(p) in
        load('signed int*', a_769) in
      let Specified(a_768: pointer) = a_767 in
      let weak a_770: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_768) in
      pure(Specified(a_770))
    ) in
  store('intptr_t', i, conv_loaded_int('intptr_t', a_766)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_763: pointer, a_777: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          pure(i)
        ,
          {- §6.5.6 -}
          let weak (a_771: loaded integer, a_772: loaded integer) =
            unseq(
              let weak a_776: pointer = pure(i) in
              load('intptr_t', a_776)
            ,
              pure(Specified(Ivsizeof('signed int')))
            ) in
          pure(
            let (Specified(a_773: integer), Specified(a_774: integer)) =
              (a_771, a_772) in
            Specified(wrapI('size_t',
            if all_values_representable_in('size_t', 'intptr_t') then
              conv_int('intptr_t', a_773)
            else
              conv_int('uintptr_t', a_773) +
            if all_values_representable_in('size_t', 'intptr_t') then
              conv_int('intptr_t', a_774)
            else
              conv_int('uintptr_t', a_774)))
          )
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('intptr_t', a_763, conv_loaded_int('intptr_t', a_777))) in
      pure(conv_loaded_int('intptr_t', a_777))
    ) in
  pure(Unit) ;
  let strong a_778: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_779: loaded integer =
        let weak a_781: pointer = pure(i) in
        load('intptr_t', a_781) in
      let Specified(a_780: integer) = a_779 in
      let weak a_782: pointer =
        memop(PtrFromInt, 'intptr_t', 'signed int', a_780) in
      pure(Specified(a_782))
    ) in
  store('signed int*', pi, a_778) ;
  let strong a_783: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_784: pointer = pure(y) in
      pure(Specified(a_784))
    ) in
  store('signed int*', q, a_783) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_785: loaded pointer,
      (a_786: ctype, a_787: [ctype], a_788: boolean, a_789: boolean)),
      a_793: loaded pointer, a_797: loaded pointer, a_802: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_762: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_762, cfunction(a_762)))
        ,
          let weak a_795: pointer = pure(a_794) in
          {- §6.3.2.1#3 -}
          let weak a_796: pointer = memop(PtrArrayShift, a_795, 'char', 0) in
          pure(Specified(a_796))
        ,
          {- §6.5.4 -}
          let weak a_800: pointer = pure(pi) in
          load('signed int*', a_800)
        ,
          {- §6.5.4 -}
          let weak a_805: pointer = pure(q) in
          load('signed int*', a_805)
        ) in
      if not(params_length(a_787) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_788) \/ not(are_compatible ('signed int', a_786)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_792: pointer =
            let a_807: ctype = params_nth(a_787, 0) in
            if not(are_compatible ('const char*', a_807)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_808: pointer = create(Ivalignof(a_807), a_807) in
              let weak _: unit = store(a_807, a_808, a_793) in
              pure(a_808) in
          let strong a_791: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_797) in
          let strong a_790: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_802) in
          let strong a_809: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_785, a_792,
            [('void*', a_791), ('void*', a_790)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_792)
            ,
              kill('void*', a_791)
            ,
              kill('void*', a_790)
            ) in
          pure(a_809)
    ) in
  pure(Unit) ;
  let strong a_810: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_812: loaded integer, a_813: loaded integer) =
        unseq(
          let weak (a_817: loaded integer, a_818: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_823: loaded pointer,
              (a_824: ctype, a_825: [ctype], a_826: boolean, a_827: boolean)),
              a_831: loaded pointer, a_833: loaded pointer,
              a_835: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_822: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_822, cfunction(a_822)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_832: pointer = pure(pi) in
                  pure(Specified(a_832))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_834: pointer = pure(q) in
                  pure(Specified(a_834))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_825) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_826 \/ not(are_compatible ('signed int', a_824)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_830: pointer =
                    let a_836: ctype = params_nth(a_825, 0) in
                    if not(are_compatible ('const void*', a_836)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_837: pointer =
                        create(Ivalignof(a_836), a_836) in
                      let weak _: unit = store(a_836, a_837, a_831) in
                      pure(a_837) in
                  let strong a_829: pointer =
                    let a_838: ctype = params_nth(a_825, 1) in
                    if not(are_compatible ('const void*', a_838)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_839: pointer =
                        create(Ivalignof(a_838), a_838) in
                      let weak _: unit = store(a_838, a_839, a_833) in
                      pure(a_839) in
                  let strong a_828: pointer =
                    let a_840: ctype = params_nth(a_825, 2) in
                    if not(are_compatible ('size_t', a_840)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_841: pointer =
                        create(Ivalignof(a_840), a_840) in
                      let weak _: unit =
                        store(a_840, a_841, conv_loaded_int(a_840, a_835)) in
                      pure(a_841) in
                  let strong a_842: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_823, a_830, a_829, a_828) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_830)
                    ,
                      kill('void*', a_829)
                    ,
                      kill('size_t', a_828)
                    ) in
                  pure(a_842)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_819: integer), Specified(a_820: integer)) =
              (a_817, a_818) in
            if conv_int('signed int', a_819) = conv_int('signed int', a_820) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_814: integer), Specified(a_815: integer)) =
          (a_812, a_813) in
        if conv_int('signed int', a_814) = conv_int('signed int', a_815) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_761: boolean =
    let Specified(a_811: integer) = a_810 in
    pure(if not(a_811 = 1) then True else False) in
  if a_761 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_844: pointer, a_849: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_845: loaded pointer =
              let weak a_848: pointer = pure(pi) in
              load('signed int*', a_848) in
            let Specified(a_846: pointer) = a_845 in
            let weak a_847: boolean =
              memop(PtrValidForDeref, 'signed int', a_846) in
            pure(
              if a_847 then
                a_846
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_844, conv_loaded_int('signed int', a_849))) in
        pure(conv_loaded_int('signed int', a_849))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_850: loaded pointer,
        (a_851: ctype, a_852: [ctype], a_853: boolean, a_854: boolean)),
        a_860: loaded pointer, a_864: loaded integer, a_866: loaded integer,
        a_868: loaded integer, a_874: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_843: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_843, cfunction(a_843)))
          ,
            let weak a_862: pointer = pure(a_861) in
            {- §6.3.2.1#3 -}
            let weak a_863: pointer =
              memop(PtrArrayShift, a_862, 'char', 0) in
            pure(Specified(a_863))
          ,
            let weak a_865: pointer = pure(x) in
            load('signed int', a_865)
          ,
            let weak a_867: pointer = pure(y) in
            load('signed int', a_867)
          ,
            let weak a_873: pointer =
              {- §6.5.3.2 -}
              let weak a_869: loaded pointer =
                let weak a_872: pointer = pure(pi) in
                load('signed int*', a_872) in
              let Specified(a_870: pointer) = a_869 in
              let weak a_871: boolean =
                memop(PtrValidForDeref, 'signed int', a_870) in
              pure(
                if a_871 then
                  a_870
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_873)
          ,
            let weak a_879: pointer =
              {- §6.5.3.2 -}
              let weak a_875: loaded pointer =
                let weak a_878: pointer = pure(q) in
                load('signed int*', a_878) in
              let Specified(a_876: pointer) = a_875 in
              let weak a_877: boolean =
                memop(PtrValidForDeref, 'signed int', a_876) in
              pure(
                if a_877 then
                  a_876
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_879)
          ) in
        if not(params_length(a_852) <= 5) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_853) \/ not(are_compatible ('signed int', a_851)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_859: pointer =
              let a_880: ctype = params_nth(a_852, 0) in
              if not(are_compatible ('const char*', a_880)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_881: pointer = create(Ivalignof(a_880), a_880) in
                let weak _: unit = store(a_880, a_881, a_860) in
                pure(a_881) in
            let strong a_858: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_864)) in
            let strong a_857: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_866)) in
            let strong a_856: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_868)) in
            let strong a_855: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_874)) in
            let strong a_882: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_850, a_859,
              [('signed int', a_858), ('signed int', a_857),
              ('signed int', a_856), ('signed int', a_855)]) in
            let strong _: (unit,unit,unit,unit,unit) =
              unseq(
                kill('char*', a_859)
              ,
                kill('signed int', a_858)
              ,
                kill('signed int', a_857)
              ,
                kill('signed int', a_856)
              ,
                kill('signed int', a_855)
              ) in
            pure(a_882)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  let strong a_883: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  kill('signed int*', p) ;
  kill('intptr_t', i) ;
  kill('signed int*', pi) ;
  kill('signed int*', q) ;
  run ret_760(conv_loaded_int('signed int', a_883)) ;
  kill('signed int*', p) ;
  kill('intptr_t', i) ;
  kill('signed int*', pi) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_760: loaded integer (a_884: loaded integer:= Specified(0)) in
    pure(a_884)

