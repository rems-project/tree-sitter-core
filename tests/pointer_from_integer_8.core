-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_734: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  106)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc f (xi: pointer): eff unit :=
  let strong j: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_715: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  store('signed int', j, conv_loaded_int('signed int', a_715)) ;
  let strong a_716: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_717: loaded integer =
        let weak a_719: pointer = pure(xi) in
        load('uintptr_t', a_719) in
      let Specified(a_718: integer) = a_717 in
      let weak a_720: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_718) in
      pure(Specified(a_720))
    ) in
  store('signed int*', p, a_716) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_714: pointer, a_725: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_721: loaded pointer =
            let weak a_724: pointer = pure(p) in
            load('signed int*', a_724) in
          let Specified(a_722: pointer) = a_721 in
          let weak a_723: boolean =
            memop(PtrValidForDeref, 'signed int', a_722) in
          pure(
            if a_723 then
              a_722
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(1))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_714, conv_loaded_int('signed int', a_725))) in
      pure(conv_loaded_int('signed int', a_725))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_726: loaded pointer,
      (a_727: ctype, a_728: [ctype], a_729: boolean, a_730: boolean)),
      a_733: loaded pointer, a_737: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_713: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_713, cfunction(a_713)))
        ,
          let weak a_735: pointer = pure(a_734) in
          {- §6.3.2.1#3 -}
          let weak a_736: pointer = memop(PtrArrayShift, a_735, 'char', 0) in
          pure(Specified(a_736))
        ,
          let weak a_738: pointer = pure(j) in
          load('signed int', a_738)
        ) in
      if not(params_length(a_728) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_729) \/ not(are_compatible ('signed int', a_727)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_732: pointer =
            let a_739: ctype = params_nth(a_728, 0) in
            if not(are_compatible ('const char*', a_739)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_740: pointer = create(Ivalignof(a_739), a_739) in
              let weak _: unit = store(a_739, a_740, a_733) in
              pure(a_740) in
          let strong a_731: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_737)) in
          let strong a_741: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_726, a_732,
            [('signed int', a_731)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_732), kill('signed int', a_731)) in
          pure(a_741)
    ) in
  pure(Unit) ;
  kill('signed int', j) ;
  kill('signed int*', p) ;
  pure(Unit) ;
  save ret_712: unit (a_742: unit:= Unit) in  pure(a_742)

proc main (): eff loaded integer :=
  let strong k: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong xk: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong xj: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong a_686: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  store('signed int', k, conv_loaded_int('signed int', a_686)) ;
  let strong a_687: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_688: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_690: pointer = pure(k) in
        pure(Specified(a_690)) in
      let Specified(a_689: pointer) = a_688 in
      let weak a_691: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_689) in
      pure(Specified(a_691))
    ) in
  store('uintptr_t', xk, conv_loaded_int('uintptr_t', a_687)) ;
  let strong a_692: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_694: loaded integer, a_695: loaded integer) =
        unseq(
          let weak a_693: pointer = pure(xk) in
          load('uintptr_t', a_693)
        ,
          pure(Specified(40))
        ) in
      pure(
        let (Specified(a_696: integer), Specified(a_697: integer)) =
          (a_694, a_695) in
        Specified(wrapI('uintptr_t',
        conv_int('uintptr_t', a_696) - conv_int('uintptr_t', a_697)))
      )
    ) in
  store('uintptr_t', xj, conv_loaded_int('uintptr_t', a_692)) ;
  {- §6.5#2 -}
  bound(
    {- §6.5.2.2#10, sentence 1 -}
    let strong ((a_699: loaded pointer,
    (a_700: ctype, a_701: [ctype], a_702: boolean, a_703: boolean)),
    a_705: loaded integer) =
      {- §6.5.2.2#4, sentence 2 -}
      unseq(
        let strong a_685: loaded pointer = pure(Specified(Cfunction(f))) in
        pure((a_685, cfunction(a_685)))
      ,
        let weak a_706: pointer = pure(xj) in
        load('uintptr_t', a_706)
      ) in
    if not(params_length(a_701) = 1) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_702 \/ not(are_compatible ('void', a_700)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_704: pointer =
          let a_707: ctype = params_nth(a_701, 0) in
          if not(are_compatible ('uintptr_t', a_707)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_708: pointer = create(Ivalignof(a_707), a_707) in
            let weak _: unit =
              store(a_707, a_708, conv_loaded_int(a_707, a_705)) in
            pure(a_708) in
        let strong a_709: unit =
          ccall('void (*) (uintptr_t)', a_699, a_704) in
        kill('uintptr_t', a_704) ;
        pure(a_709)
  ) ;
  pure(Unit) ;
  kill('signed int', k) ;
  kill('uintptr_t', xk) ;
  kill('uintptr_t', xj) ;
  pure(Unit) ;
  save ret_684: loaded integer (a_710: loaded integer:= Specified(0)) in
    pure(a_710)

