-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_683: pointer [ail_ctype = 'char[13]'] :=
  create_readonly(Ivalignof('char[13]'), 'char[13]', Specified(Array(Specified(conv_int('char',
  99)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 50)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong c: pointer =
    create(Ivalignof('unsigned char'), 'unsigned char') in
  let strong p: pointer =
    create(Ivalignof('unsigned char*'), 'unsigned char*') in
  let strong c2: pointer =
    create(Ivalignof('unsigned char'), 'unsigned char') in
  {- §6.2.4#6 -}
  store('unsigned char', c, Unspecified('unsigned ichar')) ;
  let strong a_653: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_654: pointer = pure(c) in
      pure(Specified(a_654))
    ) in
  store('unsigned char*', p, a_653) ;
  let strong a_655: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_656: loaded integer, a_657: loaded integer) =
        unseq(
          {- §6.5.5 -}
          let weak (a_662: loaded integer, a_663: loaded integer) =
            unseq(
              let weak a_661: pointer = pure(c) in
              load('unsigned char', a_661)
            ,
              pure(Specified(2))
            ) in
          pure(
            let (Specified(a_664: integer), Specified(a_665: integer)) =
              (a_662, a_663) in
            let a_666: integer = conv_int('unsigned int', a_664) in
            let a_667: integer = conv_int('unsigned int', a_665) in
            if a_667 = 0 then
              undef(<<UB045b_modulo_by_zero>>)
            else
              if is_representable_integer(conv_int('unsigned int', a_664) /
              a_667, 'unsigned int') then
                Specified(wrapI('unsigned int', a_666 rem_t a_667))
              else
                undef(<<UB045c_quotient_not_representable>>)
          )
        ,
          {- §6.5.6 -}
          let weak (a_669: loaded integer, a_670: loaded integer) =
            unseq(
              pure(Specified(1))
            ,
              let weak a_668: pointer = pure(c) in
              load('unsigned char', a_668)
            ) in
          pure(
            let (Specified(a_671: integer), Specified(a_672: integer)) =
              (a_669, a_670) in
            Specified(wrapI('unsigned int',
            conv_int('unsigned int', a_671) - conv_int('unsigned int', a_672)))
          )
        ) in
      pure(
        let (Specified(a_658: integer), Specified(a_659: integer)) =
          (a_656, a_657) in
        Specified(wrapI('unsigned int',
        conv_int('unsigned int', a_658) + conv_int('unsigned int', a_659)))
      )
    ) in
  store('unsigned char', c2, conv_loaded_int('unsigned char', a_655)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_674: loaded pointer,
      (a_675: ctype, a_676: [ctype], a_677: boolean, a_678: boolean)),
      a_682: loaded pointer, a_686: loaded integer, a_691: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_652: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_652, cfunction(a_652)))
        ,
          let weak a_684: pointer = pure(a_683) in
          {- §6.3.2.1#3 -}
          let weak a_685: pointer = memop(PtrArrayShift, a_684, 'char', 0) in
          pure(Specified(a_685))
        ,
          {- §6.5.4 -}
          let weak a_687: loaded integer =
            let weak a_689: pointer = pure(c) in
            load('unsigned char', a_689) in
          pure(conv_loaded_int('signed int', a_687))
        ,
          {- §6.5.4 -}
          let weak a_692: loaded integer =
            let weak a_694: pointer = pure(c2) in
            load('unsigned char', a_694) in
          pure(conv_loaded_int('signed int', a_692))
        ) in
      if not(params_length(a_676) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_677) \/ not(are_compatible ('signed int', a_675)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_681: pointer =
            let a_696: ctype = params_nth(a_676, 0) in
            if not(are_compatible ('const char*', a_696)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_697: pointer = create(Ivalignof(a_696), a_696) in
              let weak _: unit = store(a_696, a_697, a_682) in
              pure(a_697) in
          let strong a_680: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_686)) in
          let strong a_679: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_691)) in
          let strong a_698: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_674, a_681,
            [('signed int', a_680), ('signed int', a_679)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_681)
            ,
              kill('signed int', a_680)
            ,
              kill('signed int', a_679)
            ) in
          pure(a_698)
    ) in
  pure(Unit) ;
  kill('unsigned ichar', c) ;
  kill('unsigned ichar*', p) ;
  kill('unsigned ichar', c2) ;
  pure(Unit) ;
  save ret_651: loaded integer (a_699: loaded integer:= Specified(0)) in
    pure(a_699)

