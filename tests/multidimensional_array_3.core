-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_713: pointer [ail_ctype = 'char[12]'] :=
  create_readonly(Ivalignof('char[12]'), 'char[12]', Specified(Array(Specified(conv_int('char',
  97)), Specified(conv_int('char', 91)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 93)), Specified(conv_int('char', 91)),
  Specified(conv_int('char', 49)), Specified(conv_int('char', 93)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong a: pointer =
    create(Ivalignof('signed int[2][2]'), 'signed int[2][2]') in
  let strong p00: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong p11: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_658: loaded array(array(integer)) =
    {- §6.5#2 -}
    bound(
      let weak (a_664: loaded array(integer), a_661: loaded array(integer)) =
        {- §6.7.9#23 -}
        unseq(
          let weak (a_663: loaded integer, a_662: loaded integer) =
            {- §6.7.9#23 -}
            unseq(pure(Specified(4)), pure(Specified(3))) in
          pure(
            Specified(Array(conv_loaded_int('signed int', a_662),
            conv_loaded_int('signed int', a_663)))
          )
        ,
          let weak (a_660: loaded integer, a_659: loaded integer) =
            {- §6.7.9#23 -}
            unseq(pure(Specified(2)), pure(Specified(1))) in
          pure(
            Specified(Array(conv_loaded_int('signed int', a_659),
            conv_loaded_int('signed int', a_660)))
          )
        ) in
      pure(Specified(Array(a_661, a_664)))
    ) in
  store('signed int[2][2]', a, a_658) ;
  let strong a_665: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      {- §6.5.3.2#3, sentence 3 -}
      let weak (a_666: loaded pointer, a_668: loaded integer) =
        unseq(
          let weak a_681: pointer =
            {- §6.5.3.2 -}
            let weak a_671: loaded pointer =
              {- §6.5.6 -}
              let weak (a_674: loaded pointer, a_676: loaded integer) =
                unseq(
                  let weak a_679: pointer = pure(a) in
                  {- §6.3.2.1#3 -}
                  let weak a_680: pointer =
                    memop(PtrArrayShift, a_679, 'signed int[2]', 0) in
                  pure(Specified(a_680))
                ,
                  pure(Specified(0))
                ) in
              let (Specified(a_675: pointer), Specified(a_677: integer)) =
                (a_674, a_676) in
              let weak a_678: pointer =
                memop(PtrArrayShift, a_675, 'signed int[2]', a_677) in
              pure(Specified(a_678)) in
            let Specified(a_672: pointer) = a_671 in
            let weak a_673: boolean =
              memop(PtrValidForDeref, 'signed int[2]', a_672) in
            pure(
              if a_673 then
                a_672
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          {- §6.3.2.1#3 -}
          let weak a_682: pointer =
            memop(PtrArrayShift, a_681, 'signed int', 0) in
          pure(Specified(a_682))
        ,
          pure(Specified(0))
        ) in
      let (Specified(a_667: pointer), Specified(a_669: integer)) =
        (a_666, a_668) in
      let weak a_670: pointer =
        memop(PtrArrayShift, a_667, 'signed int', a_669) in
      pure(Specified(a_670))
    ) in
  store('signed int*', p00, a_665) ;
  let strong a_683: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_684: loaded pointer, a_686: loaded integer) =
        unseq(
          {- §6.5.6 -}
          let weak (a_689: loaded pointer, a_691: loaded integer) =
            unseq(
              let weak a_694: pointer = pure(p00) in
              load('signed int*', a_694)
            ,
              {- §6.5.5 -}
              let weak (a_695: loaded integer, a_696: loaded integer) =
                unseq(pure(Specified(1)), pure(Specified(2))) in
              pure(
                let (Specified(a_697: integer), Specified(a_698: integer)) =
                  (a_695, a_696) in
                Specified(catch_exceptional_condition('signed int',
                conv_int('signed int', a_697) * conv_int('signed int', a_698)))
              )
            ) in
          let (Specified(a_690: pointer), Specified(a_692: integer)) =
            (a_689, a_691) in
          let weak a_693: pointer =
            memop(PtrArrayShift, a_690, 'signed int', a_692) in
          pure(Specified(a_693))
        ,
          pure(Specified(1))
        ) in
      let (Specified(a_685: pointer), Specified(a_687: integer)) =
        (a_684, a_686) in
      let weak a_688: pointer =
        memop(PtrArrayShift, a_685, 'signed int', a_687) in
      pure(Specified(a_688))
    ) in
  store('signed int*', p11, a_683) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_657: pointer, a_704: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_700: loaded pointer =
            let weak a_703: pointer = pure(p11) in
            load('signed int*', a_703) in
          let Specified(a_701: pointer) = a_700 in
          let weak a_702: boolean =
            memop(PtrValidForDeref, 'signed int', a_701) in
          pure(
            if a_702 then
              a_701
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(44))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_657, conv_loaded_int('signed int', a_704))) in
      pure(conv_loaded_int('signed int', a_704))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_705: loaded pointer,
      (a_706: ctype, a_707: [ctype], a_708: boolean, a_709: boolean)),
      a_712: loaded pointer, a_716: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_656: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_656, cfunction(a_656)))
        ,
          let weak a_714: pointer = pure(a_713) in
          {- §6.3.2.1#3 -}
          let weak a_715: pointer = memop(PtrArrayShift, a_714, 'char', 0) in
          pure(Specified(a_715))
        ,
          let weak a_737: pointer =
            {- §6.5.3.2 -}
            let weak a_717: loaded pointer =
              {- §6.5.6 -}
              let weak (a_720: loaded pointer, a_722: loaded integer) =
                unseq(
                  let weak a_735: pointer =
                    {- §6.5.3.2 -}
                    let weak a_725: loaded pointer =
                      {- §6.5.6 -}
                      let weak (a_728: loaded pointer, a_730: loaded integer) =
                        unseq(
                          let weak a_733: pointer = pure(a) in
                          {- §6.3.2.1#3 -}
                          let weak a_734: pointer =
                            memop(PtrArrayShift, a_733, 'signed int[2]', 0) in
                          pure(Specified(a_734))
                        ,
                          pure(Specified(1))
                        ) in
                      let (Specified(a_729: pointer),
                      Specified(a_731: integer)) =
                        (a_728, a_730) in
                      let weak a_732: pointer =
                        memop(PtrArrayShift, a_729, 'signed int[2]', a_731) in
                      pure(Specified(a_732)) in
                    let Specified(a_726: pointer) = a_725 in
                    let weak a_727: boolean =
                      memop(PtrValidForDeref, 'signed int[2]', a_726) in
                    pure(
                      if a_727 then
                        a_726
                      else
                        undef(<<UB043_indirection_invalid_value>>)
                    ) in
                  {- §6.3.2.1#3 -}
                  let weak a_736: pointer =
                    memop(PtrArrayShift, a_735, 'signed int', 0) in
                  pure(Specified(a_736))
                ,
                  pure(Specified(1))
                ) in
              let (Specified(a_721: pointer), Specified(a_723: integer)) =
                (a_720, a_722) in
              let weak a_724: pointer =
                memop(PtrArrayShift, a_721, 'signed int', a_723) in
              pure(Specified(a_724)) in
            let Specified(a_718: pointer) = a_717 in
            let weak a_719: boolean =
              memop(PtrValidForDeref, 'signed int', a_718) in
            pure(
              if a_719 then
                a_718
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_737)
        ) in
      if not(params_length(a_707) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_708) \/ not(are_compatible ('signed int', a_706)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_711: pointer =
            let a_738: ctype = params_nth(a_707, 0) in
            if not(are_compatible ('const char*', a_738)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_739: pointer = create(Ivalignof(a_738), a_738) in
              let weak _: unit = store(a_738, a_739, a_712) in
              pure(a_739) in
          let strong a_710: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_716)) in
          let strong a_740: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_705, a_711,
            [('signed int', a_710)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_711), kill('signed int', a_710)) in
          pure(a_740)
    ) in
  pure(Unit) ;
  kill('signed int[2][2]', a) ;
  kill('signed int*', p00) ;
  kill('signed int*', p11) ;
  pure(Unit) ;
  save ret_655: loaded integer (a_741: loaded integer:= Specified(0)) in
    pure(a_741)

