-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_758: pointer [ail_ctype = 'char[22]'] :=
  create_readonly(Ivalignof('char[22]'), 'char[22]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_812: pointer [ail_ctype = 'char[13]'] :=
  create_readonly(Ivalignof('char[13]'), 'char[13]', Specified(Array(Specified(conv_int('char',
  40)), Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_824: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_827: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc f (p: pointer, q: pointer): eff unit :=
  let strong b: pointer = create(Ivalignof('_Bool'), '_Bool') in
  let strong a_796: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_797: loaded pointer, a_798: loaded pointer) =
        unseq(
          let weak a_802: pointer = pure(p) in
          load('signed int*', a_802)
        ,
          let weak a_803: pointer = pure(q) in
          load('signed int*', a_803)
        ) in
      let (Specified(a_799: pointer), Specified(a_800: pointer)) =
        (a_797, a_798) in
      let weak a_801: boolean = memop(PtrEq, a_799, a_800) in
      pure(if a_801 then Specified(1) else Specified(0))
    ) in
  store('_Bool', b, conv_loaded_int('_Bool', a_796)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_804: loaded pointer,
      (a_805: ctype, a_806: [ctype], a_807: boolean, a_808: boolean)),
      a_811: loaded pointer, a_815: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_795: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_795, cfunction(a_795)))
        ,
          let weak a_813: pointer = pure(a_812) in
          {- §6.3.2.1#3 -}
          let weak a_814: pointer = memop(PtrArrayShift, a_813, 'char', 0) in
          pure(Specified(a_814))
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_822: loaded integer =
            let weak (a_816: loaded integer, a_817: loaded integer) =
              unseq(
                let weak a_821: pointer = pure(b) in
                load('_Bool', a_821)
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_818: integer), Specified(a_819: integer)) =
                (a_816, a_817) in
              if conv_int('signed int', a_818) = conv_int('signed int', a_819) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_823: integer) = a_822 in
          {- §6.5.15#4, sentence 2 -}
          if a_823 = 0 then
            let weak a_825: pointer = pure(a_824) in
            {- §6.3.2.1#3 -}
            let weak a_826: pointer =
              memop(PtrArrayShift, a_825, 'char', 0) in
            pure(Specified(a_826))
          else
            let weak a_828: pointer = pure(a_827) in
            {- §6.3.2.1#3 -}
            let weak a_829: pointer =
              memop(PtrArrayShift, a_828, 'char', 0) in
            pure(Specified(a_829))
        ) in
      if not(params_length(a_806) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_807) \/ not(are_compatible ('signed int', a_805)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_810: pointer =
            let a_830: ctype = params_nth(a_806, 0) in
            if not(are_compatible ('const char*', a_830)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_831: pointer = create(Ivalignof(a_830), a_830) in
              let weak _: unit = store(a_830, a_831, a_811) in
              pure(a_831) in
          let strong a_809: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_815) in
          let strong a_832: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_804, a_810,
            [('char*', a_809)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_810), kill('char*', a_809)) in
          pure(a_832)
    ) in
  pure(Unit) ;
  kill('_Bool', b) ;
  run ret_794(Unit) ;
  kill('_Bool', b) ;
  pure(Unit) ;
  save ret_794: unit (a_833: unit:= Unit) in  pure(a_833)

proc main (): eff loaded integer :=
  let strong y: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_738: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', y, conv_loaded_int('signed int', a_738)) ;
  let strong a_739: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', x, conv_loaded_int('signed int', a_739)) ;
  let strong a_740: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_741: loaded pointer, a_743: loaded integer) =
        unseq(
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_746: pointer = pure(x) in
          pure(Specified(a_746))
        ,
          pure(Specified(1))
        ) in
      let (Specified(a_742: pointer), Specified(a_744: integer)) =
        (a_741, a_743) in
      let weak a_745: pointer =
        memop(PtrArrayShift, a_742, 'signed int', a_744) in
      pure(Specified(a_745))
    ) in
  store('signed int*', p, a_740) ;
  let strong a_747: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_748: pointer = pure(y) in
      pure(Specified(a_748))
    ) in
  store('signed int*', q, a_747) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_749: loaded pointer,
      (a_750: ctype, a_751: [ctype], a_752: boolean, a_753: boolean)),
      a_757: loaded pointer, a_761: loaded pointer, a_766: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_737: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_737, cfunction(a_737)))
        ,
          let weak a_759: pointer = pure(a_758) in
          {- §6.3.2.1#3 -}
          let weak a_760: pointer = memop(PtrArrayShift, a_759, 'char', 0) in
          pure(Specified(a_760))
        ,
          {- §6.5.4 -}
          let weak a_764: pointer = pure(p) in
          load('signed int*', a_764)
        ,
          {- §6.5.4 -}
          let weak a_769: pointer = pure(q) in
          load('signed int*', a_769)
        ) in
      if not(params_length(a_751) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_752) \/ not(are_compatible ('signed int', a_750)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_756: pointer =
            let a_771: ctype = params_nth(a_751, 0) in
            if not(are_compatible ('const char*', a_771)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_772: pointer = create(Ivalignof(a_771), a_771) in
              let weak _: unit = store(a_771, a_772, a_757) in
              pure(a_772) in
          let strong a_755: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_761) in
          let strong a_754: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_766) in
          let strong a_773: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_749, a_756,
            [('void*', a_755), ('void*', a_754)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_756)
            ,
              kill('void*', a_755)
            ,
              kill('void*', a_754)
            ) in
          pure(a_773)
    ) in
  pure(Unit) ;
  {- §6.5#2 -}
  bound(
    {- §6.5.2.2#10, sentence 1 -}
    let strong ((a_774: loaded pointer,
    (a_775: ctype, a_776: [ctype], a_777: boolean, a_778: boolean)),
    a_781: loaded pointer, a_783: loaded pointer) =
      {- §6.5.2.2#4, sentence 2 -}
      unseq(
        let strong a_736: loaded pointer = pure(Specified(Cfunction(f))) in
        pure((a_736, cfunction(a_736)))
      ,
        let weak a_782: pointer = pure(p) in
        load('signed int*', a_782)
      ,
        let weak a_784: pointer = pure(q) in
        load('signed int*', a_784)
      ) in
    if not(params_length(a_776) = 2) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_777 \/ not(are_compatible ('void', a_775)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_780: pointer =
          let a_785: ctype = params_nth(a_776, 0) in
          if not(are_compatible ('signed int*', a_785)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_786: pointer = create(Ivalignof(a_785), a_785) in
            let weak _: unit = store(a_785, a_786, a_781) in
            pure(a_786) in
        let strong a_779: pointer =
          let a_787: ctype = params_nth(a_776, 1) in
          if not(are_compatible ('signed int*', a_787)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_788: pointer = create(Ivalignof(a_787), a_787) in
            let weak _: unit = store(a_787, a_788, a_783) in
            pure(a_788) in
        let strong a_789: unit =
          ccall('void (*) (signed int*, signed int*)', a_774, a_780, a_779) in
        let strong _: (unit,unit) =
          unseq(kill('signed int*', a_780), kill('signed int*', a_779)) in
        pure(a_789)
  ) ;
  pure(Unit) ;
  let strong a_790: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  kill('signed int', y) ;
  kill('signed int', x) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  run ret_735(conv_loaded_int('signed int', a_790)) ;
  kill('signed int', y) ;
  kill('signed int', x) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_735: loaded integer (a_791: loaded integer:= Specified(0)) in
    pure(a_791)

