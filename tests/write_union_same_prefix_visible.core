-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_646 :=
  i1: 'signed int'
  f1: 'float'
  c1: 'char'

def struct __cerbty_unnamed_tag_648 :=
  i2: 'signed int'
  f2: 'float'
  d2: 'double'

def union __cerbty_unnamed_tag_650 :=
  m1: 'struct __cerbty_unnamed_tag_646'
  m2: 'struct __cerbty_unnamed_tag_648'

-- Globals
glob a_675: pointer [ail_ctype = 'char[24]'] :=
  create_readonly(Ivalignof('char[24]'), 'char[24]', Specified(Array(Specified(conv_int('char',
  117)), Specified(conv_int('char', 46)), Specified(conv_int('char', 109)),
  Specified(conv_int('char', 49)), Specified(conv_int('char', 46)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 46)), Specified(conv_int('char', 109)),
  Specified(conv_int('char', 50)), Specified(conv_int('char', 46)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong u: pointer =
    create(Ivalignof('union __cerbty_unnamed_tag_650'), 'union __cerbty_unnamed_tag_650') in
  let strong a_658: loaded union a_650 =
    {- §6.5#2 -}
    bound(
      let weak a_662: loaded struct a_646 =
        let weak (a_661: loaded integer, a_660: loaded floating,
        a_659: loaded integer) =
          {- §6.7.9#23 -}
          unseq(pure(Specified(97)), pure(Specified(1.)), pure(Specified(1))) in
        pure(
          Specified((struct __cerbty_unnamed_tag_646){.i1= conv_loaded_int('signed int',
          a_659), .f1= a_660, .c1= conv_loaded_int('char', a_661)})
        ) in
      pure(Specified((union __cerbty_unnamed_tag_650){.m1= a_662}))
    ) in
  store('union __cerbty_unnamed_tag_650', u, a_658) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_657: pointer, a_665: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.2.3#3, sentence 2 -}
          let strong a_663: pointer =
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_664: pointer = pure(u) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_650, m2], a_664) in
          memop(PtrArrayShift[__cerbty_unnamed_tag_648, i2], a_663)
        ,
          pure(Specified(2))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_657, conv_loaded_int('signed int', a_665))) in
      pure(conv_loaded_int('signed int', a_665))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_666: loaded pointer,
      (a_667: ctype, a_668: [ctype], a_669: boolean, a_670: boolean)),
      a_674: loaded pointer, a_678: loaded integer, a_682: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_656: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_656, cfunction(a_656)))
        ,
          let weak a_676: pointer = pure(a_675) in
          {- §6.3.2.1#3 -}
          let weak a_677: pointer = memop(PtrArrayShift, a_676, 'char', 0) in
          pure(Specified(a_677))
        ,
          let weak a_681: pointer =
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_679: pointer =
              {- §6.5.2.3#3, sentence 2 -}
              let strong a_680: pointer = pure(u) in
              memop(PtrArrayShift[__cerbty_unnamed_tag_650, m1], a_680) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_646, i1], a_679) in
          load('signed int', a_681)
        ,
          let weak a_685: pointer =
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_683: pointer =
              {- §6.5.2.3#3, sentence 2 -}
              let strong a_684: pointer = pure(u) in
              memop(PtrArrayShift[__cerbty_unnamed_tag_650, m2], a_684) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_648, i2], a_683) in
          load('signed int', a_685)
        ) in
      if not(params_length(a_668) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_669) \/ not(are_compatible ('signed int', a_667)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_673: pointer =
            let a_686: ctype = params_nth(a_668, 0) in
            if not(are_compatible ('const char*', a_686)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_687: pointer = create(Ivalignof(a_686), a_686) in
              let weak _: unit = store(a_686, a_687, a_674) in
              pure(a_687) in
          let strong a_672: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_678)) in
          let strong a_671: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_682)) in
          let strong a_688: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_666, a_673,
            [('signed int', a_672), ('signed int', a_671)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_673)
            ,
              kill('signed int', a_672)
            ,
              kill('signed int', a_671)
            ) in
          pure(a_688)
    ) in
  pure(Unit) ;
  kill('union __cerbty_unnamed_tag_650', u) ;
  pure(Unit) ;
  save ret_655: loaded integer (a_689: loaded integer:= Specified(0)) in
    pure(a_689)

