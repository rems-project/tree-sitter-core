-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_758: pointer [ail_ctype = 'char[22]'] :=
  create_readonly(Ivalignof('char[22]'), 'char[22]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_846: pointer [ail_ctype = 'char[13]'] :=
  create_readonly(Ivalignof('char[13]'), 'char[13]', Specified(Array(Specified(conv_int('char',
  40)), Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_858: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_861: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc f (p: pointer, q: pointer): eff unit :=
  let strong a_796: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_798: loaded integer, a_799: loaded integer) =
        unseq(
          let weak (a_803: loaded integer, a_804: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_809: loaded pointer,
              (a_810: ctype, a_811: [ctype], a_812: boolean, a_813: boolean)),
              a_817: loaded pointer, a_819: loaded pointer,
              a_821: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_808: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_808, cfunction(a_808)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_818: pointer = pure(p) in
                  pure(Specified(a_818))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_820: pointer = pure(q) in
                  pure(Specified(a_820))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_811) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_812 \/ not(are_compatible ('signed int', a_810)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_816: pointer =
                    let a_822: ctype = params_nth(a_811, 0) in
                    if not(are_compatible ('const void*', a_822)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_823: pointer =
                        create(Ivalignof(a_822), a_822) in
                      let weak _: unit = store(a_822, a_823, a_817) in
                      pure(a_823) in
                  let strong a_815: pointer =
                    let a_824: ctype = params_nth(a_811, 1) in
                    if not(are_compatible ('const void*', a_824)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_825: pointer =
                        create(Ivalignof(a_824), a_824) in
                      let weak _: unit = store(a_824, a_825, a_819) in
                      pure(a_825) in
                  let strong a_814: pointer =
                    let a_826: ctype = params_nth(a_811, 2) in
                    if not(are_compatible ('size_t', a_826)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_827: pointer =
                        create(Ivalignof(a_826), a_826) in
                      let weak _: unit =
                        store(a_826, a_827, conv_loaded_int(a_826, a_821)) in
                      pure(a_827) in
                  let strong a_828: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_809, a_816, a_815, a_814) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_816)
                    ,
                      kill('void*', a_815)
                    ,
                      kill('size_t', a_814)
                    ) in
                  pure(a_828)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_805: integer), Specified(a_806: integer)) =
              (a_803, a_804) in
            if conv_int('signed int', a_805) = conv_int('signed int', a_806) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_800: integer), Specified(a_801: integer)) =
          (a_798, a_799) in
        if conv_int('signed int', a_800) = conv_int('signed int', a_801) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_795: boolean =
    let Specified(a_797: integer) = a_796 in
    pure(if not(a_797 = 1) then True else False) in
  if a_795 then
    let strong b: pointer = create(Ivalignof('_Bool'), '_Bool') in
    let strong a_830: loaded integer =
      {- §6.5#2 -}
      bound(
        let weak (a_831: loaded pointer, a_832: loaded pointer) =
          unseq(
            let weak a_836: pointer = pure(p) in
            load('signed int*', a_836)
          ,
            let weak a_837: pointer = pure(q) in
            load('signed int*', a_837)
          ) in
        let (Specified(a_833: pointer), Specified(a_834: pointer)) =
          (a_831, a_832) in
        let weak a_835: boolean = memop(PtrEq, a_833, a_834) in
        pure(if a_835 then Specified(1) else Specified(0))
      ) in
    store('_Bool', b, conv_loaded_int('_Bool', a_830)) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_838: loaded pointer,
        (a_839: ctype, a_840: [ctype], a_841: boolean, a_842: boolean)),
        a_845: loaded pointer, a_849: loaded pointer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_829: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_829, cfunction(a_829)))
          ,
            let weak a_847: pointer = pure(a_846) in
            {- §6.3.2.1#3 -}
            let weak a_848: pointer =
              memop(PtrArrayShift, a_847, 'char', 0) in
            pure(Specified(a_848))
          ,
            {- §6.5.15#4, sentence 1 -}
            let strong a_856: loaded integer =
              let weak (a_850: loaded integer, a_851: loaded integer) =
                unseq(
                  let weak a_855: pointer = pure(b) in
                  load('_Bool', a_855)
                ,
                  pure(Specified(0))
                ) in
              pure(
                let (Specified(a_852: integer), Specified(a_853: integer)) =
                  (a_850, a_851) in
                if conv_int('signed int', a_852) =
                conv_int('signed int', a_853) then
                  Specified(1)
                else
                  Specified(0)
              ) in
            let Specified(a_857: integer) = a_856 in
            {- §6.5.15#4, sentence 2 -}
            if a_857 = 0 then
              let weak a_859: pointer = pure(a_858) in
              {- §6.3.2.1#3 -}
              let weak a_860: pointer =
                memop(PtrArrayShift, a_859, 'char', 0) in
              pure(Specified(a_860))
            else
              let weak a_862: pointer = pure(a_861) in
              {- §6.3.2.1#3 -}
              let weak a_863: pointer =
                memop(PtrArrayShift, a_862, 'char', 0) in
              pure(Specified(a_863))
          ) in
        if not(params_length(a_840) <= 2) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_841) \/ not(are_compatible ('signed int', a_839)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_844: pointer =
              let a_864: ctype = params_nth(a_840, 0) in
              if not(are_compatible ('const char*', a_864)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_865: pointer = create(Ivalignof(a_864), a_864) in
                let weak _: unit = store(a_864, a_865, a_845) in
                pure(a_865) in
            let strong a_843: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'char*', a_849) in
            let strong a_866: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_838, a_844,
              [('char*', a_843)]) in
            let strong _: (unit,unit) =
              unseq(kill('char*', a_844), kill('char*', a_843)) in
            pure(a_866)
      ) in
    pure(Unit) ;
    kill('_Bool', b) ;
    pure(Unit)
  else
    pure(Unit) ;
  pure(Unit) ;
  save ret_794: unit (a_867: unit:= Unit) in  pure(a_867)

proc main (): eff loaded integer :=
  let strong y: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_738: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', y, conv_loaded_int('signed int', a_738)) ;
  let strong a_739: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', x, conv_loaded_int('signed int', a_739)) ;
  let strong a_740: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_741: loaded pointer, a_743: loaded integer) =
        unseq(
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_746: pointer = pure(x) in
          pure(Specified(a_746))
        ,
          pure(Specified(1))
        ) in
      let (Specified(a_742: pointer), Specified(a_744: integer)) =
        (a_741, a_743) in
      let weak a_745: pointer =
        memop(PtrArrayShift, a_742, 'signed int', a_744) in
      pure(Specified(a_745))
    ) in
  store('signed int*', p, a_740) ;
  let strong a_747: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_748: pointer = pure(y) in
      pure(Specified(a_748))
    ) in
  store('signed int*', q, a_747) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_749: loaded pointer,
      (a_750: ctype, a_751: [ctype], a_752: boolean, a_753: boolean)),
      a_757: loaded pointer, a_761: loaded pointer, a_766: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_737: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_737, cfunction(a_737)))
        ,
          let weak a_759: pointer = pure(a_758) in
          {- §6.3.2.1#3 -}
          let weak a_760: pointer = memop(PtrArrayShift, a_759, 'char', 0) in
          pure(Specified(a_760))
        ,
          {- §6.5.4 -}
          let weak a_764: pointer = pure(p) in
          load('signed int*', a_764)
        ,
          {- §6.5.4 -}
          let weak a_769: pointer = pure(q) in
          load('signed int*', a_769)
        ) in
      if not(params_length(a_751) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_752) \/ not(are_compatible ('signed int', a_750)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_756: pointer =
            let a_771: ctype = params_nth(a_751, 0) in
            if not(are_compatible ('const char*', a_771)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_772: pointer = create(Ivalignof(a_771), a_771) in
              let weak _: unit = store(a_771, a_772, a_757) in
              pure(a_772) in
          let strong a_755: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_761) in
          let strong a_754: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_766) in
          let strong a_773: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_749, a_756,
            [('void*', a_755), ('void*', a_754)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_756)
            ,
              kill('void*', a_755)
            ,
              kill('void*', a_754)
            ) in
          pure(a_773)
    ) in
  pure(Unit) ;
  {- §6.5#2 -}
  bound(
    {- §6.5.2.2#10, sentence 1 -}
    let strong ((a_774: loaded pointer,
    (a_775: ctype, a_776: [ctype], a_777: boolean, a_778: boolean)),
    a_781: loaded pointer, a_783: loaded pointer) =
      {- §6.5.2.2#4, sentence 2 -}
      unseq(
        let strong a_736: loaded pointer = pure(Specified(Cfunction(f))) in
        pure((a_736, cfunction(a_736)))
      ,
        let weak a_782: pointer = pure(p) in
        load('signed int*', a_782)
      ,
        let weak a_784: pointer = pure(q) in
        load('signed int*', a_784)
      ) in
    if not(params_length(a_776) = 2) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_777 \/ not(are_compatible ('void', a_775)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_780: pointer =
          let a_785: ctype = params_nth(a_776, 0) in
          if not(are_compatible ('signed int*', a_785)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_786: pointer = create(Ivalignof(a_785), a_785) in
            let weak _: unit = store(a_785, a_786, a_781) in
            pure(a_786) in
        let strong a_779: pointer =
          let a_787: ctype = params_nth(a_776, 1) in
          if not(are_compatible ('signed int*', a_787)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_788: pointer = create(Ivalignof(a_787), a_787) in
            let weak _: unit = store(a_787, a_788, a_783) in
            pure(a_788) in
        let strong a_789: unit =
          ccall('void (*) (signed int*, signed int*)', a_774, a_780, a_779) in
        let strong _: (unit,unit) =
          unseq(kill('signed int*', a_780), kill('signed int*', a_779)) in
        pure(a_789)
  ) ;
  pure(Unit) ;
  let strong a_790: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  kill('signed int', y) ;
  kill('signed int', x) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  run ret_735(conv_loaded_int('signed int', a_790)) ;
  kill('signed int', y) ;
  kill('signed int', x) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_735: loaded integer (a_791: loaded integer:= Specified(0)) in
    pure(a_791)

