-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_646 :=
  i1: 'signed int'
  i2: 'signed int'

-- Globals
glob a_668: pointer [ail_ctype = 'char[10]'] :=
  create_readonly(Ivalignof('char[10]'), 'char[10]', Specified(Array(Specified(conv_int('char',
  115)), Specified(conv_int('char', 50)), Specified(conv_int('char', 46)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong s1: pointer =
    create(Ivalignof('struct __cerbty_unnamed_tag_646'), 'struct __cerbty_unnamed_tag_646') in
  let strong s2: pointer =
    create(Ivalignof('struct __cerbty_unnamed_tag_646'), 'struct __cerbty_unnamed_tag_646') in
  {- §6.2.4#6 -}
  store('struct __cerbty_unnamed_tag_646', s1,
  Unspecified('struct __cerbty_unnamed_tag_646')) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_655: pointer, a_657: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.2.3#3, sentence 2 -}
          let strong a_656: pointer = pure(s1) in
          memop(PtrArrayShift[__cerbty_unnamed_tag_646, i1], a_656)
        ,
          pure(Specified(1))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_655, conv_loaded_int('signed int', a_657))) in
      pure(conv_loaded_int('signed int', a_657))
    ) in
  pure(Unit) ;
  {- §6.2.4#6 -}
  store('struct __cerbty_unnamed_tag_646', s2,
  Unspecified('struct __cerbty_unnamed_tag_646')) ;
  let strong _: loaded struct a_646 =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_654: pointer, a_659: loaded struct a_646) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          pure(s2)
        ,
          let weak a_658: pointer = pure(s1) in
          load('struct __cerbty_unnamed_tag_646', a_658)
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('struct __cerbty_unnamed_tag_646', a_654, a_659)) in
      pure(a_659)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_660: loaded pointer,
      (a_661: ctype, a_662: [ctype], a_663: boolean, a_664: boolean)),
      a_667: loaded pointer, a_671: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_653: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_653, cfunction(a_653)))
        ,
          let weak a_669: pointer = pure(a_668) in
          {- §6.3.2.1#3 -}
          let weak a_670: pointer = memop(PtrArrayShift, a_669, 'char', 0) in
          pure(Specified(a_670))
        ,
          let weak a_673: pointer =
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_672: pointer = pure(s2) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_646, i1], a_672) in
          load('signed int', a_673)
        ) in
      if not(params_length(a_662) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_663) \/ not(are_compatible ('signed int', a_661)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_666: pointer =
            let a_674: ctype = params_nth(a_662, 0) in
            if not(are_compatible ('const char*', a_674)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_675: pointer = create(Ivalignof(a_674), a_674) in
              let weak _: unit = store(a_674, a_675, a_667) in
              pure(a_675) in
          let strong a_665: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_671)) in
          let strong a_676: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_660, a_666,
            [('signed int', a_665)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_666), kill('signed int', a_665)) in
          pure(a_676)
    ) in
  pure(Unit) ;
  kill('struct __cerbty_unnamed_tag_646', s1) ;
  kill('struct __cerbty_unnamed_tag_646', s2) ;
  pure(Unit) ;
  save ret_652: loaded integer (a_677: loaded integer:= Specified(0)) in
    pure(a_677)

