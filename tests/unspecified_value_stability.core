-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_665: pointer [ail_ctype = 'char[8]'] :=
  create_readonly(Ivalignof('char[8]'), 'char[8]', Specified(Array(Specified(conv_int('char',
  105)), Specified(conv_int('char', 61)), Specified(conv_int('char', 48)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_681: pointer [ail_ctype = 'char[8]'] :=
  create_readonly(Ivalignof('char[8]'), 'char[8]', Specified(Array(Specified(conv_int('char',
  105)), Specified(conv_int('char', 61)), Specified(conv_int('char', 48)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_697: pointer [ail_ctype = 'char[8]'] :=
  create_readonly(Ivalignof('char[8]'), 'char[8]', Specified(Array(Specified(conv_int('char',
  105)), Specified(conv_int('char', 61)), Specified(conv_int('char', 48)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_713: pointer [ail_ctype = 'char[8]'] :=
  create_readonly(Ivalignof('char[8]'), 'char[8]', Specified(Array(Specified(conv_int('char',
  105)), Specified(conv_int('char', 61)), Specified(conv_int('char', 48)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong i: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  {- §6.2.4#6 -}
  store('signed int', i, Unspecified('signed int')) ;
  let strong a_655: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_656: pointer = pure(i) in
      pure(Specified(a_656))
    ) in
  store('signed int*', p, a_655) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_657: loaded pointer,
      (a_658: ctype, a_659: [ctype], a_660: boolean, a_661: boolean)),
      a_664: loaded pointer, a_668: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_654: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_654, cfunction(a_654)))
        ,
          let weak a_666: pointer = pure(a_665) in
          {- §6.3.2.1#3 -}
          let weak a_667: pointer = memop(PtrArrayShift, a_666, 'char', 0) in
          pure(Specified(a_667))
        ,
          let weak a_669: pointer = pure(i) in
          load('signed int', a_669)
        ) in
      if not(params_length(a_659) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_660) \/ not(are_compatible ('signed int', a_658)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_663: pointer =
            let a_670: ctype = params_nth(a_659, 0) in
            if not(are_compatible ('const char*', a_670)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_671: pointer = create(Ivalignof(a_670), a_670) in
              let weak _: unit = store(a_670, a_671, a_664) in
              pure(a_671) in
          let strong a_662: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_668)) in
          let strong a_672: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_657, a_663,
            [('signed int', a_662)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_663), kill('signed int', a_662)) in
          pure(a_672)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_673: loaded pointer,
      (a_674: ctype, a_675: [ctype], a_676: boolean, a_677: boolean)),
      a_680: loaded pointer, a_684: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_653: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_653, cfunction(a_653)))
        ,
          let weak a_682: pointer = pure(a_681) in
          {- §6.3.2.1#3 -}
          let weak a_683: pointer = memop(PtrArrayShift, a_682, 'char', 0) in
          pure(Specified(a_683))
        ,
          let weak a_685: pointer = pure(i) in
          load('signed int', a_685)
        ) in
      if not(params_length(a_675) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_676) \/ not(are_compatible ('signed int', a_674)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_679: pointer =
            let a_686: ctype = params_nth(a_675, 0) in
            if not(are_compatible ('const char*', a_686)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_687: pointer = create(Ivalignof(a_686), a_686) in
              let weak _: unit = store(a_686, a_687, a_680) in
              pure(a_687) in
          let strong a_678: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_684)) in
          let strong a_688: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_673, a_679,
            [('signed int', a_678)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_679), kill('signed int', a_678)) in
          pure(a_688)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_689: loaded pointer,
      (a_690: ctype, a_691: [ctype], a_692: boolean, a_693: boolean)),
      a_696: loaded pointer, a_700: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_652: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_652, cfunction(a_652)))
        ,
          let weak a_698: pointer = pure(a_697) in
          {- §6.3.2.1#3 -}
          let weak a_699: pointer = memop(PtrArrayShift, a_698, 'char', 0) in
          pure(Specified(a_699))
        ,
          let weak a_701: pointer = pure(i) in
          load('signed int', a_701)
        ) in
      if not(params_length(a_691) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_692) \/ not(are_compatible ('signed int', a_690)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_695: pointer =
            let a_702: ctype = params_nth(a_691, 0) in
            if not(are_compatible ('const char*', a_702)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_703: pointer = create(Ivalignof(a_702), a_702) in
              let weak _: unit = store(a_702, a_703, a_696) in
              pure(a_703) in
          let strong a_694: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_700)) in
          let strong a_704: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_689, a_695,
            [('signed int', a_694)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_695), kill('signed int', a_694)) in
          pure(a_704)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_705: loaded pointer,
      (a_706: ctype, a_707: [ctype], a_708: boolean, a_709: boolean)),
      a_712: loaded pointer, a_716: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_651: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_651, cfunction(a_651)))
        ,
          let weak a_714: pointer = pure(a_713) in
          {- §6.3.2.1#3 -}
          let weak a_715: pointer = memop(PtrArrayShift, a_714, 'char', 0) in
          pure(Specified(a_715))
        ,
          let weak a_717: pointer = pure(i) in
          load('signed int', a_717)
        ) in
      if not(params_length(a_707) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_708) \/ not(are_compatible ('signed int', a_706)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_711: pointer =
            let a_718: ctype = params_nth(a_707, 0) in
            if not(are_compatible ('const char*', a_718)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_719: pointer = create(Ivalignof(a_718), a_718) in
              let weak _: unit = store(a_718, a_719, a_712) in
              pure(a_719) in
          let strong a_710: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_716)) in
          let strong a_720: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_705, a_711,
            [('signed int', a_710)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_711), kill('signed int', a_710)) in
          pure(a_720)
    ) in
  pure(Unit) ;
  kill('signed int', i) ;
  kill('signed int*', p) ;
  pure(Unit) ;
  save ret_650: loaded integer (a_721: loaded integer:= Specified(0)) in
    pure(a_721)

