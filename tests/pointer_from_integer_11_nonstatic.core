-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_735: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  106)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc f (p: pointer): eff unit :=
  let strong j: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_706: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  store('signed int', j, conv_loaded_int('signed int', a_706)) ;
  let strong a_707: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_709: loaded integer, a_710: loaded integer) =
        unseq(
          let weak (a_714: loaded pointer, a_715: loaded pointer) =
            unseq(
              let weak a_719: pointer = pure(p) in
              load('signed int*', a_719)
            ,
              {- §6.5.3.2#3, sentence 5 -}
              let weak a_720: pointer = pure(j) in
              pure(Specified(a_720))
            ) in
          let (Specified(a_716: pointer), Specified(a_717: pointer)) =
            (a_714, a_715) in
          let weak a_718: boolean = memop(PtrEq, a_716, a_717) in
          pure(if a_718 then Specified(1) else Specified(0))
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_711: integer), Specified(a_712: integer)) =
          (a_709, a_710) in
        if conv_int('signed int', a_711) = conv_int('signed int', a_712) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_705: boolean =
    let Specified(a_708: integer) = a_707 in
    pure(if not(a_708 = 1) then True else False) in
  if a_705 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_721: pointer, a_726: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_722: loaded pointer =
              let weak a_725: pointer = pure(p) in
              load('signed int*', a_725) in
            let Specified(a_723: pointer) = a_722 in
            let weak a_724: boolean =
              memop(PtrValidForDeref, 'signed int', a_723) in
            pure(
              if a_724 then
                a_723
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(1))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_721, conv_loaded_int('signed int', a_726))) in
        pure(conv_loaded_int('signed int', a_726))
      ) in
    pure(Unit)
  else
    pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_727: loaded pointer,
      (a_728: ctype, a_729: [ctype], a_730: boolean, a_731: boolean)),
      a_734: loaded pointer, a_738: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_704: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_704, cfunction(a_704)))
        ,
          let weak a_736: pointer = pure(a_735) in
          {- §6.3.2.1#3 -}
          let weak a_737: pointer = memop(PtrArrayShift, a_736, 'char', 0) in
          pure(Specified(a_737))
        ,
          let weak a_739: pointer = pure(j) in
          load('signed int', a_739)
        ) in
      if not(params_length(a_729) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_730) \/ not(are_compatible ('signed int', a_728)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_733: pointer =
            let a_740: ctype = params_nth(a_729, 0) in
            if not(are_compatible ('const char*', a_740)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_741: pointer = create(Ivalignof(a_740), a_740) in
              let weak _: unit = store(a_740, a_741, a_734) in
              pure(a_741) in
          let strong a_732: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_738)) in
          let strong a_742: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_727, a_733,
            [('signed int', a_732)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_733), kill('signed int', a_732)) in
          pure(a_742)
    ) in
  pure(Unit) ;
  kill('signed int', j) ;
  pure(Unit) ;
  save ret_703: unit (a_743: unit:= Unit) in  pure(a_743)

proc main (): eff loaded integer :=
  let strong j: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_684: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(6295612))) in
  store('uintptr_t', j, conv_loaded_int('uintptr_t', a_684)) ;
  let strong a_685: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_686: loaded integer =
        let weak a_688: pointer = pure(j) in
        load('uintptr_t', a_688) in
      let Specified(a_687: integer) = a_686 in
      let weak a_689: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_687) in
      pure(Specified(a_689))
    ) in
  store('signed int*', q, a_685) ;
  {- §6.5#2 -}
  bound(
    {- §6.5.2.2#10, sentence 1 -}
    let strong ((a_690: loaded pointer,
    (a_691: ctype, a_692: [ctype], a_693: boolean, a_694: boolean)),
    a_696: loaded pointer) =
      {- §6.5.2.2#4, sentence 2 -}
      unseq(
        let strong a_683: loaded pointer = pure(Specified(Cfunction(f))) in
        pure((a_683, cfunction(a_683)))
      ,
        let weak a_697: pointer = pure(q) in
        load('signed int*', a_697)
      ) in
    if not(params_length(a_692) = 1) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_693 \/ not(are_compatible ('void', a_691)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_695: pointer =
          let a_698: ctype = params_nth(a_692, 0) in
          if not(are_compatible ('signed int*', a_698)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_699: pointer = create(Ivalignof(a_698), a_698) in
            let weak _: unit = store(a_698, a_699, a_696) in
            pure(a_699) in
        let strong a_700: unit =
          ccall('void (*) (signed int*)', a_690, a_695) in
        kill('signed int*', a_695) ;
        pure(a_700)
  ) ;
  pure(Unit) ;
  kill('uintptr_t', j) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_682: loaded integer (a_701: loaded integer:= Specified(0)) in
    pure(a_701)

