-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob i: pointer [ail_ctype = 'signed int'] :=
  let strong a_702: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_703: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  store('signed int', a_702, conv_loaded_int('signed int', a_703)) ;
  pure(a_702)

glob a_721: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  105)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc f (p: pointer): eff unit :=
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_707: pointer, a_712: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_708: loaded pointer =
            let weak a_711: pointer = pure(p) in
            load('signed int*', a_711) in
          let Specified(a_709: pointer) = a_708 in
          let weak a_710: boolean =
            memop(PtrValidForDeref, 'signed int', a_709) in
          pure(
            if a_710 then
              a_709
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(1))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_707, conv_loaded_int('signed int', a_712))) in
      pure(conv_loaded_int('signed int', a_712))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_713: loaded pointer,
      (a_714: ctype, a_715: [ctype], a_716: boolean, a_717: boolean)),
      a_720: loaded pointer, a_724: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_706: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_706, cfunction(a_706)))
        ,
          let weak a_722: pointer = pure(a_721) in
          {- §6.3.2.1#3 -}
          let weak a_723: pointer = memop(PtrArrayShift, a_722, 'char', 0) in
          pure(Specified(a_723))
        ,
          let weak a_725: pointer = pure(i) in
          load('signed int', a_725)
        ) in
      if not(params_length(a_715) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_716) \/ not(are_compatible ('signed int', a_714)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_719: pointer =
            let a_726: ctype = params_nth(a_715, 0) in
            if not(are_compatible ('const char*', a_726)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_727: pointer = create(Ivalignof(a_726), a_726) in
              let weak _: unit = store(a_726, a_727, a_720) in
              pure(a_727) in
          let strong a_718: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_724)) in
          let strong a_728: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_713, a_719,
            [('signed int', a_718)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_719), kill('signed int', a_718)) in
          pure(a_728)
    ) in
  pure(Unit) ;
  pure(Unit) ;
  save ret_705: unit (a_729: unit:= Unit) in  pure(a_729)

proc main (): eff loaded integer :=
  let strong j: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_684: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(6295612))) in
  store('uintptr_t', j, conv_loaded_int('uintptr_t', a_684)) ;
  let strong a_685: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_686: loaded integer =
        let weak a_688: pointer = pure(j) in
        load('uintptr_t', a_688) in
      let Specified(a_687: integer) = a_686 in
      let weak a_689: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_687) in
      pure(Specified(a_689))
    ) in
  store('signed int*', q, a_685) ;
  {- §6.5#2 -}
  bound(
    {- §6.5.2.2#10, sentence 1 -}
    let strong ((a_690: loaded pointer,
    (a_691: ctype, a_692: [ctype], a_693: boolean, a_694: boolean)),
    a_696: loaded pointer) =
      {- §6.5.2.2#4, sentence 2 -}
      unseq(
        let strong a_683: loaded pointer = pure(Specified(Cfunction(f))) in
        pure((a_683, cfunction(a_683)))
      ,
        let weak a_697: pointer = pure(q) in
        load('signed int*', a_697)
      ) in
    if not(params_length(a_692) = 1) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_693 \/ not(are_compatible ('void', a_691)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_695: pointer =
          let a_698: ctype = params_nth(a_692, 0) in
          if not(are_compatible ('signed int*', a_698)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_699: pointer = create(Ivalignof(a_698), a_698) in
            let weak _: unit = store(a_698, a_699, a_696) in
            pure(a_699) in
        let strong a_700: unit =
          ccall('void (*) (signed int*)', a_690, a_695) in
        kill('signed int*', a_695) ;
        pure(a_700)
  ) ;
  pure(Unit) ;
  kill('uintptr_t', j) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_682: loaded integer (a_701: loaded integer:= Specified(0)) in
    pure(a_701)

