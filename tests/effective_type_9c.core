-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

def struct __cerbty_unnamed_tag_746 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_750 :=
  c1: 'char'
  f1: 'float'

def struct __cerbty_unnamed_tag_752 :=
  c2: 'char'
  f2: 'float'

-- Globals
glob a_841: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('void*'), 'void*') in
  let strong pst1: pointer =
    create(Ivalignof('struct __cerbty_unnamed_tag_750*'), 'struct __cerbty_unnamed_tag_750*') in
  let strong f: pointer = create(Ivalignof('float'), 'float') in
  {- §6.5#2 -}
  bound(
    let strong a_766: loaded integer =
      let weak (a_769: loaded integer, a_770: loaded integer) =
        unseq(
          pure(Specified(Ivsizeof('struct __cerbty_unnamed_tag_750')))
        ,
          pure(Specified(Ivsizeof('struct __cerbty_unnamed_tag_752')))
        ) in
      pure(
        let (Specified(a_771: integer), Specified(a_772: integer)) =
          (a_769, a_770) in
        if conv_int('size_t', a_771) = conv_int('size_t', a_772) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_767: integer) = a_766 in
      if a_767 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  {- §6.5#2 -}
  bound(
    let strong a_765: loaded integer =
      let weak (a_776: loaded integer, a_777: loaded integer) =
        unseq(pure(Specified(0)), pure(Specified(0))) in
      pure(
        let (Specified(a_778: integer), Specified(a_779: integer)) =
          (a_776, a_777) in
        if conv_int('size_t', a_778) = conv_int('size_t', a_779) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_774: integer) = a_765 in
      if a_774 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  {- §6.5#2 -}
  bound(
    let strong a_764: loaded integer =
      let weak (a_783: loaded integer, a_784: loaded integer) =
        unseq(pure(Specified(8)), pure(Specified(8))) in
      pure(
        let (Specified(a_785: integer), Specified(a_786: integer)) =
          (a_783, a_784) in
        if conv_int('size_t', a_785) = conv_int('size_t', a_786) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_781: integer) = a_764 in
      if a_781 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  let strong a_788: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_790: loaded pointer,
      (a_791: ctype, a_792: [ctype], a_793: boolean, a_794: boolean)),
      a_796: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_789: loaded pointer =
            pure(Specified(Cfunction(malloc_proxy))) in
          pure((a_789, cfunction(a_789)))
        ,
          pure(Specified(Ivsizeof('struct __cerbty_unnamed_tag_750')))
        ) in
      if not(params_length(a_792) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_793 \/ not(are_compatible ('void*', a_791)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_795: pointer =
            let a_797: ctype = params_nth(a_792, 0) in
            if not(are_compatible ('size_t', a_797)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_798: pointer = create(Ivalignof(a_797), a_797) in
              let weak _: unit =
                store(a_797, a_798, conv_loaded_int(a_797, a_796)) in
              pure(a_798) in
          let strong a_799: loaded pointer =
            ccall('void* (*) (size_t)', a_790, a_795) in
          kill('size_t', a_795) ;
          pure(a_799)
    ) in
  store('void*', p, a_788) ;
  {- §6.5#2 -}
  bound(
    let strong a_763: loaded integer =
      let weak a_803: loaded pointer =
        let weak a_802: pointer = pure(p) in
        load('void*', a_802) in
      let Specified(a_804: pointer) = a_803 in
      let weak a_805: boolean = memop(PtrNe, a_804, NULL(void*)) in
      {- §6.5.9#3 -}
      pure(if a_805 then Specified(1) else Specified(0)) in
    pure(
      let Specified(a_800: integer) = a_763 in
      if a_800 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  let strong a_806: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_807: loaded pointer =
        let weak a_809: pointer = pure(p) in
        load('void*', a_809) in
      let Specified(a_808: pointer) = a_807 in
      let weak a_810: boolean =
        memop(PtrWellAligned, 'struct __cerbty_unnamed_tag_750', a_808) in
      pure(
        Specified(if a_810 then
          a_808
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('struct __cerbty_unnamed_tag_750*', pst1, a_806) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_762: pointer, a_816: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.2.3#4, sentence 2 -}
          let strong a_811: loaded pointer =
            let weak a_815: pointer = pure(pst1) in
            load('struct __cerbty_unnamed_tag_750*', a_815) in
          let Specified(a_812: pointer) = a_811 in
          let weak a_813: boolean =
            memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_750', a_812) in
          pure(
            if a_813 then
              member_shift(a_812, __cerbty_unnamed_tag_750, .c1)
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(65))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('char', a_762, conv_loaded_int('char', a_816))) in
      pure(conv_loaded_int('char', a_816))
    ) in
  pure(Unit) ;
  let strong _: loaded floating =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_761: pointer, a_822: loaded floating) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.2.3#4, sentence 2 -}
          let strong a_817: loaded pointer =
            let weak a_821: pointer = pure(pst1) in
            load('struct __cerbty_unnamed_tag_750*', a_821) in
          let Specified(a_818: pointer) = a_817 in
          let weak a_819: boolean =
            memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_750', a_818) in
          pure(
            if a_819 then
              member_shift(a_818, __cerbty_unnamed_tag_750, .f1)
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(1.))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('float', a_761, a_822)) in
      pure(a_822)
    ) in
  pure(Unit) ;
  let strong a_823: loaded floating =
    {- §6.5#2 -}
    bound(
      let weak a_832: pointer =
        {- §6.5.2.3#4, sentence 2 -}
        let strong a_824: loaded pointer =
          {- §6.5.4 -}
          let weak a_828: loaded pointer =
            let weak a_830: pointer = pure(p) in
            load('void*', a_830) in
          let Specified(a_829: pointer) = a_828 in
          let weak a_831: boolean =
            memop(PtrWellAligned, 'struct __cerbty_unnamed_tag_752', a_829) in
          pure(
            Specified(if a_831 then
              a_829
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          ) in
        let Specified(a_825: pointer) = a_824 in
        let weak a_826: boolean =
          memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_752', a_825) in
        pure(
          if a_826 then
            member_shift(a_825, __cerbty_unnamed_tag_752, .f2)
          else
            undef(<<UB043_indirection_invalid_value>>)
        ) in
      load('float', a_832)
    ) in
  store('float', f, a_823) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_833: loaded pointer,
      (a_834: ctype, a_835: [ctype], a_836: boolean, a_837: boolean)),
      a_840: loaded pointer, a_844: loaded floating) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_760: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_760, cfunction(a_760)))
        ,
          let weak a_842: pointer = pure(a_841) in
          {- §6.3.2.1#3 -}
          let weak a_843: pointer = memop(PtrArrayShift, a_842, 'char', 0) in
          pure(Specified(a_843))
        ,
          let weak a_845: pointer = pure(f) in
          load('float', a_845)
        ) in
      if not(params_length(a_835) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_836) \/ not(are_compatible ('signed int', a_834)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_839: pointer =
            let a_846: ctype = params_nth(a_835, 0) in
            if not(are_compatible ('const char*', a_846)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_847: pointer = create(Ivalignof(a_846), a_846) in
              let weak _: unit = store(a_846, a_847, a_840) in
              pure(a_847) in
          let strong a_838: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'double', a_844) in
          let strong a_848: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_833, a_839,
            [('double', a_838)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_839), kill('double', a_838)) in
          pure(a_848)
    ) in
  pure(Unit) ;
  kill('void*', p) ;
  kill('struct __cerbty_unnamed_tag_750*', pst1) ;
  kill('float', f) ;
  pure(Unit) ;
  save ret_759: loaded integer (a_849: loaded integer:= Specified(0)) in
    pure(a_849)

