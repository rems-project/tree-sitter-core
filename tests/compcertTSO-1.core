-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_677: pointer [ail_ctype = 'char[15]'] :=
  create_readonly(Ivalignof('char[15]'), 'char[15]', Specified(Array(Specified(conv_int('char',
  40)), Specified(conv_int('char', 102)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 103)),
  Specified(conv_int('char', 40)), Specified(conv_int('char', 41)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_689: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_692: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc f (): eff loaded pointer :=
  let strong a: pointer = create(Ivalignof('signed int'), 'signed int') in
  {- §6.2.4#6 -}
  store('signed int', a, Unspecified('signed int')) ;
  let strong a_705: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_704: pointer = pure(a) in
      pure(Specified(a_704))
    ) in
  kill('signed int', a) ;
  run ret_703(a_705) ;
  kill('signed int', a) ;
  pure(Unit) ;
  save ret_703: loaded pointer (a_706: loaded pointer:= undef(<<UB088_reached_end_of_function>>)) in
    pure(a_706)

proc g (): eff loaded pointer :=
  let strong a: pointer = create(Ivalignof('signed int'), 'signed int') in
  {- §6.2.4#6 -}
  store('signed int', a, Unspecified('signed int')) ;
  let strong a_701: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_700: pointer = pure(a) in
      pure(Specified(a_700))
    ) in
  kill('signed int', a) ;
  run ret_699(a_701) ;
  kill('signed int', a) ;
  pure(Unit) ;
  save ret_699: loaded pointer (a_702: loaded pointer:= undef(<<UB088_reached_end_of_function>>)) in
    pure(a_702)

proc main (): eff loaded integer :=
  let strong b: pointer = create(Ivalignof('_Bool'), '_Bool') in
  let strong a_657: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_658: loaded pointer, a_659: loaded pointer) =
        unseq(
          let strong a_663: loaded pointer = pure(Specified(Cfunction(f))) in
          let (a_664: ctype, a_665: [ctype], _: boolean, _: boolean) =
            cfunction(a_663) in
          if params_length(a_665) = 0 then
            if are_compatible ('signed int*', a_664) then
              ccall('signed int* (*) (void)', a_663)
            else
              pure(undef(<<UB041_function_not_compatible>>))
          else
            pure(undef(<<UB038_number_of_args>>))
        ,
          let strong a_666: loaded pointer = pure(Specified(Cfunction(g))) in
          let (a_667: ctype, a_668: [ctype], _: boolean, _: boolean) =
            cfunction(a_666) in
          if params_length(a_668) = 0 then
            if are_compatible ('signed int*', a_667) then
              ccall('signed int* (*) (void)', a_666)
            else
              pure(undef(<<UB041_function_not_compatible>>))
          else
            pure(undef(<<UB038_number_of_args>>))
        ) in
      let (Specified(a_660: pointer), Specified(a_661: pointer)) =
        (a_658, a_659) in
      let weak a_662: boolean = memop(PtrEq, a_660, a_661) in
      pure(if a_662 then Specified(1) else Specified(0))
    ) in
  store('_Bool', b, conv_loaded_int('_Bool', a_657)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_669: loaded pointer,
      (a_670: ctype, a_671: [ctype], a_672: boolean, a_673: boolean)),
      a_676: loaded pointer, a_680: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_656: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_656, cfunction(a_656)))
        ,
          let weak a_678: pointer = pure(a_677) in
          {- §6.3.2.1#3 -}
          let weak a_679: pointer = memop(PtrArrayShift, a_678, 'char', 0) in
          pure(Specified(a_679))
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_687: loaded integer =
            let weak (a_681: loaded integer, a_682: loaded integer) =
              unseq(
                let weak a_686: pointer = pure(b) in
                load('_Bool', a_686)
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_683: integer), Specified(a_684: integer)) =
                (a_681, a_682) in
              if conv_int('signed int', a_683) = conv_int('signed int', a_684) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_688: integer) = a_687 in
          {- §6.5.15#4, sentence 2 -}
          if a_688 = 0 then
            let weak a_690: pointer = pure(a_689) in
            {- §6.3.2.1#3 -}
            let weak a_691: pointer =
              memop(PtrArrayShift, a_690, 'char', 0) in
            pure(Specified(a_691))
          else
            let weak a_693: pointer = pure(a_692) in
            {- §6.3.2.1#3 -}
            let weak a_694: pointer =
              memop(PtrArrayShift, a_693, 'char', 0) in
            pure(Specified(a_694))
        ) in
      if not(params_length(a_671) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_672) \/ not(are_compatible ('signed int', a_670)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_675: pointer =
            let a_695: ctype = params_nth(a_671, 0) in
            if not(are_compatible ('const char*', a_695)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_696: pointer = create(Ivalignof(a_695), a_695) in
              let weak _: unit = store(a_695, a_696, a_676) in
              pure(a_696) in
          let strong a_674: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_680) in
          let strong a_697: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_669, a_675,
            [('char*', a_674)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_675), kill('char*', a_674)) in
          pure(a_697)
    ) in
  pure(Unit) ;
  kill('_Bool', b) ;
  pure(Unit) ;
  save ret_655: loaded integer (a_698: loaded integer:= Specified(0)) in
    pure(a_698)

