-- Globals
glob a_658: pointer [ail_ctype = 'char[14]'] :=
  let strong a_670: pointer = create(Ivalignof('char[14]'), 'char[14]') in
  store_lock('char[14]', a_670,
  Specified(Array(Specified(conv_int('char', 104)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 119)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 33)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_671: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_670,
    18446744073701163007) in
  case a_671 of
    | Specified(a_670: pointer) =>
        pure(a_670)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

-- Fun map
proc main (): eff loaded integer :=
  {-# <dummy.c:4:0, dummy.c:6:1> #-} {-# <dummy.c:5:4, dummy.c:5:39> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <dummy.c:5:4, dummy.c:5:38> #-} let strong ((a_648: loaded pointer,
      (a_649: ctype, a_650: [ctype], a_651: boolean, a_652: boolean)),
      a_655: loaded pointer, a_657: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_647: loaded pointer =
            {-# <dummy.c:5:4, dummy.c:5:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_647, cfunction(a_647)))
        ,
          {-# <dummy.c:5:12, dummy.c:5:20> #-} let weak a_656: pointer =
            {-# <dummy.c:5:12, dummy.c:5:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_656)
        ,
          {-# <dummy.c:5:21, dummy.c:5:37> #-} let weak a_659: pointer =
            {-# <dummy.c:5:21, dummy.c:5:37> #-} pure(a_658) in
          {-# §6.3.2.1#3 #-}
          let weak a_660: pointer = memop(PtrArrayShift, a_659, 'char', 0) in
          pure(Specified(a_660))
        ) in
      if not(params_length(a_650) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_651) \/ not(are_compatible ('signed int', a_649)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_654: pointer =
            let a_661: ctype = params_nth(a_650, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_661)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_662: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_662, a_655) in
              pure(a_662) in
          let strong a_653: pointer =
            let a_663: ctype = params_nth(a_650, 1) in
            if not(are_compatible ('const char*', a_663)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_664: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_664, a_657) in
              pure(a_664) in
          let strong a_665: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_648, a_654, a_653, []: (ctype,pointer)) in
          let strong _: (unit,unit) =
            unseq(kill('struct _IO_FILE*', a_654), kill('char*', a_653)) in
          pure(a_665)
    ) in
  pure(Unit) ;
  pure(Unit) ;
  {-# <dummy.c:3:0, dummy.c:6:1> dummy.c:3:4 - dummy.c:3:8 #-} save ret_646: loaded integer (a_666: loaded integer:= Specified(0)) in
    pure(a_666)

