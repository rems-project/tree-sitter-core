-- Aggregates
def struct __cerbty_unnamed_tag_534 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_538 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

-- Globals
glob a_928: pointer [ail_ctype = 'char[14]'] :=
  create_readonly(Ivalignof('char[14]'), 'char[14]', Specified(Array(Specified(conv_int('char',
  79)), Specified(conv_int('char', 114)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 103)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 58)),
  Specified(conv_int('char', 9)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_967: pointer [ail_ctype = 'char[14]'] :=
  create_readonly(Ivalignof('char[14]'), 'char[14]', Specified(Array(Specified(conv_int('char',
  77)), Specified(conv_int('char', 111)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 58)),
  Specified(conv_int('char', 9)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_1002: pointer [ail_ctype = 'char[10]'] :=
  create_readonly(Ivalignof('char[10]'), 'char[10]', Specified(Array(Specified(conv_int('char',
  86)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_1031: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  110)), Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0))))

glob a_1035: pointer [ail_ctype = 'char[9]'] :=
  create_readonly(Ivalignof('char[9]'), 'char[9]', Specified(Array(Specified(conv_int('char',
  110)), Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0))))

glob a_1060: pointer [ail_ctype = 'char[4]'] :=
  create_readonly(Ivalignof('char[4]'), 'char[4]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(0))))

glob a_1101: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 48)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 120)), Specified(0))))

glob a_1148: pointer [ail_ctype = 'char[2]'] :=
  create_readonly(Ivalignof('char[2]'), 'char[2]', Specified(Array(Specified(conv_int('char',
  10)), Specified(0))))

glob a_1222: pointer [ail_ctype = 'char[26]'] :=
  create_readonly(Ivalignof('char[26]'), 'char[26]', Specified(Array(Specified(conv_int('char',
  109)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 96)),
  Specified(0))))

glob a_1237: pointer [ail_ctype = 'char[4]'] :=
  create_readonly(Ivalignof('char[4]'), 'char[4]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 35)), Specified(conv_int('char', 112)),
  Specified(0))))

glob a_1277: pointer [ail_ctype = 'char[31]'] :=
  create_readonly(Ivalignof('char[31]'), 'char[31]', Specified(Array(Specified(conv_int('char',
  109)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 96)), Specified(0))))

glob a_1292: pointer [ail_ctype = 'char[27]'] :=
  create_readonly(Ivalignof('char[27]'), 'char[27]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 91)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 80)), Specified(conv_int('char', 44)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 35)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 98)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 93)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 63)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 65)), Specified(0))))

glob a_1333: pointer [ail_ctype = 'char[15]'] :=
  create_readonly(Ivalignof('char[15]'), 'char[15]', Specified(Array(Specified(conv_int('char',
  115)), Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  {-# <./cheri/arr1.c:7:0, ./cheri/arr1.c:14:1> #-} let strong arr: pointer =
    create(Ivalignof('signed int[2]'), 'signed int[2]') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  {-# <./cheri/arr1.c:8:4, ./cheri/arr1.c:8:24> #-} let strong a_911: loaded array(integer) =
    {-# §6.5#2 #-}
    bound(
      {-# <other location (Cabs_to_ail.constructValue)> #-} let weak (a_913: loaded integer,
      a_912: loaded integer) =
        {-# §6.7.9#23 #-}
        unseq(
          {-# <./cheri/arr1.c:8:20, ./cheri/arr1.c:8:22> #-} pure(
            Specified(43)
          )
        ,
          {-# <./cheri/arr1.c:8:17, ./cheri/arr1.c:8:19> #-} pure(
            Specified(42)
          )
        ) in
      pure(
        Specified(Array(conv_loaded_int('signed int', a_912),
        conv_loaded_int('signed int', a_913)))
      )
    ) in
  store('signed int[2]', arr, a_911) ;
  {-# <./cheri/arr1.c:9:4, ./cheri/arr1.c:9:17> #-} let strong a_914: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# <./cheri/arr1.c:9:13, ./cheri/arr1.c:9:16> #-} let weak a_915: pointer =
        {-# <./cheri/arr1.c:9:13, ./cheri/arr1.c:9:16> #-} pure(arr) in
      {-# §6.3.2.1#3 #-}
      let weak a_916: pointer =
        memop(PtrArrayShift, a_915, 'signed int', 0) in
      pure(Specified(a_916))
    ) in
  store('signed int*', p, a_914) ;
  {-# <./cheri/arr1.c:10:4, ./cheri/arr1.c:10:63> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./cheri/arr1.c:10:4, ./cheri/arr1.c:10:62> #-} let strong ((a_917: loaded pointer,
      (a_918: ctype, a_919: [ctype], a_920: boolean, a_921: boolean)),
      a_925: loaded pointer, a_927: loaded pointer, a_931: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_910: loaded pointer =
            {-# <./cheri/arr1.c:10:4, ./cheri/arr1.c:10:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_910, cfunction(a_910)))
        ,
          {-# <./cheri/arr1.c:10:12, ./cheri/arr1.c:10:20> #-} let weak a_926: pointer =
            {-# <./cheri/arr1.c:10:12, ./cheri/arr1.c:10:20> #-} pure(
              __stderr
            ) in
          load('struct _IO_FILE*', a_926)
        ,
          {-# <./cheri/arr1.c:10:22, ./cheri/arr1.c:10:45> #-} let weak a_929: pointer =
            {-# <./cheri/arr1.c:10:22, ./cheri/arr1.c:10:45> #-} pure(a_928) in
          {-# §6.3.2.1#3 #-}
          let weak a_930: pointer = memop(PtrArrayShift, a_929, 'char', 0) in
          pure(Specified(a_930))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <./cheri/arr1.c:10:47, ./cheri/arr1.c:10:61> #-} let strong ((a_933: loaded pointer,
          (a_934: ctype, a_935: [ctype], a_936: boolean, a_937: boolean)),
          a_939: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_932: loaded pointer =
                {-# <./cheri/arr1.c:10:47, ./cheri/arr1.c:10:51> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_932, cfunction(a_932)))
            ,
              {-# §6.5.4 #-}
              {-# <./cheri/arr1.c:10:52, ./cheri/arr1.c:10:60> ./cheri/arr1.c:10:52 #-} let weak a_942: pointer =
                {-# <./cheri/arr1.c:10:59, ./cheri/arr1.c:10:60> #-} pure(p) in
              load('signed int*', a_942)
            ) in
          if not(params_length(a_935) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_936 \/ not(are_compatible ('const char*', a_934)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_938: pointer =
                let a_944: ctype = params_nth(a_935, 0) in
                if not(are_compatible ('void*', a_944)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_945: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_945, a_939) in
                  pure(a_945) in
              let strong a_946: loaded pointer =
                ccall('const char* (*) (void*)', a_933, a_938) in
              kill('void*', a_938) ;
              pure(a_946)
        ) in
      if not(params_length(a_919) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_920) \/ not(are_compatible ('signed int', a_918)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_924: pointer =
            let a_947: ctype = params_nth(a_919, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_947)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_948: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_948, a_925) in
              pure(a_948) in
          let strong a_923: pointer =
            let a_949: ctype = params_nth(a_919, 1) in
            if not(are_compatible ('const char*', a_949)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_950: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_950, a_927) in
              pure(a_950) in
          let strong a_922: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_931) in
          let strong a_951: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_917, a_924, a_923, [('const char*', a_922)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_924)
            ,
              kill('char*', a_923)
            ,
              kill('char*', a_922)
            ) in
          pure(a_951)
    ) in
  pure(Unit) ;
  {-# <./cheri/arr1.c:11:4, ./cheri/arr1.c:11:8> #-} let strong _: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.4#2, sentence 3 #-}
      {-# §6.5.2.4#2, sentence 1 #-}
      {-# §6.5.2.4 #-}
      {-# <./cheri/arr1.c:11:4, ./cheri/arr1.c:11:7> ./cheri/arr1.c:11:5 #-} let weak a_952: pointer =
        {-# <./cheri/arr1.c:11:4, ./cheri/arr1.c:11:5> #-} pure(p) in
      let weak a_953: loaded pointer = load('signed int*', a_952) in
      case a_953 of
        | Specified(a_954: pointer) =>
            let weak a_955: pointer =
              memop(PtrArrayShift, a_954, 'signed int', 1) in
            let weak _: unit =
              {-# §6.5.2.4#2, sentence 4 #-}
              neg(store('signed int*', a_952, Specified(a_955))) in
            pure(a_953)
        | Unspecified(_: ctype) =>
            pure(Unspecified('signed int*'))
      end
    ) in
  pure(Unit) ;
  {-# <./cheri/arr1.c:12:4, ./cheri/arr1.c:12:63> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./cheri/arr1.c:12:4, ./cheri/arr1.c:12:62> #-} let strong ((a_956: loaded pointer,
      (a_957: ctype, a_958: [ctype], a_959: boolean, a_960: boolean)),
      a_964: loaded pointer, a_966: loaded pointer, a_970: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_909: loaded pointer =
            {-# <./cheri/arr1.c:12:4, ./cheri/arr1.c:12:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_909, cfunction(a_909)))
        ,
          {-# <./cheri/arr1.c:12:12, ./cheri/arr1.c:12:20> #-} let weak a_965: pointer =
            {-# <./cheri/arr1.c:12:12, ./cheri/arr1.c:12:20> #-} pure(
              __stderr
            ) in
          load('struct _IO_FILE*', a_965)
        ,
          {-# <./cheri/arr1.c:12:22, ./cheri/arr1.c:12:45> #-} let weak a_968: pointer =
            {-# <./cheri/arr1.c:12:22, ./cheri/arr1.c:12:45> #-} pure(a_967) in
          {-# §6.3.2.1#3 #-}
          let weak a_969: pointer = memop(PtrArrayShift, a_968, 'char', 0) in
          pure(Specified(a_969))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <./cheri/arr1.c:12:47, ./cheri/arr1.c:12:61> #-} let strong ((a_972: loaded pointer,
          (a_973: ctype, a_974: [ctype], a_975: boolean, a_976: boolean)),
          a_978: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_971: loaded pointer =
                {-# <./cheri/arr1.c:12:47, ./cheri/arr1.c:12:51> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_971, cfunction(a_971)))
            ,
              {-# §6.5.4 #-}
              {-# <./cheri/arr1.c:12:52, ./cheri/arr1.c:12:60> ./cheri/arr1.c:12:52 #-} let weak a_981: pointer =
                {-# <./cheri/arr1.c:12:59, ./cheri/arr1.c:12:60> #-} pure(p) in
              load('signed int*', a_981)
            ) in
          if not(params_length(a_974) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_975 \/ not(are_compatible ('const char*', a_973)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_977: pointer =
                let a_983: ctype = params_nth(a_974, 0) in
                if not(are_compatible ('void*', a_983)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_984: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_984, a_978) in
                  pure(a_984) in
              let strong a_985: loaded pointer =
                ccall('const char* (*) (void*)', a_972, a_977) in
              kill('void*', a_977) ;
              pure(a_985)
        ) in
      if not(params_length(a_958) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_959) \/ not(are_compatible ('signed int', a_957)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_963: pointer =
            let a_986: ctype = params_nth(a_958, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_986)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_987: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_987, a_964) in
              pure(a_987) in
          let strong a_962: pointer =
            let a_988: ctype = params_nth(a_958, 1) in
            if not(are_compatible ('const char*', a_988)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_989: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_989, a_966) in
              pure(a_989) in
          let strong a_961: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_970) in
          let strong a_990: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_956, a_963, a_962, [('const char*', a_961)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_963)
            ,
              kill('char*', a_962)
            ,
              kill('char*', a_961)
            ) in
          pure(a_990)
    ) in
  pure(Unit) ;
  {-# <./cheri/arr1.c:13:4, ./cheri/arr1.c:13:39> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./cheri/arr1.c:13:4, ./cheri/arr1.c:13:38> #-} let strong ((a_991: loaded pointer,
      (a_992: ctype, a_993: [ctype], a_994: boolean, a_995: boolean)),
      a_999: loaded pointer, a_1001: loaded pointer, a_1005: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_908: loaded pointer =
            {-# <./cheri/arr1.c:13:4, ./cheri/arr1.c:13:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_908, cfunction(a_908)))
        ,
          {-# <./cheri/arr1.c:13:12, ./cheri/arr1.c:13:20> #-} let weak a_1000: pointer =
            {-# <./cheri/arr1.c:13:12, ./cheri/arr1.c:13:20> #-} pure(
              __stderr
            ) in
          load('struct _IO_FILE*', a_1000)
        ,
          {-# <./cheri/arr1.c:13:21, ./cheri/arr1.c:13:33> #-} let weak a_1003: pointer =
            {-# <./cheri/arr1.c:13:21, ./cheri/arr1.c:13:33> #-} pure(a_1002) in
          {-# §6.3.2.1#3 #-}
          let weak a_1004: pointer =
            memop(PtrArrayShift, a_1003, 'char', 0) in
          pure(Specified(a_1004))
        ,
          {-# <./cheri/arr1.c:13:35, ./cheri/arr1.c:13:37> ./cheri/arr1.c:13:35 #-} let weak a_1010: pointer =
            {-# §6.5.3.2 #-}
            {-# <./cheri/arr1.c:13:35, ./cheri/arr1.c:13:37> ./cheri/arr1.c:13:35 #-} let weak a_1006: loaded pointer =
              {-# <./cheri/arr1.c:13:36, ./cheri/arr1.c:13:37> #-} let weak a_1009: pointer =
                {-# <./cheri/arr1.c:13:36, ./cheri/arr1.c:13:37> #-} pure(p) in
              load('signed int*', a_1009) in
            case a_1006 of
              | Specified(a_1007: pointer) =>
                  let weak a_1008: boolean =
                    memop(PtrValidForDeref, 'signed int', a_1007) in
                  pure(
                    if a_1008 then
                      a_1007
                    else
                      undef(<<UB043_indirection_invalid_value>>)
                  )
              | Unspecified(_: ctype) =>
                  pure(undef(<<UB043_indirection_invalid_value>>))
            end in
          load('signed int', a_1010)
        ) in
      if not(params_length(a_993) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_994) \/ not(are_compatible ('signed int', a_992)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_998: pointer =
            let a_1011: ctype = params_nth(a_993, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1011)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1012: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1012, a_999) in
              pure(a_1012) in
          let strong a_997: pointer =
            let a_1013: ctype = params_nth(a_993, 1) in
            if not(are_compatible ('const char*', a_1013)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1014: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1014, a_1001) in
              pure(a_1014) in
          let strong a_996: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_1005)) in
          let strong a_1015: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_991, a_998, a_997, [('signed int', a_996)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_998)
            ,
              kill('char*', a_997)
            ,
              kill('signed int', a_996)
            ) in
          pure(a_1015)
    ) in
  pure(Unit) ;
  kill('signed int[2]', arr) ;
  kill('signed int*', p) ;
  pure(Unit) ;
  {-# <./cheri/arr1.c:6:0, ./cheri/arr1.c:14:1> ./cheri/arr1.c:6:4 - ./cheri/arr1.c:6:8 #-} save ret_907: loaded integer (a_1016: loaded integer:= Specified(0)) in
    pure(a_1016)

