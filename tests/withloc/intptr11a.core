-- Globals
glob a_672: pointer [ail_ctype = 'char[8]'] :=
  let strong a_706: pointer = create(Ivalignof('char[8]'), 'char[8]') in
  store_lock('char[8]', a_706,
  Specified(Array(Specified(conv_int('char', 80)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_707: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_706,
    18446744073701163007) in
  case a_707 of
    | Specified(a_706: pointer) =>
        pure(a_706)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_691: pointer [ail_ctype = 'char[3]'] :=
  let strong a_708: pointer = create(Ivalignof('char[3]'), 'char[3]') in
  store_lock('char[3]', a_708,
  Specified(Array(Specified(conv_int('char', 101)),
  Specified(conv_int('char', 113)), Specified(0)))) ;
  let strong a_709: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_708,
    18446744073701163007) in
  case a_709 of
    | Specified(a_708: pointer) =>
        pure(a_708)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_694: pointer [ail_ctype = 'char[4]'] :=
  let strong a_710: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_710,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 113)),
  Specified(0)))) ;
  let strong a_711: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_710,
    18446744073701163007) in
  case a_711 of
    | Specified(a_710: pointer) =>
        pure(a_710)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

-- Fun map
proc main (): eff loaded integer :=
  {-# <intptr11a.c:4:0, intptr11a.c:9:1> #-} let strong f: pointer =
    create(Ivalignof('void (*) (signed int)'), 'void (*) (signed int)') in
  let strong x: pointer =
    create(Ivalignof('unsigned long'), 'unsigned long') in
  {-# <intptr11a.c:5:4, intptr11a.c:5:39> #-} let strong a_649: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.4 #-}
      {-# <intptr11a.c:5:21, intptr11a.c:5:38> intptr11a.c:5:21 #-} let weak a_650: loaded integer =
        {-# §6.5.3.3#3 #-}
        {-# <intptr11a.c:5:36, intptr11a.c:5:38> intptr11a.c:5:36 #-} let weak a_653: loaded integer =
          {-# <intptr11a.c:5:37, intptr11a.c:5:38> #-} pure(Specified(1)) in
        pure(
          case a_653 of
            | Specified(a_652: integer) =>
                Specified(catch_exceptional_condition_sub('signed int', 0, conv_int('signed int',
                a_652)))
            | Unspecified(_: ctype) =>
                Unspecified('signed int')
          end
        ) in
      case a_650 of
        | Specified(a_651: integer) =>
            let weak a_654: pointer =
              memop(PtrFromInt, 'signed int', 'void ()(signed int)', a_651) in
            pure(Specified(a_654))
        | Unspecified(_: ctype) =>
            pure(Unspecified('void (signed int)*'))
      end
    ) in
  store('void (*) (signed int)', f, a_649) ;
  {-# <intptr11a.c:6:4, intptr11a.c:6:39> #-} let strong a_655: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.4 #-}
      {-# <intptr11a.c:6:22, intptr11a.c:6:38> intptr11a.c:6:22 #-} let weak a_656: loaded pointer =
        {-# <intptr11a.c:6:37, intptr11a.c:6:38> #-} let weak a_658: pointer =
          {-# <intptr11a.c:6:37, intptr11a.c:6:38> #-} pure(f) in
        load('void (*) (signed int)', a_658) in
      case a_656 of
        | Specified(a_657: pointer) =>
            let weak a_659: integer =
              memop(IntFromPtr, 'void ()(signed int)', 'unsigned long', a_657) in
            pure(Specified(a_659))
        | Unspecified(_: ctype) =>
            pure(Unspecified('unsigned long'))
      end
    ) in
  store('unsigned long', x, conv_loaded_int('unsigned long', a_655)) ;
  {-# <intptr11a.c:8:4, intptr11a.c:8:53> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <intptr11a.c:8:4, intptr11a.c:8:52> #-} let strong ((a_661: loaded pointer,
      (a_662: ctype, a_663: [ctype], a_664: boolean, a_665: boolean)),
      a_669: loaded pointer, a_671: loaded pointer, a_675: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_660: loaded pointer =
            {-# <intptr11a.c:8:4, intptr11a.c:8:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_660, cfunction(a_660)))
        ,
          {-# <intptr11a.c:8:12, intptr11a.c:8:20> #-} let weak a_670: pointer =
            {-# <intptr11a.c:8:12, intptr11a.c:8:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_670)
        ,
          {-# <intptr11a.c:8:21, intptr11a.c:8:31> #-} let weak a_673: pointer =
            {-# <intptr11a.c:8:21, intptr11a.c:8:31> #-} pure(a_672) in
          {-# §6.3.2.1#3 #-}
          let weak a_674: pointer = memop(PtrArrayShift, a_673, 'char', 0) in
          pure(Specified(a_674))
        ,
          {-# §6.5.15#4, sentence 1 #-}
          {-# <intptr11a.c:8:33, intptr11a.c:8:51> #-} let strong a_689: loaded integer =
            {-# <intptr11a.c:8:34, intptr11a.c:8:39> intptr11a.c:8:35 #-} let weak (a_676: loaded integer,
            a_677: loaded integer) =
              unseq(
                {-# <intptr11a.c:8:34, intptr11a.c:8:39> intptr11a.c:8:35 #-} let weak (a_681: loaded integer,
                a_682: loaded integer) =
                  unseq(
                    {-# <intptr11a.c:8:34, intptr11a.c:8:35> #-} let weak a_686: pointer =
                      {-# <intptr11a.c:8:34, intptr11a.c:8:35> #-} pure(x) in
                    load('unsigned long', a_686)
                  ,
                    {-# §6.5.3.3#3 #-}
                    {-# <intptr11a.c:8:37, intptr11a.c:8:39> intptr11a.c:8:37 #-} let weak a_688: loaded integer =
                      {-# <intptr11a.c:8:38, intptr11a.c:8:39> #-} pure(
                        Specified(1)
                      ) in
                    pure(
                      case a_688 of
                        | Specified(a_687: integer) =>
                            Specified(catch_exceptional_condition_sub('signed int', 0, conv_int('signed int',
                            a_687)))
                        | Unspecified(_: ctype) =>
                            Unspecified('signed int')
                      end
                    )
                  ) in
                pure(
                  case (a_681, a_682) of
                    | (Specified(a_683: integer), Specified(a_684: integer)) =>
                        if conv_int('unsigned long', a_683) =
                        conv_int('unsigned long', a_684) then
                          Specified(1)
                        else
                          Specified(0)
                    | _: (loaded integer,loaded integer) =>
                        Unspecified('signed int')
                  end
                )
              ,
                {-# <intptr11a.c:8:34, intptr11a.c:8:39> intptr11a.c:8:35 #-} pure(
                  Specified(0)
                )
              ) in
            pure(
              case (a_676, a_677) of
                | (Specified(a_678: integer), Specified(a_679: integer)) =>
                    if conv_int('signed int', a_678) =
                    conv_int('signed int', a_679) then
                      Specified(1)
                    else
                      Specified(0)
                | _: (loaded integer,loaded integer) =>
                    Unspecified('signed int')
              end
            ) in
          case a_689 of
            | Specified(a_690: integer) =>
                {-# §6.5.15#4, sentence 2 #-}
                if a_690 = 0 then
                  {-# <intptr11a.c:8:40, intptr11a.c:8:44> #-} let weak a_692: pointer =
                    {-# <intptr11a.c:8:40, intptr11a.c:8:44> #-} pure(a_691) in
                  {-# §6.3.2.1#3 #-}
                  let weak a_693: pointer =
                    memop(PtrArrayShift, a_692, 'char', 0) in
                  pure(Specified(a_693))
                else
                  {-# <intptr11a.c:8:45, intptr11a.c:8:50> #-} let weak a_695: pointer =
                    {-# <intptr11a.c:8:45, intptr11a.c:8:50> #-} pure(a_694) in
                  {-# §6.3.2.1#3 #-}
                  let weak a_696: pointer =
                    memop(PtrArrayShift, a_695, 'char', 0) in
                  pure(Specified(a_696))
            | Unspecified(_: ctype) =>
                pure(undef(<<UB_CERB004_unspecified__conditional>>))
          end
        ) in
      if not(params_length(a_663) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_664) \/ not(are_compatible ('signed int', a_662)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_668: pointer =
            let a_697: ctype = params_nth(a_663, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_697)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_698: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_698, a_669) in
              pure(a_698) in
          let strong a_667: pointer =
            let a_699: ctype = params_nth(a_663, 1) in
            if not(are_compatible ('const char*', a_699)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_700: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_700, a_671) in
              pure(a_700) in
          let strong a_666: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'char*', a_675) in
          let strong a_701: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_661, a_668, a_667, [('char*', a_666)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_668)
            ,
              kill('char*', a_667)
            ,
              kill('char*', a_666)
            ) in
          pure(a_701)
    ) in
  pure(Unit) ;
  kill('void (signed int)*', f) ;
  kill('unsigned long', x) ;
  pure(Unit) ;
  {-# <intptr11a.c:3:0, intptr11a.c:9:1> intptr11a.c:3:4 - intptr11a.c:3:8 #-} save ret_648: loaded integer (a_702: loaded integer:= Specified(0)) in
    pure(a_702)

