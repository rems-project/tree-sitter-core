-- Aggregates










-- Globals
glob a_880: pointer [ail_ctype = 'char[34]'] :=
  let strong a_1006: pointer = create(Ivalignof('char[34]'), 'char[34]') in
  store_lock('char[34]', a_1006,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 103)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1007: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1006,
    18446744073701163007) in
  case a_1007 of
    | Specified(a_1006: pointer) =>
        pure(a_1006)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_919: pointer [ail_ctype = 'char[17]'] :=
  let strong a_1008: pointer = create(Ivalignof('char[17]'), 'char[17]') in
  store_lock('char[17]', a_1008,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 45)), Specified(conv_int('char', 122)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1009: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1008,
    18446744073701163007) in
  case a_1009 of
    | Specified(a_1008: pointer) =>
        pure(a_1008)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_959: pointer [ail_ctype = 'char[22]'] :=
  let strong a_1010: pointer = create(Ivalignof('char[22]'), 'char[22]') in
  store_lock('char[22]', a_1010,
  Specified(Array(Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1011: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1010,
    18446744073701163007) in
  case a_1011 of
    | Specified(a_1010: pointer) =>
        pure(a_1010)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_994: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1012: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1012,
  Specified(Array(Specified(conv_int('char', 79)),
  Specified(conv_int('char', 75)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1013: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1012,
    18446744073701163007) in
  case a_1013 of
    | Specified(a_1012: pointer) =>
        pure(a_1012)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

-- Fun map
proc main (): eff loaded integer :=
  {-# <calloc0.c:9:0, calloc0.c:32:1> #-} {-# <calloc0.c:10:4, calloc0.c:30:5> #-} let strong i: pointer =
    create(Ivalignof('unsigned long'), 'unsigned long') in
  {-# <calloc0.c:10:8, calloc0.c:10:26> #-} let strong a_808: loaded integer =
    {-# §6.5#2 #-}
    bound({-# <calloc0.c:10:24, calloc0.c:10:25> #-} pure(Specified(0))) in
  store('unsigned long', i, conv_loaded_int('unsigned long', a_808)) ;
  {-# <calloc0.c:10:4, calloc0.c:30:5> #-} {-# <calloc0.c:10:4, calloc0.c:30:5> #-} save while_806: unit (i: pointer:= i) in
    let strong a_809: loaded integer =
      {-# §6.5#2 #-}
      bound(
        {-# <calloc0.c:10:26, calloc0.c:10:30> calloc0.c:10:27 #-} let weak (a_811: loaded integer,
        a_812: loaded integer) =
          unseq(
            {-# §6.5.8 #-}
            {-# <calloc0.c:10:26, calloc0.c:10:30> calloc0.c:10:27 #-} let weak (a_817: loaded integer,
            a_818: loaded integer) =
              unseq(
                {-# <calloc0.c:10:26, calloc0.c:10:27> #-} let weak a_816: pointer =
                  {-# <calloc0.c:10:26, calloc0.c:10:27> #-} pure(i) in
                load('unsigned long', a_816)
              ,
                {-# <calloc0.c:10:28, calloc0.c:10:30> #-} pure(
                  Specified(20)
                )
              ) in
            case (a_817, a_818) of
              | (Specified(a_819: integer), Specified(a_820: integer)) =>
                  {-# §6.5.8#6 #-}
                  pure(
                    if conv_int('unsigned long', a_819) <
                    conv_int('unsigned long', a_820) then
                      Specified(1)
                    else
                      Specified(0)
                  )
              | _: (loaded integer,loaded integer) =>
                  pure(Unspecified('signed int'))
            end
          ,
            {-# <calloc0.c:10:26, calloc0.c:10:30> calloc0.c:10:27 #-} pure(
              Specified(0)
            )
          ) in
        pure(
          case (a_811, a_812) of
            | (Specified(a_813: integer), Specified(a_814: integer)) =>
                if conv_int('signed int', a_813) =
                conv_int('signed int', a_814) then
                  Specified(1)
                else
                  Specified(0)
            | _: (loaded integer,loaded integer) =>
                Unspecified('signed int')
          end
        )
      ) in
    let strong a_807: boolean =
      case a_809 of
        | Specified(a_810: integer) =>
            pure(if not(a_810 = 1) then True else False)
        | Unspecified(_: ctype) =>
            nd(pure(True), pure(False))
      end in
    if a_807 then
      {-# <calloc0.c:10:4, calloc0.c:30:5> #-} {-# <calloc0.c:11:4, calloc0.c:30:5> #-} let strong p: pointer =
        create(Ivalignof('void*'), 'void*') in
      let strong a: pointer = create(Ivalignof('ptraddr_t'), 'ptraddr_t') in
      {-# <calloc0.c:12:8, calloc0.c:12:30> #-} let strong a_825: loaded pointer =
        {-# §6.5#2 #-}
        bound(
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <calloc0.c:12:18, calloc0.c:12:29> #-} let strong ((a_827: loaded pointer,
          (a_828: ctype, a_829: [ctype], a_830: boolean, a_831: boolean)),
          a_834: loaded integer, a_835: loaded integer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_826: loaded pointer =
                {-# <calloc0.c:12:18, calloc0.c:12:24> #-} pure(
                  Specified(Cfunction(calloc))
                ) in
              pure((a_826, cfunction(a_826)))
            ,
              {-# <calloc0.c:12:25, calloc0.c:12:26> #-} pure(Specified(1))
            ,
              {-# <calloc0.c:12:27, calloc0.c:12:28> #-} let weak a_836: pointer =
                {-# <calloc0.c:12:27, calloc0.c:12:28> #-} pure(i) in
              load('unsigned long', a_836)
            ) in
          if not(params_length(a_829) = 2) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_830 \/ not(are_compatible ('void*', a_828)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_833: pointer =
                let a_837: ctype = params_nth(a_829, 0) in
                if not(are_compatible ('size_t', a_837)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_838: pointer =
                    create(Ivalignof('size_t'), 'size_t') in
                  let weak _: unit =
                    store('size_t', a_838, conv_loaded_int('size_t', a_834)) in
                  pure(a_838) in
              let strong a_832: pointer =
                let a_839: ctype = params_nth(a_829, 1) in
                if not(are_compatible ('size_t', a_839)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_840: pointer =
                    create(Ivalignof('size_t'), 'size_t') in
                  let weak _: unit =
                    store('size_t', a_840, conv_loaded_int('size_t', a_835)) in
                  pure(a_840) in
              let strong a_841: loaded pointer =
                ccall('void* (*) (size_t, size_t)', a_827, a_833, a_832) in
              let strong _: (unit,unit) =
                unseq(kill('size_t', a_833), kill('size_t', a_832)) in
              pure(a_841)
        ) in
      store('void*', p, a_825) ;
      {-# <calloc0.c:13:8, calloc0.c:13:53> #-} let strong a_842: loaded integer =
        {-# §6.5#2 #-}
        bound(
          {-# <calloc0.c:13:22, calloc0.c:13:52> #-} let strong a_848: loaded pointer =
            {-# §6.5.4 #-}
            {-# <calloc0.c:13:50, calloc0.c:13:51> #-} let weak a_845: pointer =
              {-# <calloc0.c:13:50, calloc0.c:13:51> #-} pure(p) in
            load('void*', a_845) in
          case a_848 of
            | Specified(a_849: pointer) =>
                memop(cheri_cheri_address_get['ptraddr_t (void*)'], a_849)
            | _: loaded pointer =>
                pure(undef(<<DUMMY(Elab, CHERI intrinsics (unspec))>>))
          end
        ) in
      store('ptraddr_t', a, conv_loaded_int('ptraddr_t', a_842)) ;
      {-# <calloc0.c:14:8, calloc0.c:18:9> #-} let strong a_850: loaded integer =
        {-# §6.5#2 #-}
        bound(
          {-# <calloc0.c:14:11, calloc0.c:14:41> calloc0.c:14:37 #-} let weak (a_852: loaded integer,
          a_853: loaded integer) =
            unseq(
              {-# <calloc0.c:14:11, calloc0.c:14:41> calloc0.c:14:37 #-} let weak (a_857: loaded integer,
              a_858: loaded integer) =
                unseq(
                  {-# §6.5.5 #-}
                  {-# <calloc0.c:14:11, calloc0.c:14:36> calloc0.c:14:13 #-} let weak (a_863: loaded integer,
                  a_864: loaded integer) =
                    unseq(
                      {-# <calloc0.c:14:11, calloc0.c:14:12> #-} let weak a_862: pointer =
                        {-# <calloc0.c:14:11, calloc0.c:14:12> #-} pure(a) in
                      load('ptraddr_t', a_862)
                    ,
                      {-# <calloc0.c:14:15, calloc0.c:14:36> calloc0.c:14:15 #-} pure(
                        Specified(Ivalignof('struct __cerbty_unnamed_tag_744'))
                      )
                    ) in
                  pure(
                    case (a_863, a_864) of
                      | (Unspecified(_: ctype), _: loaded integer) =>
                          Unspecified('size_t')
                      | (_: loaded integer, Unspecified(_: ctype)) =>
                          undef(<<UB045b_modulo_by_zero>>)
                      | (Specified(a_865: integer), Specified(a_866: integer)) =>
                          let a_867: integer =
                            conv_int('ptraddr_t', a_865) in
                          let a_868: integer =
                            conv_int('ptraddr_t', a_866) in
                          if a_868 = 0 then
                            undef(<<UB045b_modulo_by_zero>>)
                          else
                            if is_representable_integer(conv_int('ptraddr_t',
                            a_865) /
                            a_868, 'size_t') then
                              Specified(wrapI('size_t', a_867 rem_t a_868))
                            else
                              undef(<<UB045c_quotient_not_representable>>)
                    end
                  )
                ,
                  {-# <calloc0.c:14:40, calloc0.c:14:41> #-} pure(
                    Specified(0)
                  )
                ) in
              pure(
                case (a_857, a_858) of
                  | (Specified(a_859: integer), Specified(a_860: integer)) =>
                      if not(if all_values_representable_in('size_t',
                      'signed int') then
                        conv_int('signed int', a_859)
                      else
                        conv_int('unsigned int', a_859) =
                      if all_values_representable_in('size_t', 'signed int') then
                        conv_int('signed int', a_860)
                      else
                        conv_int('unsigned int', a_860)) then
                        Specified(1)
                      else
                        Specified(0)
                  | _: (loaded integer,loaded integer) =>
                      Unspecified('signed int')
                end
              )
            ,
              {-# <calloc0.c:14:11, calloc0.c:14:41> calloc0.c:14:37 #-} pure(
                Specified(0)
              )
            ) in
          pure(
            case (a_852, a_853) of
              | (Specified(a_854: integer), Specified(a_855: integer)) =>
                  if conv_int('signed int', a_854) =
                  conv_int('signed int', a_855) then
                    Specified(1)
                  else
                    Specified(0)
              | _: (loaded integer,loaded integer) =>
                  Unspecified('signed int')
            end
          )
        ) in
      let strong a_824: boolean =
        case a_850 of
          | Specified(a_851: integer) =>
              pure(if not(a_851 = 1) then True else False)
          | Unspecified(_: ctype) =>
              nd(pure(True), pure(False))
        end in
      if a_824 then
        {-# <calloc0.c:15:8, calloc0.c:18:9> #-} {-# <calloc0.c:16:12, calloc0.c:16:67> #-} let strong _: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# §6.5.2.2#10, sentence 1 #-}
            {-# <calloc0.c:16:12, calloc0.c:16:66> #-} let strong ((a_870: loaded pointer,
            (a_871: ctype, a_872: [ctype], a_873: boolean, a_874: boolean)),
            a_877: loaded pointer, a_879: loaded pointer) =
              {-# §6.5.2.2#4, sentence 2 #-}
              unseq(
                let strong a_869: loaded pointer =
                  {-# <calloc0.c:16:12, calloc0.c:16:19> #-} pure(
                    Specified(Cfunction(fprintf))
                  ) in
                pure((a_869, cfunction(a_869)))
              ,
                {-# <calloc0.c:16:20, calloc0.c:16:28> #-} let weak a_878: pointer =
                  {-# <calloc0.c:16:20, calloc0.c:16:28> #-} pure(__stderr) in
                load('struct _IO_FILE*', a_878)
              ,
                {-# <calloc0.c:16:29, calloc0.c:16:65> #-} let weak a_881: pointer =
                  {-# <calloc0.c:16:29, calloc0.c:16:65> #-} pure(a_880) in
                {-# §6.3.2.1#3 #-}
                let weak a_882: pointer =
                  memop(PtrArrayShift, a_881, 'char', 0) in
                pure(Specified(a_882))
              ) in
            if not(params_length(a_872) <= 2) then
              pure(undef(<<UB038_number_of_args>>))
            else
              if not(a_873) \/ not(are_compatible ('signed int', a_871)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                let strong a_876: pointer =
                  let a_883: ctype = params_nth(a_872, 0) in
                  if not(are_compatible ('struct _IO_FILE*', a_883)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    {-# §6.5.2.2#7, sentence 1 #-}
                    let weak a_884: pointer =
                      create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                    let weak _: unit =
                      store('struct _IO_FILE*', a_884, a_877) in
                    pure(a_884) in
                let strong a_875: pointer =
                  let a_885: ctype = params_nth(a_872, 1) in
                  if not(are_compatible ('const char*', a_885)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    {-# §6.5.2.2#7, sentence 1 #-}
                    let weak a_886: pointer =
                      create(Ivalignof('const char*'), 'const char*') in
                    let weak _: unit = store('const char*', a_886, a_879) in
                    pure(a_886) in
                let strong a_887: loaded integer =
                  ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
                  a_870, a_876, a_875, []: (ctype,pointer)) in
                let strong _: (unit,unit) =
                  unseq(
                    kill('struct _IO_FILE*', a_876)
                  ,
                    kill('char*', a_875)
                  ) in
                pure(a_887)
          ) in
        pure(Unit) ;
        {-# <calloc0.c:17:12, calloc0.c:17:22> #-} let strong a_888: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# <calloc0.c:17:18, calloc0.c:17:21> #-} pure(Specified(1))
          ) in
        kill('void*', p) ;
        kill('ptraddr_t', a) ;
        kill('unsigned long', i) ;
        run ret_803(conv_loaded_int('signed int', a_888)) ;
        pure(Unit)
      else
        {-# <calloc0.c:14:8, calloc0.c:18:9> #-} pure(Unit) ;
      {-# <calloc0.c:19:8, calloc0.c:23:9> #-} let strong a_889: loaded integer =
        {-# §6.5#2 #-}
        bound(
          {-# <calloc0.c:19:11, calloc0.c:19:45> calloc0.c:19:41 #-} let weak (a_891: loaded integer,
          a_892: loaded integer) =
            unseq(
              {-# <calloc0.c:19:11, calloc0.c:19:45> calloc0.c:19:41 #-} let weak (a_896: loaded integer,
              a_897: loaded integer) =
                unseq(
                  {-# <calloc0.c:19:11, calloc0.c:19:40> #-} let strong a_906: loaded pointer =
                    {-# §6.5.4 #-}
                    {-# <calloc0.c:19:38, calloc0.c:19:39> #-} let weak a_903: pointer =
                      {-# <calloc0.c:19:38, calloc0.c:19:39> #-} pure(p) in
                    load('void*', a_903) in
                  case a_906 of
                    | Specified(a_907: pointer) =>
                        memop(cheri_cheri_offset_get['size_t (void*)'], a_907)
                    | _: loaded pointer =>
                        pure(
                          undef(<<DUMMY(Elab, CHERI intrinsics (unspec))>>)
                        )
                  end
                ,
                  {-# <calloc0.c:19:44, calloc0.c:19:45> #-} pure(
                    Specified(0)
                  )
                ) in
              pure(
                case (a_896, a_897) of
                  | (Specified(a_898: integer), Specified(a_899: integer)) =>
                      if not(if all_values_representable_in('size_t',
                      'signed int') then
                        conv_int('signed int', a_898)
                      else
                        conv_int('unsigned int', a_898) =
                      if all_values_representable_in('size_t', 'signed int') then
                        conv_int('signed int', a_899)
                      else
                        conv_int('unsigned int', a_899)) then
                        Specified(1)
                      else
                        Specified(0)
                  | _: (loaded integer,loaded integer) =>
                      Unspecified('signed int')
                end
              )
            ,
              {-# <calloc0.c:19:11, calloc0.c:19:45> calloc0.c:19:41 #-} pure(
                Specified(0)
              )
            ) in
          pure(
            case (a_891, a_892) of
              | (Specified(a_893: integer), Specified(a_894: integer)) =>
                  if conv_int('signed int', a_893) =
                  conv_int('signed int', a_894) then
                    Specified(1)
                  else
                    Specified(0)
              | _: (loaded integer,loaded integer) =>
                  Unspecified('signed int')
            end
          )
        ) in
      let strong a_823: boolean =
        case a_889 of
          | Specified(a_890: integer) =>
              pure(if not(a_890 = 1) then True else False)
          | Unspecified(_: ctype) =>
              nd(pure(True), pure(False))
        end in
      if a_823 then
        {-# <calloc0.c:20:8, calloc0.c:23:9> #-} {-# <calloc0.c:21:12, calloc0.c:21:50> #-} let strong _: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# §6.5.2.2#10, sentence 1 #-}
            {-# <calloc0.c:21:12, calloc0.c:21:49> #-} let strong ((a_909: loaded pointer,
            (a_910: ctype, a_911: [ctype], a_912: boolean, a_913: boolean)),
            a_916: loaded pointer, a_918: loaded pointer) =
              {-# §6.5.2.2#4, sentence 2 #-}
              unseq(
                let strong a_908: loaded pointer =
                  {-# <calloc0.c:21:12, calloc0.c:21:19> #-} pure(
                    Specified(Cfunction(fprintf))
                  ) in
                pure((a_908, cfunction(a_908)))
              ,
                {-# <calloc0.c:21:20, calloc0.c:21:28> #-} let weak a_917: pointer =
                  {-# <calloc0.c:21:20, calloc0.c:21:28> #-} pure(__stderr) in
                load('struct _IO_FILE*', a_917)
              ,
                {-# <calloc0.c:21:29, calloc0.c:21:48> #-} let weak a_920: pointer =
                  {-# <calloc0.c:21:29, calloc0.c:21:48> #-} pure(a_919) in
                {-# §6.3.2.1#3 #-}
                let weak a_921: pointer =
                  memop(PtrArrayShift, a_920, 'char', 0) in
                pure(Specified(a_921))
              ) in
            if not(params_length(a_911) <= 2) then
              pure(undef(<<UB038_number_of_args>>))
            else
              if not(a_912) \/ not(are_compatible ('signed int', a_910)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                let strong a_915: pointer =
                  let a_922: ctype = params_nth(a_911, 0) in
                  if not(are_compatible ('struct _IO_FILE*', a_922)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    {-# §6.5.2.2#7, sentence 1 #-}
                    let weak a_923: pointer =
                      create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                    let weak _: unit =
                      store('struct _IO_FILE*', a_923, a_916) in
                    pure(a_923) in
                let strong a_914: pointer =
                  let a_924: ctype = params_nth(a_911, 1) in
                  if not(are_compatible ('const char*', a_924)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    {-# §6.5.2.2#7, sentence 1 #-}
                    let weak a_925: pointer =
                      create(Ivalignof('const char*'), 'const char*') in
                    let weak _: unit = store('const char*', a_925, a_918) in
                    pure(a_925) in
                let strong a_926: loaded integer =
                  ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
                  a_909, a_915, a_914, []: (ctype,pointer)) in
                let strong _: (unit,unit) =
                  unseq(
                    kill('struct _IO_FILE*', a_915)
                  ,
                    kill('char*', a_914)
                  ) in
                pure(a_926)
          ) in
        pure(Unit) ;
        {-# <calloc0.c:22:12, calloc0.c:22:22> #-} let strong a_927: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# <calloc0.c:22:18, calloc0.c:22:21> #-} pure(Specified(1))
          ) in
        kill('void*', p) ;
        kill('ptraddr_t', a) ;
        kill('unsigned long', i) ;
        run ret_803(conv_loaded_int('signed int', a_927)) ;
        pure(Unit)
      else
        {-# <calloc0.c:19:8, calloc0.c:23:9> #-} pure(Unit) ;
      {-# <calloc0.c:24:8, calloc0.c:28:9> #-} let strong a_928: loaded integer =
        {-# §6.5#2 #-}
        bound(
          {-# <calloc0.c:24:11, calloc0.c:24:44> calloc0.c:24:41 #-} let weak (a_930: loaded integer,
          a_931: loaded integer) =
            unseq(
              {-# §6.5.8 #-}
              {-# <calloc0.c:24:11, calloc0.c:24:44> calloc0.c:24:41 #-} let weak (a_943: loaded integer,
              a_944: loaded integer) =
                unseq(
                  {-# <calloc0.c:24:11, calloc0.c:24:40> #-} let strong a_940: loaded pointer =
                    {-# §6.5.4 #-}
                    {-# <calloc0.c:24:38, calloc0.c:24:39> #-} let weak a_937: pointer =
                      {-# <calloc0.c:24:38, calloc0.c:24:39> #-} pure(p) in
                    load('void*', a_937) in
                  case a_940 of
                    | Specified(a_941: pointer) =>
                        memop(cheri_cheri_length_get['size_t (void*)'], a_941)
                    | _: loaded pointer =>
                        pure(
                          undef(<<DUMMY(Elab, CHERI intrinsics (unspec))>>)
                        )
                  end
                ,
                  {-# <calloc0.c:24:43, calloc0.c:24:44> #-} let weak a_942: pointer =
                    {-# <calloc0.c:24:43, calloc0.c:24:44> #-} pure(i) in
                  load('unsigned long', a_942)
                ) in
              case (a_943, a_944) of
                | (Specified(a_945: integer), Specified(a_946: integer)) =>
                    {-# §6.5.8#6 #-}
                    pure(
                      if conv_int('size_t', a_945) <
                      conv_int('size_t', a_946) then
                        Specified(1)
                      else
                        Specified(0)
                    )
                | _: (loaded integer,loaded integer) =>
                    pure(Unspecified('signed int'))
              end
            ,
              {-# <calloc0.c:24:11, calloc0.c:24:44> calloc0.c:24:41 #-} pure(
                Specified(0)
              )
            ) in
          pure(
            case (a_930, a_931) of
              | (Specified(a_932: integer), Specified(a_933: integer)) =>
                  if conv_int('signed int', a_932) =
                  conv_int('signed int', a_933) then
                    Specified(1)
                  else
                    Specified(0)
              | _: (loaded integer,loaded integer) =>
                  Unspecified('signed int')
            end
          )
        ) in
      let strong a_822: boolean =
        case a_928 of
          | Specified(a_929: integer) =>
              pure(if not(a_929 = 1) then True else False)
          | Unspecified(_: ctype) =>
              nd(pure(True), pure(False))
        end in
      if a_822 then
        {-# <calloc0.c:25:8, calloc0.c:28:9> #-} {-# <calloc0.c:26:12, calloc0.c:26:55> #-} let strong _: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# §6.5.2.2#10, sentence 1 #-}
            {-# <calloc0.c:26:12, calloc0.c:26:54> #-} let strong ((a_949: loaded pointer,
            (a_950: ctype, a_951: [ctype], a_952: boolean, a_953: boolean)),
            a_956: loaded pointer, a_958: loaded pointer) =
              {-# §6.5.2.2#4, sentence 2 #-}
              unseq(
                let strong a_948: loaded pointer =
                  {-# <calloc0.c:26:12, calloc0.c:26:19> #-} pure(
                    Specified(Cfunction(fprintf))
                  ) in
                pure((a_948, cfunction(a_948)))
              ,
                {-# <calloc0.c:26:20, calloc0.c:26:28> #-} let weak a_957: pointer =
                  {-# <calloc0.c:26:20, calloc0.c:26:28> #-} pure(__stderr) in
                load('struct _IO_FILE*', a_957)
              ,
                {-# <calloc0.c:26:29, calloc0.c:26:53> #-} let weak a_960: pointer =
                  {-# <calloc0.c:26:29, calloc0.c:26:53> #-} pure(a_959) in
                {-# §6.3.2.1#3 #-}
                let weak a_961: pointer =
                  memop(PtrArrayShift, a_960, 'char', 0) in
                pure(Specified(a_961))
              ) in
            if not(params_length(a_951) <= 2) then
              pure(undef(<<UB038_number_of_args>>))
            else
              if not(a_952) \/ not(are_compatible ('signed int', a_950)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                let strong a_955: pointer =
                  let a_962: ctype = params_nth(a_951, 0) in
                  if not(are_compatible ('struct _IO_FILE*', a_962)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    {-# §6.5.2.2#7, sentence 1 #-}
                    let weak a_963: pointer =
                      create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                    let weak _: unit =
                      store('struct _IO_FILE*', a_963, a_956) in
                    pure(a_963) in
                let strong a_954: pointer =
                  let a_964: ctype = params_nth(a_951, 1) in
                  if not(are_compatible ('const char*', a_964)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    {-# §6.5.2.2#7, sentence 1 #-}
                    let weak a_965: pointer =
                      create(Ivalignof('const char*'), 'const char*') in
                    let weak _: unit = store('const char*', a_965, a_958) in
                    pure(a_965) in
                let strong a_966: loaded integer =
                  ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
                  a_949, a_955, a_954, []: (ctype,pointer)) in
                let strong _: (unit,unit) =
                  unseq(
                    kill('struct _IO_FILE*', a_955)
                  ,
                    kill('char*', a_954)
                  ) in
                pure(a_966)
          ) in
        pure(Unit) ;
        {-# <calloc0.c:27:12, calloc0.c:27:22> #-} let strong a_967: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# <calloc0.c:27:18, calloc0.c:27:21> #-} pure(Specified(1))
          ) in
        kill('void*', p) ;
        kill('ptraddr_t', a) ;
        kill('unsigned long', i) ;
        run ret_803(conv_loaded_int('signed int', a_967)) ;
        pure(Unit)
      else
        {-# <calloc0.c:24:8, calloc0.c:28:9> #-} pure(Unit) ;
      {-# <calloc0.c:29:8, calloc0.c:29:16> #-} {-# §6.5#2 #-}
      bound(
        {-# §6.5.2.2#10, sentence 1 #-}
        {-# <calloc0.c:29:8, calloc0.c:29:15> #-} let strong ((a_969: loaded pointer,
        (a_970: ctype, a_971: [ctype], a_972: boolean, a_973: boolean)),
        a_975: loaded pointer) =
          {-# §6.5.2.2#4, sentence 2 #-}
          unseq(
            let strong a_968: loaded pointer =
              {-# <calloc0.c:29:8, calloc0.c:29:12> #-} pure(
                Specified(Cfunction(free_proxy))
              ) in
            pure((a_968, cfunction(a_968)))
          ,
            {-# <calloc0.c:29:13, calloc0.c:29:14> #-} let weak a_976: pointer =
              {-# <calloc0.c:29:13, calloc0.c:29:14> #-} pure(p) in
            load('void*', a_976)
          ) in
        if not(params_length(a_971) = 1) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if a_972 \/ not(are_compatible ('void', a_970)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_974: pointer =
              let a_977: ctype = params_nth(a_971, 0) in
              if not(are_compatible ('void*', a_977)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# §6.5.2.2#7, sentence 1 #-}
                let weak a_978: pointer =
                  create(Ivalignof('void*'), 'void*') in
                let weak _: unit = store('void*', a_978, a_975) in
                pure(a_978) in
            let strong a_979: unit =
              ccall('void (*) (void*)', a_969, a_974) in
            kill('void*', a_974) ;
            pure(a_979)
      ) ;
      pure(Unit) ;
      {-# <calloc0.c:10:4, calloc0.c:30:5> #-} save __cerb_continue0: unit (p: pointer:= p,
      a: pointer:= a, i: pointer:= i) in
        {-# <unknown location> #-} let strong _: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# §6.5.2.4#2, sentence 3 #-}
            {-# §6.5.2.4#2, sentence 1 #-}
            {-# §6.5.2.4 #-}
            {-# <calloc0.c:10:31, calloc0.c:10:34> calloc0.c:10:32 #-} let weak a_980: pointer =
              {-# <calloc0.c:10:31, calloc0.c:10:32> #-} pure(i) in
            seq_rmw('unsigned long', a_980, a_981 => case a_981 of
              | Specified(a_982: integer) =>
                  Specified(conv_int('unsigned long',
                  wrapI_add('unsigned long', conv_int('unsigned long', a_982), 1)))
              | Unspecified(_: ctype) =>
                  Unspecified('unsigned long')
            end)
          ) in
        pure(Unit) ;
      kill('void*', p) ;
      kill('ptraddr_t', a) ;
      pure(Unit) ;
      {-# <calloc0.c:10:4, calloc0.c:30:5> #-} save continue_804: unit (i: pointer:= i) in
        {-# <calloc0.c:10:4, calloc0.c:30:5> #-} pure(Unit) ;
      pure(Unit) ;
      run while_806(i)
    else
      pure(Unit) ;
  {-# <calloc0.c:10:4, calloc0.c:30:5> #-} save break_805: unit (i: pointer:= i) in
    {-# <calloc0.c:10:4, calloc0.c:30:5> #-} pure(Unit) ;
  pure(Unit) ;
  kill('unsigned long', i) ;
  pure(Unit) ;
  {-# <calloc0.c:31:4, calloc0.c:31:29> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <calloc0.c:31:4, calloc0.c:31:28> #-} let strong ((a_984: loaded pointer,
      (a_985: ctype, a_986: [ctype], a_987: boolean, a_988: boolean)),
      a_991: loaded pointer, a_993: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_983: loaded pointer =
            {-# <calloc0.c:31:4, calloc0.c:31:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_983, cfunction(a_983)))
        ,
          {-# <calloc0.c:31:12, calloc0.c:31:20> #-} let weak a_992: pointer =
            {-# <calloc0.c:31:12, calloc0.c:31:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_992)
        ,
          {-# <calloc0.c:31:21, calloc0.c:31:27> #-} let weak a_995: pointer =
            {-# <calloc0.c:31:21, calloc0.c:31:27> #-} pure(a_994) in
          {-# §6.3.2.1#3 #-}
          let weak a_996: pointer = memop(PtrArrayShift, a_995, 'char', 0) in
          pure(Specified(a_996))
        ) in
      if not(params_length(a_986) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_987) \/ not(are_compatible ('signed int', a_985)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_990: pointer =
            let a_997: ctype = params_nth(a_986, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_997)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_998: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_998, a_991) in
              pure(a_998) in
          let strong a_989: pointer =
            let a_999: ctype = params_nth(a_986, 1) in
            if not(are_compatible ('const char*', a_999)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1000: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1000, a_993) in
              pure(a_1000) in
          let strong a_1001: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_984, a_990, a_989, []: (ctype,pointer)) in
          let strong _: (unit,unit) =
            unseq(kill('struct _IO_FILE*', a_990), kill('char*', a_989)) in
          pure(a_1001)
    ) in
  pure(Unit) ;
  pure(Unit) ;
  {-# <calloc0.c:8:0, calloc0.c:32:1> calloc0.c:8:4 - calloc0.c:8:8 #-} save ret_803: loaded integer (a_1002: loaded integer:= Specified(0)) in
    pure(a_1002)

