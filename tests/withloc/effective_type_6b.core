-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

def struct __cerbty_unnamed_tag_746 :=
  __dummy_max_align_t: 'void*'

-- Globals
glob a_797: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  {-# <./de_facto_memory_model/effective_type_6b.c:5:11, ./de_facto_memory_model/effective_type_6b.c:10:1> #-} let strong p: pointer =
    create(Ivalignof('void*'), 'void*') in
  let strong f: pointer = create(Ivalignof('float'), 'float') in
  {-# <./de_facto_memory_model/effective_type_6b.c:6:2, ./de_facto_memory_model/effective_type_6b.c:6:37> #-} let strong a_758: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./de_facto_memory_model/effective_type_6b.c:6:12, ./de_facto_memory_model/effective_type_6b.c:6:36> #-} let strong ((a_760: loaded pointer,
      (a_761: ctype, a_762: [ctype], a_763: boolean, a_764: boolean)),
      a_767: loaded integer, a_768: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_759: loaded pointer =
            {-# <./de_facto_memory_model/effective_type_6b.c:6:12, ./de_facto_memory_model/effective_type_6b.c:6:18> #-} pure(
              Specified(Cfunction(calloc))
            ) in
          pure((a_759, cfunction(a_759)))
        ,
          {-# <./de_facto_memory_model/effective_type_6b.c:6:19, ./de_facto_memory_model/effective_type_6b.c:6:20> #-} pure(
            Specified(1)
          )
        ,
          {-# <./de_facto_memory_model/effective_type_6b.c:6:22, ./de_facto_memory_model/effective_type_6b.c:6:35> ./de_facto_memory_model/effective_type_6b.c:6:22 #-} pure(
            Specified(Ivsizeof('float'))
          )
        ) in
      if not(params_length(a_762) = 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_763 \/ not(are_compatible ('void*', a_761)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_766: pointer =
            let a_769: ctype = params_nth(a_762, 0) in
            if not(are_compatible ('size_t', a_769)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_770: pointer =
                create(Ivalignof('size_t'), 'size_t') in
              let weak _: unit =
                store('size_t', a_770, conv_loaded_int('size_t', a_767)) in
              pure(a_770) in
          let strong a_765: pointer =
            let a_771: ctype = params_nth(a_762, 1) in
            if not(are_compatible ('size_t', a_771)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_772: pointer =
                create(Ivalignof('size_t'), 'size_t') in
              let weak _: unit =
                store('size_t', a_772, conv_loaded_int('size_t', a_768)) in
              pure(a_772) in
          let strong a_773: loaded pointer =
            ccall('void* (*) (size_t, size_t)', a_760, a_766, a_765) in
          let strong _: (unit,unit) =
            unseq(kill('size_t', a_766), kill('size_t', a_765)) in
          pure(a_773)
    ) in
  store('void*', p, a_758) ;
  {-# <./de_facto_memory_model/effective_type_6b.c:6:38, ./de_facto_memory_model/effective_type_6b.c:6:67> #-} {-# §6.5#2 #-}
  bound(
    {-# <./de_facto_memory_model/effective_type_6b.c:6:38, ./de_facto_memory_model/effective_type_6b.c:6:66> #-} let strong a_757: loaded integer =
      {-# <./de_facto_memory_model/effective_type_6b.c:6:46, ./de_facto_memory_model/effective_type_6b.c:6:65> ./de_facto_memory_model/effective_type_6b.c:6:48 #-} let weak a_777: loaded pointer =
        {-# <./de_facto_memory_model/effective_type_6b.c:6:46, ./de_facto_memory_model/effective_type_6b.c:6:47> #-} let weak a_776: pointer =
          {-# <./de_facto_memory_model/effective_type_6b.c:6:46, ./de_facto_memory_model/effective_type_6b.c:6:47> #-} pure(
            p
          ) in
        load('void*', a_776) in
      let Specified(a_778: pointer) = a_777 in
      let weak a_779: boolean = memop(PtrNe, a_778, NULL(void*)) in
      {-# §6.5.9#3 #-}
      pure(if a_779 then Specified(1) else Specified(0)) in
    pure(
      let Specified(a_774: integer) = a_757 in
      if a_774 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/effective_type_6b.c:8:2, ./de_facto_memory_model/effective_type_6b.c:8:26> #-} let strong a_780: loaded floating =
    {-# §6.5#2 #-}
    bound(
      {-# <./de_facto_memory_model/effective_type_6b.c:8:12, ./de_facto_memory_model/effective_type_6b.c:8:25> ./de_facto_memory_model/effective_type_6b.c:8:12 #-} let weak a_788: pointer =
        {-# §6.5.3.2 #-}
        {-# <./de_facto_memory_model/effective_type_6b.c:8:12, ./de_facto_memory_model/effective_type_6b.c:8:25> ./de_facto_memory_model/effective_type_6b.c:8:12 #-} let weak a_781: loaded pointer =
          {-# §6.5.4 #-}
          {-# <./de_facto_memory_model/effective_type_6b.c:8:13, ./de_facto_memory_model/effective_type_6b.c:8:25> #-} let weak a_784: loaded pointer =
            {-# <./de_facto_memory_model/effective_type_6b.c:8:23, ./de_facto_memory_model/effective_type_6b.c:8:24> #-} let weak a_786: pointer =
              {-# <./de_facto_memory_model/effective_type_6b.c:8:23, ./de_facto_memory_model/effective_type_6b.c:8:24> #-} pure(
                p
              ) in
            load('void*', a_786) in
          let Specified(a_785: pointer) = a_784 in
          let weak a_787: boolean = memop(PtrWellAligned, 'float', a_785) in
          pure(
            Specified(if a_787 then
              a_785
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          ) in
        let Specified(a_782: pointer) = a_781 in
        let weak a_783: boolean = memop(PtrValidForDeref, 'float', a_782) in
        pure(
          if a_783 then a_782 else undef(<<UB043_indirection_invalid_value>>)
        ) in
      load('float', a_788)
    ) in
  store('float', f, a_780) ;
  {-# <./de_facto_memory_model/effective_type_6b.c:9:2, ./de_facto_memory_model/effective_type_6b.c:9:21> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./de_facto_memory_model/effective_type_6b.c:9:2, ./de_facto_memory_model/effective_type_6b.c:9:20> #-} let strong ((a_789: loaded pointer,
      (a_790: ctype, a_791: [ctype], a_792: boolean, a_793: boolean)),
      a_796: loaded pointer, a_800: loaded floating) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_756: loaded pointer =
            {-# <./de_facto_memory_model/effective_type_6b.c:9:2, ./de_facto_memory_model/effective_type_6b.c:9:8> #-} pure(
              Specified(Cfunction(printf_proxy))
            ) in
          pure((a_756, cfunction(a_756)))
        ,
          {-# <./de_facto_memory_model/effective_type_6b.c:9:9, ./de_facto_memory_model/effective_type_6b.c:9:17> #-} let weak a_798: pointer =
            {-# <./de_facto_memory_model/effective_type_6b.c:9:9, ./de_facto_memory_model/effective_type_6b.c:9:17> #-} pure(
              a_797
            ) in
          {-# §6.3.2.1#3 #-}
          let weak a_799: pointer = memop(PtrArrayShift, a_798, 'char', 0) in
          pure(Specified(a_799))
        ,
          {-# <./de_facto_memory_model/effective_type_6b.c:9:18, ./de_facto_memory_model/effective_type_6b.c:9:19> #-} let weak a_801: pointer =
            {-# <./de_facto_memory_model/effective_type_6b.c:9:18, ./de_facto_memory_model/effective_type_6b.c:9:19> #-} pure(
              f
            ) in
          load('float', a_801)
        ) in
      if not(params_length(a_791) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_792) \/ not(are_compatible ('signed int', a_790)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_795: pointer =
            let a_802: ctype = params_nth(a_791, 0) in
            if not(are_compatible ('const char*', a_802)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_803: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_803, a_796) in
              pure(a_803) in
          let strong a_794: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'double', a_800) in
          let strong a_804: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_789, a_795,
            [('double', a_794)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_795), kill('double', a_794)) in
          pure(a_804)
    ) in
  pure(Unit) ;
  kill('void*', p) ;
  kill('float', f) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/effective_type_6b.c:5:0, ./de_facto_memory_model/effective_type_6b.c:10:1> ./de_facto_memory_model/effective_type_6b.c:5:4 - ./de_facto_memory_model/effective_type_6b.c:5:8 #-} save ret_755: loaded integer (a_805: loaded integer:= Specified(0)) in
    pure(a_805)

