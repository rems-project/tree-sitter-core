-- Aggregates










-- Globals
glob y: pointer [ail_ctype = 'signed int'] :=
  {-# <unknown location> #-} let strong a_1149: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong a_1150: loaded integer =
    {-# ยง6.5#2 #-}
    bound({-# <prov2.c:5:6, prov2.c:5:7> #-} pure(Specified(2))) in
  store('signed int', a_1149, conv_loaded_int('signed int', a_1150)) ;
  pure(a_1149)

glob x: pointer [ail_ctype = 'signed int'] :=
  {-# <unknown location> #-} let strong a_1147: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong a_1148: loaded integer =
    {-# ยง6.5#2 #-}
    bound({-# <prov2.c:5:11, prov2.c:5:12> #-} pure(Specified(1))) in
  store('signed int', a_1147, conv_loaded_int('signed int', a_1148)) ;
  pure(a_1147)

glob a_931: pointer [ail_ctype = 'char[23]'] :=
  let strong a_1491: pointer = create(Ivalignof('char[23]'), 'char[23]') in
  store_lock('char[23]', a_1491,
  Specified(Array(Specified(conv_int('char', 65)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(conv_int('char', 32)), Specified(0)))) ;
  let strong a_1492: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1491,
    18446744073701163007) in
  case a_1492 of
    | Specified(a_1491: pointer) =>
        pure(a_1491)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1025: pointer [ail_ctype = 'char[23]'] :=
  let strong a_1493: pointer = create(Ivalignof('char[23]'), 'char[23]') in
  store_lock('char[23]', a_1493,
  Specified(Array(Specified(conv_int('char', 120)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1494: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1493,
    18446744073701163007) in
  case a_1494 of
    | Specified(a_1493: pointer) =>
        pure(a_1493)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1060: pointer [ail_ctype = 'char[20]'] :=
  let strong a_1495: pointer = create(Ivalignof('char[20]'), 'char[20]') in
  store_lock('char[20]', a_1495,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 109)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 44)), Specified(conv_int('char', 38)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 41)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 33)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 48)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1496: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1495,
    18446744073701163007) in
  case a_1496 of
    | Specified(a_1495: pointer) =>
        pure(a_1495)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1103: pointer [ail_ctype = 'char[23]'] :=
  let strong a_1497: pointer = create(Ivalignof('char[23]'), 'char[23]') in
  store_lock('char[23]', a_1497,
  Specified(Array(Specified(conv_int('char', 120)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1498: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1497,
    18446744073701163007) in
  case a_1498 of
    | Specified(a_1497: pointer) =>
        pure(a_1497)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1138: pointer [ail_ctype = 'char[8]'] :=
  let strong a_1499: pointer = create(Ivalignof('char[8]'), 'char[8]') in
  store_lock('char[8]', a_1499,
  Specified(Array(Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 33)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1500: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1499,
    18446744073701163007) in
  case a_1500 of
    | Specified(a_1499: pointer) =>
        pure(a_1499)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1165: pointer [ail_ctype = 'char[5]'] :=
  let strong a_1501: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_1501,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0)))) ;
  let strong a_1502: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1501,
    18446744073701163007) in
  case a_1502 of
    | Specified(a_1501: pointer) =>
        pure(a_1501)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1169: pointer [ail_ctype = 'char[9]'] :=
  let strong a_1503: pointer = create(Ivalignof('char[9]'), 'char[9]') in
  store_lock('char[9]', a_1503,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0)))) ;
  let strong a_1504: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1503,
    18446744073701163007) in
  case a_1504 of
    | Specified(a_1503: pointer) =>
        pure(a_1503)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1193: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1505: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1505,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(0)))) ;
  let strong a_1506: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1505,
    18446744073701163007) in
  case a_1506 of
    | Specified(a_1505: pointer) =>
        pure(a_1505)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1234: pointer [ail_ctype = 'char[5]'] :=
  let strong a_1507: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_1507,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 48)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 120)), Specified(0)))) ;
  let strong a_1508: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1507,
    18446744073701163007) in
  case a_1508 of
    | Specified(a_1507: pointer) =>
        pure(a_1507)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1282: pointer [ail_ctype = 'char[2]'] :=
  let strong a_1509: pointer = create(Ivalignof('char[2]'), 'char[2]') in
  store_lock('char[2]', a_1509,
  Specified(Array(Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1510: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1509,
    18446744073701163007) in
  case a_1510 of
    | Specified(a_1509: pointer) =>
        pure(a_1509)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1355: pointer [ail_ctype = 'char[26]'] :=
  let strong a_1511: pointer = create(Ivalignof('char[26]'), 'char[26]') in
  store_lock('char[26]', a_1511,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 96)),
  Specified(0)))) ;
  let strong a_1512: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1511,
    18446744073701163007) in
  case a_1512 of
    | Specified(a_1511: pointer) =>
        pure(a_1511)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1371: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1513: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1513,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 112)),
  Specified(0)))) ;
  let strong a_1514: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1513,
    18446744073701163007) in
  case a_1514 of
    | Specified(a_1513: pointer) =>
        pure(a_1513)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1411: pointer [ail_ctype = 'char[31]'] :=
  let strong a_1515: pointer = create(Ivalignof('char[31]'), 'char[31]') in
  store_lock('char[31]', a_1515,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 96)), Specified(0)))) ;
  let strong a_1516: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1515,
    18446744073701163007) in
  case a_1516 of
    | Specified(a_1515: pointer) =>
        pure(a_1515)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1426: pointer [ail_ctype = 'char[27]'] :=
  let strong a_1517: pointer = create(Ivalignof('char[27]'), 'char[27]') in
  store_lock('char[27]', a_1517,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 91)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 80)), Specified(conv_int('char', 44)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 35)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 98)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 93)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 63)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 65)), Specified(0)))) ;
  let strong a_1518: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1517,
    18446744073701163007) in
  case a_1518 of
    | Specified(a_1517: pointer) =>
        pure(a_1517)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1466: pointer [ail_ctype = 'char[15]'] :=
  let strong a_1519: pointer = create(Ivalignof('char[15]'), 'char[15]') in
  store_lock('char[15]', a_1519,
  Specified(Array(Specified(conv_int('char', 115)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1520: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1519,
    18446744073701163007) in
  case a_1520 of
    | Specified(a_1519: pointer) =>
        pure(a_1519)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

-- Fun map
proc main (): eff loaded integer :=
  {-# <prov2.c:8:0, prov2.c:23:1> #-} let strong p: pointer =
    create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  {-# <prov2.c:9:4, prov2.c:9:20> #-} let strong a_909: loaded pointer =
    {-# ยง6.5#2 #-}
    bound(
      {-# ยง6.5.6 #-}
      {-# <prov2.c:9:13, prov2.c:9:19> prov2.c:9:16 #-} let weak (a_910: loaded pointer,
      a_912: loaded integer) =
        unseq(
          {-# ยง6.5.3.2#3, sentence 5 #-}
          {-# <prov2.c:9:13, prov2.c:9:15> prov2.c:9:13 #-} let weak a_915: pointer =
            {-# <prov2.c:9:14, prov2.c:9:15> #-} pure(y) in
          pure(Specified(a_915))
        ,
          {-# <prov2.c:9:18, prov2.c:9:19> #-} pure(Specified(1))
        ) in
      case (a_910, a_912) of
        | (Specified(a_911: pointer), Specified(a_913: integer)) =>
            let weak a_914: pointer =
              memop(PtrArrayShift, a_911, 'signed int', a_913) in
            pure(Specified(a_914))
        | _: (loaded pointer,loaded integer) =>
            pure(undef(<<UB_CERB004_unspecified__pointer_add>>))
      end
    ) in
  store('signed int*', p, a_909) ;
  {-# <prov2.c:10:4, prov2.c:10:17> #-} let strong a_916: loaded pointer =
    {-# ยง6.5#2 #-}
    bound(
      {-# ยง6.5.3.2#3, sentence 5 #-}
      {-# <prov2.c:10:13, prov2.c:10:15> prov2.c:10:13 #-} let weak a_917: pointer =
        {-# <prov2.c:10:14, prov2.c:10:15> #-} pure(x) in
      pure(Specified(a_917))
    ) in
  store('signed int*', q, a_916) ;
  {-# <prov2.c:11:4, prov2.c:11:92> #-} let strong _: loaded integer =
    {-# ยง6.5#2 #-}
    bound(
      {-# ยง6.5.2.2#10, sentence 1 #-}
      {-# <prov2.c:11:4, prov2.c:11:91> #-} let strong ((a_919: loaded pointer,
      (a_920: ctype, a_921: [ctype], a_922: boolean, a_923: boolean)),
      a_928: loaded pointer, a_930: loaded pointer, a_934: loaded pointer,
      a_950: loaded pointer) =
        {-# ยง6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_918: loaded pointer =
            {-# <prov2.c:11:4, prov2.c:11:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_918, cfunction(a_918)))
        ,
          {-# <prov2.c:11:12, prov2.c:11:20> #-} let weak a_929: pointer =
            {-# <prov2.c:11:12, prov2.c:11:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_929)
        ,
          {-# <prov2.c:11:21, prov2.c:11:58> #-} let weak a_932: pointer =
            {-# <prov2.c:11:21, prov2.c:11:58> #-} pure(a_931) in
          {-# ยง6.3.2.1#3 #-}
          let weak a_933: pointer = memop(PtrArrayShift, a_932, 'char', 0) in
          pure(Specified(a_933))
        ,
          {-# ยง6.5.2.2#10, sentence 1 #-}
          {-# <prov2.c:11:60, prov2.c:11:74> #-} let strong ((a_936: loaded pointer,
          (a_937: ctype, a_938: [ctype], a_939: boolean, a_940: boolean)),
          a_942: loaded pointer) =
            {-# ยง6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_935: loaded pointer =
                {-# <prov2.c:11:60, prov2.c:11:64> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_935, cfunction(a_935)))
            ,
              {-# ยง6.5.4 #-}
              {-# <prov2.c:11:65, prov2.c:11:73> prov2.c:11:65 #-} let weak a_945: pointer =
                {-# <prov2.c:11:72, prov2.c:11:73> #-} pure(p) in
              load('signed int*', a_945)
            ) in
          if not(params_length(a_938) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_939 \/ not(are_compatible ('const char*', a_937)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_941: pointer =
                let a_947: ctype = params_nth(a_938, 0) in
                if not(are_compatible ('void*', a_947)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# ยง6.5.2.2#7, sentence 1 #-}
                  let weak a_948: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_948, a_942) in
                  pure(a_948) in
              let strong a_949: loaded pointer =
                ccall('const char* (*) (void*)', a_936, a_941) in
              kill('void*', a_941) ;
              pure(a_949)
        ,
          {-# ยง6.5.2.2#10, sentence 1 #-}
          {-# <prov2.c:11:76, prov2.c:11:90> #-} let strong ((a_952: loaded pointer,
          (a_953: ctype, a_954: [ctype], a_955: boolean, a_956: boolean)),
          a_958: loaded pointer) =
            {-# ยง6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_951: loaded pointer =
                {-# <prov2.c:11:76, prov2.c:11:80> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_951, cfunction(a_951)))
            ,
              {-# ยง6.5.4 #-}
              {-# <prov2.c:11:81, prov2.c:11:89> prov2.c:11:81 #-} let weak a_961: pointer =
                {-# <prov2.c:11:88, prov2.c:11:89> #-} pure(q) in
              load('signed int*', a_961)
            ) in
          if not(params_length(a_954) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_955 \/ not(are_compatible ('const char*', a_953)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_957: pointer =
                let a_963: ctype = params_nth(a_954, 0) in
                if not(are_compatible ('void*', a_963)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# ยง6.5.2.2#7, sentence 1 #-}
                  let weak a_964: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_964, a_958) in
                  pure(a_964) in
              let strong a_965: loaded pointer =
                ccall('const char* (*) (void*)', a_952, a_957) in
              kill('void*', a_957) ;
              pure(a_965)
        ) in
      if not(params_length(a_921) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_922) \/ not(are_compatible ('signed int', a_920)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_927: pointer =
            let a_966: ctype = params_nth(a_921, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_966)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# ยง6.5.2.2#7, sentence 1 #-}
              let weak a_967: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_967, a_928) in
              pure(a_967) in
          let strong a_926: pointer =
            let a_968: ctype = params_nth(a_921, 1) in
            if not(are_compatible ('const char*', a_968)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# ยง6.5.2.2#7, sentence 1 #-}
              let weak a_969: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_969, a_930) in
              pure(a_969) in
          let strong a_925: pointer =
            {-# ยง6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_934) in
          let strong a_924: pointer =
            {-# ยง6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_950) in
          let strong a_970: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_919, a_927, a_926,
            [('const char*', a_925), ('const char*', a_924)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_927)
            ,
              kill('char*', a_926)
            ,
              kill('char*', a_925)
            ,
              kill('char*', a_924)
            ) in
          pure(a_970)
    ) in
  pure(Unit) ;
  {-# <prov2.c:12:4, prov2.c:16:49> #-} let strong a_971: loaded integer =
    {-# ยง6.5#2 #-}
    bound(
      {-# <prov2.c:12:7, prov2.c:12:37> prov2.c:12:33 #-} let weak (a_973: loaded integer,
      a_974: loaded integer) =
        unseq(
          {-# <prov2.c:12:7, prov2.c:12:37> prov2.c:12:33 #-} let weak (a_978: loaded integer,
          a_979: loaded integer) =
            unseq(
              {-# ยง6.5.2.2#10, sentence 1 #-}
              {-# <prov2.c:12:7, prov2.c:12:32> #-} let strong ((a_984: loaded pointer,
              (a_985: ctype, a_986: [ctype], a_987: boolean, a_988: boolean)),
              a_992: loaded pointer, a_994: loaded pointer,
              a_996: loaded integer) =
                {-# ยง6.5.2.2#4, sentence 2 #-}
                unseq(
                  let strong a_983: loaded pointer =
                    {-# <prov2.c:12:7, prov2.c:12:13> #-} pure(
                      Specified(Cfunction(memcmp_proxy))
                    ) in
                  pure((a_983, cfunction(a_983)))
                ,
                  {-# ยง6.5.3.2#3, sentence 5 #-}
                  {-# <prov2.c:12:14, prov2.c:12:16> prov2.c:12:14 #-} let weak a_993: pointer =
                    {-# <prov2.c:12:15, prov2.c:12:16> #-} pure(p) in
                  pure(Specified(a_993))
                ,
                  {-# ยง6.5.3.2#3, sentence 5 #-}
                  {-# <prov2.c:12:18, prov2.c:12:20> prov2.c:12:18 #-} let weak a_995: pointer =
                    {-# <prov2.c:12:19, prov2.c:12:20> #-} pure(q) in
                  pure(Specified(a_995))
                ,
                  {-# <prov2.c:12:22, prov2.c:12:31> prov2.c:12:22 #-} pure(
                    Specified(Ivsizeof('signed int*'))
                  )
                ) in
              if not(params_length(a_986) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_987 \/ not(are_compatible ('signed int', a_985)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_991: pointer =
                    let a_997: ctype = params_nth(a_986, 0) in
                    if not(are_compatible ('const void*', a_997)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {-# ยง6.5.2.2#7, sentence 1 #-}
                      let weak a_998: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit =
                        store('const void*', a_998, a_992) in
                      pure(a_998) in
                  let strong a_990: pointer =
                    let a_999: ctype = params_nth(a_986, 1) in
                    if not(are_compatible ('const void*', a_999)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {-# ยง6.5.2.2#7, sentence 1 #-}
                      let weak a_1000: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit =
                        store('const void*', a_1000, a_994) in
                      pure(a_1000) in
                  let strong a_989: pointer =
                    let a_1001: ctype = params_nth(a_986, 2) in
                    if not(are_compatible ('size_t', a_1001)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {-# ยง6.5.2.2#7, sentence 1 #-}
                      let weak a_1002: pointer =
                        create(Ivalignof('size_t'), 'size_t') in
                      let weak _: unit =
                        store('size_t', a_1002,
                        conv_loaded_int('size_t', a_996)) in
                      pure(a_1002) in
                  let strong a_1003: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_984, a_991, a_990, a_989) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_991)
                    ,
                      kill('void*', a_990)
                    ,
                      kill('size_t', a_989)
                    ) in
                  pure(a_1003)
            ,
              {-# <prov2.c:12:36, prov2.c:12:37> #-} pure(Specified(0))
            ) in
          pure(
            case (a_978, a_979) of
              | (Specified(a_980: integer), Specified(a_981: integer)) =>
                  if conv_int('signed int', a_980) =
                  conv_int('signed int', a_981) then
                    Specified(1)
                  else
                    Specified(0)
              | _: (loaded integer,loaded integer) =>
                  Unspecified('signed int')
            end
          )
        ,
          {-# <prov2.c:12:7, prov2.c:12:37> prov2.c:12:33 #-} pure(
            Specified(0)
          )
        ) in
      pure(
        case (a_973, a_974) of
          | (Specified(a_975: integer), Specified(a_976: integer)) =>
              if conv_int('signed int', a_975) =
              conv_int('signed int', a_976) then
                Specified(1)
              else
                Specified(0)
          | _: (loaded integer,loaded integer) =>
              Unspecified('signed int')
        end
      )
    ) in
  let strong a_908: boolean =
    case a_971 of
      | Specified(a_972: integer) =>
          pure(if not(a_972 = 1) then True else False)
      | Unspecified(_: ctype) =>
          nd(pure(True), pure(False))
    end in
  if a_908 then
    {-# <prov2.c:12:39, prov2.c:15:5> #-} {-# <prov2.c:13:8, prov2.c:13:16> #-} let strong _: loaded integer =
      {-# ยง6.5#2 #-}
      bound(
        {-# ยง6.5.16#3, sentence 4 #-}
        {-# <prov2.c:13:8, prov2.c:13:15> prov2.c:13:11 #-} let weak (a_1004: pointer,
        a_1009: loaded integer) =
          {-# ยง6.5.16#3, sentence 5 #-}
          unseq(
            {-# ยง6.5.3.2 #-}
            {-# <prov2.c:13:8, prov2.c:13:10> prov2.c:13:8 #-} let weak a_1005: loaded pointer =
              {-# <prov2.c:13:9, prov2.c:13:10> #-} let weak a_1008: pointer =
                {-# <prov2.c:13:9, prov2.c:13:10> #-} pure(p) in
              load('signed int*', a_1008) in
            case a_1005 of
              | Specified(a_1006: pointer) =>
                  let weak a_1007: boolean =
                    memop(PtrValidForDeref, 'signed int', a_1006) in
                  pure(
                    if a_1007 then
                      a_1006
                    else
                      undef(<<UB043_indirection_invalid_value>>)
                  )
              | Unspecified(_: ctype) =>
                  pure(undef(<<UB043_indirection_invalid_value>>))
            end
          ,
            {-# <prov2.c:13:13, prov2.c:13:15> #-} pure(Specified(11))
          ) in
        let weak _: unit =
          {-# ยง6.5.16.1#2, store #-}
          neg(store('signed int', a_1004,
          conv_loaded_int('signed int', a_1009))) in
        pure(conv_loaded_int('signed int', a_1009))
      ) in
    pure(Unit) ;
    {-# <prov2.c:14:8, prov2.c:14:62> #-} let strong _: loaded integer =
      {-# ยง6.5#2 #-}
      bound(
        {-# ยง6.5.2.2#10, sentence 1 #-}
        {-# <prov2.c:14:8, prov2.c:14:61> #-} let strong ((a_1011: loaded pointer,
        (a_1012: ctype, a_1013: [ctype], a_1014: boolean, a_1015: boolean)),
        a_1022: loaded pointer, a_1024: loaded pointer,
        a_1028: loaded integer, a_1030: loaded integer,
        a_1032: loaded integer, a_1038: loaded integer) =
          {-# ยง6.5.2.2#4, sentence 2 #-}
          unseq(
            let strong a_1010: loaded pointer =
              {-# <prov2.c:14:8, prov2.c:14:15> #-} pure(
                Specified(Cfunction(fprintf))
              ) in
            pure((a_1010, cfunction(a_1010)))
          ,
            {-# <prov2.c:14:16, prov2.c:14:24> #-} let weak a_1023: pointer =
              {-# <prov2.c:14:16, prov2.c:14:24> #-} pure(__stderr) in
            load('struct _IO_FILE*', a_1023)
          ,
            {-# <prov2.c:14:25, prov2.c:14:50> #-} let weak a_1026: pointer =
              {-# <prov2.c:14:25, prov2.c:14:50> #-} pure(a_1025) in
            {-# ยง6.3.2.1#3 #-}
            let weak a_1027: pointer =
              memop(PtrArrayShift, a_1026, 'char', 0) in
            pure(Specified(a_1027))
          ,
            {-# <prov2.c:14:51, prov2.c:14:52> #-} let weak a_1029: pointer =
              {-# <prov2.c:14:51, prov2.c:14:52> #-} pure(x) in
            load('signed int', a_1029)
          ,
            {-# <prov2.c:14:53, prov2.c:14:54> #-} let weak a_1031: pointer =
              {-# <prov2.c:14:53, prov2.c:14:54> #-} pure(y) in
            load('signed int', a_1031)
          ,
            {-# <prov2.c:14:55, prov2.c:14:57> prov2.c:14:55 #-} let weak a_1037: pointer =
              {-# ยง6.5.3.2 #-}
              {-# <prov2.c:14:55, prov2.c:14:57> prov2.c:14:55 #-} let weak a_1033: loaded pointer =
                {-# <prov2.c:14:56, prov2.c:14:57> #-} let weak a_1036: pointer =
                  {-# <prov2.c:14:56, prov2.c:14:57> #-} pure(p) in
                load('signed int*', a_1036) in
              case a_1033 of
                | Specified(a_1034: pointer) =>
                    let weak a_1035: boolean =
                      memop(PtrValidForDeref, 'signed int', a_1034) in
                    pure(
                      if a_1035 then
                        a_1034
                      else
                        undef(<<UB043_indirection_invalid_value>>)
                    )
                | Unspecified(_: ctype) =>
                    pure(undef(<<UB043_indirection_invalid_value>>))
              end in
            load('signed int', a_1037)
          ,
            {-# <prov2.c:14:58, prov2.c:14:60> prov2.c:14:58 #-} let weak a_1043: pointer =
              {-# ยง6.5.3.2 #-}
              {-# <prov2.c:14:58, prov2.c:14:60> prov2.c:14:58 #-} let weak a_1039: loaded pointer =
                {-# <prov2.c:14:59, prov2.c:14:60> #-} let weak a_1042: pointer =
                  {-# <prov2.c:14:59, prov2.c:14:60> #-} pure(q) in
                load('signed int*', a_1042) in
              case a_1039 of
                | Specified(a_1040: pointer) =>
                    let weak a_1041: boolean =
                      memop(PtrValidForDeref, 'signed int', a_1040) in
                    pure(
                      if a_1041 then
                        a_1040
                      else
                        undef(<<UB043_indirection_invalid_value>>)
                    )
                | Unspecified(_: ctype) =>
                    pure(undef(<<UB043_indirection_invalid_value>>))
              end in
            load('signed int', a_1043)
          ) in
        if not(params_length(a_1013) <= 6) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_1014) \/ not(are_compatible ('signed int', a_1012)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_1021: pointer =
              let a_1044: ctype = params_nth(a_1013, 0) in
              if not(are_compatible ('struct _IO_FILE*', a_1044)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# ยง6.5.2.2#7, sentence 1 #-}
                let weak a_1045: pointer =
                  create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                let weak _: unit =
                  store('struct _IO_FILE*', a_1045, a_1022) in
                pure(a_1045) in
            let strong a_1020: pointer =
              let a_1046: ctype = params_nth(a_1013, 1) in
              if not(are_compatible ('const char*', a_1046)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# ยง6.5.2.2#7, sentence 1 #-}
                let weak a_1047: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_1047, a_1024) in
                pure(a_1047) in
            let strong a_1019: pointer =
              {-# ยง6.5.2.2#7, sentences 2 and 3 #-}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1028)) in
            let strong a_1018: pointer =
              {-# ยง6.5.2.2#7, sentences 2 and 3 #-}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1030)) in
            let strong a_1017: pointer =
              {-# ยง6.5.2.2#7, sentences 2 and 3 #-}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1032)) in
            let strong a_1016: pointer =
              {-# ยง6.5.2.2#7, sentences 2 and 3 #-}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1038)) in
            let strong a_1048: loaded integer =
              ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
              a_1011, a_1021, a_1020,
              [('signed int', a_1019), ('signed int', a_1018),
              ('signed int', a_1017), ('signed int', a_1016)]) in
            let strong _: (unit,unit,unit,unit,unit,unit) =
              unseq(
                kill('struct _IO_FILE*', a_1021)
              ,
                kill('char*', a_1020)
              ,
                kill('signed int', a_1019)
              ,
                kill('signed int', a_1018)
              ,
                kill('signed int', a_1017)
              ,
                kill('signed int', a_1016)
              ) in
            pure(a_1048)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    {-# <prov2.c:16:8, prov2.c:16:49> #-} let strong _: loaded integer =
      {-# ยง6.5#2 #-}
      bound(
        {-# ยง6.5.2.2#10, sentence 1 #-}
        {-# <prov2.c:16:8, prov2.c:16:48> #-} let strong ((a_1050: loaded pointer,
        (a_1051: ctype, a_1052: [ctype], a_1053: boolean, a_1054: boolean)),
        a_1057: loaded pointer, a_1059: loaded pointer) =
          {-# ยง6.5.2.2#4, sentence 2 #-}
          unseq(
            let strong a_1049: loaded pointer =
              {-# <prov2.c:16:8, prov2.c:16:15> #-} pure(
                Specified(Cfunction(fprintf))
              ) in
            pure((a_1049, cfunction(a_1049)))
          ,
            {-# <prov2.c:16:16, prov2.c:16:24> #-} let weak a_1058: pointer =
              {-# <prov2.c:16:16, prov2.c:16:24> #-} pure(__stderr) in
            load('struct _IO_FILE*', a_1058)
          ,
            {-# <prov2.c:16:25, prov2.c:16:47> #-} let weak a_1061: pointer =
              {-# <prov2.c:16:25, prov2.c:16:47> #-} pure(a_1060) in
            {-# ยง6.3.2.1#3 #-}
            let weak a_1062: pointer =
              memop(PtrArrayShift, a_1061, 'char', 0) in
            pure(Specified(a_1062))
          ) in
        if not(params_length(a_1052) <= 2) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_1053) \/ not(are_compatible ('signed int', a_1051)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_1056: pointer =
              let a_1063: ctype = params_nth(a_1052, 0) in
              if not(are_compatible ('struct _IO_FILE*', a_1063)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# ยง6.5.2.2#7, sentence 1 #-}
                let weak a_1064: pointer =
                  create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                let weak _: unit =
                  store('struct _IO_FILE*', a_1064, a_1057) in
                pure(a_1064) in
            let strong a_1055: pointer =
              let a_1065: ctype = params_nth(a_1052, 1) in
              if not(are_compatible ('const char*', a_1065)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# ยง6.5.2.2#7, sentence 1 #-}
                let weak a_1066: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_1066, a_1059) in
                pure(a_1066) in
            let strong a_1067: loaded integer =
              ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
              a_1050, a_1056, a_1055, []: (ctype,pointer)) in
            let strong _: (unit,unit) =
              unseq(kill('struct _IO_FILE*', a_1056), kill('char*', a_1055)) in
            pure(a_1067)
      ) in
    pure(Unit) ;
  {-# <prov2.c:18:4, prov2.c:22:37> #-} let strong a_1068: loaded integer =
    {-# ยง6.5#2 #-}
    bound(
      {-# <prov2.c:18:7, prov2.c:18:13> prov2.c:18:9 #-} let weak (a_1070: loaded integer,
      a_1071: loaded integer) =
        unseq(
          {-# <prov2.c:18:7, prov2.c:18:13> prov2.c:18:9 #-} let weak (a_1075: loaded pointer,
          a_1076: loaded pointer) =
            unseq(
              {-# <prov2.c:18:7, prov2.c:18:8> #-} let weak a_1080: pointer =
                {-# <prov2.c:18:7, prov2.c:18:8> #-} pure(p) in
              load('signed int*', a_1080)
            ,
              {-# <prov2.c:18:12, prov2.c:18:13> #-} let weak a_1081: pointer =
                {-# <prov2.c:18:12, prov2.c:18:13> #-} pure(q) in
              load('signed int*', a_1081)
            ) in
          case (a_1075, a_1076) of
            | (Specified(a_1077: pointer), Specified(a_1078: pointer)) =>
                let weak a_1079: boolean = memop(PtrEq, a_1077, a_1078) in
                pure(if a_1079 then Specified(1) else Specified(0))
            | _: (loaded pointer,loaded pointer) =>
                pure(
                  undef(<<UB_CERB004_unspecified__equality_both_arith_or_ptr>>)
                )
          end
        ,
          {-# <prov2.c:18:7, prov2.c:18:13> prov2.c:18:9 #-} pure(
            Specified(0)
          )
        ) in
      pure(
        case (a_1070, a_1071) of
          | (Specified(a_1072: integer), Specified(a_1073: integer)) =>
              if conv_int('signed int', a_1072) =
              conv_int('signed int', a_1073) then
                Specified(1)
              else
                Specified(0)
          | _: (loaded integer,loaded integer) =>
              Unspecified('signed int')
        end
      )
    ) in
  let strong a_907: boolean =
    case a_1068 of
      | Specified(a_1069: integer) =>
          pure(if not(a_1069 = 1) then True else False)
      | Unspecified(_: ctype) =>
          nd(pure(True), pure(False))
    end in
  if a_907 then
    {-# <prov2.c:18:15, prov2.c:21:5> #-} {-# <prov2.c:19:8, prov2.c:19:16> #-} let strong _: loaded integer =
      {-# ยง6.5#2 #-}
      bound(
        {-# ยง6.5.16#3, sentence 4 #-}
        {-# <prov2.c:19:8, prov2.c:19:15> prov2.c:19:11 #-} let weak (a_1082: pointer,
        a_1087: loaded integer) =
          {-# ยง6.5.16#3, sentence 5 #-}
          unseq(
            {-# ยง6.5.3.2 #-}
            {-# <prov2.c:19:8, prov2.c:19:10> prov2.c:19:8 #-} let weak a_1083: loaded pointer =
              {-# <prov2.c:19:9, prov2.c:19:10> #-} let weak a_1086: pointer =
                {-# <prov2.c:19:9, prov2.c:19:10> #-} pure(p) in
              load('signed int*', a_1086) in
            case a_1083 of
              | Specified(a_1084: pointer) =>
                  let weak a_1085: boolean =
                    memop(PtrValidForDeref, 'signed int', a_1084) in
                  pure(
                    if a_1085 then
                      a_1084
                    else
                      undef(<<UB043_indirection_invalid_value>>)
                  )
              | Unspecified(_: ctype) =>
                  pure(undef(<<UB043_indirection_invalid_value>>))
            end
          ,
            {-# <prov2.c:19:13, prov2.c:19:15> #-} pure(Specified(11))
          ) in
        let weak _: unit =
          {-# ยง6.5.16.1#2, store #-}
          neg(store('signed int', a_1082,
          conv_loaded_int('signed int', a_1087))) in
        pure(conv_loaded_int('signed int', a_1087))
      ) in
    pure(Unit) ;
    {-# <prov2.c:20:8, prov2.c:20:62> #-} let strong _: loaded integer =
      {-# ยง6.5#2 #-}
      bound(
        {-# ยง6.5.2.2#10, sentence 1 #-}
        {-# <prov2.c:20:8, prov2.c:20:61> #-} let strong ((a_1089: loaded pointer,
        (a_1090: ctype, a_1091: [ctype], a_1092: boolean, a_1093: boolean)),
        a_1100: loaded pointer, a_1102: loaded pointer,
        a_1106: loaded integer, a_1108: loaded integer,
        a_1110: loaded integer, a_1116: loaded integer) =
          {-# ยง6.5.2.2#4, sentence 2 #-}
          unseq(
            let strong a_1088: loaded pointer =
              {-# <prov2.c:20:8, prov2.c:20:15> #-} pure(
                Specified(Cfunction(fprintf))
              ) in
            pure((a_1088, cfunction(a_1088)))
          ,
            {-# <prov2.c:20:16, prov2.c:20:24> #-} let weak a_1101: pointer =
              {-# <prov2.c:20:16, prov2.c:20:24> #-} pure(__stderr) in
            load('struct _IO_FILE*', a_1101)
          ,
            {-# <prov2.c:20:25, prov2.c:20:50> #-} let weak a_1104: pointer =
              {-# <prov2.c:20:25, prov2.c:20:50> #-} pure(a_1103) in
            {-# ยง6.3.2.1#3 #-}
            let weak a_1105: pointer =
              memop(PtrArrayShift, a_1104, 'char', 0) in
            pure(Specified(a_1105))
          ,
            {-# <prov2.c:20:51, prov2.c:20:52> #-} let weak a_1107: pointer =
              {-# <prov2.c:20:51, prov2.c:20:52> #-} pure(x) in
            load('signed int', a_1107)
          ,
            {-# <prov2.c:20:53, prov2.c:20:54> #-} let weak a_1109: pointer =
              {-# <prov2.c:20:53, prov2.c:20:54> #-} pure(y) in
            load('signed int', a_1109)
          ,
            {-# <prov2.c:20:55, prov2.c:20:57> prov2.c:20:55 #-} let weak a_1115: pointer =
              {-# ยง6.5.3.2 #-}
              {-# <prov2.c:20:55, prov2.c:20:57> prov2.c:20:55 #-} let weak a_1111: loaded pointer =
                {-# <prov2.c:20:56, prov2.c:20:57> #-} let weak a_1114: pointer =
                  {-# <prov2.c:20:56, prov2.c:20:57> #-} pure(p) in
                load('signed int*', a_1114) in
              case a_1111 of
                | Specified(a_1112: pointer) =>
                    let weak a_1113: boolean =
                      memop(PtrValidForDeref, 'signed int', a_1112) in
                    pure(
                      if a_1113 then
                        a_1112
                      else
                        undef(<<UB043_indirection_invalid_value>>)
                    )
                | Unspecified(_: ctype) =>
                    pure(undef(<<UB043_indirection_invalid_value>>))
              end in
            load('signed int', a_1115)
          ,
            {-# <prov2.c:20:58, prov2.c:20:60> prov2.c:20:58 #-} let weak a_1121: pointer =
              {-# ยง6.5.3.2 #-}
              {-# <prov2.c:20:58, prov2.c:20:60> prov2.c:20:58 #-} let weak a_1117: loaded pointer =
                {-# <prov2.c:20:59, prov2.c:20:60> #-} let weak a_1120: pointer =
                  {-# <prov2.c:20:59, prov2.c:20:60> #-} pure(q) in
                load('signed int*', a_1120) in
              case a_1117 of
                | Specified(a_1118: pointer) =>
                    let weak a_1119: boolean =
                      memop(PtrValidForDeref, 'signed int', a_1118) in
                    pure(
                      if a_1119 then
                        a_1118
                      else
                        undef(<<UB043_indirection_invalid_value>>)
                    )
                | Unspecified(_: ctype) =>
                    pure(undef(<<UB043_indirection_invalid_value>>))
              end in
            load('signed int', a_1121)
          ) in
        if not(params_length(a_1091) <= 6) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_1092) \/ not(are_compatible ('signed int', a_1090)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_1099: pointer =
              let a_1122: ctype = params_nth(a_1091, 0) in
              if not(are_compatible ('struct _IO_FILE*', a_1122)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# ยง6.5.2.2#7, sentence 1 #-}
                let weak a_1123: pointer =
                  create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                let weak _: unit =
                  store('struct _IO_FILE*', a_1123, a_1100) in
                pure(a_1123) in
            let strong a_1098: pointer =
              let a_1124: ctype = params_nth(a_1091, 1) in
              if not(are_compatible ('const char*', a_1124)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# ยง6.5.2.2#7, sentence 1 #-}
                let weak a_1125: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_1125, a_1102) in
                pure(a_1125) in
            let strong a_1097: pointer =
              {-# ยง6.5.2.2#7, sentences 2 and 3 #-}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1106)) in
            let strong a_1096: pointer =
              {-# ยง6.5.2.2#7, sentences 2 and 3 #-}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1108)) in
            let strong a_1095: pointer =
              {-# ยง6.5.2.2#7, sentences 2 and 3 #-}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1110)) in
            let strong a_1094: pointer =
              {-# ยง6.5.2.2#7, sentences 2 and 3 #-}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1116)) in
            let strong a_1126: loaded integer =
              ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
              a_1089, a_1099, a_1098,
              [('signed int', a_1097), ('signed int', a_1096),
              ('signed int', a_1095), ('signed int', a_1094)]) in
            let strong _: (unit,unit,unit,unit,unit,unit) =
              unseq(
                kill('struct _IO_FILE*', a_1099)
              ,
                kill('char*', a_1098)
              ,
                kill('signed int', a_1097)
              ,
                kill('signed int', a_1096)
              ,
                kill('signed int', a_1095)
              ,
                kill('signed int', a_1094)
              ) in
            pure(a_1126)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    {-# <prov2.c:22:8, prov2.c:22:37> #-} let strong _: loaded integer =
      {-# ยง6.5#2 #-}
      bound(
        {-# ยง6.5.2.2#10, sentence 1 #-}
        {-# <prov2.c:22:8, prov2.c:22:36> #-} let strong ((a_1128: loaded pointer,
        (a_1129: ctype, a_1130: [ctype], a_1131: boolean, a_1132: boolean)),
        a_1135: loaded pointer, a_1137: loaded pointer) =
          {-# ยง6.5.2.2#4, sentence 2 #-}
          unseq(
            let strong a_1127: loaded pointer =
              {-# <prov2.c:22:8, prov2.c:22:15> #-} pure(
                Specified(Cfunction(fprintf))
              ) in
            pure((a_1127, cfunction(a_1127)))
          ,
            {-# <prov2.c:22:16, prov2.c:22:24> #-} let weak a_1136: pointer =
              {-# <prov2.c:22:16, prov2.c:22:24> #-} pure(__stderr) in
            load('struct _IO_FILE*', a_1136)
          ,
            {-# <prov2.c:22:25, prov2.c:22:35> #-} let weak a_1139: pointer =
              {-# <prov2.c:22:25, prov2.c:22:35> #-} pure(a_1138) in
            {-# ยง6.3.2.1#3 #-}
            let weak a_1140: pointer =
              memop(PtrArrayShift, a_1139, 'char', 0) in
            pure(Specified(a_1140))
          ) in
        if not(params_length(a_1130) <= 2) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_1131) \/ not(are_compatible ('signed int', a_1129)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_1134: pointer =
              let a_1141: ctype = params_nth(a_1130, 0) in
              if not(are_compatible ('struct _IO_FILE*', a_1141)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# ยง6.5.2.2#7, sentence 1 #-}
                let weak a_1142: pointer =
                  create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                let weak _: unit =
                  store('struct _IO_FILE*', a_1142, a_1135) in
                pure(a_1142) in
            let strong a_1133: pointer =
              let a_1143: ctype = params_nth(a_1130, 1) in
              if not(are_compatible ('const char*', a_1143)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# ยง6.5.2.2#7, sentence 1 #-}
                let weak a_1144: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_1144, a_1137) in
                pure(a_1144) in
            let strong a_1145: loaded integer =
              ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
              a_1128, a_1134, a_1133, []: (ctype,pointer)) in
            let strong _: (unit,unit) =
              unseq(kill('struct _IO_FILE*', a_1134), kill('char*', a_1133)) in
            pure(a_1145)
      ) in
    pure(Unit) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  {-# <prov2.c:7:0, prov2.c:23:1> prov2.c:7:4 - prov2.c:7:8 #-} save ret_906: loaded integer (a_1146: loaded integer:= Specified(0)) in
    pure(a_1146)

