-- Aggregates










-- Globals
glob a_925: pointer [ail_ctype = 'char[14]'] :=
  let strong a_1417: pointer = create(Ivalignof('char[14]'), 'char[14]') in
  store_lock('char[14]', a_1417,
  Specified(Array(Specified(conv_int('char', 79)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 103)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 58)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1418: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1417,
    18446744073701163007) in
  case a_1418 of
    | Specified(a_1417: pointer) =>
        pure(a_1417)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_978: pointer [ail_ctype = 'char[9]'] :=
  let strong a_1419: pointer = create(Ivalignof('char[9]'), 'char[9]') in
  store_lock('char[9]', a_1419,
  Specified(Array(Specified(conv_int('char', 79)),
  Specified(conv_int('char', 79)), Specified(conv_int('char', 66)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1420: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1419,
    18446744073701163007) in
  case a_1420 of
    | Specified(a_1419: pointer) =>
        pure(a_1419)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1026: pointer [ail_ctype = 'char[15]'] :=
  let strong a_1421: pointer = create(Ivalignof('char[15]'), 'char[15]') in
  store_lock('char[15]', a_1421,
  Specified(Array(Specified(conv_int('char', 82)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 118)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1422: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1421,
    18446744073701163007) in
  case a_1422 of
    | Specified(a_1421: pointer) =>
        pure(a_1421)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1062: pointer [ail_ctype = 'char[11]'] :=
  let strong a_1423: pointer = create(Ivalignof('char[11]'), 'char[11]') in
  store_lock('char[11]', a_1423,
  Specified(Array(Specified(conv_int('char', 86)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1424: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1423,
    18446744073701163007) in
  case a_1424 of
    | Specified(a_1423: pointer) =>
        pure(a_1423)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1091: pointer [ail_ctype = 'char[5]'] :=
  let strong a_1425: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_1425,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0)))) ;
  let strong a_1426: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1425,
    18446744073701163007) in
  case a_1426 of
    | Specified(a_1425: pointer) =>
        pure(a_1425)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1095: pointer [ail_ctype = 'char[9]'] :=
  let strong a_1427: pointer = create(Ivalignof('char[9]'), 'char[9]') in
  store_lock('char[9]', a_1427,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0)))) ;
  let strong a_1428: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1427,
    18446744073701163007) in
  case a_1428 of
    | Specified(a_1427: pointer) =>
        pure(a_1427)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1119: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1429: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1429,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(0)))) ;
  let strong a_1430: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1429,
    18446744073701163007) in
  case a_1430 of
    | Specified(a_1429: pointer) =>
        pure(a_1429)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1160: pointer [ail_ctype = 'char[5]'] :=
  let strong a_1431: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_1431,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 48)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 120)), Specified(0)))) ;
  let strong a_1432: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1431,
    18446744073701163007) in
  case a_1432 of
    | Specified(a_1431: pointer) =>
        pure(a_1431)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1208: pointer [ail_ctype = 'char[2]'] :=
  let strong a_1433: pointer = create(Ivalignof('char[2]'), 'char[2]') in
  store_lock('char[2]', a_1433,
  Specified(Array(Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1434: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1433,
    18446744073701163007) in
  case a_1434 of
    | Specified(a_1433: pointer) =>
        pure(a_1433)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1281: pointer [ail_ctype = 'char[26]'] :=
  let strong a_1435: pointer = create(Ivalignof('char[26]'), 'char[26]') in
  store_lock('char[26]', a_1435,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 96)),
  Specified(0)))) ;
  let strong a_1436: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1435,
    18446744073701163007) in
  case a_1436 of
    | Specified(a_1435: pointer) =>
        pure(a_1435)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1297: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1437: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1437,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 112)),
  Specified(0)))) ;
  let strong a_1438: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1437,
    18446744073701163007) in
  case a_1438 of
    | Specified(a_1437: pointer) =>
        pure(a_1437)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1337: pointer [ail_ctype = 'char[31]'] :=
  let strong a_1439: pointer = create(Ivalignof('char[31]'), 'char[31]') in
  store_lock('char[31]', a_1439,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 96)), Specified(0)))) ;
  let strong a_1440: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1439,
    18446744073701163007) in
  case a_1440 of
    | Specified(a_1439: pointer) =>
        pure(a_1439)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1352: pointer [ail_ctype = 'char[27]'] :=
  let strong a_1441: pointer = create(Ivalignof('char[27]'), 'char[27]') in
  store_lock('char[27]', a_1441,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 91)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 80)), Specified(conv_int('char', 44)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 35)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 98)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 93)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 63)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 65)), Specified(0)))) ;
  let strong a_1442: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1441,
    18446744073701163007) in
  case a_1442 of
    | Specified(a_1441: pointer) =>
        pure(a_1441)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1392: pointer [ail_ctype = 'char[15]'] :=
  let strong a_1443: pointer = create(Ivalignof('char[15]'), 'char[15]') in
  store_lock('char[15]', a_1443,
  Specified(Array(Specified(conv_int('char', 115)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1444: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1443,
    18446744073701163007) in
  case a_1444 of
    | Specified(a_1443: pointer) =>
        pure(a_1443)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

-- Fun map
proc main (): eff loaded integer :=
  {-# <bounds2a.c:6:0, bounds2a.c:22:1> #-} let strong x: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong ip: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  {-# <bounds2a.c:7:4, bounds2a.c:7:13> #-} let strong a_910: loaded integer =
    {-# §6.5#2 #-}
    bound({-# <bounds2a.c:7:10, bounds2a.c:7:12> #-} pure(Specified(42))) in
  store('signed int', x, conv_loaded_int('signed int', a_910)) ;
  {-# <bounds2a.c:8:4, bounds2a.c:8:16> #-} let strong a_911: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.3.2#3, sentence 5 #-}
      {-# <bounds2a.c:8:13, bounds2a.c:8:15> bounds2a.c:8:13 #-} let weak a_912: pointer =
        {-# <bounds2a.c:8:14, bounds2a.c:8:15> #-} pure(x) in
      pure(Specified(a_912))
    ) in
  store('signed int*', p, a_911) ;
  {-# <bounds2a.c:10:4, bounds2a.c:10:61> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <bounds2a.c:10:4, bounds2a.c:10:60> #-} let strong ((a_914: loaded pointer,
      (a_915: ctype, a_916: [ctype], a_917: boolean, a_918: boolean)),
      a_922: loaded pointer, a_924: loaded pointer, a_928: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_913: loaded pointer =
            {-# <bounds2a.c:10:4, bounds2a.c:10:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_913, cfunction(a_913)))
        ,
          {-# <bounds2a.c:10:12, bounds2a.c:10:20> #-} let weak a_923: pointer =
            {-# <bounds2a.c:10:12, bounds2a.c:10:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_923)
        ,
          {-# <bounds2a.c:10:21, bounds2a.c:10:43> #-} let weak a_926: pointer =
            {-# <bounds2a.c:10:21, bounds2a.c:10:43> #-} pure(a_925) in
          {-# §6.3.2.1#3 #-}
          let weak a_927: pointer = memop(PtrArrayShift, a_926, 'char', 0) in
          pure(Specified(a_927))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <bounds2a.c:10:45, bounds2a.c:10:59> #-} let strong ((a_930: loaded pointer,
          (a_931: ctype, a_932: [ctype], a_933: boolean, a_934: boolean)),
          a_936: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_929: loaded pointer =
                {-# <bounds2a.c:10:45, bounds2a.c:10:49> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_929, cfunction(a_929)))
            ,
              {-# §6.5.4 #-}
              {-# <bounds2a.c:10:50, bounds2a.c:10:58> bounds2a.c:10:50 #-} let weak a_939: pointer =
                {-# <bounds2a.c:10:57, bounds2a.c:10:58> #-} pure(p) in
              load('signed int*', a_939)
            ) in
          if not(params_length(a_932) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_933 \/ not(are_compatible ('const char*', a_931)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_935: pointer =
                let a_941: ctype = params_nth(a_932, 0) in
                if not(are_compatible ('void*', a_941)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_942: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_942, a_936) in
                  pure(a_942) in
              let strong a_943: loaded pointer =
                ccall('const char* (*) (void*)', a_930, a_935) in
              kill('void*', a_935) ;
              pure(a_943)
        ) in
      if not(params_length(a_916) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_917) \/ not(are_compatible ('signed int', a_915)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_921: pointer =
            let a_944: ctype = params_nth(a_916, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_944)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_945: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_945, a_922) in
              pure(a_945) in
          let strong a_920: pointer =
            let a_946: ctype = params_nth(a_916, 1) in
            if not(are_compatible ('const char*', a_946)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_947: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_947, a_924) in
              pure(a_947) in
          let strong a_919: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_928) in
          let strong a_948: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_914, a_921, a_920, [('const char*', a_919)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_921)
            ,
              kill('char*', a_920)
            ,
              kill('char*', a_919)
            ) in
          pure(a_948)
    ) in
  pure(Unit) ;
  {-# <bounds2a.c:11:4, bounds2a.c:11:30> #-} let strong a_949: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.4 #-}
      {-# <bounds2a.c:11:18, bounds2a.c:11:29> bounds2a.c:11:18 #-} let weak a_950: loaded pointer =
        {-# <bounds2a.c:11:28, bounds2a.c:11:29> #-} let weak a_952: pointer =
          {-# <bounds2a.c:11:28, bounds2a.c:11:29> #-} pure(p) in
        load('signed int*', a_952) in
      case a_950 of
        | Specified(a_951: pointer) =>
            let weak a_953: integer =
              memop(IntFromPtr, 'signed int', 'intptr_t', a_951) in
            pure(Specified(a_953))
        | Unspecified(_: ctype) =>
            pure(Unspecified('intptr_t'))
      end
    ) in
  store('intptr_t', ip, conv_loaded_int('intptr_t', a_949)) ;
  {-# <bounds2a.c:13:4, bounds2a.c:13:14> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <bounds2a.c:13:4, bounds2a.c:13:13> bounds2a.c:13:6 #-} let weak (a_909: pointer,
      a_960: loaded integer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# <bounds2a.c:13:4, bounds2a.c:13:6> #-} pure(ip)
        ,
          {-# §6.5.6 #-}
          {-# <bounds2a.c:13:7, bounds2a.c:13:13> bounds2a.c:13:9 #-} let weak (a_954: loaded integer,
          a_955: loaded integer) =
            unseq(
              {-# <bounds2a.c:13:7, bounds2a.c:13:9> #-} let weak a_959: pointer =
                {-# <bounds2a.c:13:7, bounds2a.c:13:9> #-} pure(ip) in
              load('intptr_t', a_959)
            ,
              {-# <bounds2a.c:13:10, bounds2a.c:13:13> #-} pure(
                Specified(100)
              )
            ) in
          pure(
            case (a_954, a_955) of
              | (Specified(a_956: integer), Specified(a_957: integer)) =>
                  Specified(let a_958: integer =
                    memop(DeriveCap[TODO:binary], a_956, a_957) in
                  memop(CapAssignValue, a_958,
                  wrapI('intptr_t',
                  __conv_int__('intptr_t', a_956) +
                  __conv_int__('intptr_t', a_957))))
              | _: (loaded integer,loaded integer) =>
                  undef(<<UB036_exceptional_condition>>)
            end
          )
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('intptr_t', a_909, conv_loaded_int('intptr_t', a_960))) in
      pure(conv_loaded_int('intptr_t', a_960))
    ) in
  pure(Unit) ;
  {-# <bounds2a.c:14:4, bounds2a.c:14:17> #-} let strong _: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <bounds2a.c:14:4, bounds2a.c:14:16> bounds2a.c:14:6 #-} let weak (a_908: pointer,
      a_965: loaded pointer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# <bounds2a.c:14:4, bounds2a.c:14:5> #-} pure(p)
        ,
          {-# §6.5.4 #-}
          {-# <bounds2a.c:14:8, bounds2a.c:14:16> bounds2a.c:14:8 #-} let weak a_961: loaded integer =
            {-# <bounds2a.c:14:14, bounds2a.c:14:16> #-} let weak a_963: pointer =
              {-# <bounds2a.c:14:14, bounds2a.c:14:16> #-} pure(ip) in
            load('intptr_t', a_963) in
          case a_961 of
            | Specified(a_962: integer) =>
                let weak a_964: pointer =
                  memop(PtrFromInt, 'intptr_t', 'signed int', a_962) in
                pure(Specified(a_964))
            | Unspecified(_: ctype) =>
                pure(Unspecified('signed int*'))
          end
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('signed int*', a_908, a_965)) in
      pure(a_965)
    ) in
  pure(Unit) ;
  {-# <bounds2a.c:15:4, bounds2a.c:15:56> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <bounds2a.c:15:4, bounds2a.c:15:55> #-} let strong ((a_967: loaded pointer,
      (a_968: ctype, a_969: [ctype], a_970: boolean, a_971: boolean)),
      a_975: loaded pointer, a_977: loaded pointer, a_981: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_966: loaded pointer =
            {-# <bounds2a.c:15:4, bounds2a.c:15:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_966, cfunction(a_966)))
        ,
          {-# <bounds2a.c:15:12, bounds2a.c:15:20> #-} let weak a_976: pointer =
            {-# <bounds2a.c:15:12, bounds2a.c:15:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_976)
        ,
          {-# <bounds2a.c:15:21, bounds2a.c:15:38> #-} let weak a_979: pointer =
            {-# <bounds2a.c:15:21, bounds2a.c:15:38> #-} pure(a_978) in
          {-# §6.3.2.1#3 #-}
          let weak a_980: pointer = memop(PtrArrayShift, a_979, 'char', 0) in
          pure(Specified(a_980))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <bounds2a.c:15:40, bounds2a.c:15:54> #-} let strong ((a_983: loaded pointer,
          (a_984: ctype, a_985: [ctype], a_986: boolean, a_987: boolean)),
          a_989: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_982: loaded pointer =
                {-# <bounds2a.c:15:40, bounds2a.c:15:44> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_982, cfunction(a_982)))
            ,
              {-# §6.5.4 #-}
              {-# <bounds2a.c:15:45, bounds2a.c:15:53> bounds2a.c:15:45 #-} let weak a_992: pointer =
                {-# <bounds2a.c:15:52, bounds2a.c:15:53> #-} pure(p) in
              load('signed int*', a_992)
            ) in
          if not(params_length(a_985) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_986 \/ not(are_compatible ('const char*', a_984)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_988: pointer =
                let a_994: ctype = params_nth(a_985, 0) in
                if not(are_compatible ('void*', a_994)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_995: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_995, a_989) in
                  pure(a_995) in
              let strong a_996: loaded pointer =
                ccall('const char* (*) (void*)', a_983, a_988) in
              kill('void*', a_988) ;
              pure(a_996)
        ) in
      if not(params_length(a_969) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_970) \/ not(are_compatible ('signed int', a_968)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_974: pointer =
            let a_997: ctype = params_nth(a_969, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_997)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_998: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_998, a_975) in
              pure(a_998) in
          let strong a_973: pointer =
            let a_999: ctype = params_nth(a_969, 1) in
            if not(are_compatible ('const char*', a_999)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1000: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1000, a_977) in
              pure(a_1000) in
          let strong a_972: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_981) in
          let strong a_1001: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_967, a_974, a_973, [('const char*', a_972)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_974)
            ,
              kill('char*', a_973)
            ,
              kill('char*', a_972)
            ) in
          pure(a_1001)
    ) in
  pure(Unit) ;
  {-# <bounds2a.c:17:4, bounds2a.c:17:14> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <bounds2a.c:17:4, bounds2a.c:17:13> bounds2a.c:17:6 #-} let weak (a_907: pointer,
      a_1008: loaded integer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# <bounds2a.c:17:4, bounds2a.c:17:6> #-} pure(ip)
        ,
          {-# §6.5.6 #-}
          {-# <bounds2a.c:17:7, bounds2a.c:17:13> bounds2a.c:17:9 #-} let weak (a_1003: loaded integer,
          a_1004: loaded integer) =
            unseq(
              {-# <bounds2a.c:17:7, bounds2a.c:17:9> #-} let weak a_1002: pointer =
                {-# <bounds2a.c:17:7, bounds2a.c:17:9> #-} pure(ip) in
              load('intptr_t', a_1002)
            ,
              {-# <bounds2a.c:17:10, bounds2a.c:17:13> #-} pure(
                Specified(100)
              )
            ) in
          pure(
            case (a_1003, a_1004) of
              | (Specified(a_1005: integer), Specified(a_1006: integer)) =>
                  Specified(let a_1007: integer =
                    memop(DeriveCap[TODO:binary], a_1005, a_1006) in
                  memop(CapAssignValue, a_1007,
                  wrapI('intptr_t',
                  conv_int('intptr_t', a_1005) - conv_int('intptr_t', a_1006))))
              | _: (loaded integer,loaded integer) =>
                  undef(<<UB036_exceptional_condition>>)
            end
          )
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('intptr_t', a_907, conv_loaded_int('intptr_t', a_1008))) in
      pure(conv_loaded_int('intptr_t', a_1008))
    ) in
  pure(Unit) ;
  {-# <bounds2a.c:18:4, bounds2a.c:18:17> #-} let strong _: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <bounds2a.c:18:4, bounds2a.c:18:16> bounds2a.c:18:6 #-} let weak (a_906: pointer,
      a_1013: loaded pointer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# <bounds2a.c:18:4, bounds2a.c:18:5> #-} pure(p)
        ,
          {-# §6.5.4 #-}
          {-# <bounds2a.c:18:8, bounds2a.c:18:16> bounds2a.c:18:8 #-} let weak a_1009: loaded integer =
            {-# <bounds2a.c:18:14, bounds2a.c:18:16> #-} let weak a_1011: pointer =
              {-# <bounds2a.c:18:14, bounds2a.c:18:16> #-} pure(ip) in
            load('intptr_t', a_1011) in
          case a_1009 of
            | Specified(a_1010: integer) =>
                let weak a_1012: pointer =
                  memop(PtrFromInt, 'intptr_t', 'signed int', a_1010) in
                pure(Specified(a_1012))
            | Unspecified(_: ctype) =>
                pure(Unspecified('signed int*'))
          end
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('signed int*', a_906, a_1013)) in
      pure(a_1013)
    ) in
  pure(Unit) ;
  {-# <bounds2a.c:19:4, bounds2a.c:19:62> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <bounds2a.c:19:4, bounds2a.c:19:61> #-} let strong ((a_1015: loaded pointer,
      (a_1016: ctype, a_1017: [ctype], a_1018: boolean, a_1019: boolean)),
      a_1023: loaded pointer, a_1025: loaded pointer, a_1029: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_1014: loaded pointer =
            {-# <bounds2a.c:19:4, bounds2a.c:19:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_1014, cfunction(a_1014)))
        ,
          {-# <bounds2a.c:19:12, bounds2a.c:19:20> #-} let weak a_1024: pointer =
            {-# <bounds2a.c:19:12, bounds2a.c:19:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_1024)
        ,
          {-# <bounds2a.c:19:21, bounds2a.c:19:44> #-} let weak a_1027: pointer =
            {-# <bounds2a.c:19:21, bounds2a.c:19:44> #-} pure(a_1026) in
          {-# §6.3.2.1#3 #-}
          let weak a_1028: pointer =
            memop(PtrArrayShift, a_1027, 'char', 0) in
          pure(Specified(a_1028))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <bounds2a.c:19:46, bounds2a.c:19:60> #-} let strong ((a_1031: loaded pointer,
          (a_1032: ctype, a_1033: [ctype], a_1034: boolean, a_1035: boolean)),
          a_1037: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_1030: loaded pointer =
                {-# <bounds2a.c:19:46, bounds2a.c:19:50> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_1030, cfunction(a_1030)))
            ,
              {-# §6.5.4 #-}
              {-# <bounds2a.c:19:51, bounds2a.c:19:59> bounds2a.c:19:51 #-} let weak a_1040: pointer =
                {-# <bounds2a.c:19:58, bounds2a.c:19:59> #-} pure(p) in
              load('signed int*', a_1040)
            ) in
          if not(params_length(a_1033) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_1034 \/ not(are_compatible ('const char*', a_1032)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1036: pointer =
                let a_1042: ctype = params_nth(a_1033, 0) in
                if not(are_compatible ('void*', a_1042)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_1043: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_1043, a_1037) in
                  pure(a_1043) in
              let strong a_1044: loaded pointer =
                ccall('const char* (*) (void*)', a_1031, a_1036) in
              kill('void*', a_1036) ;
              pure(a_1044)
        ) in
      if not(params_length(a_1017) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1018) \/ not(are_compatible ('signed int', a_1016)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1022: pointer =
            let a_1045: ctype = params_nth(a_1017, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1045)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1046: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1046, a_1023) in
              pure(a_1046) in
          let strong a_1021: pointer =
            let a_1047: ctype = params_nth(a_1017, 1) in
            if not(are_compatible ('const char*', a_1047)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1048: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1048, a_1025) in
              pure(a_1048) in
          let strong a_1020: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_1029) in
          let strong a_1049: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1015, a_1022, a_1021, [('const char*', a_1020)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1022)
            ,
              kill('char*', a_1021)
            ,
              kill('char*', a_1020)
            ) in
          pure(a_1049)
    ) in
  pure(Unit) ;
  {-# <bounds2a.c:21:4, bounds2a.c:21:40> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <bounds2a.c:21:4, bounds2a.c:21:39> #-} let strong ((a_1051: loaded pointer,
      (a_1052: ctype, a_1053: [ctype], a_1054: boolean, a_1055: boolean)),
      a_1059: loaded pointer, a_1061: loaded pointer, a_1065: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_1050: loaded pointer =
            {-# <bounds2a.c:21:4, bounds2a.c:21:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_1050, cfunction(a_1050)))
        ,
          {-# <bounds2a.c:21:12, bounds2a.c:21:20> #-} let weak a_1060: pointer =
            {-# <bounds2a.c:21:12, bounds2a.c:21:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_1060)
        ,
          {-# <bounds2a.c:21:21, bounds2a.c:21:34> #-} let weak a_1063: pointer =
            {-# <bounds2a.c:21:21, bounds2a.c:21:34> #-} pure(a_1062) in
          {-# §6.3.2.1#3 #-}
          let weak a_1064: pointer =
            memop(PtrArrayShift, a_1063, 'char', 0) in
          pure(Specified(a_1064))
        ,
          {-# <bounds2a.c:21:36, bounds2a.c:21:38> bounds2a.c:21:36 #-} let weak a_1070: pointer =
            {-# §6.5.3.2 #-}
            {-# <bounds2a.c:21:36, bounds2a.c:21:38> bounds2a.c:21:36 #-} let weak a_1066: loaded pointer =
              {-# <bounds2a.c:21:37, bounds2a.c:21:38> #-} let weak a_1069: pointer =
                {-# <bounds2a.c:21:37, bounds2a.c:21:38> #-} pure(p) in
              load('signed int*', a_1069) in
            case a_1066 of
              | Specified(a_1067: pointer) =>
                  let weak a_1068: boolean =
                    memop(PtrValidForDeref, 'signed int', a_1067) in
                  pure(
                    if a_1068 then
                      a_1067
                    else
                      undef(<<UB043_indirection_invalid_value>>)
                  )
              | Unspecified(_: ctype) =>
                  pure(undef(<<UB043_indirection_invalid_value>>))
            end in
          load('signed int', a_1070)
        ) in
      if not(params_length(a_1053) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1054) \/ not(are_compatible ('signed int', a_1052)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1058: pointer =
            let a_1071: ctype = params_nth(a_1053, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1071)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1072: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1072, a_1059) in
              pure(a_1072) in
          let strong a_1057: pointer =
            let a_1073: ctype = params_nth(a_1053, 1) in
            if not(are_compatible ('const char*', a_1073)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1074: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1074, a_1061) in
              pure(a_1074) in
          let strong a_1056: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_1065)) in
          let strong a_1075: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1051, a_1058, a_1057, [('signed int', a_1056)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1058)
            ,
              kill('char*', a_1057)
            ,
              kill('signed int', a_1056)
            ) in
          pure(a_1075)
    ) in
  pure(Unit) ;
  kill('signed int', x) ;
  kill('signed int*', p) ;
  kill('intptr_t', ip) ;
  pure(Unit) ;
  {-# <bounds2a.c:5:0, bounds2a.c:22:1> bounds2a.c:5:4 - bounds2a.c:5:8 #-} save ret_905: loaded integer (a_1076: loaded integer:= Specified(0)) in
    pure(a_1076)

