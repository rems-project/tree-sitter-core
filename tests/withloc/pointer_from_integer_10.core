-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob i: pointer [ail_ctype = 'signed int'] :=
  {-# <unknown location> #-} let strong a_703: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong a_704: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <./de_facto_memory_model/pointer_from_integer_10.c:4:15, ./de_facto_memory_model/pointer_from_integer_10.c:4:16> #-} pure(
        Specified(0)
      )
    ) in
  store('signed int', a_703, conv_loaded_int('signed int', a_704)) ;
  pure(a_703)

glob a_722: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  105)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc f (p: pointer): eff unit :=
  {-# <./de_facto_memory_model/pointer_from_integer_10.c:3:15, ./de_facto_memory_model/pointer_from_integer_10.c:7:1> #-} {-# <./de_facto_memory_model/pointer_from_integer_10.c:5:2, ./de_facto_memory_model/pointer_from_integer_10.c:5:7> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <./de_facto_memory_model/pointer_from_integer_10.c:5:2, ./de_facto_memory_model/pointer_from_integer_10.c:5:6> ./de_facto_memory_model/pointer_from_integer_10.c:5:4 #-} let weak (a_708: pointer,
      a_713: loaded integer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# §6.5.3.2 #-}
          {-# <./de_facto_memory_model/pointer_from_integer_10.c:5:2, ./de_facto_memory_model/pointer_from_integer_10.c:5:4> ./de_facto_memory_model/pointer_from_integer_10.c:5:2 #-} let weak a_709: loaded pointer =
            {-# <./de_facto_memory_model/pointer_from_integer_10.c:5:3, ./de_facto_memory_model/pointer_from_integer_10.c:5:4> #-} let weak a_712: pointer =
              {-# <./de_facto_memory_model/pointer_from_integer_10.c:5:3, ./de_facto_memory_model/pointer_from_integer_10.c:5:4> #-} pure(
                p
              ) in
            load('signed int*', a_712) in
          let Specified(a_710: pointer) = a_709 in
          let weak a_711: boolean =
            memop(PtrValidForDeref, 'signed int', a_710) in
          pure(
            if a_711 then
              a_710
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          {-# <./de_facto_memory_model/pointer_from_integer_10.c:5:5, ./de_facto_memory_model/pointer_from_integer_10.c:5:6> #-} pure(
            Specified(1)
          )
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('signed int', a_708, conv_loaded_int('signed int', a_713))) in
      pure(conv_loaded_int('signed int', a_713))
    ) in
  pure(Unit) ;
  {-# <./de_facto_memory_model/pointer_from_integer_10.c:6:2, ./de_facto_memory_model/pointer_from_integer_10.c:6:21> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./de_facto_memory_model/pointer_from_integer_10.c:6:2, ./de_facto_memory_model/pointer_from_integer_10.c:6:20> #-} let strong ((a_714: loaded pointer,
      (a_715: ctype, a_716: [ctype], a_717: boolean, a_718: boolean)),
      a_721: loaded pointer, a_725: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_707: loaded pointer =
            {-# <./de_facto_memory_model/pointer_from_integer_10.c:6:2, ./de_facto_memory_model/pointer_from_integer_10.c:6:8> #-} pure(
              Specified(Cfunction(printf_proxy))
            ) in
          pure((a_707, cfunction(a_707)))
        ,
          {-# <./de_facto_memory_model/pointer_from_integer_10.c:6:9, ./de_facto_memory_model/pointer_from_integer_10.c:6:17> #-} let weak a_723: pointer =
            {-# <./de_facto_memory_model/pointer_from_integer_10.c:6:9, ./de_facto_memory_model/pointer_from_integer_10.c:6:17> #-} pure(
              a_722
            ) in
          {-# §6.3.2.1#3 #-}
          let weak a_724: pointer = memop(PtrArrayShift, a_723, 'char', 0) in
          pure(Specified(a_724))
        ,
          {-# <./de_facto_memory_model/pointer_from_integer_10.c:6:18, ./de_facto_memory_model/pointer_from_integer_10.c:6:19> #-} let weak a_726: pointer =
            {-# <./de_facto_memory_model/pointer_from_integer_10.c:6:18, ./de_facto_memory_model/pointer_from_integer_10.c:6:19> #-} pure(
              i
            ) in
          load('signed int', a_726)
        ) in
      if not(params_length(a_716) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_717) \/ not(are_compatible ('signed int', a_715)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_720: pointer =
            let a_727: ctype = params_nth(a_716, 0) in
            if not(are_compatible ('const char*', a_727)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_728: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_728, a_721) in
              pure(a_728) in
          let strong a_719: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_725)) in
          let strong a_729: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_714, a_720,
            [('signed int', a_719)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_720), kill('signed int', a_719)) in
          pure(a_729)
    ) in
  pure(Unit) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/pointer_from_integer_10.c:3:0, ./de_facto_memory_model/pointer_from_integer_10.c:7:1> ./de_facto_memory_model/pointer_from_integer_10.c:3:5 - ./de_facto_memory_model/pointer_from_integer_10.c:3:6 #-} save ret_706: unit (a_730: unit:= Unit) in
    pure(a_730)

proc main (): eff loaded integer :=
  {-# <./de_facto_memory_model/pointer_from_integer_10.c:8:11, ./de_facto_memory_model/pointer_from_integer_10.c:12:1> #-} let strong j: pointer =
    create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  {-# <./de_facto_memory_model/pointer_from_integer_10.c:9:2, ./de_facto_memory_model/pointer_from_integer_10.c:9:28> #-} let strong a_685: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <./de_facto_memory_model/pointer_from_integer_10.c:9:16, ./de_facto_memory_model/pointer_from_integer_10.c:9:27> #-} pure(
        Specified(6295612)
      )
    ) in
  store('uintptr_t', j, conv_loaded_int('uintptr_t', a_685)) ;
  {-# <./de_facto_memory_model/pointer_from_integer_10.c:10:2, ./de_facto_memory_model/pointer_from_integer_10.c:10:19> #-} let strong a_686: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.4 #-}
      {-# <./de_facto_memory_model/pointer_from_integer_10.c:10:11, ./de_facto_memory_model/pointer_from_integer_10.c:10:18> ./de_facto_memory_model/pointer_from_integer_10.c:10:11 #-} let weak a_687: loaded integer =
        {-# <./de_facto_memory_model/pointer_from_integer_10.c:10:17, ./de_facto_memory_model/pointer_from_integer_10.c:10:18> #-} let weak a_689: pointer =
          {-# <./de_facto_memory_model/pointer_from_integer_10.c:10:17, ./de_facto_memory_model/pointer_from_integer_10.c:10:18> #-} pure(
            j
          ) in
        load('uintptr_t', a_689) in
      let Specified(a_688: integer) = a_687 in
      let weak a_690: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_688) in
      pure(Specified(a_690))
    ) in
  store('signed int*', q, a_686) ;
  {-# <./de_facto_memory_model/pointer_from_integer_10.c:11:2, ./de_facto_memory_model/pointer_from_integer_10.c:11:7> #-} {-# §6.5#2 #-}
  bound(
    {-# §6.5.2.2#10, sentence 1 #-}
    {-# <./de_facto_memory_model/pointer_from_integer_10.c:11:2, ./de_facto_memory_model/pointer_from_integer_10.c:11:6> #-} let strong ((a_691: loaded pointer,
    (a_692: ctype, a_693: [ctype], a_694: boolean, a_695: boolean)),
    a_697: loaded pointer) =
      {-# §6.5.2.2#4, sentence 2 #-}
      unseq(
        let strong a_684: loaded pointer =
          {-# <./de_facto_memory_model/pointer_from_integer_10.c:11:2, ./de_facto_memory_model/pointer_from_integer_10.c:11:3> #-} pure(
            Specified(Cfunction(f))
          ) in
        pure((a_684, cfunction(a_684)))
      ,
        {-# <./de_facto_memory_model/pointer_from_integer_10.c:11:4, ./de_facto_memory_model/pointer_from_integer_10.c:11:5> #-} let weak a_698: pointer =
          {-# <./de_facto_memory_model/pointer_from_integer_10.c:11:4, ./de_facto_memory_model/pointer_from_integer_10.c:11:5> #-} pure(
            q
          ) in
        load('signed int*', a_698)
      ) in
    if not(params_length(a_693) = 1) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_694 \/ not(are_compatible ('void', a_692)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_696: pointer =
          let a_699: ctype = params_nth(a_693, 0) in
          if not(are_compatible ('signed int*', a_699)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {-# §6.5.2.2#7, sentence 1 #-}
            let weak a_700: pointer =
              create(Ivalignof('signed int*'), 'signed int*') in
            let weak _: unit = store('signed int*', a_700, a_697) in
            pure(a_700) in
        let strong a_701: unit =
          ccall('void (*) (signed int*)', a_691, a_696) in
        kill('signed int*', a_696) ;
        pure(a_701)
  ) ;
  pure(Unit) ;
  kill('uintptr_t', j) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/pointer_from_integer_10.c:8:0, ./de_facto_memory_model/pointer_from_integer_10.c:12:1> ./de_facto_memory_model/pointer_from_integer_10.c:8:4 - ./de_facto_memory_model/pointer_from_integer_10.c:8:8 #-} save ret_683: loaded integer (a_702: loaded integer:= Specified(0)) in
    pure(a_702)

