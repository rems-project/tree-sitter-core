-- Aggregates










-- Globals
glob a_954: pointer [ail_ctype = 'char[13]'] :=
  let strong a_1451: pointer = create(Ivalignof('char[13]'), 'char[13]') in
  store_lock('char[13]', a_1451,
  Specified(Array(Specified(conv_int('char', 79)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 103)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1452: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1451,
    18446744073701163007) in
  case a_1452 of
    | Specified(a_1451: pointer) =>
        pure(a_1451)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_990: pointer [ail_ctype = 'char[9]'] :=
  let strong a_1453: pointer = create(Ivalignof('char[9]'), 'char[9]') in
  store_lock('char[9]', a_1453,
  Specified(Array(Specified(conv_int('char', 67)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1454: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1453,
    18446744073701163007) in
  case a_1454 of
    | Specified(a_1453: pointer) =>
        pure(a_1453)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1030: pointer [ail_ctype = 'char[17]'] :=
  let strong a_1455: pointer = create(Ivalignof('char[17]'), 'char[17]') in
  store_lock('char[17]', a_1455,
  Specified(Array(Specified(conv_int('char', 80)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1456: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1455,
    18446744073701163007) in
  case a_1456 of
    | Specified(a_1455: pointer) =>
        pure(a_1455)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1057: pointer [ail_ctype = 'char[14]'] :=
  let strong a_1457: pointer = create(Ivalignof('char[14]'), 'char[14]') in
  store_lock('char[14]', a_1457,
  Specified(Array(Specified(conv_int('char', 101)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(0)))) ;
  let strong a_1458: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1457,
    18446744073701163007) in
  case a_1458 of
    | Specified(a_1457: pointer) =>
        pure(a_1457)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1060: pointer [ail_ctype = 'char[10]'] :=
  let strong a_1459: pointer = create(Ivalignof('char[10]'), 'char[10]') in
  store_lock('char[10]', a_1459,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(0)))) ;
  let strong a_1460: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1459,
    18446744073701163007) in
  case a_1460 of
    | Specified(a_1459: pointer) =>
        pure(a_1459)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1100: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1461: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1461,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1462: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1461,
    18446744073701163007) in
  case a_1462 of
    | Specified(a_1461: pointer) =>
        pure(a_1461)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1125: pointer [ail_ctype = 'char[5]'] :=
  let strong a_1463: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_1463,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0)))) ;
  let strong a_1464: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1463,
    18446744073701163007) in
  case a_1464 of
    | Specified(a_1463: pointer) =>
        pure(a_1463)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1129: pointer [ail_ctype = 'char[9]'] :=
  let strong a_1465: pointer = create(Ivalignof('char[9]'), 'char[9]') in
  store_lock('char[9]', a_1465,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0)))) ;
  let strong a_1466: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1465,
    18446744073701163007) in
  case a_1466 of
    | Specified(a_1465: pointer) =>
        pure(a_1465)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1153: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1467: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1467,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(0)))) ;
  let strong a_1468: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1467,
    18446744073701163007) in
  case a_1468 of
    | Specified(a_1467: pointer) =>
        pure(a_1467)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1194: pointer [ail_ctype = 'char[5]'] :=
  let strong a_1469: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_1469,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 48)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 120)), Specified(0)))) ;
  let strong a_1470: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1469,
    18446744073701163007) in
  case a_1470 of
    | Specified(a_1469: pointer) =>
        pure(a_1469)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1242: pointer [ail_ctype = 'char[2]'] :=
  let strong a_1471: pointer = create(Ivalignof('char[2]'), 'char[2]') in
  store_lock('char[2]', a_1471,
  Specified(Array(Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1472: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1471,
    18446744073701163007) in
  case a_1472 of
    | Specified(a_1471: pointer) =>
        pure(a_1471)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1315: pointer [ail_ctype = 'char[26]'] :=
  let strong a_1473: pointer = create(Ivalignof('char[26]'), 'char[26]') in
  store_lock('char[26]', a_1473,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 96)),
  Specified(0)))) ;
  let strong a_1474: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1473,
    18446744073701163007) in
  case a_1474 of
    | Specified(a_1473: pointer) =>
        pure(a_1473)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1331: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1475: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1475,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 112)),
  Specified(0)))) ;
  let strong a_1476: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1475,
    18446744073701163007) in
  case a_1476 of
    | Specified(a_1475: pointer) =>
        pure(a_1475)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1371: pointer [ail_ctype = 'char[31]'] :=
  let strong a_1477: pointer = create(Ivalignof('char[31]'), 'char[31]') in
  store_lock('char[31]', a_1477,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 96)), Specified(0)))) ;
  let strong a_1478: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1477,
    18446744073701163007) in
  case a_1478 of
    | Specified(a_1477: pointer) =>
        pure(a_1477)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1386: pointer [ail_ctype = 'char[27]'] :=
  let strong a_1479: pointer = create(Ivalignof('char[27]'), 'char[27]') in
  store_lock('char[27]', a_1479,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 91)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 80)), Specified(conv_int('char', 44)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 35)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 98)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 93)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 63)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 65)), Specified(0)))) ;
  let strong a_1480: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1479,
    18446744073701163007) in
  case a_1480 of
    | Specified(a_1479: pointer) =>
        pure(a_1479)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1426: pointer [ail_ctype = 'char[15]'] :=
  let strong a_1481: pointer = create(Ivalignof('char[15]'), 'char[15]') in
  store_lock('char[15]', a_1481,
  Specified(Array(Specified(conv_int('char', 115)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1482: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1481,
    18446744073701163007) in
  case a_1482 of
    | Specified(a_1481: pointer) =>
        pure(a_1481)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

-- Fun map
proc f (x: pointer): eff unit :=
  {-# <memcpy2.c:8:0, memcpy2.c:10:1> #-} {-# <memcpy2.c:9:4, memcpy2.c:9:32> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <memcpy2.c:9:4, memcpy2.c:9:31> #-} let strong ((a_1089: loaded pointer,
      (a_1090: ctype, a_1091: [ctype], a_1092: boolean, a_1093: boolean)),
      a_1097: loaded pointer, a_1099: loaded pointer, a_1103: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_1088: loaded pointer =
            {-# <memcpy2.c:9:4, memcpy2.c:9:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_1088, cfunction(a_1088)))
        ,
          {-# <memcpy2.c:9:12, memcpy2.c:9:20> #-} let weak a_1098: pointer =
            {-# <memcpy2.c:9:12, memcpy2.c:9:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_1098)
        ,
          {-# <memcpy2.c:9:21, memcpy2.c:9:27> #-} let weak a_1101: pointer =
            {-# <memcpy2.c:9:21, memcpy2.c:9:27> #-} pure(a_1100) in
          {-# §6.3.2.1#3 #-}
          let weak a_1102: pointer =
            memop(PtrArrayShift, a_1101, 'char', 0) in
          pure(Specified(a_1102))
        ,
          {-# <memcpy2.c:9:29, memcpy2.c:9:30> #-} let weak a_1104: pointer =
            {-# <memcpy2.c:9:29, memcpy2.c:9:30> #-} pure(x) in
          load('signed int', a_1104)
        ) in
      if not(params_length(a_1091) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1092) \/ not(are_compatible ('signed int', a_1090)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1096: pointer =
            let a_1105: ctype = params_nth(a_1091, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1105)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1106: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1106, a_1097) in
              pure(a_1106) in
          let strong a_1095: pointer =
            let a_1107: ctype = params_nth(a_1091, 1) in
            if not(are_compatible ('const char*', a_1107)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1108: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1108, a_1099) in
              pure(a_1108) in
          let strong a_1094: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_1103)) in
          let strong a_1109: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1089, a_1096, a_1095, [('signed int', a_1094)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1096)
            ,
              kill('char*', a_1095)
            ,
              kill('signed int', a_1094)
            ) in
          pure(a_1109)
    ) in
  pure(Unit) ;
  pure(Unit) ;
  {-# <memcpy2.c:7:0, memcpy2.c:10:1> memcpy2.c:7:5 - memcpy2.c:7:6 #-} save ret_1087: unit (a_1110: unit:= Unit) in
    pure(a_1110)

proc main (): eff loaded integer :=
  {-# <memcpy2.c:13:0, memcpy2.c:25:1> #-} let strong p0: pointer =
    create(Ivalignof('void (*) (signed int)'), 'void (*) (signed int)') in
  let strong p1: pointer =
    create(Ivalignof('void (**) (signed int)'), 'void (**) (signed int)') in
  {-# <memcpy2.c:14:4, memcpy2.c:14:25> #-} let strong a_908: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# <memcpy2.c:14:22, memcpy2.c:14:24> memcpy2.c:14:22 #-} pure(
        Specified(Cfunction(f))
      )
    ) in
  store('void (*) (signed int)', p0, a_908) ;
  {-# <memcpy2.c:15:4, memcpy2.c:15:53> #-} let strong a_909: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <memcpy2.c:15:23, memcpy2.c:15:52> #-} let strong ((a_911: loaded pointer,
      (a_912: ctype, a_913: [ctype], a_914: boolean, a_915: boolean)),
      a_917: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_910: loaded pointer =
            {-# <memcpy2.c:15:23, memcpy2.c:15:29> #-} pure(
              Specified(Cfunction(malloc_proxy))
            ) in
          pure((a_910, cfunction(a_910)))
        ,
          {-# <memcpy2.c:15:30, memcpy2.c:15:51> memcpy2.c:15:30 #-} pure(
            Specified(Ivsizeof('void (*) (signed int)'))
          )
        ) in
      if not(params_length(a_913) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_914 \/ not(are_compatible ('void*', a_912)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_916: pointer =
            let a_918: ctype = params_nth(a_913, 0) in
            if not(are_compatible ('size_t', a_918)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_919: pointer =
                create(Ivalignof('size_t'), 'size_t') in
              let weak _: unit =
                store('size_t', a_919, conv_loaded_int('size_t', a_917)) in
              pure(a_919) in
          let strong a_920: loaded pointer =
            ccall('void* (*) (size_t)', a_911, a_916) in
          kill('size_t', a_916) ;
          pure(a_920)
    ) in
  store('void (**) (signed int)', p1, a_909) ;
  {-# <memcpy2.c:16:4, memcpy2.c:16:32> #-} let strong _: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <memcpy2.c:16:4, memcpy2.c:16:31> #-} let strong ((a_922: loaded pointer,
      (a_923: ctype, a_924: [ctype], a_925: boolean, a_926: boolean)),
      a_930: loaded pointer, a_932: loaded pointer, a_934: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_921: loaded pointer =
            {-# <memcpy2.c:16:4, memcpy2.c:16:10> #-} pure(
              Specified(Cfunction(memcpy_proxy))
            ) in
          pure((a_921, cfunction(a_921)))
        ,
          {-# <memcpy2.c:16:11, memcpy2.c:16:13> #-} let weak a_931: pointer =
            {-# <memcpy2.c:16:11, memcpy2.c:16:13> #-} pure(p1) in
          load('void (**) (signed int)', a_931)
        ,
          {-# §6.5.3.2#3, sentence 5 #-}
          {-# <memcpy2.c:16:14, memcpy2.c:16:17> memcpy2.c:16:14 #-} let weak a_933: pointer =
            {-# <memcpy2.c:16:15, memcpy2.c:16:17> #-} pure(p0) in
          pure(Specified(a_933))
        ,
          {-# <memcpy2.c:16:18, memcpy2.c:16:30> memcpy2.c:16:18 #-} pure(
            Specified(Ivsizeof('signed int*'))
          )
        ) in
      if not(params_length(a_924) = 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_925 \/ not(are_compatible ('void*', a_923)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_929: pointer =
            let a_935: ctype = params_nth(a_924, 0) in
            if not(are_compatible ('void*', a_935)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_936: pointer =
                create(Ivalignof('void*'), 'void*') in
              let weak _: unit = store('void*', a_936, a_930) in
              pure(a_936) in
          let strong a_928: pointer =
            let a_937: ctype = params_nth(a_924, 1) in
            if not(are_compatible ('const void*', a_937)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_938: pointer =
                create(Ivalignof('const void*'), 'const void*') in
              let weak _: unit = store('const void*', a_938, a_932) in
              pure(a_938) in
          let strong a_927: pointer =
            let a_939: ctype = params_nth(a_924, 2) in
            if not(are_compatible ('size_t', a_939)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_940: pointer =
                create(Ivalignof('size_t'), 'size_t') in
              let weak _: unit =
                store('size_t', a_940, conv_loaded_int('size_t', a_934)) in
              pure(a_940) in
          let strong a_941: loaded pointer =
            ccall('void* (*) (void*restrict , const void*restrict , size_t)',
            a_922, a_929, a_928, a_927) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('void*', a_929)
            ,
              kill('void*', a_928)
            ,
              kill('size_t', a_927)
            ) in
          pure(a_941)
    ) in
  pure(Unit) ;
  {-# <memcpy2.c:18:4, memcpy2.c:18:61> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <memcpy2.c:18:4, memcpy2.c:18:60> #-} let strong ((a_943: loaded pointer,
      (a_944: ctype, a_945: [ctype], a_946: boolean, a_947: boolean)),
      a_951: loaded pointer, a_953: loaded pointer, a_957: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_942: loaded pointer =
            {-# <memcpy2.c:18:4, memcpy2.c:18:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_942, cfunction(a_942)))
        ,
          {-# <memcpy2.c:18:12, memcpy2.c:18:20> #-} let weak a_952: pointer =
            {-# <memcpy2.c:18:12, memcpy2.c:18:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_952)
        ,
          {-# <memcpy2.c:18:21, memcpy2.c:18:42> #-} let weak a_955: pointer =
            {-# <memcpy2.c:18:21, memcpy2.c:18:42> #-} pure(a_954) in
          {-# §6.3.2.1#3 #-}
          let weak a_956: pointer = memop(PtrArrayShift, a_955, 'char', 0) in
          pure(Specified(a_956))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <memcpy2.c:18:44, memcpy2.c:18:59> #-} let strong ((a_959: loaded pointer,
          (a_960: ctype, a_961: [ctype], a_962: boolean, a_963: boolean)),
          a_965: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_958: loaded pointer =
                {-# <memcpy2.c:18:44, memcpy2.c:18:48> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_958, cfunction(a_958)))
            ,
              {-# §6.5.4 #-}
              {-# <memcpy2.c:18:49, memcpy2.c:18:58> memcpy2.c:18:49 #-} let weak a_968: pointer =
                {-# <memcpy2.c:18:56, memcpy2.c:18:58> #-} pure(p0) in
              load('void (*) (signed int)', a_968)
            ) in
          if not(params_length(a_961) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_962 \/ not(are_compatible ('const char*', a_960)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_964: pointer =
                let a_970: ctype = params_nth(a_961, 0) in
                if not(are_compatible ('void*', a_970)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_971: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_971, a_965) in
                  pure(a_971) in
              let strong a_972: loaded pointer =
                ccall('const char* (*) (void*)', a_959, a_964) in
              kill('void*', a_964) ;
              pure(a_972)
        ) in
      if not(params_length(a_945) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_946) \/ not(are_compatible ('signed int', a_944)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_950: pointer =
            let a_973: ctype = params_nth(a_945, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_973)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_974: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_974, a_951) in
              pure(a_974) in
          let strong a_949: pointer =
            let a_975: ctype = params_nth(a_945, 1) in
            if not(are_compatible ('const char*', a_975)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_976: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_976, a_953) in
              pure(a_976) in
          let strong a_948: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_957) in
          let strong a_977: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_943, a_950, a_949, [('const char*', a_948)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_950)
            ,
              kill('char*', a_949)
            ,
              kill('char*', a_948)
            ) in
          pure(a_977)
    ) in
  pure(Unit) ;
  {-# <memcpy2.c:19:4, memcpy2.c:19:58> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <memcpy2.c:19:4, memcpy2.c:19:57> #-} let strong ((a_979: loaded pointer,
      (a_980: ctype, a_981: [ctype], a_982: boolean, a_983: boolean)),
      a_987: loaded pointer, a_989: loaded pointer, a_993: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_978: loaded pointer =
            {-# <memcpy2.c:19:4, memcpy2.c:19:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_978, cfunction(a_978)))
        ,
          {-# <memcpy2.c:19:12, memcpy2.c:19:20> #-} let weak a_988: pointer =
            {-# <memcpy2.c:19:12, memcpy2.c:19:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_988)
        ,
          {-# <memcpy2.c:19:21, memcpy2.c:19:38> #-} let weak a_991: pointer =
            {-# <memcpy2.c:19:21, memcpy2.c:19:38> #-} pure(a_990) in
          {-# §6.3.2.1#3 #-}
          let weak a_992: pointer = memop(PtrArrayShift, a_991, 'char', 0) in
          pure(Specified(a_992))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <memcpy2.c:19:40, memcpy2.c:19:56> #-} let strong ((a_995: loaded pointer,
          (a_996: ctype, a_997: [ctype], a_998: boolean, a_999: boolean)),
          a_1001: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_994: loaded pointer =
                {-# <memcpy2.c:19:40, memcpy2.c:19:44> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_994, cfunction(a_994)))
            ,
              {-# §6.5.4 #-}
              {-# <memcpy2.c:19:45, memcpy2.c:19:55> memcpy2.c:19:45 #-} let weak a_1008: pointer =
                {-# §6.5.3.2 #-}
                {-# <memcpy2.c:19:52, memcpy2.c:19:55> memcpy2.c:19:52 #-} let weak a_1004: loaded pointer =
                  {-# <memcpy2.c:19:53, memcpy2.c:19:55> #-} let weak a_1007: pointer =
                    {-# <memcpy2.c:19:53, memcpy2.c:19:55> #-} pure(p1) in
                  load('void (**) (signed int)', a_1007) in
                case a_1004 of
                  | Specified(a_1005: pointer) =>
                      let weak a_1006: boolean =
                        memop(PtrValidForDeref, 'void (*) (signed int)',
                        a_1005) in
                      pure(
                        if a_1006 then
                          a_1005
                        else
                          undef(<<UB043_indirection_invalid_value>>)
                      )
                  | Unspecified(_: ctype) =>
                      pure(undef(<<UB043_indirection_invalid_value>>))
                end in
              load('void (*) (signed int)', a_1008)
            ) in
          if not(params_length(a_997) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_998 \/ not(are_compatible ('const char*', a_996)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1000: pointer =
                let a_1010: ctype = params_nth(a_997, 0) in
                if not(are_compatible ('void*', a_1010)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_1011: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_1011, a_1001) in
                  pure(a_1011) in
              let strong a_1012: loaded pointer =
                ccall('const char* (*) (void*)', a_995, a_1000) in
              kill('void*', a_1000) ;
              pure(a_1012)
        ) in
      if not(params_length(a_981) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_982) \/ not(are_compatible ('signed int', a_980)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_986: pointer =
            let a_1013: ctype = params_nth(a_981, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1013)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1014: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1014, a_987) in
              pure(a_1014) in
          let strong a_985: pointer =
            let a_1015: ctype = params_nth(a_981, 1) in
            if not(are_compatible ('const char*', a_1015)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1016: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1016, a_989) in
              pure(a_1016) in
          let strong a_984: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_993) in
          let strong a_1017: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_979, a_986, a_985, [('const char*', a_984)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_986)
            ,
              kill('char*', a_985)
            ,
              kill('char*', a_984)
            ) in
          pure(a_1017)
    ) in
  pure(Unit) ;
  {-# <memcpy2.c:21:4, memcpy2.c:22:80> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <memcpy2.c:21:4, memcpy2.c:22:79> #-} let strong ((a_1019: loaded pointer,
      (a_1020: ctype, a_1021: [ctype], a_1022: boolean, a_1023: boolean)),
      a_1027: loaded pointer, a_1029: loaded pointer, a_1033: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_1018: loaded pointer =
            {-# <memcpy2.c:21:4, memcpy2.c:21:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_1018, cfunction(a_1018)))
        ,
          {-# <memcpy2.c:21:12, memcpy2.c:21:20> #-} let weak a_1028: pointer =
            {-# <memcpy2.c:21:12, memcpy2.c:21:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_1028)
        ,
          {-# <memcpy2.c:21:21, memcpy2.c:21:40> #-} let weak a_1031: pointer =
            {-# <memcpy2.c:21:21, memcpy2.c:21:40> #-} pure(a_1030) in
          {-# §6.3.2.1#3 #-}
          let weak a_1032: pointer =
            memop(PtrArrayShift, a_1031, 'char', 0) in
          pure(Specified(a_1032))
        ,
          {-# §6.5.15#4, sentence 1 #-}
          {-# <memcpy2.c:22:12, memcpy2.c:22:78> memcpy2.c:22:50 #-} let strong a_1055: loaded integer =
            {-# <memcpy2.c:22:12, memcpy2.c:22:50> #-} let weak (a_1034: loaded integer,
            a_1035: loaded integer) =
              unseq(
                {-# <memcpy2.c:22:12, memcpy2.c:22:50> #-} let strong a_1052: (loaded pointer,loaded pointer) =
                  unseq(
                    {-# §6.5.4 #-}
                    {-# <memcpy2.c:22:43, memcpy2.c:22:45> #-} let weak a_1042: pointer =
                      {-# <memcpy2.c:22:43, memcpy2.c:22:45> #-} pure(p0) in
                    load('void (*) (signed int)', a_1042)
                  ,
                    {-# §6.5.4 #-}
                    {-# <memcpy2.c:22:46, memcpy2.c:22:49> memcpy2.c:22:46 #-} let weak a_1049: pointer =
                      {-# §6.5.3.2 #-}
                      {-# <memcpy2.c:22:46, memcpy2.c:22:49> memcpy2.c:22:46 #-} let weak a_1045: loaded pointer =
                        {-# <memcpy2.c:22:47, memcpy2.c:22:49> #-} let weak a_1048: pointer =
                          {-# <memcpy2.c:22:47, memcpy2.c:22:49> #-} pure(p1) in
                        load('void (**) (signed int)', a_1048) in
                      case a_1045 of
                        | Specified(a_1046: pointer) =>
                            let weak a_1047: boolean =
                              memop(PtrValidForDeref, 'void (*) (signed int)',
                              a_1046) in
                            pure(
                              if a_1047 then
                                a_1046
                              else
                                undef(<<UB043_indirection_invalid_value>>)
                            )
                        | Unspecified(_: ctype) =>
                            pure(undef(<<UB043_indirection_invalid_value>>))
                      end in
                    load('void (*) (signed int)', a_1049)
                  ) in
                case a_1052 of
                  | (Specified(a_1053: pointer), Specified(a_1054: pointer)) =>
                      memop(cheri_cheri_is_equal_exact['_Bool (void (signed int)*, void (signed int)*)'], a_1053,
                      a_1054)
                  | _: (loaded pointer,loaded pointer) =>
                      pure(undef(<<DUMMY(Elab, CHERI intrinsics (unspec))>>))
                end
              ,
                {-# <memcpy2.c:22:12, memcpy2.c:22:50> #-} pure(Specified(0))
              ) in
            pure(
              case (a_1034, a_1035) of
                | (Specified(a_1036: integer), Specified(a_1037: integer)) =>
                    if conv_int('signed int', a_1036) =
                    conv_int('signed int', a_1037) then
                      Specified(1)
                    else
                      Specified(0)
                | _: (loaded integer,loaded integer) =>
                    Unspecified('signed int')
              end
            ) in
          case a_1055 of
            | Specified(a_1056: integer) =>
                {-# §6.5.15#4, sentence 2 #-}
                if a_1056 = 0 then
                  {-# <memcpy2.c:22:51, memcpy2.c:22:66> #-} let weak a_1058: pointer =
                    {-# <memcpy2.c:22:51, memcpy2.c:22:66> #-} pure(a_1057) in
                  {-# §6.3.2.1#3 #-}
                  let weak a_1059: pointer =
                    memop(PtrArrayShift, a_1058, 'char', 0) in
                  pure(Specified(a_1059))
                else
                  {-# <memcpy2.c:22:67, memcpy2.c:22:78> #-} let weak a_1061: pointer =
                    {-# <memcpy2.c:22:67, memcpy2.c:22:78> #-} pure(a_1060) in
                  {-# §6.3.2.1#3 #-}
                  let weak a_1062: pointer =
                    memop(PtrArrayShift, a_1061, 'char', 0) in
                  pure(Specified(a_1062))
            | Unspecified(_: ctype) =>
                pure(undef(<<UB_CERB004_unspecified__conditional>>))
          end
        ) in
      if not(params_length(a_1021) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1022) \/ not(are_compatible ('signed int', a_1020)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1026: pointer =
            let a_1063: ctype = params_nth(a_1021, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1063)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1064: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1064, a_1027) in
              pure(a_1064) in
          let strong a_1025: pointer =
            let a_1065: ctype = params_nth(a_1021, 1) in
            if not(are_compatible ('const char*', a_1065)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1066: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1066, a_1029) in
              pure(a_1066) in
          let strong a_1024: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'char*', a_1033) in
          let strong a_1067: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1019, a_1026, a_1025, [('char*', a_1024)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1026)
            ,
              kill('char*', a_1025)
            ,
              kill('char*', a_1024)
            ) in
          pure(a_1067)
    ) in
  pure(Unit) ;
  {-# <memcpy2.c:24:4, memcpy2.c:24:15> #-} {-# §6.5#2 #-}
  bound(
    {-# §6.5.2.2#10, sentence 1 #-}
    {-# <memcpy2.c:24:4, memcpy2.c:24:14> #-} let strong ((a_1069: loaded pointer,
    (a_1070: ctype, a_1071: [ctype], a_1072: boolean, a_1073: boolean)),
    a_1081: loaded integer) =
      {-# §6.5.2.2#4, sentence 2 #-}
      unseq(
        let strong a_1068: loaded pointer =
          {-# <memcpy2.c:24:4, memcpy2.c:24:10> #-} let strong a_1074: loaded pointer =
            {-# <memcpy2.c:24:6, memcpy2.c:24:9> memcpy2.c:24:6 #-} let weak a_1079: pointer =
              {-# §6.5.3.2 #-}
              {-# <memcpy2.c:24:6, memcpy2.c:24:9> memcpy2.c:24:6 #-} let weak a_1075: loaded pointer =
                {-# <memcpy2.c:24:7, memcpy2.c:24:9> #-} let weak a_1078: pointer =
                  {-# <memcpy2.c:24:7, memcpy2.c:24:9> #-} pure(p1) in
                load('void (**) (signed int)', a_1078) in
              case a_1075 of
                | Specified(a_1076: pointer) =>
                    let weak a_1077: boolean =
                      memop(PtrValidForDeref, 'void (*) (signed int)', a_1076) in
                    pure(
                      if a_1077 then
                        a_1076
                      else
                        undef(<<UB043_indirection_invalid_value>>)
                    )
                | Unspecified(_: ctype) =>
                    pure(undef(<<UB043_indirection_invalid_value>>))
              end in
            load('void (*) (signed int)', a_1079) in
          pure(a_1074) in
        pure((a_1068, cfunction(a_1068)))
      ,
        {-# <memcpy2.c:24:11, memcpy2.c:24:13> #-} pure(Specified(42))
      ) in
    if not(params_length(a_1071) = 1) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_1072 \/ not(are_compatible ('void', a_1070)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_1080: pointer =
          let a_1082: ctype = params_nth(a_1071, 0) in
          if not(are_compatible ('signed int', a_1082)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {-# §6.5.2.2#7, sentence 1 #-}
            let weak a_1083: pointer =
              create(Ivalignof('signed int'), 'signed int') in
            let weak _: unit =
              store('signed int', a_1083,
              conv_loaded_int('signed int', a_1081)) in
            pure(a_1083) in
        let strong a_1084: unit =
          ccall('void (*) (signed int)', a_1069, a_1080) in
        kill('signed int', a_1080) ;
        pure(a_1084)
  ) ;
  pure(Unit) ;
  kill('void (signed int)*', p0) ;
  kill('void (signed int)**', p1) ;
  pure(Unit) ;
  {-# <memcpy2.c:12:0, memcpy2.c:25:1> memcpy2.c:12:4 - memcpy2.c:12:8 #-} save ret_907: loaded integer (a_1085: loaded integer:= Specified(0)) in
    pure(a_1085)

