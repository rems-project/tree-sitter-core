-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_754 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_758 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob a_819: pointer [ail_ctype = 'char[38]'] :=
  create_readonly(Ivalignof('char[38]'), 'char[38]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 38)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_895: pointer [ail_ctype = 'char[26]'] :=
  create_readonly(Ivalignof('char[26]'), 'char[26]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:5:11, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:18:1> #-} let strong x: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong y: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong ux: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong uy: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong offset: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:6:2, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:6:19> #-} let strong a_789: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:6:10, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:6:11> #-} pure(
        Specified(1)
      )
    ) in
  store('signed int', x, conv_loaded_int('signed int', a_789)) ;
  let strong a_790: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:6:17, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:6:18> #-} pure(
        Specified(2)
      )
    ) in
  store('signed int', y, conv_loaded_int('signed int', a_790)) ;
  {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:7:2, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:7:29> #-} let strong a_791: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.4 #-}
      {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:7:16, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:7:28> ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:7:16 #-} let weak a_792: loaded pointer =
        {-# §6.5.3.2#3, sentence 5 #-}
        {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:7:26, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:7:28> ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:7:26 #-} let weak a_794: pointer =
          {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:7:27, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:7:28> #-} pure(
            x
          ) in
        pure(Specified(a_794)) in
      let Specified(a_793: pointer) = a_792 in
      let weak a_795: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_793) in
      pure(Specified(a_795))
    ) in
  store('intptr_t', ux, conv_loaded_int('intptr_t', a_791)) ;
  {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:8:2, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:8:29> #-} let strong a_796: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.4 #-}
      {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:8:16, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:8:28> ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:8:16 #-} let weak a_797: loaded pointer =
        {-# §6.5.3.2#3, sentence 5 #-}
        {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:8:26, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:8:28> ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:8:26 #-} let weak a_799: pointer =
          {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:8:27, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:8:28> #-} pure(
            y
          ) in
        pure(Specified(a_799)) in
      let Specified(a_798: pointer) = a_797 in
      let weak a_800: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_798) in
      pure(Specified(a_800))
    ) in
  store('intptr_t', uy, conv_loaded_int('intptr_t', a_796)) ;
  {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:9:2, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:9:28> #-} let strong a_801: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.6 #-}
      {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:9:20, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:9:27> ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:9:23 #-} let weak (a_804: loaded integer,
      a_805: loaded integer) =
        unseq(
          {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:9:20, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:9:22> #-} let weak a_802: pointer =
            {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:9:20, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:9:22> #-} pure(
              uy
            ) in
          load('intptr_t', a_802)
        ,
          {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:9:25, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:9:27> #-} let weak a_803: pointer =
            {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:9:25, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:9:27> #-} pure(
              ux
            ) in
          load('intptr_t', a_803)
        ) in
      pure(
        let (Specified(a_806: integer), Specified(a_807: integer)) =
          (a_804, a_805) in
        Specified(catch_exceptional_condition_sub('intptr_t', conv_int('intptr_t',
        a_806), conv_int('intptr_t', a_807)))
      )
    ) in
  store('intptr_t', offset, conv_loaded_int('intptr_t', a_801)) ;
  {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:10:2, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:11:44> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:10:2, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:11:43> #-} let strong ((a_809: loaded pointer,
      (a_810: ctype, a_811: [ctype], a_812: boolean, a_813: boolean)),
      a_818: loaded pointer, a_822: loaded integer, a_824: loaded integer,
      a_826: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_788: loaded pointer =
            {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:10:2, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:10:8> #-} pure(
              Specified(Cfunction(printf_proxy))
            ) in
          pure((a_788, cfunction(a_788)))
        ,
          {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:10:9, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:11:29> #-} let weak a_820: pointer =
            {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:10:9, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:11:29> #-} pure(
              a_819
            ) in
          {-# §6.3.2.1#3 #-}
          let weak a_821: pointer = memop(PtrArrayShift, a_820, 'char', 0) in
          pure(Specified(a_821))
        ,
          {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:11:30, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:11:32> #-} let weak a_823: pointer =
            {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:11:30, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:11:32> #-} pure(
              ux
            ) in
          load('intptr_t', a_823)
        ,
          {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:11:33, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:11:35> #-} let weak a_825: pointer =
            {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:11:33, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:11:35> #-} pure(
              uy
            ) in
          load('intptr_t', a_825)
        ,
          {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:11:36, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:11:42> #-} let weak a_827: pointer =
            {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:11:36, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:11:42> #-} pure(
              offset
            ) in
          load('intptr_t', a_827)
        ) in
      if not(params_length(a_811) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_812) \/ not(are_compatible ('signed int', a_810)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_817: pointer =
            let a_828: ctype = params_nth(a_811, 0) in
            if not(are_compatible ('const char*', a_828)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_829: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_829, a_818) in
              pure(a_829) in
          let strong a_816: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_822)) in
          let strong a_815: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_824)) in
          let strong a_814: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_826)) in
          let strong a_830: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_809, a_817,
            [('intptr_t', a_816), ('intptr_t', a_815), ('intptr_t', a_814)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_817)
            ,
              kill('intptr_t', a_816)
            ,
              kill('intptr_t', a_815)
            ,
              kill('intptr_t', a_814)
            ) in
          pure(a_830)
    ) in
  pure(Unit) ;
  {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:12:2, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:12:32> #-} let strong a_831: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.4 #-}
      {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:12:11, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:12:31> ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:12:11 #-} let weak a_832: loaded integer =
        {-# §6.5.6 #-}
        {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:12:18, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:12:31> #-} let weak (a_834: loaded integer,
        a_835: loaded integer) =
          unseq(
            {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:12:19, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:12:21> #-} let weak a_839: pointer =
              {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:12:19, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:12:21> #-} pure(
                ux
              ) in
            load('intptr_t', a_839)
          ,
            {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:12:24, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:12:30> #-} let weak a_840: pointer =
              {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:12:24, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:12:30> #-} pure(
                offset
              ) in
            load('intptr_t', a_840)
          ) in
        pure(
          let (Specified(a_836: integer), Specified(a_837: integer)) =
            (a_834, a_835) in
          Specified(catch_exceptional_condition_add('intptr_t', __conv_int__('intptr_t', a_836), __conv_int__('intptr_t', a_837)))
        ) in
      let Specified(a_833: integer) = a_832 in
      let weak a_841: pointer =
        memop(PtrFromInt, 'intptr_t', 'signed int', a_833) in
      pure(Specified(a_841))
    ) in
  store('signed int*', p, a_831) ;
  {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:13:2, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:13:14> #-} let strong a_842: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.3.2#3, sentence 5 #-}
      {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:13:11, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:13:13> ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:13:11 #-} let weak a_843: pointer =
        {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:13:12, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:13:13> #-} pure(
          y
        ) in
      pure(Specified(a_843))
    ) in
  store('signed int*', q, a_842) ;
  {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:2, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:17:3> #-} let strong a_844: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:6, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:36> ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:32 #-} let weak (a_846: loaded integer,
      a_847: loaded integer) =
        unseq(
          {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:6, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:36> ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:32 #-} let weak (a_851: loaded integer,
          a_852: loaded integer) =
            unseq(
              {-# §6.5.2.2#10, sentence 1 #-}
              {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:6, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:31> #-} let strong ((a_857: loaded pointer,
              (a_858: ctype, a_859: [ctype], a_860: boolean, a_861: boolean)),
              a_865: loaded pointer, a_867: loaded pointer,
              a_869: loaded integer) =
                {-# §6.5.2.2#4, sentence 2 #-}
                unseq(
                  let strong a_856: loaded pointer =
                    {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:6, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:12> #-} pure(
                      Specified(Cfunction(memcmp_proxy))
                    ) in
                  pure((a_856, cfunction(a_856)))
                ,
                  {-# §6.5.3.2#3, sentence 5 #-}
                  {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:13, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:15> ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:13 #-} let weak a_866: pointer =
                    {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:14, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:15> #-} pure(
                      p
                    ) in
                  pure(Specified(a_866))
                ,
                  {-# §6.5.3.2#3, sentence 5 #-}
                  {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:17, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:19> ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:17 #-} let weak a_868: pointer =
                    {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:18, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:19> #-} pure(
                      q
                    ) in
                  pure(Specified(a_868))
                ,
                  {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:21, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:30> ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:21 #-} pure(
                    Specified(Ivsizeof('signed int*'))
                  )
                ) in
              if not(params_length(a_859) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_860 \/ not(are_compatible ('signed int', a_858)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_864: pointer =
                    let a_870: ctype = params_nth(a_859, 0) in
                    if not(are_compatible ('const void*', a_870)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {-# §6.5.2.2#7, sentence 1 #-}
                      let weak a_871: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit = store('const void*', a_871, a_865) in
                      pure(a_871) in
                  let strong a_863: pointer =
                    let a_872: ctype = params_nth(a_859, 1) in
                    if not(are_compatible ('const void*', a_872)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {-# §6.5.2.2#7, sentence 1 #-}
                      let weak a_873: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit = store('const void*', a_873, a_867) in
                      pure(a_873) in
                  let strong a_862: pointer =
                    let a_874: ctype = params_nth(a_859, 2) in
                    if not(are_compatible ('size_t', a_874)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {-# §6.5.2.2#7, sentence 1 #-}
                      let weak a_875: pointer =
                        create(Ivalignof('size_t'), 'size_t') in
                      let weak _: unit =
                        store('size_t', a_875,
                        conv_loaded_int('size_t', a_869)) in
                      pure(a_875) in
                  let strong a_876: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_857, a_864, a_863, a_862) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_864)
                    ,
                      kill('void*', a_863)
                    ,
                      kill('size_t', a_862)
                    ) in
                  pure(a_876)
            ,
              {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:35, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:36> #-} pure(
                Specified(0)
              )
            ) in
          pure(
            let (Specified(a_853: integer), Specified(a_854: integer)) =
              (a_851, a_852) in
            if conv_int('signed int', a_853) = conv_int('signed int', a_854) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:6, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:36> ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:32 #-} pure(
            Specified(0)
          )
        ) in
      pure(
        let (Specified(a_848: integer), Specified(a_849: integer)) =
          (a_846, a_847) in
        if conv_int('signed int', a_848) = conv_int('signed int', a_849) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_787: boolean =
    let Specified(a_845: integer) = a_844 in
    pure(if not(a_845 = 1) then True else False) in
  if a_787 then
    {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:38, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:17:3> #-} {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:15:4, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:15:12> #-} let strong _: loaded integer =
      {-# §6.5#2 #-}
      bound(
        {-# §6.5.16#3, sentence 4 #-}
        {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:15:4, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:15:11> ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:15:7 #-} let weak (a_878: pointer,
        a_883: loaded integer) =
          {-# §6.5.16#3, sentence 5 #-}
          unseq(
            {-# §6.5.3.2 #-}
            {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:15:4, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:15:6> ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:15:4 #-} let weak a_879: loaded pointer =
              {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:15:5, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:15:6> #-} let weak a_882: pointer =
                {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:15:5, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:15:6> #-} pure(
                  p
                ) in
              load('signed int*', a_882) in
            let Specified(a_880: pointer) = a_879 in
            let weak a_881: boolean =
              memop(PtrValidForDeref, 'signed int', a_880) in
            pure(
              if a_881 then
                a_880
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:15:9, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:15:11> #-} pure(
              Specified(11)
            )
          ) in
        let weak _: unit =
          {-# §6.5.16.1#2, store #-}
          neg(store('signed int', a_878, conv_loaded_int('signed int', a_883))) in
        pure(conv_loaded_int('signed int', a_883))
      ) in
    pure(Unit) ;
    {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:4, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:51> #-} let strong _: loaded integer =
      {-# §6.5#2 #-}
      bound(
        {-# §6.5.2.2#10, sentence 1 #-}
        {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:4, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:50> #-} let strong ((a_884: loaded pointer,
        (a_885: ctype, a_886: [ctype], a_887: boolean, a_888: boolean)),
        a_894: loaded pointer, a_898: loaded integer, a_900: loaded integer,
        a_902: loaded integer, a_908: loaded integer) =
          {-# §6.5.2.2#4, sentence 2 #-}
          unseq(
            let strong a_877: loaded pointer =
              {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:4, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:10> #-} pure(
                Specified(Cfunction(printf_proxy))
              ) in
            pure((a_877, cfunction(a_877)))
          ,
            {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:11, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:39> #-} let weak a_896: pointer =
              {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:11, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:39> #-} pure(
                a_895
              ) in
            {-# §6.3.2.1#3 #-}
            let weak a_897: pointer =
              memop(PtrArrayShift, a_896, 'char', 0) in
            pure(Specified(a_897))
          ,
            {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:40, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:41> #-} let weak a_899: pointer =
              {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:40, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:41> #-} pure(
                x
              ) in
            load('signed int', a_899)
          ,
            {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:42, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:43> #-} let weak a_901: pointer =
              {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:42, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:43> #-} pure(
                y
              ) in
            load('signed int', a_901)
          ,
            {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:44, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:46> ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:44 #-} let weak a_907: pointer =
              {-# §6.5.3.2 #-}
              {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:44, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:46> ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:44 #-} let weak a_903: loaded pointer =
                {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:45, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:46> #-} let weak a_906: pointer =
                  {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:45, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:46> #-} pure(
                    p
                  ) in
                load('signed int*', a_906) in
              let Specified(a_904: pointer) = a_903 in
              let weak a_905: boolean =
                memop(PtrValidForDeref, 'signed int', a_904) in
              pure(
                if a_905 then
                  a_904
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_907)
          ,
            {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:47, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:49> ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:47 #-} let weak a_913: pointer =
              {-# §6.5.3.2 #-}
              {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:47, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:49> ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:47 #-} let weak a_909: loaded pointer =
                {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:48, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:49> #-} let weak a_912: pointer =
                  {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:48, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:16:49> #-} pure(
                    q
                  ) in
                load('signed int*', a_912) in
              let Specified(a_910: pointer) = a_909 in
              let weak a_911: boolean =
                memop(PtrValidForDeref, 'signed int', a_910) in
              pure(
                if a_911 then
                  a_910
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_913)
          ) in
        if not(params_length(a_886) <= 5) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_887) \/ not(are_compatible ('signed int', a_885)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_893: pointer =
              let a_914: ctype = params_nth(a_886, 0) in
              if not(are_compatible ('const char*', a_914)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# §6.5.2.2#7, sentence 1 #-}
                let weak a_915: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_915, a_894) in
                pure(a_915) in
            let strong a_892: pointer =
              {-# §6.5.2.2#7, sentences 2 and 3 #-}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_898)) in
            let strong a_891: pointer =
              {-# §6.5.2.2#7, sentences 2 and 3 #-}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_900)) in
            let strong a_890: pointer =
              {-# §6.5.2.2#7, sentences 2 and 3 #-}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_902)) in
            let strong a_889: pointer =
              {-# §6.5.2.2#7, sentences 2 and 3 #-}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_908)) in
            let strong a_916: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_884, a_893,
              [('signed int', a_892), ('signed int', a_891),
              ('signed int', a_890), ('signed int', a_889)]) in
            let strong _: (unit,unit,unit,unit,unit) =
              unseq(
                kill('char*', a_893)
              ,
                kill('signed int', a_892)
              ,
                kill('signed int', a_891)
              ,
                kill('signed int', a_890)
              ,
                kill('signed int', a_889)
              ) in
            pure(a_916)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:14:2, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:17:3> #-} pure(
      Unit
    ) ;
  kill('signed int', x) ;
  kill('signed int', y) ;
  kill('intptr_t', ux) ;
  kill('intptr_t', uy) ;
  kill('intptr_t', offset) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:5:0, ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:18:1> ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:5:4 - ./de_facto_memory_model/pointer_offset_from_subtraction_1_auto.c:5:8 #-} save ret_786: loaded integer (a_917: loaded integer:= Specified(0)) in
    pure(a_917)

