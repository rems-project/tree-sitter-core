-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

def struct __cerbty_unnamed_tag_746 :=
  __dummy_max_align_t: 'void*'

-- Globals
glob a_850: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  105)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc f (p: pointer, q: pointer): eff unit :=
  {-# <./de_facto_memory_model/effective_type_11b.c:7:24, ./de_facto_memory_model/effective_type_11b.c:10:1> #-} {-# <./de_facto_memory_model/effective_type_11b.c:8:2, ./de_facto_memory_model/effective_type_11b.c:8:16> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <./de_facto_memory_model/effective_type_11b.c:8:2, ./de_facto_memory_model/effective_type_11b.c:8:15> ./de_facto_memory_model/effective_type_11b.c:8:12 #-} let weak (a_863: pointer,
      a_871: loaded integer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# §6.5.3.2 #-}
          {-# <./de_facto_memory_model/effective_type_11b.c:8:2, ./de_facto_memory_model/effective_type_11b.c:8:11> ./de_facto_memory_model/effective_type_11b.c:8:2 #-} let weak a_864: loaded pointer =
            {-# §6.5.4 #-}
            {-# <./de_facto_memory_model/effective_type_11b.c:8:3, ./de_facto_memory_model/effective_type_11b.c:8:11> ./de_facto_memory_model/effective_type_11b.c:8:3 #-} let weak a_867: loaded pointer =
              {-# <./de_facto_memory_model/effective_type_11b.c:8:10, ./de_facto_memory_model/effective_type_11b.c:8:11> #-} let weak a_869: pointer =
                {-# <./de_facto_memory_model/effective_type_11b.c:8:10, ./de_facto_memory_model/effective_type_11b.c:8:11> #-} pure(
                  p
                ) in
              load('void*', a_869) in
            let Specified(a_868: pointer) = a_867 in
            let weak a_870: boolean =
              memop(PtrWellAligned, 'signed int', a_868) in
            pure(
              Specified(if a_870 then
                a_868
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            ) in
          let Specified(a_865: pointer) = a_864 in
          let weak a_866: boolean =
            memop(PtrValidForDeref, 'signed int', a_865) in
          pure(
            if a_866 then
              a_865
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          {-# <./de_facto_memory_model/effective_type_11b.c:8:14, ./de_facto_memory_model/effective_type_11b.c:8:15> #-} pure(
            Specified(3)
          )
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('signed int', a_863, conv_loaded_int('signed int', a_871))) in
      pure(conv_loaded_int('signed int', a_871))
    ) in
  pure(Unit) ;
  {-# <./de_facto_memory_model/effective_type_11b.c:9:2, ./de_facto_memory_model/effective_type_11b.c:9:20> #-} let strong _: loaded floating =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <./de_facto_memory_model/effective_type_11b.c:9:2, ./de_facto_memory_model/effective_type_11b.c:9:19> ./de_facto_memory_model/effective_type_11b.c:9:14 #-} let weak (a_862: pointer,
      a_879: loaded floating) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# §6.5.3.2 #-}
          {-# <./de_facto_memory_model/effective_type_11b.c:9:2, ./de_facto_memory_model/effective_type_11b.c:9:13> ./de_facto_memory_model/effective_type_11b.c:9:2 #-} let weak a_872: loaded pointer =
            {-# §6.5.4 #-}
            {-# <./de_facto_memory_model/effective_type_11b.c:9:3, ./de_facto_memory_model/effective_type_11b.c:9:13> ./de_facto_memory_model/effective_type_11b.c:9:3 #-} let weak a_875: loaded pointer =
              {-# <./de_facto_memory_model/effective_type_11b.c:9:12, ./de_facto_memory_model/effective_type_11b.c:9:13> #-} let weak a_877: pointer =
                {-# <./de_facto_memory_model/effective_type_11b.c:9:12, ./de_facto_memory_model/effective_type_11b.c:9:13> #-} pure(
                  p
                ) in
              load('void*', a_877) in
            let Specified(a_876: pointer) = a_875 in
            let weak a_878: boolean = memop(PtrWellAligned, 'float', a_876) in
            pure(
              Specified(if a_878 then
                a_876
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            ) in
          let Specified(a_873: pointer) = a_872 in
          let weak a_874: boolean = memop(PtrValidForDeref, 'float', a_873) in
          pure(
            if a_874 then
              a_873
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          {-# <./de_facto_memory_model/effective_type_11b.c:9:15, ./de_facto_memory_model/effective_type_11b.c:9:19> #-} pure(
            Specified(3.14)
          )
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('float', a_862, a_879)) in
      pure(a_879)
    ) in
  pure(Unit) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/effective_type_11b.c:7:0, ./de_facto_memory_model/effective_type_11b.c:10:1> ./de_facto_memory_model/effective_type_11b.c:7:5 - ./de_facto_memory_model/effective_type_11b.c:7:6 #-} save ret_861: unit (a_880: unit:= Unit) in
    pure(a_880)

proc main (): eff loaded integer :=
  {-# <./de_facto_memory_model/effective_type_11b.c:12:11, ./de_facto_memory_model/effective_type_11b.c:18:1> #-} let strong p: pointer =
    create(Ivalignof('void*'), 'void*') in
  let strong i: pointer = create(Ivalignof('signed int'), 'signed int') in
  {-# <./de_facto_memory_model/effective_type_11b.c:13:2, ./de_facto_memory_model/effective_type_11b.c:13:41> #-} {-# §6.5#2 #-}
  bound(
    {-# <./de_facto_memory_model/effective_type_11b.c:13:2, ./de_facto_memory_model/effective_type_11b.c:13:40> #-} let strong a_791: loaded integer =
      {-# <./de_facto_memory_model/effective_type_11b.c:13:9, ./de_facto_memory_model/effective_type_11b.c:13:39> ./de_facto_memory_model/effective_type_11b.c:13:24 #-} let weak (a_794: loaded integer,
      a_795: loaded integer) =
        unseq(
          {-# <./de_facto_memory_model/effective_type_11b.c:13:9, ./de_facto_memory_model/effective_type_11b.c:13:24> ./de_facto_memory_model/effective_type_11b.c:13:9 #-} pure(
            Specified(Ivsizeof('signed int'))
          )
        ,
          {-# <./de_facto_memory_model/effective_type_11b.c:13:26, ./de_facto_memory_model/effective_type_11b.c:13:39> ./de_facto_memory_model/effective_type_11b.c:13:26 #-} pure(
            Specified(Ivsizeof('float'))
          )
        ) in
      pure(
        let (Specified(a_796: integer), Specified(a_797: integer)) =
          (a_794, a_795) in
        if conv_int('size_t', a_796) = conv_int('size_t', a_797) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_792: integer) = a_791 in
      if a_792 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/effective_type_11b.c:14:2, ./de_facto_memory_model/effective_type_11b.c:14:36> #-} let strong a_799: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./de_facto_memory_model/effective_type_11b.c:14:12, ./de_facto_memory_model/effective_type_11b.c:14:35> #-} let strong ((a_801: loaded pointer,
      (a_802: ctype, a_803: [ctype], a_804: boolean, a_805: boolean)),
      a_807: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_800: loaded pointer =
            {-# <./de_facto_memory_model/effective_type_11b.c:14:12, ./de_facto_memory_model/effective_type_11b.c:14:18> #-} pure(
              Specified(Cfunction(malloc_proxy))
            ) in
          pure((a_800, cfunction(a_800)))
        ,
          {-# <./de_facto_memory_model/effective_type_11b.c:14:19, ./de_facto_memory_model/effective_type_11b.c:14:34> ./de_facto_memory_model/effective_type_11b.c:14:19 #-} pure(
            Specified(Ivsizeof('signed int'))
          )
        ) in
      if not(params_length(a_803) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_804 \/ not(are_compatible ('void*', a_802)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_806: pointer =
            let a_808: ctype = params_nth(a_803, 0) in
            if not(are_compatible ('size_t', a_808)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_809: pointer =
                create(Ivalignof('size_t'), 'size_t') in
              let weak _: unit =
                store('size_t', a_809, conv_loaded_int('size_t', a_807)) in
              pure(a_809) in
          let strong a_810: loaded pointer =
            ccall('void* (*) (size_t)', a_801, a_806) in
          kill('size_t', a_806) ;
          pure(a_810)
    ) in
  store('void*', p, a_799) ;
  {-# <./de_facto_memory_model/effective_type_11b.c:14:37, ./de_facto_memory_model/effective_type_11b.c:14:66> #-} {-# §6.5#2 #-}
  bound(
    {-# <./de_facto_memory_model/effective_type_11b.c:14:37, ./de_facto_memory_model/effective_type_11b.c:14:65> #-} let strong a_790: loaded integer =
      {-# <./de_facto_memory_model/effective_type_11b.c:14:45, ./de_facto_memory_model/effective_type_11b.c:14:64> ./de_facto_memory_model/effective_type_11b.c:14:47 #-} let weak a_814: loaded pointer =
        {-# <./de_facto_memory_model/effective_type_11b.c:14:45, ./de_facto_memory_model/effective_type_11b.c:14:46> #-} let weak a_813: pointer =
          {-# <./de_facto_memory_model/effective_type_11b.c:14:45, ./de_facto_memory_model/effective_type_11b.c:14:46> #-} pure(
            p
          ) in
        load('void*', a_813) in
      let Specified(a_815: pointer) = a_814 in
      let weak a_816: boolean = memop(PtrNe, a_815, NULL(void*)) in
      {-# §6.5.9#3 #-}
      pure(if a_816 then Specified(1) else Specified(0)) in
    pure(
      let Specified(a_811: integer) = a_790 in
      if a_811 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/effective_type_11b.c:15:2, ./de_facto_memory_model/effective_type_11b.c:15:9> #-} {-# §6.5#2 #-}
  bound(
    {-# §6.5.2.2#10, sentence 1 #-}
    {-# <./de_facto_memory_model/effective_type_11b.c:15:2, ./de_facto_memory_model/effective_type_11b.c:15:8> #-} let strong ((a_817: loaded pointer,
    (a_818: ctype, a_819: [ctype], a_820: boolean, a_821: boolean)),
    a_824: loaded pointer, a_826: loaded pointer) =
      {-# §6.5.2.2#4, sentence 2 #-}
      unseq(
        let strong a_789: loaded pointer =
          {-# <./de_facto_memory_model/effective_type_11b.c:15:2, ./de_facto_memory_model/effective_type_11b.c:15:3> #-} pure(
            Specified(Cfunction(f))
          ) in
        pure((a_789, cfunction(a_789)))
      ,
        {-# <./de_facto_memory_model/effective_type_11b.c:15:4, ./de_facto_memory_model/effective_type_11b.c:15:5> #-} let weak a_825: pointer =
          {-# <./de_facto_memory_model/effective_type_11b.c:15:4, ./de_facto_memory_model/effective_type_11b.c:15:5> #-} pure(
            p
          ) in
        load('void*', a_825)
      ,
        {-# <./de_facto_memory_model/effective_type_11b.c:15:6, ./de_facto_memory_model/effective_type_11b.c:15:7> #-} let weak a_827: pointer =
          {-# <./de_facto_memory_model/effective_type_11b.c:15:6, ./de_facto_memory_model/effective_type_11b.c:15:7> #-} pure(
            p
          ) in
        load('void*', a_827)
      ) in
    if not(params_length(a_819) = 2) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_820 \/ not(are_compatible ('void', a_818)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_823: pointer =
          let a_828: ctype = params_nth(a_819, 0) in
          if not(are_compatible ('void*', a_828)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {-# §6.5.2.2#7, sentence 1 #-}
            let weak a_829: pointer = create(Ivalignof('void*'), 'void*') in
            let weak _: unit = store('void*', a_829, a_824) in
            pure(a_829) in
        let strong a_822: pointer =
          let a_830: ctype = params_nth(a_819, 1) in
          if not(are_compatible ('void*', a_830)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {-# §6.5.2.2#7, sentence 1 #-}
            let weak a_831: pointer = create(Ivalignof('void*'), 'void*') in
            let weak _: unit = store('void*', a_831, a_826) in
            pure(a_831) in
        let strong a_832: unit =
          ccall('void (*) (void*, void*)', a_817, a_823, a_822) in
        let strong _: (unit,unit) =
          unseq(kill('void*', a_823), kill('void*', a_822)) in
        pure(a_832)
  ) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/effective_type_11b.c:16:2, ./de_facto_memory_model/effective_type_11b.c:16:17> #-} let strong a_833: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <./de_facto_memory_model/effective_type_11b.c:16:8, ./de_facto_memory_model/effective_type_11b.c:16:16> ./de_facto_memory_model/effective_type_11b.c:16:8 #-} let weak a_841: pointer =
        {-# §6.5.3.2 #-}
        {-# <./de_facto_memory_model/effective_type_11b.c:16:8, ./de_facto_memory_model/effective_type_11b.c:16:16> ./de_facto_memory_model/effective_type_11b.c:16:8 #-} let weak a_834: loaded pointer =
          {-# §6.5.4 #-}
          {-# <./de_facto_memory_model/effective_type_11b.c:16:9, ./de_facto_memory_model/effective_type_11b.c:16:16> ./de_facto_memory_model/effective_type_11b.c:16:9 #-} let weak a_837: loaded pointer =
            {-# <./de_facto_memory_model/effective_type_11b.c:16:15, ./de_facto_memory_model/effective_type_11b.c:16:16> #-} let weak a_839: pointer =
              {-# <./de_facto_memory_model/effective_type_11b.c:16:15, ./de_facto_memory_model/effective_type_11b.c:16:16> #-} pure(
                p
              ) in
            load('void*', a_839) in
          let Specified(a_838: pointer) = a_837 in
          let weak a_840: boolean =
            memop(PtrWellAligned, 'signed int', a_838) in
          pure(
            Specified(if a_840 then
              a_838
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          ) in
        let Specified(a_835: pointer) = a_834 in
        let weak a_836: boolean =
          memop(PtrValidForDeref, 'signed int', a_835) in
        pure(
          if a_836 then a_835 else undef(<<UB043_indirection_invalid_value>>)
        ) in
      load('signed int', a_841)
    ) in
  store('signed int', i, conv_loaded_int('signed int', a_833)) ;
  {-# <./de_facto_memory_model/effective_type_11b.c:17:2, ./de_facto_memory_model/effective_type_11b.c:17:21> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./de_facto_memory_model/effective_type_11b.c:17:2, ./de_facto_memory_model/effective_type_11b.c:17:20> #-} let strong ((a_842: loaded pointer,
      (a_843: ctype, a_844: [ctype], a_845: boolean, a_846: boolean)),
      a_849: loaded pointer, a_853: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_788: loaded pointer =
            {-# <./de_facto_memory_model/effective_type_11b.c:17:2, ./de_facto_memory_model/effective_type_11b.c:17:8> #-} pure(
              Specified(Cfunction(printf_proxy))
            ) in
          pure((a_788, cfunction(a_788)))
        ,
          {-# <./de_facto_memory_model/effective_type_11b.c:17:9, ./de_facto_memory_model/effective_type_11b.c:17:17> #-} let weak a_851: pointer =
            {-# <./de_facto_memory_model/effective_type_11b.c:17:9, ./de_facto_memory_model/effective_type_11b.c:17:17> #-} pure(
              a_850
            ) in
          {-# §6.3.2.1#3 #-}
          let weak a_852: pointer = memop(PtrArrayShift, a_851, 'char', 0) in
          pure(Specified(a_852))
        ,
          {-# <./de_facto_memory_model/effective_type_11b.c:17:18, ./de_facto_memory_model/effective_type_11b.c:17:19> #-} let weak a_854: pointer =
            {-# <./de_facto_memory_model/effective_type_11b.c:17:18, ./de_facto_memory_model/effective_type_11b.c:17:19> #-} pure(
              i
            ) in
          load('signed int', a_854)
        ) in
      if not(params_length(a_844) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_845) \/ not(are_compatible ('signed int', a_843)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_848: pointer =
            let a_855: ctype = params_nth(a_844, 0) in
            if not(are_compatible ('const char*', a_855)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_856: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_856, a_849) in
              pure(a_856) in
          let strong a_847: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_853)) in
          let strong a_857: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_842, a_848,
            [('signed int', a_847)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_848), kill('signed int', a_847)) in
          pure(a_857)
    ) in
  pure(Unit) ;
  kill('void*', p) ;
  kill('signed int', i) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/effective_type_11b.c:12:0, ./de_facto_memory_model/effective_type_11b.c:18:1> ./de_facto_memory_model/effective_type_11b.c:12:4 - ./de_facto_memory_model/effective_type_11b.c:12:8 #-} save ret_787: loaded integer (a_858: loaded integer:= Specified(0)) in
    pure(a_858)

