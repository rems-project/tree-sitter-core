-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_677 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_681 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

-- Globals
glob a_931: pointer [ail_ctype = 'char[14]'] :=
  create_readonly(Ivalignof('char[14]'), 'char[14]', Specified(Array(Specified(conv_int('char',
  79)), Specified(conv_int('char', 114)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 103)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 58)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_979: pointer [ail_ctype = 'char[21]'] :=
  create_readonly(Ivalignof('char[21]'), 'char[21]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 102)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 104)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_1023: pointer [ail_ctype = 'char[21]'] :=
  create_readonly(Ivalignof('char[21]'), 'char[21]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 102)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 104)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_1063: pointer [ail_ctype = 'char[31]'] :=
  create_readonly(Ivalignof('char[31]'), 'char[31]', Specified(Array(Specified(conv_int('char',
  67)), Specified(conv_int('char', 97)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 98)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 107)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_1098: pointer [ail_ctype = 'char[10]'] :=
  create_readonly(Ivalignof('char[10]'), 'char[10]', Specified(Array(Specified(conv_int('char',
  86)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_1127: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  110)), Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0))))

glob a_1131: pointer [ail_ctype = 'char[9]'] :=
  create_readonly(Ivalignof('char[9]'), 'char[9]', Specified(Array(Specified(conv_int('char',
  110)), Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0))))

glob a_1156: pointer [ail_ctype = 'char[4]'] :=
  create_readonly(Ivalignof('char[4]'), 'char[4]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(0))))

glob a_1197: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 48)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 120)), Specified(0))))

glob a_1244: pointer [ail_ctype = 'char[2]'] :=
  create_readonly(Ivalignof('char[2]'), 'char[2]', Specified(Array(Specified(conv_int('char',
  10)), Specified(0))))

glob a_1318: pointer [ail_ctype = 'char[26]'] :=
  create_readonly(Ivalignof('char[26]'), 'char[26]', Specified(Array(Specified(conv_int('char',
  109)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 96)),
  Specified(0))))

glob a_1333: pointer [ail_ctype = 'char[4]'] :=
  create_readonly(Ivalignof('char[4]'), 'char[4]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 35)), Specified(conv_int('char', 112)),
  Specified(0))))

glob a_1373: pointer [ail_ctype = 'char[31]'] :=
  create_readonly(Ivalignof('char[31]'), 'char[31]', Specified(Array(Specified(conv_int('char',
  109)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 96)), Specified(0))))

glob a_1388: pointer [ail_ctype = 'char[27]'] :=
  create_readonly(Ivalignof('char[27]'), 'char[27]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 91)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 80)), Specified(conv_int('char', 44)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 35)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 98)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 93)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 63)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 65)), Specified(0))))

glob a_1429: pointer [ail_ctype = 'char[15]'] :=
  create_readonly(Ivalignof('char[15]'), 'char[15]', Specified(Array(Specified(conv_int('char',
  115)), Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  {-# <./cheri/intptr10a.c:8:0, ./cheri/intptr10a.c:21:1> #-} let strong n: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong u: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  {-# <./cheri/intptr10a.c:9:4, ./cheri/intptr10a.c:9:15> #-} let strong a_917: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <./cheri/intptr10a.c:9:12, ./cheri/intptr10a.c:9:14> #-} pure(
        Specified(42)
      )
    ) in
  store('signed int', n, conv_loaded_int('signed int', a_917)) ;
  {-# <./cheri/intptr10a.c:10:4, ./cheri/intptr10a.c:10:16> #-} let strong a_918: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.3.2#3, sentence 5 #-}
      {-# <./cheri/intptr10a.c:10:13, ./cheri/intptr10a.c:10:15> ./cheri/intptr10a.c:10:13 #-} let weak a_919: pointer =
        {-# <./cheri/intptr10a.c:10:14, ./cheri/intptr10a.c:10:15> #-} pure(n) in
      pure(Specified(a_919))
    ) in
  store('signed int*', p, a_918) ;
  {-# <./cheri/intptr10a.c:12:4, ./cheri/intptr10a.c:12:61> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./cheri/intptr10a.c:12:4, ./cheri/intptr10a.c:12:60> #-} let strong ((a_920: loaded pointer,
      (a_921: ctype, a_922: [ctype], a_923: boolean, a_924: boolean)),
      a_928: loaded pointer, a_930: loaded pointer, a_934: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_916: loaded pointer =
            {-# <./cheri/intptr10a.c:12:4, ./cheri/intptr10a.c:12:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_916, cfunction(a_916)))
        ,
          {-# <./cheri/intptr10a.c:12:12, ./cheri/intptr10a.c:12:20> #-} let weak a_929: pointer =
            {-# <./cheri/intptr10a.c:12:12, ./cheri/intptr10a.c:12:20> #-} pure(
              __stderr
            ) in
          load('struct _IO_FILE*', a_929)
        ,
          {-# <./cheri/intptr10a.c:12:21, ./cheri/intptr10a.c:12:43> #-} let weak a_932: pointer =
            {-# <./cheri/intptr10a.c:12:21, ./cheri/intptr10a.c:12:43> #-} pure(
              a_931
            ) in
          {-# §6.3.2.1#3 #-}
          let weak a_933: pointer = memop(PtrArrayShift, a_932, 'char', 0) in
          pure(Specified(a_933))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <./cheri/intptr10a.c:12:45, ./cheri/intptr10a.c:12:59> #-} let strong ((a_936: loaded pointer,
          (a_937: ctype, a_938: [ctype], a_939: boolean, a_940: boolean)),
          a_942: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_935: loaded pointer =
                {-# <./cheri/intptr10a.c:12:45, ./cheri/intptr10a.c:12:49> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_935, cfunction(a_935)))
            ,
              {-# §6.5.4 #-}
              {-# <./cheri/intptr10a.c:12:50, ./cheri/intptr10a.c:12:58> ./cheri/intptr10a.c:12:50 #-} let weak a_945: pointer =
                {-# <./cheri/intptr10a.c:12:57, ./cheri/intptr10a.c:12:58> #-} pure(
                  p
                ) in
              load('signed int*', a_945)
            ) in
          if not(params_length(a_938) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_939 \/ not(are_compatible ('const char*', a_937)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_941: pointer =
                let a_947: ctype = params_nth(a_938, 0) in
                if not(are_compatible ('void*', a_947)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_948: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_948, a_942) in
                  pure(a_948) in
              let strong a_949: loaded pointer =
                ccall('const char* (*) (void*)', a_936, a_941) in
              kill('void*', a_941) ;
              pure(a_949)
        ) in
      if not(params_length(a_922) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_923) \/ not(are_compatible ('signed int', a_921)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_927: pointer =
            let a_950: ctype = params_nth(a_922, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_950)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_951: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_951, a_928) in
              pure(a_951) in
          let strong a_926: pointer =
            let a_952: ctype = params_nth(a_922, 1) in
            if not(are_compatible ('const char*', a_952)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_953: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_953, a_930) in
              pure(a_953) in
          let strong a_925: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_934) in
          let strong a_954: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_920, a_927, a_926, [('const char*', a_925)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_927)
            ,
              kill('char*', a_926)
            ,
              kill('char*', a_925)
            ) in
          pure(a_954)
    ) in
  pure(Unit) ;
  {-# <./cheri/intptr10a.c:13:4, ./cheri/intptr10a.c:13:31> #-} let strong a_955: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.4 #-}
      {-# <./cheri/intptr10a.c:13:18, ./cheri/intptr10a.c:13:30> ./cheri/intptr10a.c:13:18 #-} let weak a_956: loaded pointer =
        {-# <./cheri/intptr10a.c:13:29, ./cheri/intptr10a.c:13:30> #-} let weak a_958: pointer =
          {-# <./cheri/intptr10a.c:13:29, ./cheri/intptr10a.c:13:30> #-} pure(
            p
          ) in
        load('signed int*', a_958) in
      case a_956 of
        | Specified(a_957: pointer) =>
            let weak a_959: integer =
              memop(IntFromPtr, 'signed int', 'uintptr_t', a_957) in
            pure(Specified(a_959))
        | Unspecified(_: ctype) =>
            pure(Unspecified('uintptr_t'))
      end
    ) in
  store('uintptr_t', u, conv_loaded_int('uintptr_t', a_955)) ;
  {-# <./cheri/intptr10a.c:14:4, ./cheri/intptr10a.c:14:15> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <./cheri/intptr10a.c:14:4, ./cheri/intptr10a.c:14:14> ./cheri/intptr10a.c:14:6 #-} let weak (a_915: pointer,
      a_967: loaded integer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# <./cheri/intptr10a.c:14:4, ./cheri/intptr10a.c:14:5> #-} pure(u)
        ,
          {-# §6.5.7 #-}
          {-# <./cheri/intptr10a.c:14:8, ./cheri/intptr10a.c:14:14> ./cheri/intptr10a.c:14:10 #-} let weak (a_960: loaded integer,
          a_961: loaded integer) =
            unseq(
              {-# <./cheri/intptr10a.c:14:8, ./cheri/intptr10a.c:14:9> #-} let weak a_966: pointer =
                {-# <./cheri/intptr10a.c:14:8, ./cheri/intptr10a.c:14:9> #-} pure(
                  u
                ) in
              load('uintptr_t', a_966)
            ,
              {-# <./cheri/intptr10a.c:14:13, ./cheri/intptr10a.c:14:14> #-} pure(
                Specified(1)
              )
            ) in
          pure(
            case (a_960, a_961) of
              | (_: loaded integer, Unspecified(_: ctype)) =>
                  undef(<<UB036_exceptional_condition>>)
              | (Unspecified(_: ctype), _: loaded integer) =>
                  Unspecified('uintptr_t')
              | (Specified(a_962: integer), Specified(a_963: integer)) =>
                  let a_964: integer = conv_int('uintptr_t', a_962) in
                  let a_965: integer = conv_int('signed int', a_963) in
                  if a_965 < 0 then
                    undef(<<UB051a_negative_shift>>)
                  else
                    if ctype_width('uintptr_t') < a_965 \/
                    ctype_width('uintptr_t') = a_965 then
                      undef(<<UB51b_shift_too_large>>)
                    else
                      Specified(memop(CapAssignValue, memop(DeriveCap[TODO:binary], a_962,
                      a_963), a_964 / 2 ^ a_965))
            end
          )
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('uintptr_t', a_915, conv_loaded_int('uintptr_t', a_967))) in
      pure(conv_loaded_int('uintptr_t', a_967))
    ) in
  pure(Unit) ;
  {-# <./cheri/intptr10a.c:15:4, ./cheri/intptr10a.c:15:68> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./cheri/intptr10a.c:15:4, ./cheri/intptr10a.c:15:67> #-} let strong ((a_968: loaded pointer,
      (a_969: ctype, a_970: [ctype], a_971: boolean, a_972: boolean)),
      a_976: loaded pointer, a_978: loaded pointer, a_982: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_914: loaded pointer =
            {-# <./cheri/intptr10a.c:15:4, ./cheri/intptr10a.c:15:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_914, cfunction(a_914)))
        ,
          {-# <./cheri/intptr10a.c:15:12, ./cheri/intptr10a.c:15:20> #-} let weak a_977: pointer =
            {-# <./cheri/intptr10a.c:15:12, ./cheri/intptr10a.c:15:20> #-} pure(
              __stderr
            ) in
          load('struct _IO_FILE*', a_977)
        ,
          {-# <./cheri/intptr10a.c:15:21, ./cheri/intptr10a.c:15:50> #-} let weak a_980: pointer =
            {-# <./cheri/intptr10a.c:15:21, ./cheri/intptr10a.c:15:50> #-} pure(
              a_979
            ) in
          {-# §6.3.2.1#3 #-}
          let weak a_981: pointer = memop(PtrArrayShift, a_980, 'char', 0) in
          pure(Specified(a_981))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <./cheri/intptr10a.c:15:52, ./cheri/intptr10a.c:15:66> #-} let strong ((a_984: loaded pointer,
          (a_985: ctype, a_986: [ctype], a_987: boolean, a_988: boolean)),
          a_990: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_983: loaded pointer =
                {-# <./cheri/intptr10a.c:15:52, ./cheri/intptr10a.c:15:56> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_983, cfunction(a_983)))
            ,
              {-# §6.5.4 #-}
              {-# <./cheri/intptr10a.c:15:57, ./cheri/intptr10a.c:15:65> ./cheri/intptr10a.c:15:57 #-} let weak a_991: loaded integer =
                {-# <./cheri/intptr10a.c:15:64, ./cheri/intptr10a.c:15:65> #-} let weak a_993: pointer =
                  {-# <./cheri/intptr10a.c:15:64, ./cheri/intptr10a.c:15:65> #-} pure(
                    u
                  ) in
                load('uintptr_t', a_993) in
              case a_991 of
                | Specified(a_992: integer) =>
                    let weak a_994: pointer =
                      memop(PtrFromInt, 'uintptr_t', 'void', a_992) in
                    pure(Specified(a_994))
                | Unspecified(_: ctype) =>
                    pure(Unspecified('void*'))
              end
            ) in
          if not(params_length(a_986) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_987 \/ not(are_compatible ('const char*', a_985)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_989: pointer =
                let a_995: ctype = params_nth(a_986, 0) in
                if not(are_compatible ('void*', a_995)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_996: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_996, a_990) in
                  pure(a_996) in
              let strong a_997: loaded pointer =
                ccall('const char* (*) (void*)', a_984, a_989) in
              kill('void*', a_989) ;
              pure(a_997)
        ) in
      if not(params_length(a_970) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_971) \/ not(are_compatible ('signed int', a_969)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_975: pointer =
            let a_998: ctype = params_nth(a_970, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_998)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_999: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_999, a_976) in
              pure(a_999) in
          let strong a_974: pointer =
            let a_1000: ctype = params_nth(a_970, 1) in
            if not(are_compatible ('const char*', a_1000)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1001: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1001, a_978) in
              pure(a_1001) in
          let strong a_973: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_982) in
          let strong a_1002: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_968, a_975, a_974, [('const char*', a_973)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_975)
            ,
              kill('char*', a_974)
            ,
              kill('char*', a_973)
            ) in
          pure(a_1002)
    ) in
  pure(Unit) ;
  {-# <./cheri/intptr10a.c:16:4, ./cheri/intptr10a.c:16:15> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <./cheri/intptr10a.c:16:4, ./cheri/intptr10a.c:16:14> ./cheri/intptr10a.c:16:6 #-} let weak (a_913: pointer,
      a_1011: loaded integer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# <./cheri/intptr10a.c:16:4, ./cheri/intptr10a.c:16:5> #-} pure(u)
        ,
          {-# §6.5.7 #-}
          {-# <./cheri/intptr10a.c:16:8, ./cheri/intptr10a.c:16:14> ./cheri/intptr10a.c:16:10 #-} let weak (a_1003: loaded integer,
          a_1004: loaded integer) =
            unseq(
              {-# <./cheri/intptr10a.c:16:8, ./cheri/intptr10a.c:16:9> #-} let weak a_1010: pointer =
                {-# <./cheri/intptr10a.c:16:8, ./cheri/intptr10a.c:16:9> #-} pure(
                  u
                ) in
              load('uintptr_t', a_1010)
            ,
              {-# <./cheri/intptr10a.c:16:13, ./cheri/intptr10a.c:16:14> #-} pure(
                Specified(1)
              )
            ) in
          pure(
            case (a_1003, a_1004) of
              | (_: loaded integer, Unspecified(_: ctype)) =>
                  undef(<<UB036_exceptional_condition>>)
              | (Unspecified(_: ctype), _: loaded integer) =>
                  Unspecified('uintptr_t')
              | (Specified(a_1005: integer), Specified(a_1006: integer)) =>
                  let a_1007: integer = conv_int('uintptr_t', a_1005) in
                  let a_1008: integer = conv_int('signed int', a_1006) in
                  if a_1008 < 0 then
                    undef(<<UB051a_negative_shift>>)
                  else
                    if ctype_width('uintptr_t') < a_1008 \/
                    ctype_width('uintptr_t') = a_1008 then
                      undef(<<UB51b_shift_too_large>>)
                    else
                      Specified(memop(CapAssignValue, memop(DeriveCap[TODO:binary], a_1005,
                      a_1006),
                      a_1007 * 2 ^ a_1008 rem_t (Ivmax('uintptr_t') + 1)))
            end
          )
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('uintptr_t', a_913, conv_loaded_int('uintptr_t', a_1011))) in
      pure(conv_loaded_int('uintptr_t', a_1011))
    ) in
  pure(Unit) ;
  {-# <./cheri/intptr10a.c:17:4, ./cheri/intptr10a.c:17:68> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./cheri/intptr10a.c:17:4, ./cheri/intptr10a.c:17:67> #-} let strong ((a_1012: loaded pointer,
      (a_1013: ctype, a_1014: [ctype], a_1015: boolean, a_1016: boolean)),
      a_1020: loaded pointer, a_1022: loaded pointer, a_1026: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_912: loaded pointer =
            {-# <./cheri/intptr10a.c:17:4, ./cheri/intptr10a.c:17:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_912, cfunction(a_912)))
        ,
          {-# <./cheri/intptr10a.c:17:12, ./cheri/intptr10a.c:17:20> #-} let weak a_1021: pointer =
            {-# <./cheri/intptr10a.c:17:12, ./cheri/intptr10a.c:17:20> #-} pure(
              __stderr
            ) in
          load('struct _IO_FILE*', a_1021)
        ,
          {-# <./cheri/intptr10a.c:17:21, ./cheri/intptr10a.c:17:50> #-} let weak a_1024: pointer =
            {-# <./cheri/intptr10a.c:17:21, ./cheri/intptr10a.c:17:50> #-} pure(
              a_1023
            ) in
          {-# §6.3.2.1#3 #-}
          let weak a_1025: pointer =
            memop(PtrArrayShift, a_1024, 'char', 0) in
          pure(Specified(a_1025))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <./cheri/intptr10a.c:17:52, ./cheri/intptr10a.c:17:66> #-} let strong ((a_1028: loaded pointer,
          (a_1029: ctype, a_1030: [ctype], a_1031: boolean, a_1032: boolean)),
          a_1034: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_1027: loaded pointer =
                {-# <./cheri/intptr10a.c:17:52, ./cheri/intptr10a.c:17:56> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_1027, cfunction(a_1027)))
            ,
              {-# §6.5.4 #-}
              {-# <./cheri/intptr10a.c:17:57, ./cheri/intptr10a.c:17:65> ./cheri/intptr10a.c:17:57 #-} let weak a_1035: loaded integer =
                {-# <./cheri/intptr10a.c:17:64, ./cheri/intptr10a.c:17:65> #-} let weak a_1037: pointer =
                  {-# <./cheri/intptr10a.c:17:64, ./cheri/intptr10a.c:17:65> #-} pure(
                    u
                  ) in
                load('uintptr_t', a_1037) in
              case a_1035 of
                | Specified(a_1036: integer) =>
                    let weak a_1038: pointer =
                      memop(PtrFromInt, 'uintptr_t', 'void', a_1036) in
                    pure(Specified(a_1038))
                | Unspecified(_: ctype) =>
                    pure(Unspecified('void*'))
              end
            ) in
          if not(params_length(a_1030) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_1031 \/ not(are_compatible ('const char*', a_1029)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1033: pointer =
                let a_1039: ctype = params_nth(a_1030, 0) in
                if not(are_compatible ('void*', a_1039)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_1040: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_1040, a_1034) in
                  pure(a_1040) in
              let strong a_1041: loaded pointer =
                ccall('const char* (*) (void*)', a_1028, a_1033) in
              kill('void*', a_1033) ;
              pure(a_1041)
        ) in
      if not(params_length(a_1014) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1015) \/ not(are_compatible ('signed int', a_1013)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1019: pointer =
            let a_1042: ctype = params_nth(a_1014, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1042)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1043: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1043, a_1020) in
              pure(a_1043) in
          let strong a_1018: pointer =
            let a_1044: ctype = params_nth(a_1014, 1) in
            if not(are_compatible ('const char*', a_1044)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1045: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1045, a_1022) in
              pure(a_1045) in
          let strong a_1017: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_1026) in
          let strong a_1046: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1012, a_1019, a_1018, [('const char*', a_1017)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1019)
            ,
              kill('char*', a_1018)
            ,
              kill('char*', a_1017)
            ) in
          pure(a_1046)
    ) in
  pure(Unit) ;
  {-# <./cheri/intptr10a.c:18:4, ./cheri/intptr10a.c:18:16> #-} let strong _: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <./cheri/intptr10a.c:18:4, ./cheri/intptr10a.c:18:15> ./cheri/intptr10a.c:18:6 #-} let weak (a_911: pointer,
      a_1051: loaded pointer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# <./cheri/intptr10a.c:18:4, ./cheri/intptr10a.c:18:5> #-} pure(p)
        ,
          {-# §6.5.4 #-}
          {-# <./cheri/intptr10a.c:18:8, ./cheri/intptr10a.c:18:15> ./cheri/intptr10a.c:18:8 #-} let weak a_1047: loaded integer =
            {-# <./cheri/intptr10a.c:18:14, ./cheri/intptr10a.c:18:15> #-} let weak a_1049: pointer =
              {-# <./cheri/intptr10a.c:18:14, ./cheri/intptr10a.c:18:15> #-} pure(
                u
              ) in
            load('uintptr_t', a_1049) in
          case a_1047 of
            | Specified(a_1048: integer) =>
                let weak a_1050: pointer =
                  memop(PtrFromInt, 'uintptr_t', 'signed int', a_1048) in
                pure(Specified(a_1050))
            | Unspecified(_: ctype) =>
                pure(Unspecified('signed int*'))
          end
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('signed int*', a_911, a_1051)) in
      pure(a_1051)
    ) in
  pure(Unit) ;
  {-# <./cheri/intptr10a.c:19:4, ./cheri/intptr10a.c:19:78> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./cheri/intptr10a.c:19:4, ./cheri/intptr10a.c:19:77> #-} let strong ((a_1052: loaded pointer,
      (a_1053: ctype, a_1054: [ctype], a_1055: boolean, a_1056: boolean)),
      a_1060: loaded pointer, a_1062: loaded pointer, a_1066: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_910: loaded pointer =
            {-# <./cheri/intptr10a.c:19:4, ./cheri/intptr10a.c:19:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_910, cfunction(a_910)))
        ,
          {-# <./cheri/intptr10a.c:19:12, ./cheri/intptr10a.c:19:20> #-} let weak a_1061: pointer =
            {-# <./cheri/intptr10a.c:19:12, ./cheri/intptr10a.c:19:20> #-} pure(
              __stderr
            ) in
          load('struct _IO_FILE*', a_1061)
        ,
          {-# <./cheri/intptr10a.c:19:21, ./cheri/intptr10a.c:19:60> #-} let weak a_1064: pointer =
            {-# <./cheri/intptr10a.c:19:21, ./cheri/intptr10a.c:19:60> #-} pure(
              a_1063
            ) in
          {-# §6.3.2.1#3 #-}
          let weak a_1065: pointer =
            memop(PtrArrayShift, a_1064, 'char', 0) in
          pure(Specified(a_1065))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <./cheri/intptr10a.c:19:62, ./cheri/intptr10a.c:19:76> #-} let strong ((a_1068: loaded pointer,
          (a_1069: ctype, a_1070: [ctype], a_1071: boolean, a_1072: boolean)),
          a_1074: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_1067: loaded pointer =
                {-# <./cheri/intptr10a.c:19:62, ./cheri/intptr10a.c:19:66> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_1067, cfunction(a_1067)))
            ,
              {-# §6.5.4 #-}
              {-# <./cheri/intptr10a.c:19:67, ./cheri/intptr10a.c:19:75> ./cheri/intptr10a.c:19:67 #-} let weak a_1077: pointer =
                {-# <./cheri/intptr10a.c:19:74, ./cheri/intptr10a.c:19:75> #-} pure(
                  p
                ) in
              load('signed int*', a_1077)
            ) in
          if not(params_length(a_1070) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_1071 \/ not(are_compatible ('const char*', a_1069)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1073: pointer =
                let a_1079: ctype = params_nth(a_1070, 0) in
                if not(are_compatible ('void*', a_1079)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_1080: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_1080, a_1074) in
                  pure(a_1080) in
              let strong a_1081: loaded pointer =
                ccall('const char* (*) (void*)', a_1068, a_1073) in
              kill('void*', a_1073) ;
              pure(a_1081)
        ) in
      if not(params_length(a_1054) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1055) \/ not(are_compatible ('signed int', a_1053)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1059: pointer =
            let a_1082: ctype = params_nth(a_1054, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1082)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1083: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1083, a_1060) in
              pure(a_1083) in
          let strong a_1058: pointer =
            let a_1084: ctype = params_nth(a_1054, 1) in
            if not(are_compatible ('const char*', a_1084)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1085: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1085, a_1062) in
              pure(a_1085) in
          let strong a_1057: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_1066) in
          let strong a_1086: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1052, a_1059, a_1058, [('const char*', a_1057)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1059)
            ,
              kill('char*', a_1058)
            ,
              kill('char*', a_1057)
            ) in
          pure(a_1086)
    ) in
  pure(Unit) ;
  {-# <./cheri/intptr10a.c:20:4, ./cheri/intptr10a.c:20:39> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./cheri/intptr10a.c:20:4, ./cheri/intptr10a.c:20:38> #-} let strong ((a_1087: loaded pointer,
      (a_1088: ctype, a_1089: [ctype], a_1090: boolean, a_1091: boolean)),
      a_1095: loaded pointer, a_1097: loaded pointer, a_1101: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_909: loaded pointer =
            {-# <./cheri/intptr10a.c:20:4, ./cheri/intptr10a.c:20:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_909, cfunction(a_909)))
        ,
          {-# <./cheri/intptr10a.c:20:12, ./cheri/intptr10a.c:20:20> #-} let weak a_1096: pointer =
            {-# <./cheri/intptr10a.c:20:12, ./cheri/intptr10a.c:20:20> #-} pure(
              __stderr
            ) in
          load('struct _IO_FILE*', a_1096)
        ,
          {-# <./cheri/intptr10a.c:20:21, ./cheri/intptr10a.c:20:33> #-} let weak a_1099: pointer =
            {-# <./cheri/intptr10a.c:20:21, ./cheri/intptr10a.c:20:33> #-} pure(
              a_1098
            ) in
          {-# §6.3.2.1#3 #-}
          let weak a_1100: pointer =
            memop(PtrArrayShift, a_1099, 'char', 0) in
          pure(Specified(a_1100))
        ,
          {-# <./cheri/intptr10a.c:20:35, ./cheri/intptr10a.c:20:37> ./cheri/intptr10a.c:20:35 #-} let weak a_1106: pointer =
            {-# §6.5.3.2 #-}
            {-# <./cheri/intptr10a.c:20:35, ./cheri/intptr10a.c:20:37> ./cheri/intptr10a.c:20:35 #-} let weak a_1102: loaded pointer =
              {-# <./cheri/intptr10a.c:20:36, ./cheri/intptr10a.c:20:37> #-} let weak a_1105: pointer =
                {-# <./cheri/intptr10a.c:20:36, ./cheri/intptr10a.c:20:37> #-} pure(
                  p
                ) in
              load('signed int*', a_1105) in
            case a_1102 of
              | Specified(a_1103: pointer) =>
                  let weak a_1104: boolean =
                    memop(PtrValidForDeref, 'signed int', a_1103) in
                  pure(
                    if a_1104 then
                      a_1103
                    else
                      undef(<<UB043_indirection_invalid_value>>)
                  )
              | Unspecified(_: ctype) =>
                  pure(undef(<<UB043_indirection_invalid_value>>))
            end in
          load('signed int', a_1106)
        ) in
      if not(params_length(a_1089) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1090) \/ not(are_compatible ('signed int', a_1088)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1094: pointer =
            let a_1107: ctype = params_nth(a_1089, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1107)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1108: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1108, a_1095) in
              pure(a_1108) in
          let strong a_1093: pointer =
            let a_1109: ctype = params_nth(a_1089, 1) in
            if not(are_compatible ('const char*', a_1109)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1110: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1110, a_1097) in
              pure(a_1110) in
          let strong a_1092: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_1101)) in
          let strong a_1111: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1087, a_1094, a_1093, [('signed int', a_1092)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1094)
            ,
              kill('char*', a_1093)
            ,
              kill('signed int', a_1092)
            ) in
          pure(a_1111)
    ) in
  pure(Unit) ;
  kill('signed int', n) ;
  kill('signed int*', p) ;
  kill('uintptr_t', u) ;
  pure(Unit) ;
  {-# <./cheri/intptr10a.c:7:0, ./cheri/intptr10a.c:21:1> ./cheri/intptr10a.c:7:4 - ./cheri/intptr10a.c:7:8 #-} save ret_908: loaded integer (a_1112: loaded integer:= Specified(0)) in
    pure(a_1112)

