-- Aggregates






-- Globals
glob a_840: pointer [ail_ctype = 'char[14]'] :=
  let strong a_872: pointer = create(Ivalignof('char[14]'), 'char[14]') in
  store_lock('char[14]', a_872,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 122)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 9)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 122)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 44)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 122)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_873: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_872,
    18446744073701163007) in
  case a_873 of
    | Specified(a_872: pointer) =>
        pure(a_872)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

-- Fun map
proc main (): eff loaded integer :=
  {-# <align2.c:7:0, align2.c:16:1> #-} let strong sizes: pointer =
    create(Ivalignof('size_t[5]'), 'size_t[5]') in
  {-# <align2.c:8:4, align2.c:8:53> #-} let strong a_757: loaded array(integer) =
    {-# §6.5#2 #-}
    bound(
      {-# <other location (Cabs_to_ail.constructValue)> #-} let weak (a_767: loaded integer,
      a_761: loaded integer, a_760: loaded integer, a_759: loaded integer,
      a_758: loaded integer) =
        {-# §6.7.9#23 #-}
        unseq(
          {-# §6.5.4 #-}
          {-# <align2.c:8:41, align2.c:8:51> align2.c:8:41 #-} let weak a_762: loaded integer =
            {-# §6.5.3.3#3 #-}
            {-# <align2.c:8:49, align2.c:8:51> align2.c:8:49 #-} let weak a_765: loaded integer =
              {-# <align2.c:8:50, align2.c:8:51> #-} pure(Specified(1)) in
            pure(
              case a_765 of
                | Specified(a_764: integer) =>
                    Specified(catch_exceptional_condition_sub('signed int', 0, conv_int('signed int',
                    a_764)))
                | Unspecified(_: ctype) =>
                    Unspecified('signed int')
              end
            ) in
          pure(conv_loaded_int('size_t', a_762))
        ,
          {-# <align2.c:8:31, align2.c:8:39> #-} pure(Specified(16777215))
        ,
          {-# <align2.c:8:26, align2.c:8:30> #-} pure(Specified(1000))
        ,
          {-# <align2.c:8:24, align2.c:8:25> #-} pure(Specified(1))
        ,
          {-# <align2.c:8:22, align2.c:8:23> #-} pure(Specified(0))
        ) in
      pure(
        Specified(Array(conv_loaded_int('size_t', a_758),
        conv_loaded_int('size_t', a_759), conv_loaded_int('size_t', a_760),
        conv_loaded_int('size_t', a_761), conv_loaded_int('size_t', a_767)))
      )
    ) in
  store('size_t[5]', sizes, a_757) ;
  {-# <align2.c:10:4, align2.c:15:5> #-} let strong i: pointer =
    create(Ivalignof('unsigned int'), 'unsigned int') in
  {-# <align2.c:10:8, align2.c:10:25> #-} let strong a_768: loaded integer =
    {-# §6.5#2 #-}
    bound({-# <align2.c:10:23, align2.c:10:24> #-} pure(Specified(0))) in
  store('unsigned int', i, conv_loaded_int('unsigned int', a_768)) ;
  {-# <align2.c:10:4, align2.c:15:5> #-} {-# <align2.c:10:4, align2.c:15:5> #-} save while_755: unit (i: pointer:= i,
  sizes: pointer:= sizes) in
    let strong a_769: loaded integer =
      {-# §6.5#2 #-}
      bound(
        {-# <align2.c:10:25, align2.c:10:55> align2.c:10:26 #-} let weak (a_771: loaded integer,
        a_772: loaded integer) =
          unseq(
            {-# §6.5.8 #-}
            {-# <align2.c:10:25, align2.c:10:55> align2.c:10:26 #-} let weak (a_783: loaded integer,
            a_784: loaded integer) =
              unseq(
                {-# <align2.c:10:25, align2.c:10:26> #-} let weak a_776: pointer =
                  {-# <align2.c:10:25, align2.c:10:26> #-} pure(i) in
                load('unsigned int', a_776)
              ,
                {-# §6.5.5 #-}
                {-# <align2.c:10:27, align2.c:10:55> align2.c:10:40 #-} let weak (a_777: loaded integer,
                a_778: loaded integer) =
                  unseq(
                    {-# <align2.c:10:27, align2.c:10:40> align2.c:10:27 #-} pure(
                      Specified(Ivsizeof('size_t[5]'))
                    )
                  ,
                    {-# <align2.c:10:41, align2.c:10:55> align2.c:10:41 #-} pure(
                      Specified(Ivsizeof('size_t'))
                    )
                  ) in
                pure(
                  case (a_777, a_778) of
                    | (Unspecified(_: ctype), _: loaded integer) =>
                        Unspecified('size_t')
                    | (_: loaded integer, Unspecified(_: ctype)) =>
                        undef(<<UB045a_division_by_zero>>)
                    | (Specified(a_779: integer), Specified(a_780: integer)) =>
                        let a_781: integer = conv_int('size_t', a_779) in
                        let a_782: integer = conv_int('size_t', a_780) in
                        if a_782 = 0 then
                          undef(<<UB045a_division_by_zero>>)
                        else
                          if is_representable_integer(conv_int('size_t',
                          a_779) /
                          a_782, 'size_t') then
                            Specified(wrapI('size_t',
                            conv_int('size_t', a_779) / a_782))
                          else
                            undef(<<UB045c_quotient_not_representable>>)
                  end
                )
              ) in
            case (a_783, a_784) of
              | (Specified(a_785: integer), Specified(a_786: integer)) =>
                  {-# §6.5.8#6 #-}
                  pure(
                    if conv_int('unsigned int', a_785) <
                    conv_int('unsigned int', a_786) then
                      Specified(1)
                    else
                      Specified(0)
                  )
              | _: (loaded integer,loaded integer) =>
                  pure(Unspecified('signed int'))
            end
          ,
            {-# <align2.c:10:25, align2.c:10:55> align2.c:10:26 #-} pure(
              Specified(0)
            )
          ) in
        pure(
          case (a_771, a_772) of
            | (Specified(a_773: integer), Specified(a_774: integer)) =>
                if conv_int('signed int', a_773) =
                conv_int('signed int', a_774) then
                  Specified(1)
                else
                  Specified(0)
            | _: (loaded integer,loaded integer) =>
                Unspecified('signed int')
          end
        )
      ) in
    let strong a_756: boolean =
      case a_769 of
        | Specified(a_770: integer) =>
            pure(if not(a_770 = 1) then True else False)
        | Unspecified(_: ctype) =>
            nd(pure(True), pure(False))
      end in
    if a_756 then
      {-# <align2.c:10:4, align2.c:15:5> #-} {-# <align2.c:11:4, align2.c:15:5> #-} let strong m: pointer =
        create(Ivalignof('size_t'), 'size_t') in
      let strong l: pointer = create(Ivalignof('size_t'), 'size_t') in
      {-# <align2.c:12:8, align2.c:12:74> #-} let strong a_788: loaded integer =
        {-# §6.5#2 #-}
        bound(
          {-# <align2.c:12:19, align2.c:12:73> #-} let strong a_805: loaded integer =
            {-# §6.5.4 #-}
            {-# <align2.c:12:64, align2.c:12:72> #-} let weak a_789: loaded integer =
              {-# <align2.c:12:64, align2.c:12:72> #-} let weak a_802: pointer =
                {-# §6.5.3.2 #-}
                {-# <align2.c:12:64, align2.c:12:72> #-} let weak a_791: loaded pointer =
                  {-# §6.5.6 #-}
                  {-# <align2.c:12:64, align2.c:12:72> #-} let weak (a_794: loaded pointer,
                  a_796: loaded integer) =
                    unseq(
                      {-# <align2.c:12:64, align2.c:12:69> #-} let weak a_799: pointer =
                        {-# <align2.c:12:64, align2.c:12:69> #-} pure(sizes) in
                      {-# §6.3.2.1#3 #-}
                      let weak a_800: pointer =
                        memop(PtrArrayShift, a_799, 'size_t', 0) in
                      pure(Specified(a_800))
                    ,
                      {-# <align2.c:12:70, align2.c:12:71> #-} let weak a_801: pointer =
                        {-# <align2.c:12:70, align2.c:12:71> #-} pure(i) in
                      load('unsigned int', a_801)
                    ) in
                  case (a_794, a_796) of
                    | (Specified(a_795: pointer), Specified(a_797: integer)) =>
                        let weak a_798: pointer =
                          memop(PtrArrayShift, a_795, 'size_t', a_797) in
                        pure(Specified(a_798))
                    | _: (loaded pointer,loaded integer) =>
                        pure(undef(<<UB_CERB004_unspecified__pointer_add>>))
                  end in
                case a_791 of
                  | Specified(a_792: pointer) =>
                      let weak a_793: boolean =
                        memop(PtrValidForDeref, 'size_t', a_792) in
                      pure(
                        if a_793 then
                          a_792
                        else
                          undef(<<UB043_indirection_invalid_value>>)
                      )
                  | Unspecified(_: ctype) =>
                      pure(undef(<<UB043_indirection_invalid_value>>))
                end in
              load('size_t', a_802) in
            pure(conv_loaded_int('size_t', a_789)) in
          case a_805 of
            | Specified(a_806: integer) =>
                memop(cheri_cheri_representable_alignment_mask['size_t (size_t)'], a_806)
            | _: loaded integer =>
                pure(undef(<<DUMMY(Elab, CHERI intrinsics (unspec))>>))
          end
        ) in
      store('size_t', m, conv_loaded_int('size_t', a_788)) ;
      {-# <align2.c:13:8, align2.c:13:66> #-} let strong a_807: loaded integer =
        {-# §6.5#2 #-}
        bound(
          {-# <align2.c:13:19, align2.c:13:65> #-} let strong a_824: loaded integer =
            {-# §6.5.4 #-}
            {-# <align2.c:13:56, align2.c:13:64> #-} let weak a_808: loaded integer =
              {-# <align2.c:13:56, align2.c:13:64> #-} let weak a_821: pointer =
                {-# §6.5.3.2 #-}
                {-# <align2.c:13:56, align2.c:13:64> #-} let weak a_810: loaded pointer =
                  {-# §6.5.6 #-}
                  {-# <align2.c:13:56, align2.c:13:64> #-} let weak (a_813: loaded pointer,
                  a_815: loaded integer) =
                    unseq(
                      {-# <align2.c:13:56, align2.c:13:61> #-} let weak a_818: pointer =
                        {-# <align2.c:13:56, align2.c:13:61> #-} pure(sizes) in
                      {-# §6.3.2.1#3 #-}
                      let weak a_819: pointer =
                        memop(PtrArrayShift, a_818, 'size_t', 0) in
                      pure(Specified(a_819))
                    ,
                      {-# <align2.c:13:62, align2.c:13:63> #-} let weak a_820: pointer =
                        {-# <align2.c:13:62, align2.c:13:63> #-} pure(i) in
                      load('unsigned int', a_820)
                    ) in
                  case (a_813, a_815) of
                    | (Specified(a_814: pointer), Specified(a_816: integer)) =>
                        let weak a_817: pointer =
                          memop(PtrArrayShift, a_814, 'size_t', a_816) in
                        pure(Specified(a_817))
                    | _: (loaded pointer,loaded integer) =>
                        pure(undef(<<UB_CERB004_unspecified__pointer_add>>))
                  end in
                case a_810 of
                  | Specified(a_811: pointer) =>
                      let weak a_812: boolean =
                        memop(PtrValidForDeref, 'size_t', a_811) in
                      pure(
                        if a_812 then
                          a_811
                        else
                          undef(<<UB043_indirection_invalid_value>>)
                      )
                  | Unspecified(_: ctype) =>
                      pure(undef(<<UB043_indirection_invalid_value>>))
                end in
              load('size_t', a_821) in
            pure(conv_loaded_int('size_t', a_808)) in
          case a_824 of
            | Specified(a_825: integer) =>
                memop(cheri_cheri_representable_length['size_t (size_t)'], a_825)
            | _: loaded integer =>
                pure(undef(<<DUMMY(Elab, CHERI intrinsics (unspec))>>))
          end
        ) in
      store('size_t', l, conv_loaded_int('size_t', a_807)) ;
      {-# <align2.c:14:8, align2.c:14:57> #-} let strong _: loaded integer =
        {-# §6.5#2 #-}
        bound(
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <align2.c:14:8, align2.c:14:56> #-} let strong ((a_827: loaded pointer,
          (a_828: ctype, a_829: [ctype], a_830: boolean, a_831: boolean)),
          a_837: loaded pointer, a_839: loaded pointer, a_843: loaded integer,
          a_856: loaded integer, a_858: loaded integer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_826: loaded pointer =
                {-# <align2.c:14:8, align2.c:14:15> #-} pure(
                  Specified(Cfunction(fprintf))
                ) in
              pure((a_826, cfunction(a_826)))
            ,
              {-# <align2.c:14:16, align2.c:14:24> #-} let weak a_838: pointer =
                {-# <align2.c:14:16, align2.c:14:24> #-} pure(__stderr) in
              load('struct _IO_FILE*', a_838)
            ,
              {-# <align2.c:14:25, align2.c:14:42> #-} let weak a_841: pointer =
                {-# <align2.c:14:25, align2.c:14:42> #-} pure(a_840) in
              {-# §6.3.2.1#3 #-}
              let weak a_842: pointer =
                memop(PtrArrayShift, a_841, 'char', 0) in
              pure(Specified(a_842))
            ,
              {-# <align2.c:14:43, align2.c:14:51> #-} let weak a_855: pointer =
                {-# §6.5.3.2 #-}
                {-# <align2.c:14:43, align2.c:14:51> #-} let weak a_844: loaded pointer =
                  {-# §6.5.6 #-}
                  {-# <align2.c:14:43, align2.c:14:51> #-} let weak (a_847: loaded pointer,
                  a_849: loaded integer) =
                    unseq(
                      {-# <align2.c:14:43, align2.c:14:48> #-} let weak a_852: pointer =
                        {-# <align2.c:14:43, align2.c:14:48> #-} pure(sizes) in
                      {-# §6.3.2.1#3 #-}
                      let weak a_853: pointer =
                        memop(PtrArrayShift, a_852, 'size_t', 0) in
                      pure(Specified(a_853))
                    ,
                      {-# <align2.c:14:49, align2.c:14:50> #-} let weak a_854: pointer =
                        {-# <align2.c:14:49, align2.c:14:50> #-} pure(i) in
                      load('unsigned int', a_854)
                    ) in
                  case (a_847, a_849) of
                    | (Specified(a_848: pointer), Specified(a_850: integer)) =>
                        let weak a_851: pointer =
                          memop(PtrArrayShift, a_848, 'size_t', a_850) in
                        pure(Specified(a_851))
                    | _: (loaded pointer,loaded integer) =>
                        pure(undef(<<UB_CERB004_unspecified__pointer_add>>))
                  end in
                case a_844 of
                  | Specified(a_845: pointer) =>
                      let weak a_846: boolean =
                        memop(PtrValidForDeref, 'size_t', a_845) in
                      pure(
                        if a_846 then
                          a_845
                        else
                          undef(<<UB043_indirection_invalid_value>>)
                      )
                  | Unspecified(_: ctype) =>
                      pure(undef(<<UB043_indirection_invalid_value>>))
                end in
              load('size_t', a_855)
            ,
              {-# <align2.c:14:52, align2.c:14:53> #-} let weak a_857: pointer =
                {-# <align2.c:14:52, align2.c:14:53> #-} pure(m) in
              load('size_t', a_857)
            ,
              {-# <align2.c:14:54, align2.c:14:55> #-} let weak a_859: pointer =
                {-# <align2.c:14:54, align2.c:14:55> #-} pure(l) in
              load('size_t', a_859)
            ) in
          if not(params_length(a_829) <= 5) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if not(a_830) \/ not(are_compatible ('signed int', a_828)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_836: pointer =
                let a_860: ctype = params_nth(a_829, 0) in
                if not(are_compatible ('struct _IO_FILE*', a_860)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_861: pointer =
                    create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                  let weak _: unit =
                    store('struct _IO_FILE*', a_861, a_837) in
                  pure(a_861) in
              let strong a_835: pointer =
                let a_862: ctype = params_nth(a_829, 1) in
                if not(are_compatible ('const char*', a_862)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_863: pointer =
                    create(Ivalignof('const char*'), 'const char*') in
                  let weak _: unit = store('const char*', a_863, a_839) in
                  pure(a_863) in
              let strong a_834: pointer =
                {-# §6.5.2.2#7, sentences 2 and 3 #-}
                pcall(create_and_store, 'size_t',
                conv_loaded_int('size_t', a_843)) in
              let strong a_833: pointer =
                {-# §6.5.2.2#7, sentences 2 and 3 #-}
                pcall(create_and_store, 'size_t',
                conv_loaded_int('size_t', a_856)) in
              let strong a_832: pointer =
                {-# §6.5.2.2#7, sentences 2 and 3 #-}
                pcall(create_and_store, 'size_t',
                conv_loaded_int('size_t', a_858)) in
              let strong a_864: loaded integer =
                ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
                a_827, a_836, a_835,
                [('size_t', a_834), ('size_t', a_833), ('size_t', a_832)]) in
              let strong _: (unit,unit,unit,unit,unit) =
                unseq(
                  kill('struct _IO_FILE*', a_836)
                ,
                  kill('char*', a_835)
                ,
                  kill('size_t', a_834)
                ,
                  kill('size_t', a_833)
                ,
                  kill('size_t', a_832)
                ) in
              pure(a_864)
        ) in
      pure(Unit) ;
      {-# <align2.c:10:4, align2.c:15:5> #-} save __cerb_continue0: unit (m: pointer:= m,
      l: pointer:= l, i: pointer:= i, sizes: pointer:= sizes) in
        {-# <unknown location> #-} let strong _: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# §6.5.2.4#2, sentence 3 #-}
            {-# §6.5.2.4#2, sentence 1 #-}
            {-# §6.5.2.4 #-}
            {-# <align2.c:10:56, align2.c:10:59> align2.c:10:57 #-} let weak a_865: pointer =
              {-# <align2.c:10:56, align2.c:10:57> #-} pure(i) in
            seq_rmw('unsigned int', a_865, a_866 => case a_866 of
              | Specified(a_867: integer) =>
                  Specified(conv_int('unsigned int',
                  wrapI_add('unsigned int', conv_int('unsigned int', a_867), 1)))
              | Unspecified(_: ctype) =>
                  Unspecified('unsigned int')
            end)
          ) in
        pure(Unit) ;
      kill('size_t', m) ;
      kill('size_t', l) ;
      pure(Unit) ;
      {-# <align2.c:10:4, align2.c:15:5> #-} save continue_753: unit (i: pointer:= i,
      sizes: pointer:= sizes) in
        {-# <align2.c:10:4, align2.c:15:5> #-} pure(Unit) ;
      pure(Unit) ;
      run while_755(i, sizes)
    else
      pure(Unit) ;
  {-# <align2.c:10:4, align2.c:15:5> #-} save break_754: unit (i: pointer:= i,
  sizes: pointer:= sizes) in
    {-# <align2.c:10:4, align2.c:15:5> #-} pure(Unit) ;
  pure(Unit) ;
  kill('unsigned int', i) ;
  pure(Unit) ;
  kill('size_t[5]', sizes) ;
  pure(Unit) ;
  {-# <align2.c:6:0, align2.c:16:1> align2.c:6:4 - align2.c:6:8 #-} save ret_752: loaded integer (a_868: loaded integer:= Specified(0)) in
    pure(a_868)

