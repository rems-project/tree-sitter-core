-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

def struct __cerbty_unnamed_tag_746 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_750 :=
  c1: 'char'
  f1: 'float'

def struct __cerbty_unnamed_tag_752 :=
  c2: 'char'
  f2: 'float'

-- Globals
glob a_831: pointer [ail_ctype = 'char[19]'] :=
  create_readonly(Ivalignof('char[19]'), 'char[19]', Specified(Array(Specified(conv_int('char',
  40)), Specified(conv_int('char', 40)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 62)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 50)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  {-# <./de_facto_memory_model/effective_type_8.c:7:11, ./de_facto_memory_model/effective_type_8.c:16:1> #-} let strong p: pointer =
    create(Ivalignof('void*'), 'void*') in
  {-# <./de_facto_memory_model/effective_type_8.c:8:2, ./de_facto_memory_model/effective_type_8.c:8:35> #-} {-# §6.5#2 #-}
  bound(
    {-# <./de_facto_memory_model/effective_type_8.c:8:2, ./de_facto_memory_model/effective_type_8.c:8:34> #-} let strong a_765: loaded integer =
      {-# <./de_facto_memory_model/effective_type_8.c:8:9, ./de_facto_memory_model/effective_type_8.c:8:33> ./de_facto_memory_model/effective_type_8.c:8:20 #-} let weak (a_768: loaded integer,
      a_769: loaded integer) =
        unseq(
          {-# <./de_facto_memory_model/effective_type_8.c:8:9, ./de_facto_memory_model/effective_type_8.c:8:20> ./de_facto_memory_model/effective_type_8.c:8:9 #-} pure(
            Specified(Ivsizeof('struct __cerbty_unnamed_tag_750'))
          )
        ,
          {-# <./de_facto_memory_model/effective_type_8.c:8:22, ./de_facto_memory_model/effective_type_8.c:8:33> ./de_facto_memory_model/effective_type_8.c:8:22 #-} pure(
            Specified(Ivsizeof('struct __cerbty_unnamed_tag_752'))
          )
        ) in
      pure(
        let (Specified(a_770: integer), Specified(a_771: integer)) =
          (a_768, a_769) in
        if conv_int('size_t', a_770) = conv_int('size_t', a_771) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_766: integer) = a_765 in
      if a_766 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/effective_type_8.c:9:2, ./de_facto_memory_model/effective_type_8.c:9:45> #-} {-# §6.5#2 #-}
  bound(
    {-# <./de_facto_memory_model/effective_type_8.c:9:2, ./de_facto_memory_model/effective_type_8.c:9:44> #-} let strong a_764: loaded integer =
      {-# <./de_facto_memory_model/effective_type_8.c:9:9, ./de_facto_memory_model/effective_type_8.c:9:43> ./de_facto_memory_model/effective_type_8.c:9:25 #-} let weak (a_775: loaded integer,
      a_776: loaded integer) =
        unseq(
          {-# <./de_facto_memory_model/effective_type_8.c:9:9, ./de_facto_memory_model/effective_type_8.c:9:25> #-} pure(
            Specified(0)
          )
        ,
          {-# <./de_facto_memory_model/effective_type_8.c:9:27, ./de_facto_memory_model/effective_type_8.c:9:43> #-} pure(
            Specified(0)
          )
        ) in
      pure(
        let (Specified(a_777: integer), Specified(a_778: integer)) =
          (a_775, a_776) in
        if conv_int('size_t', a_777) = conv_int('size_t', a_778) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_773: integer) = a_764 in
      if a_773 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/effective_type_8.c:10:2, ./de_facto_memory_model/effective_type_8.c:10:45> #-} {-# §6.5#2 #-}
  bound(
    {-# <./de_facto_memory_model/effective_type_8.c:10:2, ./de_facto_memory_model/effective_type_8.c:10:44> #-} let strong a_763: loaded integer =
      {-# <./de_facto_memory_model/effective_type_8.c:10:9, ./de_facto_memory_model/effective_type_8.c:10:43> ./de_facto_memory_model/effective_type_8.c:10:25 #-} let weak (a_782: loaded integer,
      a_783: loaded integer) =
        unseq(
          {-# <./de_facto_memory_model/effective_type_8.c:10:9, ./de_facto_memory_model/effective_type_8.c:10:25> #-} pure(
            Specified(8)
          )
        ,
          {-# <./de_facto_memory_model/effective_type_8.c:10:27, ./de_facto_memory_model/effective_type_8.c:10:43> #-} pure(
            Specified(8)
          )
        ) in
      pure(
        let (Specified(a_784: integer), Specified(a_785: integer)) =
          (a_782, a_783) in
        if conv_int('size_t', a_784) = conv_int('size_t', a_785) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_780: integer) = a_763 in
      if a_780 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/effective_type_8.c:11:2, ./de_facto_memory_model/effective_type_8.c:11:32> #-} let strong a_787: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./de_facto_memory_model/effective_type_8.c:11:12, ./de_facto_memory_model/effective_type_8.c:11:31> #-} let strong ((a_789: loaded pointer,
      (a_790: ctype, a_791: [ctype], a_792: boolean, a_793: boolean)),
      a_795: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_788: loaded pointer =
            {-# <./de_facto_memory_model/effective_type_8.c:11:12, ./de_facto_memory_model/effective_type_8.c:11:18> #-} pure(
              Specified(Cfunction(malloc_proxy))
            ) in
          pure((a_788, cfunction(a_788)))
        ,
          {-# <./de_facto_memory_model/effective_type_8.c:11:19, ./de_facto_memory_model/effective_type_8.c:11:30> ./de_facto_memory_model/effective_type_8.c:11:19 #-} pure(
            Specified(Ivsizeof('struct __cerbty_unnamed_tag_750'))
          )
        ) in
      if not(params_length(a_791) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_792 \/ not(are_compatible ('void*', a_790)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_794: pointer =
            let a_796: ctype = params_nth(a_791, 0) in
            if not(are_compatible ('size_t', a_796)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_797: pointer =
                create(Ivalignof('size_t'), 'size_t') in
              let weak _: unit =
                store('size_t', a_797, conv_loaded_int('size_t', a_795)) in
              pure(a_797) in
          let strong a_798: loaded pointer =
            ccall('void* (*) (size_t)', a_789, a_794) in
          kill('size_t', a_794) ;
          pure(a_798)
    ) in
  store('void*', p, a_787) ;
  {-# <./de_facto_memory_model/effective_type_8.c:11:33, ./de_facto_memory_model/effective_type_8.c:11:62> #-} {-# §6.5#2 #-}
  bound(
    {-# <./de_facto_memory_model/effective_type_8.c:11:33, ./de_facto_memory_model/effective_type_8.c:11:61> #-} let strong a_762: loaded integer =
      {-# <./de_facto_memory_model/effective_type_8.c:11:41, ./de_facto_memory_model/effective_type_8.c:11:60> ./de_facto_memory_model/effective_type_8.c:11:43 #-} let weak a_802: loaded pointer =
        {-# <./de_facto_memory_model/effective_type_8.c:11:41, ./de_facto_memory_model/effective_type_8.c:11:42> #-} let weak a_801: pointer =
          {-# <./de_facto_memory_model/effective_type_8.c:11:41, ./de_facto_memory_model/effective_type_8.c:11:42> #-} pure(
            p
          ) in
        load('void*', a_801) in
      let Specified(a_803: pointer) = a_802 in
      let weak a_804: boolean = memop(PtrNe, a_803, NULL(void*)) in
      {-# §6.5.9#3 #-}
      pure(if a_804 then Specified(1) else Specified(0)) in
    pure(
      let Specified(a_799: integer) = a_762 in
      if a_799 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/effective_type_8.c:12:2, ./de_facto_memory_model/effective_type_8.c:12:23> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <./de_facto_memory_model/effective_type_8.c:12:2, ./de_facto_memory_model/effective_type_8.c:12:22> ./de_facto_memory_model/effective_type_8.c:12:17 #-} let weak (a_761: pointer,
      a_813: loaded integer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# §6.5.2.3#4, sentence 2 #-}
          {-# <./de_facto_memory_model/effective_type_8.c:12:2, ./de_facto_memory_model/effective_type_8.c:12:16> ./de_facto_memory_model/effective_type_8.c:12:12 #-} let strong a_805: loaded pointer =
            {-# §6.5.4 #-}
            {-# <./de_facto_memory_model/effective_type_8.c:12:2, ./de_facto_memory_model/effective_type_8.c:12:12> #-} let weak a_809: loaded pointer =
              {-# <./de_facto_memory_model/effective_type_8.c:12:10, ./de_facto_memory_model/effective_type_8.c:12:11> #-} let weak a_811: pointer =
                {-# <./de_facto_memory_model/effective_type_8.c:12:10, ./de_facto_memory_model/effective_type_8.c:12:11> #-} pure(
                  p
                ) in
              load('void*', a_811) in
            let Specified(a_810: pointer) = a_809 in
            let weak a_812: boolean =
              memop(PtrWellAligned, 'struct __cerbty_unnamed_tag_750', a_810) in
            pure(
              Specified(if a_812 then
                a_810
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            ) in
          let Specified(a_806: pointer) = a_805 in
          let weak a_807: boolean =
            memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_750', a_806) in
          pure(
            if a_807 then
              member_shift(a_806, __cerbty_unnamed_tag_750, .c1)
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          {-# <./de_facto_memory_model/effective_type_8.c:12:19, ./de_facto_memory_model/effective_type_8.c:12:22> #-} pure(
            Specified(65)
          )
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('char', a_761, conv_loaded_int('char', a_813))) in
      pure(conv_loaded_int('char', a_813))
    ) in
  pure(Unit) ;
  {-# <./de_facto_memory_model/effective_type_8.c:14:2, ./de_facto_memory_model/effective_type_8.c:14:23> #-} let strong _: loaded floating =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <./de_facto_memory_model/effective_type_8.c:14:2, ./de_facto_memory_model/effective_type_8.c:14:22> ./de_facto_memory_model/effective_type_8.c:14:17 #-} let weak (a_760: pointer,
      a_822: loaded floating) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# §6.5.2.3#4, sentence 2 #-}
          {-# <./de_facto_memory_model/effective_type_8.c:14:2, ./de_facto_memory_model/effective_type_8.c:14:16> ./de_facto_memory_model/effective_type_8.c:14:12 #-} let strong a_814: loaded pointer =
            {-# §6.5.4 #-}
            {-# <./de_facto_memory_model/effective_type_8.c:14:2, ./de_facto_memory_model/effective_type_8.c:14:12> #-} let weak a_818: loaded pointer =
              {-# <./de_facto_memory_model/effective_type_8.c:14:10, ./de_facto_memory_model/effective_type_8.c:14:11> #-} let weak a_820: pointer =
                {-# <./de_facto_memory_model/effective_type_8.c:14:10, ./de_facto_memory_model/effective_type_8.c:14:11> #-} pure(
                  p
                ) in
              load('void*', a_820) in
            let Specified(a_819: pointer) = a_818 in
            let weak a_821: boolean =
              memop(PtrWellAligned, 'struct __cerbty_unnamed_tag_752', a_819) in
            pure(
              Specified(if a_821 then
                a_819
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            ) in
          let Specified(a_815: pointer) = a_814 in
          let weak a_816: boolean =
            memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_752', a_815) in
          pure(
            if a_816 then
              member_shift(a_815, __cerbty_unnamed_tag_752, .f2)
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          {-# <./de_facto_memory_model/effective_type_8.c:14:19, ./de_facto_memory_model/effective_type_8.c:14:22> #-} pure(
            Specified(1.)
          )
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('float', a_760, a_822)) in
      pure(a_822)
    ) in
  pure(Unit) ;
  {-# <./de_facto_memory_model/effective_type_8.c:15:2, ./de_facto_memory_model/effective_type_8.c:15:47> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./de_facto_memory_model/effective_type_8.c:15:2, ./de_facto_memory_model/effective_type_8.c:15:46> #-} let strong ((a_823: loaded pointer,
      (a_824: ctype, a_825: [ctype], a_826: boolean, a_827: boolean)),
      a_830: loaded pointer, a_834: loaded floating) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_759: loaded pointer =
            {-# <./de_facto_memory_model/effective_type_8.c:15:2, ./de_facto_memory_model/effective_type_8.c:15:8> #-} pure(
              Specified(Cfunction(printf_proxy))
            ) in
          pure((a_759, cfunction(a_759)))
        ,
          {-# <./de_facto_memory_model/effective_type_8.c:15:9, ./de_facto_memory_model/effective_type_8.c:15:30> #-} let weak a_832: pointer =
            {-# <./de_facto_memory_model/effective_type_8.c:15:9, ./de_facto_memory_model/effective_type_8.c:15:30> #-} pure(
              a_831
            ) in
          {-# §6.3.2.1#3 #-}
          let weak a_833: pointer = memop(PtrArrayShift, a_832, 'char', 0) in
          pure(Specified(a_833))
        ,
          {-# <./de_facto_memory_model/effective_type_8.c:15:31, ./de_facto_memory_model/effective_type_8.c:15:45> ./de_facto_memory_model/effective_type_8.c:15:41 #-} let weak a_843: pointer =
            {-# §6.5.2.3#4, sentence 2 #-}
            {-# <./de_facto_memory_model/effective_type_8.c:15:31, ./de_facto_memory_model/effective_type_8.c:15:45> ./de_facto_memory_model/effective_type_8.c:15:41 #-} let strong a_835: loaded pointer =
              {-# §6.5.4 #-}
              {-# <./de_facto_memory_model/effective_type_8.c:15:31, ./de_facto_memory_model/effective_type_8.c:15:41> #-} let weak a_839: loaded pointer =
                {-# <./de_facto_memory_model/effective_type_8.c:15:39, ./de_facto_memory_model/effective_type_8.c:15:40> #-} let weak a_841: pointer =
                  {-# <./de_facto_memory_model/effective_type_8.c:15:39, ./de_facto_memory_model/effective_type_8.c:15:40> #-} pure(
                    p
                  ) in
                load('void*', a_841) in
              let Specified(a_840: pointer) = a_839 in
              let weak a_842: boolean =
                memop(PtrWellAligned, 'struct __cerbty_unnamed_tag_752', a_840) in
              pure(
                Specified(if a_842 then
                  a_840
                else
                  undef(<<UB025_misaligned_pointer_conversion>>))
              ) in
            let Specified(a_836: pointer) = a_835 in
            let weak a_837: boolean =
              memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_752', a_836) in
            pure(
              if a_837 then
                member_shift(a_836, __cerbty_unnamed_tag_752, .f2)
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('float', a_843)
        ) in
      if not(params_length(a_825) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_826) \/ not(are_compatible ('signed int', a_824)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_829: pointer =
            let a_844: ctype = params_nth(a_825, 0) in
            if not(are_compatible ('const char*', a_844)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_845: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_845, a_830) in
              pure(a_845) in
          let strong a_828: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'double', a_834) in
          let strong a_846: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_823, a_829,
            [('double', a_828)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_829), kill('double', a_828)) in
          pure(a_846)
    ) in
  pure(Unit) ;
  kill('void*', p) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/effective_type_8.c:7:0, ./de_facto_memory_model/effective_type_8.c:16:1> ./de_facto_memory_model/effective_type_8.c:7:4 - ./de_facto_memory_model/effective_type_8.c:7:8 #-} save ret_758: loaded integer (a_847: loaded integer:= Specified(0)) in
    pure(a_847)

