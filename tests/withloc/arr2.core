-- Aggregates
def struct __cerbty_unnamed_tag_534 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_538 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

-- Globals
glob a_932: pointer [ail_ctype = 'char[14]'] :=
  create_readonly(Ivalignof('char[14]'), 'char[14]', Specified(Array(Specified(conv_int('char',
  79)), Specified(conv_int('char', 114)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 103)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 58)),
  Specified(conv_int('char', 9)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_974: pointer [ail_ctype = 'char[14]'] :=
  create_readonly(Ivalignof('char[14]'), 'char[14]', Specified(Array(Specified(conv_int('char',
  77)), Specified(conv_int('char', 111)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 58)),
  Specified(conv_int('char', 9)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_1009: pointer [ail_ctype = 'char[10]'] :=
  create_readonly(Ivalignof('char[10]'), 'char[10]', Specified(Array(Specified(conv_int('char',
  86)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_1041: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  110)), Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0))))

glob a_1045: pointer [ail_ctype = 'char[9]'] :=
  create_readonly(Ivalignof('char[9]'), 'char[9]', Specified(Array(Specified(conv_int('char',
  110)), Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0))))

glob a_1070: pointer [ail_ctype = 'char[4]'] :=
  create_readonly(Ivalignof('char[4]'), 'char[4]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(0))))

glob a_1111: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 48)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 120)), Specified(0))))

glob a_1158: pointer [ail_ctype = 'char[2]'] :=
  create_readonly(Ivalignof('char[2]'), 'char[2]', Specified(Array(Specified(conv_int('char',
  10)), Specified(0))))

glob a_1232: pointer [ail_ctype = 'char[26]'] :=
  create_readonly(Ivalignof('char[26]'), 'char[26]', Specified(Array(Specified(conv_int('char',
  109)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 96)),
  Specified(0))))

glob a_1247: pointer [ail_ctype = 'char[4]'] :=
  create_readonly(Ivalignof('char[4]'), 'char[4]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 35)), Specified(conv_int('char', 112)),
  Specified(0))))

glob a_1287: pointer [ail_ctype = 'char[31]'] :=
  create_readonly(Ivalignof('char[31]'), 'char[31]', Specified(Array(Specified(conv_int('char',
  109)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 96)), Specified(0))))

glob a_1302: pointer [ail_ctype = 'char[27]'] :=
  create_readonly(Ivalignof('char[27]'), 'char[27]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 91)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 80)), Specified(conv_int('char', 44)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 35)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 98)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 93)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 63)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 65)), Specified(0))))

glob a_1343: pointer [ail_ctype = 'char[15]'] :=
  create_readonly(Ivalignof('char[15]'), 'char[15]', Specified(Array(Specified(conv_int('char',
  115)), Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  {-# <./cheri/arr2.c:7:0, ./cheri/arr2.c:14:1> #-} let strong arr: pointer =
    create(Ivalignof('signed int[2]'), 'signed int[2]') in
  let strong x: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  {-# <./cheri/arr2.c:8:4, ./cheri/arr2.c:8:24> #-} let strong a_912: loaded array(integer) =
    {-# §6.5#2 #-}
    bound(
      {-# <other location (Cabs_to_ail.constructValue)> #-} let weak (a_914: loaded integer,
      a_913: loaded integer) =
        {-# §6.7.9#23 #-}
        unseq(
          {-# <./cheri/arr2.c:8:20, ./cheri/arr2.c:8:22> #-} pure(
            Specified(43)
          )
        ,
          {-# <./cheri/arr2.c:8:17, ./cheri/arr2.c:8:19> #-} pure(
            Specified(42)
          )
        ) in
      pure(
        Specified(Array(conv_loaded_int('signed int', a_913),
        conv_loaded_int('signed int', a_914)))
      )
    ) in
  store('signed int[2]', arr, a_912) ;
  {-# <./cheri/arr2.c:9:4, ./cheri/arr2.c:9:31> #-} let strong a_915: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.4 #-}
      {-# <./cheri/arr2.c:9:17, ./cheri/arr2.c:9:30> ./cheri/arr2.c:9:17 #-} let weak a_916: loaded pointer =
        {-# <./cheri/arr2.c:9:27, ./cheri/arr2.c:9:30> #-} let weak a_918: pointer =
          {-# <./cheri/arr2.c:9:27, ./cheri/arr2.c:9:30> #-} pure(arr) in
        {-# §6.3.2.1#3 #-}
        let weak a_919: pointer =
          memop(PtrArrayShift, a_918, 'signed int', 0) in
        pure(Specified(a_919)) in
      case a_916 of
        | Specified(a_917: pointer) =>
            let weak a_920: integer =
              memop(IntFromPtr, 'signed int', 'intptr_t', a_917) in
            pure(Specified(a_920))
        | Unspecified(_: ctype) =>
            pure(Unspecified('intptr_t'))
      end
    ) in
  store('intptr_t', x, conv_loaded_int('intptr_t', a_915)) ;
  {-# <./cheri/arr2.c:10:4, ./cheri/arr2.c:10:63> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./cheri/arr2.c:10:4, ./cheri/arr2.c:10:62> #-} let strong ((a_921: loaded pointer,
      (a_922: ctype, a_923: [ctype], a_924: boolean, a_925: boolean)),
      a_929: loaded pointer, a_931: loaded pointer, a_935: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_911: loaded pointer =
            {-# <./cheri/arr2.c:10:4, ./cheri/arr2.c:10:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_911, cfunction(a_911)))
        ,
          {-# <./cheri/arr2.c:10:12, ./cheri/arr2.c:10:20> #-} let weak a_930: pointer =
            {-# <./cheri/arr2.c:10:12, ./cheri/arr2.c:10:20> #-} pure(
              __stderr
            ) in
          load('struct _IO_FILE*', a_930)
        ,
          {-# <./cheri/arr2.c:10:22, ./cheri/arr2.c:10:45> #-} let weak a_933: pointer =
            {-# <./cheri/arr2.c:10:22, ./cheri/arr2.c:10:45> #-} pure(a_932) in
          {-# §6.3.2.1#3 #-}
          let weak a_934: pointer = memop(PtrArrayShift, a_933, 'char', 0) in
          pure(Specified(a_934))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <./cheri/arr2.c:10:47, ./cheri/arr2.c:10:61> #-} let strong ((a_937: loaded pointer,
          (a_938: ctype, a_939: [ctype], a_940: boolean, a_941: boolean)),
          a_943: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_936: loaded pointer =
                {-# <./cheri/arr2.c:10:47, ./cheri/arr2.c:10:51> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_936, cfunction(a_936)))
            ,
              {-# §6.5.4 #-}
              {-# <./cheri/arr2.c:10:52, ./cheri/arr2.c:10:60> ./cheri/arr2.c:10:52 #-} let weak a_944: loaded integer =
                {-# <./cheri/arr2.c:10:59, ./cheri/arr2.c:10:60> #-} let weak a_946: pointer =
                  {-# <./cheri/arr2.c:10:59, ./cheri/arr2.c:10:60> #-} pure(x) in
                load('intptr_t', a_946) in
              case a_944 of
                | Specified(a_945: integer) =>
                    let weak a_947: pointer =
                      memop(PtrFromInt, 'intptr_t', 'void', a_945) in
                    pure(Specified(a_947))
                | Unspecified(_: ctype) =>
                    pure(Unspecified('void*'))
              end
            ) in
          if not(params_length(a_939) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_940 \/ not(are_compatible ('const char*', a_938)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_942: pointer =
                let a_948: ctype = params_nth(a_939, 0) in
                if not(are_compatible ('void*', a_948)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_949: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_949, a_943) in
                  pure(a_949) in
              let strong a_950: loaded pointer =
                ccall('const char* (*) (void*)', a_937, a_942) in
              kill('void*', a_942) ;
              pure(a_950)
        ) in
      if not(params_length(a_923) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_924) \/ not(are_compatible ('signed int', a_922)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_928: pointer =
            let a_951: ctype = params_nth(a_923, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_951)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_952: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_952, a_929) in
              pure(a_952) in
          let strong a_927: pointer =
            let a_953: ctype = params_nth(a_923, 1) in
            if not(are_compatible ('const char*', a_953)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_954: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_954, a_931) in
              pure(a_954) in
          let strong a_926: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_935) in
          let strong a_955: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_921, a_928, a_927, [('const char*', a_926)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_928)
            ,
              kill('char*', a_927)
            ,
              kill('char*', a_926)
            ) in
          pure(a_955)
    ) in
  pure(Unit) ;
  {-# <./cheri/arr2.c:11:4, ./cheri/arr2.c:11:20> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <./cheri/arr2.c:11:4, ./cheri/arr2.c:11:19> ./cheri/arr2.c:11:5 #-} let weak (a_910: pointer,
      a_962: loaded integer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# <./cheri/arr2.c:11:4, ./cheri/arr2.c:11:5> #-} pure(x)
        ,
          {-# §6.5.6 #-}
          {-# <./cheri/arr2.c:11:6, ./cheri/arr2.c:11:19> ./cheri/arr2.c:11:7 #-} let weak (a_956: loaded integer,
          a_957: loaded integer) =
            unseq(
              {-# <./cheri/arr2.c:11:6, ./cheri/arr2.c:11:7> #-} let weak a_961: pointer =
                {-# <./cheri/arr2.c:11:6, ./cheri/arr2.c:11:7> #-} pure(x) in
              load('intptr_t', a_961)
            ,
              {-# <./cheri/arr2.c:11:8, ./cheri/arr2.c:11:19> ./cheri/arr2.c:11:8 #-} pure(
                Specified(Ivsizeof('signed int'))
              )
            ) in
          pure(
            case (a_956, a_957) of
              | (Specified(a_958: integer), Specified(a_959: integer)) =>
                  Specified(let a_960: integer =
                    memop(DeriveCap[TODO:binary], a_958, a_959) in
                  memop(CapAssignValue, a_960,
                  wrapI('uintptr_t',
                  if all_values_representable_in('size_t', 'intptr_t') then
                    __conv_int__('intptr_t', a_958)
                  else
                    __conv_int__('uintptr_t', a_958) +
                  if all_values_representable_in('size_t', 'intptr_t') then
                    __conv_int__('intptr_t', a_959)
                  else
                    __conv_int__('uintptr_t', a_959))))
              | _: (loaded integer,loaded integer) =>
                  Unspecified('uintptr_t')
            end
          )
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('intptr_t', a_910, conv_loaded_int('intptr_t', a_962))) in
      pure(conv_loaded_int('intptr_t', a_962))
    ) in
  pure(Unit) ;
  {-# <./cheri/arr2.c:12:4, ./cheri/arr2.c:12:63> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./cheri/arr2.c:12:4, ./cheri/arr2.c:12:62> #-} let strong ((a_963: loaded pointer,
      (a_964: ctype, a_965: [ctype], a_966: boolean, a_967: boolean)),
      a_971: loaded pointer, a_973: loaded pointer, a_977: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_909: loaded pointer =
            {-# <./cheri/arr2.c:12:4, ./cheri/arr2.c:12:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_909, cfunction(a_909)))
        ,
          {-# <./cheri/arr2.c:12:12, ./cheri/arr2.c:12:20> #-} let weak a_972: pointer =
            {-# <./cheri/arr2.c:12:12, ./cheri/arr2.c:12:20> #-} pure(
              __stderr
            ) in
          load('struct _IO_FILE*', a_972)
        ,
          {-# <./cheri/arr2.c:12:22, ./cheri/arr2.c:12:45> #-} let weak a_975: pointer =
            {-# <./cheri/arr2.c:12:22, ./cheri/arr2.c:12:45> #-} pure(a_974) in
          {-# §6.3.2.1#3 #-}
          let weak a_976: pointer = memop(PtrArrayShift, a_975, 'char', 0) in
          pure(Specified(a_976))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <./cheri/arr2.c:12:47, ./cheri/arr2.c:12:61> #-} let strong ((a_979: loaded pointer,
          (a_980: ctype, a_981: [ctype], a_982: boolean, a_983: boolean)),
          a_985: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_978: loaded pointer =
                {-# <./cheri/arr2.c:12:47, ./cheri/arr2.c:12:51> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_978, cfunction(a_978)))
            ,
              {-# §6.5.4 #-}
              {-# <./cheri/arr2.c:12:52, ./cheri/arr2.c:12:60> ./cheri/arr2.c:12:52 #-} let weak a_986: loaded integer =
                {-# <./cheri/arr2.c:12:59, ./cheri/arr2.c:12:60> #-} let weak a_988: pointer =
                  {-# <./cheri/arr2.c:12:59, ./cheri/arr2.c:12:60> #-} pure(x) in
                load('intptr_t', a_988) in
              case a_986 of
                | Specified(a_987: integer) =>
                    let weak a_989: pointer =
                      memop(PtrFromInt, 'intptr_t', 'void', a_987) in
                    pure(Specified(a_989))
                | Unspecified(_: ctype) =>
                    pure(Unspecified('void*'))
              end
            ) in
          if not(params_length(a_981) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_982 \/ not(are_compatible ('const char*', a_980)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_984: pointer =
                let a_990: ctype = params_nth(a_981, 0) in
                if not(are_compatible ('void*', a_990)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_991: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_991, a_985) in
                  pure(a_991) in
              let strong a_992: loaded pointer =
                ccall('const char* (*) (void*)', a_979, a_984) in
              kill('void*', a_984) ;
              pure(a_992)
        ) in
      if not(params_length(a_965) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_966) \/ not(are_compatible ('signed int', a_964)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_970: pointer =
            let a_993: ctype = params_nth(a_965, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_993)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_994: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_994, a_971) in
              pure(a_994) in
          let strong a_969: pointer =
            let a_995: ctype = params_nth(a_965, 1) in
            if not(are_compatible ('const char*', a_995)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_996: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_996, a_973) in
              pure(a_996) in
          let strong a_968: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_977) in
          let strong a_997: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_963, a_970, a_969, [('const char*', a_968)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_970)
            ,
              kill('char*', a_969)
            ,
              kill('char*', a_968)
            ) in
          pure(a_997)
    ) in
  pure(Unit) ;
  {-# <./cheri/arr2.c:13:4, ./cheri/arr2.c:13:48> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./cheri/arr2.c:13:4, ./cheri/arr2.c:13:47> #-} let strong ((a_998: loaded pointer,
      (a_999: ctype, a_1000: [ctype], a_1001: boolean, a_1002: boolean)),
      a_1006: loaded pointer, a_1008: loaded pointer, a_1012: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_908: loaded pointer =
            {-# <./cheri/arr2.c:13:4, ./cheri/arr2.c:13:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_908, cfunction(a_908)))
        ,
          {-# <./cheri/arr2.c:13:12, ./cheri/arr2.c:13:20> #-} let weak a_1007: pointer =
            {-# <./cheri/arr2.c:13:12, ./cheri/arr2.c:13:20> #-} pure(
              __stderr
            ) in
          load('struct _IO_FILE*', a_1007)
        ,
          {-# <./cheri/arr2.c:13:22, ./cheri/arr2.c:13:34> #-} let weak a_1010: pointer =
            {-# <./cheri/arr2.c:13:22, ./cheri/arr2.c:13:34> #-} pure(a_1009) in
          {-# §6.3.2.1#3 #-}
          let weak a_1011: pointer =
            memop(PtrArrayShift, a_1010, 'char', 0) in
          pure(Specified(a_1011))
        ,
          {-# <./cheri/arr2.c:13:36, ./cheri/arr2.c:13:46> ./cheri/arr2.c:13:36 #-} let weak a_1020: pointer =
            {-# §6.5.3.2 #-}
            {-# <./cheri/arr2.c:13:36, ./cheri/arr2.c:13:46> ./cheri/arr2.c:13:36 #-} let weak a_1013: loaded pointer =
              {-# §6.5.4 #-}
              {-# <./cheri/arr2.c:13:37, ./cheri/arr2.c:13:46> #-} let weak a_1016: loaded integer =
                {-# <./cheri/arr2.c:13:44, ./cheri/arr2.c:13:45> #-} let weak a_1018: pointer =
                  {-# <./cheri/arr2.c:13:44, ./cheri/arr2.c:13:45> #-} pure(x) in
                load('intptr_t', a_1018) in
              case a_1016 of
                | Specified(a_1017: integer) =>
                    let weak a_1019: pointer =
                      memop(PtrFromInt, 'intptr_t', 'signed int', a_1017) in
                    pure(Specified(a_1019))
                | Unspecified(_: ctype) =>
                    pure(Unspecified('signed int*'))
              end in
            case a_1013 of
              | Specified(a_1014: pointer) =>
                  let weak a_1015: boolean =
                    memop(PtrValidForDeref, 'signed int', a_1014) in
                  pure(
                    if a_1015 then
                      a_1014
                    else
                      undef(<<UB043_indirection_invalid_value>>)
                  )
              | Unspecified(_: ctype) =>
                  pure(undef(<<UB043_indirection_invalid_value>>))
            end in
          load('signed int', a_1020)
        ) in
      if not(params_length(a_1000) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1001) \/ not(are_compatible ('signed int', a_999)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1005: pointer =
            let a_1021: ctype = params_nth(a_1000, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1021)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1022: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1022, a_1006) in
              pure(a_1022) in
          let strong a_1004: pointer =
            let a_1023: ctype = params_nth(a_1000, 1) in
            if not(are_compatible ('const char*', a_1023)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1024: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1024, a_1008) in
              pure(a_1024) in
          let strong a_1003: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_1012)) in
          let strong a_1025: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_998, a_1005, a_1004, [('signed int', a_1003)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1005)
            ,
              kill('char*', a_1004)
            ,
              kill('signed int', a_1003)
            ) in
          pure(a_1025)
    ) in
  pure(Unit) ;
  kill('signed int[2]', arr) ;
  kill('intptr_t', x) ;
  pure(Unit) ;
  {-# <./cheri/arr2.c:6:0, ./cheri/arr2.c:14:1> ./cheri/arr2.c:6:4 - ./cheri/arr2.c:6:8 #-} save ret_907: loaded integer (a_1026: loaded integer:= Specified(0)) in
    pure(a_1026)

