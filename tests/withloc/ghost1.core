-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_677 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_681 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

-- Globals
glob a_930: pointer [ail_ctype = 'char[18]'] :=
  create_readonly(Ivalignof('char[18]'), 'char[18]', Specified(Array(Specified(conv_int('char',
  79)), Specified(conv_int('char', 114)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 103)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 48)), Specified(conv_int('char', 58)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_973: pointer [ail_ctype = 'char[18]'] :=
  create_readonly(Ivalignof('char[18]'), 'char[18]', Specified(Array(Specified(conv_int('char',
  79)), Specified(conv_int('char', 114)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 103)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 49)), Specified(conv_int('char', 58)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_1038: pointer [ail_ctype = 'char[18]'] :=
  create_readonly(Ivalignof('char[18]'), 'char[18]', Specified(Array(Specified(conv_int('char',
  77)), Specified(conv_int('char', 111)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 48)), Specified(conv_int('char', 58)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_1073: pointer [ail_ctype = 'char[18]'] :=
  create_readonly(Ivalignof('char[18]'), 'char[18]', Specified(Array(Specified(conv_int('char',
  77)), Specified(conv_int('char', 111)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 49)), Specified(conv_int('char', 58)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_1112: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  110)), Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0))))

glob a_1116: pointer [ail_ctype = 'char[9]'] :=
  create_readonly(Ivalignof('char[9]'), 'char[9]', Specified(Array(Specified(conv_int('char',
  110)), Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0))))

glob a_1141: pointer [ail_ctype = 'char[4]'] :=
  create_readonly(Ivalignof('char[4]'), 'char[4]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(0))))

glob a_1182: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 48)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 120)), Specified(0))))

glob a_1229: pointer [ail_ctype = 'char[2]'] :=
  create_readonly(Ivalignof('char[2]'), 'char[2]', Specified(Array(Specified(conv_int('char',
  10)), Specified(0))))

glob a_1303: pointer [ail_ctype = 'char[26]'] :=
  create_readonly(Ivalignof('char[26]'), 'char[26]', Specified(Array(Specified(conv_int('char',
  109)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 96)),
  Specified(0))))

glob a_1318: pointer [ail_ctype = 'char[4]'] :=
  create_readonly(Ivalignof('char[4]'), 'char[4]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 35)), Specified(conv_int('char', 112)),
  Specified(0))))

glob a_1358: pointer [ail_ctype = 'char[31]'] :=
  create_readonly(Ivalignof('char[31]'), 'char[31]', Specified(Array(Specified(conv_int('char',
  109)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 96)), Specified(0))))

glob a_1373: pointer [ail_ctype = 'char[27]'] :=
  create_readonly(Ivalignof('char[27]'), 'char[27]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 91)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 80)), Specified(conv_int('char', 44)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 35)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 98)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 93)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 63)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 65)), Specified(0))))

glob a_1414: pointer [ail_ctype = 'char[15]'] :=
  create_readonly(Ivalignof('char[15]'), 'char[15]', Specified(Array(Specified(conv_int('char',
  115)), Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  {-# <./cheri/ghost1.c:6:0, ./cheri/ghost1.c:17:1> #-} let strong x: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong px0: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong px1: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong p0: pointer =
    create(Ivalignof('unsigned char*'), 'unsigned char*') in
  let strong p1: pointer =
    create(Ivalignof('unsigned char*'), 'unsigned char*') in
  {-# §6.2.4#6 #-}
  {-# <./cheri/ghost1.c:7:4, ./cheri/ghost1.c:7:10> #-} store('signed int', x,
  Unspecified('signed int')) ;
  {-# <./cheri/ghost1.c:8:4, ./cheri/ghost1.c:8:18> #-} let strong a_917: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.3.2#3, sentence 5 #-}
      {-# <./cheri/ghost1.c:8:15, ./cheri/ghost1.c:8:17> ./cheri/ghost1.c:8:15 #-} let weak a_918: pointer =
        {-# <./cheri/ghost1.c:8:16, ./cheri/ghost1.c:8:17> #-} pure(x) in
      pure(Specified(a_918))
    ) in
  store('signed int*', px0, a_917) ;
  {-# <./cheri/ghost1.c:10:4, ./cheri/ghost1.c:10:67> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./cheri/ghost1.c:10:4, ./cheri/ghost1.c:10:66> #-} let strong ((a_919: loaded pointer,
      (a_920: ctype, a_921: [ctype], a_922: boolean, a_923: boolean)),
      a_927: loaded pointer, a_929: loaded pointer, a_933: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_916: loaded pointer =
            {-# <./cheri/ghost1.c:10:4, ./cheri/ghost1.c:10:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_916, cfunction(a_916)))
        ,
          {-# <./cheri/ghost1.c:10:12, ./cheri/ghost1.c:10:20> #-} let weak a_928: pointer =
            {-# <./cheri/ghost1.c:10:12, ./cheri/ghost1.c:10:20> #-} pure(
              __stderr
            ) in
          load('struct _IO_FILE*', a_928)
        ,
          {-# <./cheri/ghost1.c:10:21, ./cheri/ghost1.c:10:47> #-} let weak a_931: pointer =
            {-# <./cheri/ghost1.c:10:21, ./cheri/ghost1.c:10:47> #-} pure(
              a_930
            ) in
          {-# §6.3.2.1#3 #-}
          let weak a_932: pointer = memop(PtrArrayShift, a_931, 'char', 0) in
          pure(Specified(a_932))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <./cheri/ghost1.c:10:49, ./cheri/ghost1.c:10:65> #-} let strong ((a_935: loaded pointer,
          (a_936: ctype, a_937: [ctype], a_938: boolean, a_939: boolean)),
          a_941: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_934: loaded pointer =
                {-# <./cheri/ghost1.c:10:49, ./cheri/ghost1.c:10:53> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_934, cfunction(a_934)))
            ,
              {-# §6.5.4 #-}
              {-# <./cheri/ghost1.c:10:54, ./cheri/ghost1.c:10:64> ./cheri/ghost1.c:10:54 #-} let weak a_944: pointer =
                {-# <./cheri/ghost1.c:10:61, ./cheri/ghost1.c:10:64> #-} pure(
                  px0
                ) in
              load('signed int*', a_944)
            ) in
          if not(params_length(a_937) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_938 \/ not(are_compatible ('const char*', a_936)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_940: pointer =
                let a_946: ctype = params_nth(a_937, 0) in
                if not(are_compatible ('void*', a_946)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_947: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_947, a_941) in
                  pure(a_947) in
              let strong a_948: loaded pointer =
                ccall('const char* (*) (void*)', a_935, a_940) in
              kill('void*', a_940) ;
              pure(a_948)
        ) in
      if not(params_length(a_921) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_922) \/ not(are_compatible ('signed int', a_920)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_926: pointer =
            let a_949: ctype = params_nth(a_921, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_949)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_950: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_950, a_927) in
              pure(a_950) in
          let strong a_925: pointer =
            let a_951: ctype = params_nth(a_921, 1) in
            if not(are_compatible ('const char*', a_951)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_952: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_952, a_929) in
              pure(a_952) in
          let strong a_924: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_933) in
          let strong a_953: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_919, a_926, a_925, [('const char*', a_924)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_926)
            ,
              kill('char*', a_925)
            ,
              kill('char*', a_924)
            ) in
          pure(a_953)
    ) in
  pure(Unit) ;
  {-# <./cheri/ghost1.c:11:4, ./cheri/ghost1.c:11:46> #-} let strong a_954: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# <./cheri/ghost1.c:11:15, ./cheri/ghost1.c:11:45> #-} let strong a_960: loaded pointer =
        {-# §6.5.4 #-}
        {-# <./cheri/ghost1.c:11:41, ./cheri/ghost1.c:11:44> #-} let weak a_955: loaded pointer =
          {-# <./cheri/ghost1.c:11:41, ./cheri/ghost1.c:11:44> #-} let weak a_957: pointer =
            {-# <./cheri/ghost1.c:11:41, ./cheri/ghost1.c:11:44> #-} pure(px0) in
          load('signed int*', a_957) in
        case a_955 of
          | Specified(a_956: pointer) =>
              let weak a_958: boolean =
                memop(PtrWellAligned, 'signed int', a_956) in
              pure(
                Specified(if a_958 then
                  a_956
                else
                  undef(<<UB025_misaligned_pointer_conversion>>))
              )
          | Unspecified(_: ctype) =>
              pure(undef(<<UB025_misaligned_pointer_conversion>>))
        end in
      case a_960 of
        | Specified(a_961: pointer) =>
            memop(cheri_cheri_tag_clear['signed int* (signed int*)'], a_961)
        | _: loaded pointer =>
            pure(undef(<<DUMMY(Elab, CHERI intrinsics (unspec))>>))
      end
    ) in
  store('signed int*', px1, a_954) ;
  {-# <./cheri/ghost1.c:12:4, ./cheri/ghost1.c:12:67> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./cheri/ghost1.c:12:4, ./cheri/ghost1.c:12:66> #-} let strong ((a_962: loaded pointer,
      (a_963: ctype, a_964: [ctype], a_965: boolean, a_966: boolean)),
      a_970: loaded pointer, a_972: loaded pointer, a_976: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_915: loaded pointer =
            {-# <./cheri/ghost1.c:12:4, ./cheri/ghost1.c:12:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_915, cfunction(a_915)))
        ,
          {-# <./cheri/ghost1.c:12:12, ./cheri/ghost1.c:12:20> #-} let weak a_971: pointer =
            {-# <./cheri/ghost1.c:12:12, ./cheri/ghost1.c:12:20> #-} pure(
              __stderr
            ) in
          load('struct _IO_FILE*', a_971)
        ,
          {-# <./cheri/ghost1.c:12:21, ./cheri/ghost1.c:12:47> #-} let weak a_974: pointer =
            {-# <./cheri/ghost1.c:12:21, ./cheri/ghost1.c:12:47> #-} pure(
              a_973
            ) in
          {-# §6.3.2.1#3 #-}
          let weak a_975: pointer = memop(PtrArrayShift, a_974, 'char', 0) in
          pure(Specified(a_975))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <./cheri/ghost1.c:12:49, ./cheri/ghost1.c:12:65> #-} let strong ((a_978: loaded pointer,
          (a_979: ctype, a_980: [ctype], a_981: boolean, a_982: boolean)),
          a_984: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_977: loaded pointer =
                {-# <./cheri/ghost1.c:12:49, ./cheri/ghost1.c:12:53> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_977, cfunction(a_977)))
            ,
              {-# §6.5.4 #-}
              {-# <./cheri/ghost1.c:12:54, ./cheri/ghost1.c:12:64> ./cheri/ghost1.c:12:54 #-} let weak a_987: pointer =
                {-# <./cheri/ghost1.c:12:61, ./cheri/ghost1.c:12:64> #-} pure(
                  px1
                ) in
              load('signed int*', a_987)
            ) in
          if not(params_length(a_980) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_981 \/ not(are_compatible ('const char*', a_979)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_983: pointer =
                let a_989: ctype = params_nth(a_980, 0) in
                if not(are_compatible ('void*', a_989)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_990: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_990, a_984) in
                  pure(a_990) in
              let strong a_991: loaded pointer =
                ccall('const char* (*) (void*)', a_978, a_983) in
              kill('void*', a_983) ;
              pure(a_991)
        ) in
      if not(params_length(a_964) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_965) \/ not(are_compatible ('signed int', a_963)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_969: pointer =
            let a_992: ctype = params_nth(a_964, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_992)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_993: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_993, a_970) in
              pure(a_993) in
          let strong a_968: pointer =
            let a_994: ctype = params_nth(a_964, 1) in
            if not(are_compatible ('const char*', a_994)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_995: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_995, a_972) in
              pure(a_995) in
          let strong a_967: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_976) in
          let strong a_996: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_962, a_969, a_968, [('const char*', a_967)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_969)
            ,
              kill('char*', a_968)
            ,
              kill('char*', a_967)
            ) in
          pure(a_996)
    ) in
  pure(Unit) ;
  {-# <./cheri/ghost1.c:13:4, ./cheri/ghost1.c:13:46> #-} let strong a_997: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.4 #-}
      {-# <./cheri/ghost1.c:13:24, ./cheri/ghost1.c:13:45> ./cheri/ghost1.c:13:24 #-} let weak a_998: loaded pointer =
        {-# §6.5.3.2#3, sentence 5 #-}
        {-# <./cheri/ghost1.c:13:41, ./cheri/ghost1.c:13:45> ./cheri/ghost1.c:13:41 #-} let weak a_1000: pointer =
          {-# <./cheri/ghost1.c:13:42, ./cheri/ghost1.c:13:45> #-} pure(px0) in
        pure(Specified(a_1000)) in
      case a_998 of
        | Specified(a_999: pointer) =>
            let weak a_1001: boolean =
              memop(PtrWellAligned, 'unsigned char', a_999) in
            pure(
              Specified(if a_1001 then
                a_999
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            )
        | Unspecified(_: ctype) =>
            pure(undef(<<UB025_misaligned_pointer_conversion>>))
      end
    ) in
  store('unsigned char*', p0, a_997) ;
  {-# <./cheri/ghost1.c:13:47, ./cheri/ghost1.c:13:58> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <./cheri/ghost1.c:13:47, ./cheri/ghost1.c:13:57> ./cheri/ghost1.c:13:53 #-} let weak (a_914: pointer,
      a_1011: loaded integer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# §6.5.3.2 #-}
          {-# <./cheri/ghost1.c:13:47, ./cheri/ghost1.c:13:52> #-} let weak a_1002: loaded pointer =
            {-# §6.5.6 #-}
            {-# <./cheri/ghost1.c:13:47, ./cheri/ghost1.c:13:52> #-} let weak (a_1005: loaded pointer,
            a_1007: loaded integer) =
              unseq(
                {-# <./cheri/ghost1.c:13:47, ./cheri/ghost1.c:13:49> #-} let weak a_1010: pointer =
                  {-# <./cheri/ghost1.c:13:47, ./cheri/ghost1.c:13:49> #-} pure(
                    p0
                  ) in
                load('unsigned char*', a_1010)
              ,
                {-# <./cheri/ghost1.c:13:50, ./cheri/ghost1.c:13:51> #-} pure(
                  Specified(0)
                )
              ) in
            case (a_1005, a_1007) of
              | (Specified(a_1006: pointer), Specified(a_1008: integer)) =>
                  let weak a_1009: pointer =
                    memop(PtrArrayShift, a_1006, 'unsigned char', a_1008) in
                  pure(Specified(a_1009))
              | _: (loaded pointer,loaded integer) =>
                  pure(undef(<<UB_CERB004_unspecified__pointer_add>>))
            end in
          case a_1002 of
            | Specified(a_1003: pointer) =>
                let weak a_1004: boolean =
                  memop(PtrValidForDeref, 'unsigned char', a_1003) in
                pure(
                  if a_1004 then
                    a_1003
                  else
                    undef(<<UB043_indirection_invalid_value>>)
                )
            | Unspecified(_: ctype) =>
                pure(undef(<<UB043_indirection_invalid_value>>))
          end
        ,
          {-# <./cheri/ghost1.c:13:55, ./cheri/ghost1.c:13:57> #-} pure(
            Specified(42)
          )
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('unsigned char', a_914,
        conv_loaded_int('unsigned char', a_1011))) in
      pure(conv_loaded_int('unsigned char', a_1011))
    ) in
  pure(Unit) ;
  {-# <./cheri/ghost1.c:14:4, ./cheri/ghost1.c:14:46> #-} let strong a_1012: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.4 #-}
      {-# <./cheri/ghost1.c:14:24, ./cheri/ghost1.c:14:45> ./cheri/ghost1.c:14:24 #-} let weak a_1013: loaded pointer =
        {-# §6.5.3.2#3, sentence 5 #-}
        {-# <./cheri/ghost1.c:14:41, ./cheri/ghost1.c:14:45> ./cheri/ghost1.c:14:41 #-} let weak a_1015: pointer =
          {-# <./cheri/ghost1.c:14:42, ./cheri/ghost1.c:14:45> #-} pure(px1) in
        pure(Specified(a_1015)) in
      case a_1013 of
        | Specified(a_1014: pointer) =>
            let weak a_1016: boolean =
              memop(PtrWellAligned, 'unsigned char', a_1014) in
            pure(
              Specified(if a_1016 then
                a_1014
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            )
        | Unspecified(_: ctype) =>
            pure(undef(<<UB025_misaligned_pointer_conversion>>))
      end
    ) in
  store('unsigned char*', p1, a_1012) ;
  {-# <./cheri/ghost1.c:14:47, ./cheri/ghost1.c:14:58> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <./cheri/ghost1.c:14:47, ./cheri/ghost1.c:14:57> ./cheri/ghost1.c:14:53 #-} let weak (a_913: pointer,
      a_1026: loaded integer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# §6.5.3.2 #-}
          {-# <./cheri/ghost1.c:14:47, ./cheri/ghost1.c:14:52> #-} let weak a_1017: loaded pointer =
            {-# §6.5.6 #-}
            {-# <./cheri/ghost1.c:14:47, ./cheri/ghost1.c:14:52> #-} let weak (a_1020: loaded pointer,
            a_1022: loaded integer) =
              unseq(
                {-# <./cheri/ghost1.c:14:47, ./cheri/ghost1.c:14:49> #-} let weak a_1025: pointer =
                  {-# <./cheri/ghost1.c:14:47, ./cheri/ghost1.c:14:49> #-} pure(
                    p1
                  ) in
                load('unsigned char*', a_1025)
              ,
                {-# <./cheri/ghost1.c:14:50, ./cheri/ghost1.c:14:51> #-} pure(
                  Specified(0)
                )
              ) in
            case (a_1020, a_1022) of
              | (Specified(a_1021: pointer), Specified(a_1023: integer)) =>
                  let weak a_1024: pointer =
                    memop(PtrArrayShift, a_1021, 'unsigned char', a_1023) in
                  pure(Specified(a_1024))
              | _: (loaded pointer,loaded integer) =>
                  pure(undef(<<UB_CERB004_unspecified__pointer_add>>))
            end in
          case a_1017 of
            | Specified(a_1018: pointer) =>
                let weak a_1019: boolean =
                  memop(PtrValidForDeref, 'unsigned char', a_1018) in
                pure(
                  if a_1019 then
                    a_1018
                  else
                    undef(<<UB043_indirection_invalid_value>>)
                )
            | Unspecified(_: ctype) =>
                pure(undef(<<UB043_indirection_invalid_value>>))
          end
        ,
          {-# <./cheri/ghost1.c:14:55, ./cheri/ghost1.c:14:57> #-} pure(
            Specified(42)
          )
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('unsigned char', a_913,
        conv_loaded_int('unsigned char', a_1026))) in
      pure(conv_loaded_int('unsigned char', a_1026))
    ) in
  pure(Unit) ;
  {-# <./cheri/ghost1.c:15:4, ./cheri/ghost1.c:15:67> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./cheri/ghost1.c:15:4, ./cheri/ghost1.c:15:66> #-} let strong ((a_1027: loaded pointer,
      (a_1028: ctype, a_1029: [ctype], a_1030: boolean, a_1031: boolean)),
      a_1035: loaded pointer, a_1037: loaded pointer, a_1041: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_912: loaded pointer =
            {-# <./cheri/ghost1.c:15:4, ./cheri/ghost1.c:15:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_912, cfunction(a_912)))
        ,
          {-# <./cheri/ghost1.c:15:12, ./cheri/ghost1.c:15:20> #-} let weak a_1036: pointer =
            {-# <./cheri/ghost1.c:15:12, ./cheri/ghost1.c:15:20> #-} pure(
              __stderr
            ) in
          load('struct _IO_FILE*', a_1036)
        ,
          {-# <./cheri/ghost1.c:15:21, ./cheri/ghost1.c:15:47> #-} let weak a_1039: pointer =
            {-# <./cheri/ghost1.c:15:21, ./cheri/ghost1.c:15:47> #-} pure(
              a_1038
            ) in
          {-# §6.3.2.1#3 #-}
          let weak a_1040: pointer =
            memop(PtrArrayShift, a_1039, 'char', 0) in
          pure(Specified(a_1040))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <./cheri/ghost1.c:15:49, ./cheri/ghost1.c:15:65> #-} let strong ((a_1043: loaded pointer,
          (a_1044: ctype, a_1045: [ctype], a_1046: boolean, a_1047: boolean)),
          a_1049: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_1042: loaded pointer =
                {-# <./cheri/ghost1.c:15:49, ./cheri/ghost1.c:15:53> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_1042, cfunction(a_1042)))
            ,
              {-# §6.5.4 #-}
              {-# <./cheri/ghost1.c:15:54, ./cheri/ghost1.c:15:64> ./cheri/ghost1.c:15:54 #-} let weak a_1052: pointer =
                {-# <./cheri/ghost1.c:15:61, ./cheri/ghost1.c:15:64> #-} pure(
                  px0
                ) in
              load('signed int*', a_1052)
            ) in
          if not(params_length(a_1045) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_1046 \/ not(are_compatible ('const char*', a_1044)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1048: pointer =
                let a_1054: ctype = params_nth(a_1045, 0) in
                if not(are_compatible ('void*', a_1054)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_1055: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_1055, a_1049) in
                  pure(a_1055) in
              let strong a_1056: loaded pointer =
                ccall('const char* (*) (void*)', a_1043, a_1048) in
              kill('void*', a_1048) ;
              pure(a_1056)
        ) in
      if not(params_length(a_1029) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1030) \/ not(are_compatible ('signed int', a_1028)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1034: pointer =
            let a_1057: ctype = params_nth(a_1029, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1057)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1058: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1058, a_1035) in
              pure(a_1058) in
          let strong a_1033: pointer =
            let a_1059: ctype = params_nth(a_1029, 1) in
            if not(are_compatible ('const char*', a_1059)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1060: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1060, a_1037) in
              pure(a_1060) in
          let strong a_1032: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_1041) in
          let strong a_1061: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1027, a_1034, a_1033, [('const char*', a_1032)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1034)
            ,
              kill('char*', a_1033)
            ,
              kill('char*', a_1032)
            ) in
          pure(a_1061)
    ) in
  pure(Unit) ;
  {-# <./cheri/ghost1.c:16:4, ./cheri/ghost1.c:16:67> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./cheri/ghost1.c:16:4, ./cheri/ghost1.c:16:66> #-} let strong ((a_1062: loaded pointer,
      (a_1063: ctype, a_1064: [ctype], a_1065: boolean, a_1066: boolean)),
      a_1070: loaded pointer, a_1072: loaded pointer, a_1076: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_911: loaded pointer =
            {-# <./cheri/ghost1.c:16:4, ./cheri/ghost1.c:16:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_911, cfunction(a_911)))
        ,
          {-# <./cheri/ghost1.c:16:12, ./cheri/ghost1.c:16:20> #-} let weak a_1071: pointer =
            {-# <./cheri/ghost1.c:16:12, ./cheri/ghost1.c:16:20> #-} pure(
              __stderr
            ) in
          load('struct _IO_FILE*', a_1071)
        ,
          {-# <./cheri/ghost1.c:16:21, ./cheri/ghost1.c:16:47> #-} let weak a_1074: pointer =
            {-# <./cheri/ghost1.c:16:21, ./cheri/ghost1.c:16:47> #-} pure(
              a_1073
            ) in
          {-# §6.3.2.1#3 #-}
          let weak a_1075: pointer =
            memop(PtrArrayShift, a_1074, 'char', 0) in
          pure(Specified(a_1075))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <./cheri/ghost1.c:16:49, ./cheri/ghost1.c:16:65> #-} let strong ((a_1078: loaded pointer,
          (a_1079: ctype, a_1080: [ctype], a_1081: boolean, a_1082: boolean)),
          a_1084: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_1077: loaded pointer =
                {-# <./cheri/ghost1.c:16:49, ./cheri/ghost1.c:16:53> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_1077, cfunction(a_1077)))
            ,
              {-# §6.5.4 #-}
              {-# <./cheri/ghost1.c:16:54, ./cheri/ghost1.c:16:64> ./cheri/ghost1.c:16:54 #-} let weak a_1087: pointer =
                {-# <./cheri/ghost1.c:16:61, ./cheri/ghost1.c:16:64> #-} pure(
                  px1
                ) in
              load('signed int*', a_1087)
            ) in
          if not(params_length(a_1080) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_1081 \/ not(are_compatible ('const char*', a_1079)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1083: pointer =
                let a_1089: ctype = params_nth(a_1080, 0) in
                if not(are_compatible ('void*', a_1089)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_1090: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_1090, a_1084) in
                  pure(a_1090) in
              let strong a_1091: loaded pointer =
                ccall('const char* (*) (void*)', a_1078, a_1083) in
              kill('void*', a_1083) ;
              pure(a_1091)
        ) in
      if not(params_length(a_1064) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1065) \/ not(are_compatible ('signed int', a_1063)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1069: pointer =
            let a_1092: ctype = params_nth(a_1064, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1092)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1093: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1093, a_1070) in
              pure(a_1093) in
          let strong a_1068: pointer =
            let a_1094: ctype = params_nth(a_1064, 1) in
            if not(are_compatible ('const char*', a_1094)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1095: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1095, a_1072) in
              pure(a_1095) in
          let strong a_1067: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_1076) in
          let strong a_1096: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1062, a_1069, a_1068, [('const char*', a_1067)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1069)
            ,
              kill('char*', a_1068)
            ,
              kill('char*', a_1067)
            ) in
          pure(a_1096)
    ) in
  pure(Unit) ;
  kill('signed int', x) ;
  kill('signed int*', px0) ;
  kill('signed int*', px1) ;
  kill('unsigned ichar*', p0) ;
  kill('unsigned ichar*', p1) ;
  pure(Unit) ;
  {-# <./cheri/ghost1.c:5:0, ./cheri/ghost1.c:17:1> ./cheri/ghost1.c:5:4 - ./cheri/ghost1.c:5:8 #-} save ret_910: loaded integer (a_1097: loaded integer:= Specified(0)) in
    pure(a_1097)

