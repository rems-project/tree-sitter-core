-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

def struct __cerbty_unnamed_tag_853 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_857 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob a_960: pointer [ail_ctype = 'char[13]'] :=
  create_readonly(Ivalignof('char[13]'), 'char[13]', Specified(Array(Specified(conv_int('char',
  79)), Specified(conv_int('char', 114)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 103)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_995: pointer [ail_ctype = 'char[20]'] :=
  create_readonly(Ivalignof('char[20]'), 'char[20]', Specified(Array(Specified(conv_int('char',
  80)), Specified(conv_int('char', 111)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_1030: pointer [ail_ctype = 'char[9]'] :=
  create_readonly(Ivalignof('char[9]'), 'char[9]', Specified(Array(Specified(conv_int('char',
  67)), Specified(conv_int('char', 111)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_1069: pointer [ail_ctype = 'char[17]'] :=
  create_readonly(Ivalignof('char[17]'), 'char[17]', Specified(Array(Specified(conv_int('char',
  80)), Specified(conv_int('char', 111)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_1096: pointer [ail_ctype = 'char[14]'] :=
  create_readonly(Ivalignof('char[14]'), 'char[14]', Specified(Array(Specified(conv_int('char',
  101)), Specified(conv_int('char', 120)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(0))))

glob a_1099: pointer [ail_ctype = 'char[10]'] :=
  create_readonly(Ivalignof('char[10]'), 'char[10]', Specified(Array(Specified(conv_int('char',
  110)), Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(0))))

glob a_1122: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  110)), Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0))))

glob a_1126: pointer [ail_ctype = 'char[9]'] :=
  create_readonly(Ivalignof('char[9]'), 'char[9]', Specified(Array(Specified(conv_int('char',
  110)), Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0))))

glob a_1151: pointer [ail_ctype = 'char[4]'] :=
  create_readonly(Ivalignof('char[4]'), 'char[4]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(0))))

glob a_1192: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 48)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 120)), Specified(0))))

glob a_1239: pointer [ail_ctype = 'char[2]'] :=
  create_readonly(Ivalignof('char[2]'), 'char[2]', Specified(Array(Specified(conv_int('char',
  10)), Specified(0))))

glob a_1313: pointer [ail_ctype = 'char[26]'] :=
  create_readonly(Ivalignof('char[26]'), 'char[26]', Specified(Array(Specified(conv_int('char',
  109)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 96)),
  Specified(0))))

glob a_1328: pointer [ail_ctype = 'char[4]'] :=
  create_readonly(Ivalignof('char[4]'), 'char[4]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 35)), Specified(conv_int('char', 112)),
  Specified(0))))

glob a_1368: pointer [ail_ctype = 'char[31]'] :=
  create_readonly(Ivalignof('char[31]'), 'char[31]', Specified(Array(Specified(conv_int('char',
  109)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 96)), Specified(0))))

glob a_1383: pointer [ail_ctype = 'char[27]'] :=
  create_readonly(Ivalignof('char[27]'), 'char[27]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 91)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 80)), Specified(conv_int('char', 44)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 35)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 98)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 93)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 63)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 65)), Specified(0))))

glob a_1424: pointer [ail_ctype = 'char[15]'] :=
  create_readonly(Ivalignof('char[15]'), 'char[15]', Specified(Array(Specified(conv_int('char',
  115)), Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  {-# <./cheri/memcpy1.c:8:0, ./cheri/memcpy1.c:19:1> #-} let strong x: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong p0: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong p1: pointer =
    create(Ivalignof('signed int**'), 'signed int**') in
  {-# <./cheri/memcpy1.c:9:4, ./cheri/memcpy1.c:9:13> #-} let strong a_914: loaded integer =
    {-# ยง6.5#2 #-}
    bound(
      {-# <./cheri/memcpy1.c:9:10, ./cheri/memcpy1.c:9:12> #-} pure(
        Specified(42)
      )
    ) in
  store('signed int', x, conv_loaded_int('signed int', a_914)) ;
  {-# <./cheri/memcpy1.c:10:4, ./cheri/memcpy1.c:10:17> #-} let strong a_915: loaded pointer =
    {-# ยง6.5#2 #-}
    bound(
      {-# ยง6.5.3.2#3, sentence 5 #-}
      {-# <./cheri/memcpy1.c:10:14, ./cheri/memcpy1.c:10:16> ./cheri/memcpy1.c:10:14 #-} let weak a_916: pointer =
        {-# <./cheri/memcpy1.c:10:15, ./cheri/memcpy1.c:10:16> #-} pure(x) in
      pure(Specified(a_916))
    ) in
  store('signed int*', p0, a_915) ;
  {-# <./cheri/memcpy1.c:11:4, ./cheri/memcpy1.c:11:36> #-} let strong a_917: loaded pointer =
    {-# ยง6.5#2 #-}
    bound(
      {-# ยง6.5.2.2#10, sentence 1 #-}
      {-# <./cheri/memcpy1.c:11:15, ./cheri/memcpy1.c:11:35> #-} let strong ((a_919: loaded pointer,
      (a_920: ctype, a_921: [ctype], a_922: boolean, a_923: boolean)),
      a_925: loaded integer) =
        {-# ยง6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_918: loaded pointer =
            {-# <./cheri/memcpy1.c:11:15, ./cheri/memcpy1.c:11:21> #-} pure(
              Specified(Cfunction(malloc_proxy))
            ) in
          pure((a_918, cfunction(a_918)))
        ,
          {-# <./cheri/memcpy1.c:11:22, ./cheri/memcpy1.c:11:34> ./cheri/memcpy1.c:11:22 #-} pure(
            Specified(Ivsizeof('signed int*'))
          )
        ) in
      if not(params_length(a_921) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_922 \/ not(are_compatible ('void*', a_920)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_924: pointer =
            let a_926: ctype = params_nth(a_921, 0) in
            if not(are_compatible ('size_t', a_926)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# ยง6.5.2.2#7, sentence 1 #-}
              let weak a_927: pointer =
                create(Ivalignof('size_t'), 'size_t') in
              let weak _: unit =
                store('size_t', a_927, conv_loaded_int('size_t', a_925)) in
              pure(a_927) in
          let strong a_928: loaded pointer =
            ccall('void* (*) (size_t)', a_919, a_924) in
          kill('size_t', a_924) ;
          pure(a_928)
    ) in
  store('signed int**', p1, a_917) ;
  {-# <./cheri/memcpy1.c:12:4, ./cheri/memcpy1.c:12:32> #-} let strong _: loaded pointer =
    {-# ยง6.5#2 #-}
    bound(
      {-# ยง6.5.2.2#10, sentence 1 #-}
      {-# <./cheri/memcpy1.c:12:4, ./cheri/memcpy1.c:12:31> #-} let strong ((a_929: loaded pointer,
      (a_930: ctype, a_931: [ctype], a_932: boolean, a_933: boolean)),
      a_937: loaded pointer, a_939: loaded pointer, a_941: loaded integer) =
        {-# ยง6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_913: loaded pointer =
            {-# <./cheri/memcpy1.c:12:4, ./cheri/memcpy1.c:12:10> #-} pure(
              Specified(Cfunction(memcpy_proxy))
            ) in
          pure((a_913, cfunction(a_913)))
        ,
          {-# <./cheri/memcpy1.c:12:11, ./cheri/memcpy1.c:12:13> #-} let weak a_938: pointer =
            {-# <./cheri/memcpy1.c:12:11, ./cheri/memcpy1.c:12:13> #-} pure(
              p1
            ) in
          load('signed int**', a_938)
        ,
          {-# ยง6.5.3.2#3, sentence 5 #-}
          {-# <./cheri/memcpy1.c:12:14, ./cheri/memcpy1.c:12:17> ./cheri/memcpy1.c:12:14 #-} let weak a_940: pointer =
            {-# <./cheri/memcpy1.c:12:15, ./cheri/memcpy1.c:12:17> #-} pure(
              p0
            ) in
          pure(Specified(a_940))
        ,
          {-# <./cheri/memcpy1.c:12:18, ./cheri/memcpy1.c:12:30> ./cheri/memcpy1.c:12:18 #-} pure(
            Specified(Ivsizeof('signed int*'))
          )
        ) in
      if not(params_length(a_931) = 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_932 \/ not(are_compatible ('void*', a_930)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_936: pointer =
            let a_942: ctype = params_nth(a_931, 0) in
            if not(are_compatible ('void*', a_942)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# ยง6.5.2.2#7, sentence 1 #-}
              let weak a_943: pointer = create(Ivalignof('void*'), 'void*') in
              let weak _: unit = store('void*', a_943, a_937) in
              pure(a_943) in
          let strong a_935: pointer =
            let a_944: ctype = params_nth(a_931, 1) in
            if not(are_compatible ('const void*', a_944)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# ยง6.5.2.2#7, sentence 1 #-}
              let weak a_945: pointer =
                create(Ivalignof('const void*'), 'const void*') in
              let weak _: unit = store('const void*', a_945, a_939) in
              pure(a_945) in
          let strong a_934: pointer =
            let a_946: ctype = params_nth(a_931, 2) in
            if not(are_compatible ('size_t', a_946)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# ยง6.5.2.2#7, sentence 1 #-}
              let weak a_947: pointer =
                create(Ivalignof('size_t'), 'size_t') in
              let weak _: unit =
                store('size_t', a_947, conv_loaded_int('size_t', a_941)) in
              pure(a_947) in
          let strong a_948: loaded pointer =
            ccall('void* (*) (void*restrict , const void*restrict , size_t)',
            a_929, a_936, a_935, a_934) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('void*', a_936)
            ,
              kill('void*', a_935)
            ,
              kill('size_t', a_934)
            ) in
          pure(a_948)
    ) in
  pure(Unit) ;
  {-# <./cheri/memcpy1.c:14:4, ./cheri/memcpy1.c:14:61> #-} let strong _: loaded integer =
    {-# ยง6.5#2 #-}
    bound(
      {-# ยง6.5.2.2#10, sentence 1 #-}
      {-# <./cheri/memcpy1.c:14:4, ./cheri/memcpy1.c:14:60> #-} let strong ((a_949: loaded pointer,
      (a_950: ctype, a_951: [ctype], a_952: boolean, a_953: boolean)),
      a_957: loaded pointer, a_959: loaded pointer, a_963: loaded pointer) =
        {-# ยง6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_912: loaded pointer =
            {-# <./cheri/memcpy1.c:14:4, ./cheri/memcpy1.c:14:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_912, cfunction(a_912)))
        ,
          {-# <./cheri/memcpy1.c:14:12, ./cheri/memcpy1.c:14:20> #-} let weak a_958: pointer =
            {-# <./cheri/memcpy1.c:14:12, ./cheri/memcpy1.c:14:20> #-} pure(
              __stderr
            ) in
          load('struct _IO_FILE*', a_958)
        ,
          {-# <./cheri/memcpy1.c:14:21, ./cheri/memcpy1.c:14:42> #-} let weak a_961: pointer =
            {-# <./cheri/memcpy1.c:14:21, ./cheri/memcpy1.c:14:42> #-} pure(
              a_960
            ) in
          {-# ยง6.3.2.1#3 #-}
          let weak a_962: pointer = memop(PtrArrayShift, a_961, 'char', 0) in
          pure(Specified(a_962))
        ,
          {-# ยง6.5.2.2#10, sentence 1 #-}
          {-# <./cheri/memcpy1.c:14:44, ./cheri/memcpy1.c:14:59> #-} let strong ((a_965: loaded pointer,
          (a_966: ctype, a_967: [ctype], a_968: boolean, a_969: boolean)),
          a_971: loaded pointer) =
            {-# ยง6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_964: loaded pointer =
                {-# <./cheri/memcpy1.c:14:44, ./cheri/memcpy1.c:14:48> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_964, cfunction(a_964)))
            ,
              {-# ยง6.5.4 #-}
              {-# <./cheri/memcpy1.c:14:49, ./cheri/memcpy1.c:14:58> ./cheri/memcpy1.c:14:49 #-} let weak a_974: pointer =
                {-# <./cheri/memcpy1.c:14:56, ./cheri/memcpy1.c:14:58> #-} pure(
                  p0
                ) in
              load('signed int*', a_974)
            ) in
          if not(params_length(a_967) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_968 \/ not(are_compatible ('const char*', a_966)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_970: pointer =
                let a_976: ctype = params_nth(a_967, 0) in
                if not(are_compatible ('void*', a_976)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# ยง6.5.2.2#7, sentence 1 #-}
                  let weak a_977: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_977, a_971) in
                  pure(a_977) in
              let strong a_978: loaded pointer =
                ccall('const char* (*) (void*)', a_965, a_970) in
              kill('void*', a_970) ;
              pure(a_978)
        ) in
      if not(params_length(a_951) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_952) \/ not(are_compatible ('signed int', a_950)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_956: pointer =
            let a_979: ctype = params_nth(a_951, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_979)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# ยง6.5.2.2#7, sentence 1 #-}
              let weak a_980: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_980, a_957) in
              pure(a_980) in
          let strong a_955: pointer =
            let a_981: ctype = params_nth(a_951, 1) in
            if not(are_compatible ('const char*', a_981)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# ยง6.5.2.2#7, sentence 1 #-}
              let weak a_982: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_982, a_959) in
              pure(a_982) in
          let strong a_954: pointer =
            {-# ยง6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_963) in
          let strong a_983: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_949, a_956, a_955, [('const char*', a_954)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_956)
            ,
              kill('char*', a_955)
            ,
              kill('char*', a_954)
            ) in
          pure(a_983)
    ) in
  pure(Unit) ;
  {-# <./cheri/memcpy1.c:15:4, ./cheri/memcpy1.c:15:68> #-} let strong _: loaded integer =
    {-# ยง6.5#2 #-}
    bound(
      {-# ยง6.5.2.2#10, sentence 1 #-}
      {-# <./cheri/memcpy1.c:15:4, ./cheri/memcpy1.c:15:67> #-} let strong ((a_984: loaded pointer,
      (a_985: ctype, a_986: [ctype], a_987: boolean, a_988: boolean)),
      a_992: loaded pointer, a_994: loaded pointer, a_998: loaded pointer) =
        {-# ยง6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_911: loaded pointer =
            {-# <./cheri/memcpy1.c:15:4, ./cheri/memcpy1.c:15:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_911, cfunction(a_911)))
        ,
          {-# <./cheri/memcpy1.c:15:12, ./cheri/memcpy1.c:15:20> #-} let weak a_993: pointer =
            {-# <./cheri/memcpy1.c:15:12, ./cheri/memcpy1.c:15:20> #-} pure(
              __stderr
            ) in
          load('struct _IO_FILE*', a_993)
        ,
          {-# <./cheri/memcpy1.c:15:21, ./cheri/memcpy1.c:15:49> #-} let weak a_996: pointer =
            {-# <./cheri/memcpy1.c:15:21, ./cheri/memcpy1.c:15:49> #-} pure(
              a_995
            ) in
          {-# ยง6.3.2.1#3 #-}
          let weak a_997: pointer = memop(PtrArrayShift, a_996, 'char', 0) in
          pure(Specified(a_997))
        ,
          {-# ยง6.5.2.2#10, sentence 1 #-}
          {-# <./cheri/memcpy1.c:15:51, ./cheri/memcpy1.c:15:66> #-} let strong ((a_1000: loaded pointer,
          (a_1001: ctype, a_1002: [ctype], a_1003: boolean, a_1004: boolean)),
          a_1006: loaded pointer) =
            {-# ยง6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_999: loaded pointer =
                {-# <./cheri/memcpy1.c:15:51, ./cheri/memcpy1.c:15:55> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_999, cfunction(a_999)))
            ,
              {-# ยง6.5.4 #-}
              {-# <./cheri/memcpy1.c:15:56, ./cheri/memcpy1.c:15:65> ./cheri/memcpy1.c:15:56 #-} let weak a_1009: pointer =
                {-# <./cheri/memcpy1.c:15:63, ./cheri/memcpy1.c:15:65> #-} pure(
                  p1
                ) in
              load('signed int**', a_1009)
            ) in
          if not(params_length(a_1002) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_1003 \/ not(are_compatible ('const char*', a_1001)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1005: pointer =
                let a_1011: ctype = params_nth(a_1002, 0) in
                if not(are_compatible ('void*', a_1011)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# ยง6.5.2.2#7, sentence 1 #-}
                  let weak a_1012: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_1012, a_1006) in
                  pure(a_1012) in
              let strong a_1013: loaded pointer =
                ccall('const char* (*) (void*)', a_1000, a_1005) in
              kill('void*', a_1005) ;
              pure(a_1013)
        ) in
      if not(params_length(a_986) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_987) \/ not(are_compatible ('signed int', a_985)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_991: pointer =
            let a_1014: ctype = params_nth(a_986, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1014)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# ยง6.5.2.2#7, sentence 1 #-}
              let weak a_1015: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1015, a_992) in
              pure(a_1015) in
          let strong a_990: pointer =
            let a_1016: ctype = params_nth(a_986, 1) in
            if not(are_compatible ('const char*', a_1016)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# ยง6.5.2.2#7, sentence 1 #-}
              let weak a_1017: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1017, a_994) in
              pure(a_1017) in
          let strong a_989: pointer =
            {-# ยง6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_998) in
          let strong a_1018: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_984, a_991, a_990, [('const char*', a_989)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_991)
            ,
              kill('char*', a_990)
            ,
              kill('char*', a_989)
            ) in
          pure(a_1018)
    ) in
  pure(Unit) ;
  {-# <./cheri/memcpy1.c:16:4, ./cheri/memcpy1.c:16:58> #-} let strong _: loaded integer =
    {-# ยง6.5#2 #-}
    bound(
      {-# ยง6.5.2.2#10, sentence 1 #-}
      {-# <./cheri/memcpy1.c:16:4, ./cheri/memcpy1.c:16:57> #-} let strong ((a_1019: loaded pointer,
      (a_1020: ctype, a_1021: [ctype], a_1022: boolean, a_1023: boolean)),
      a_1027: loaded pointer, a_1029: loaded pointer, a_1033: loaded pointer) =
        {-# ยง6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_910: loaded pointer =
            {-# <./cheri/memcpy1.c:16:4, ./cheri/memcpy1.c:16:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_910, cfunction(a_910)))
        ,
          {-# <./cheri/memcpy1.c:16:12, ./cheri/memcpy1.c:16:20> #-} let weak a_1028: pointer =
            {-# <./cheri/memcpy1.c:16:12, ./cheri/memcpy1.c:16:20> #-} pure(
              __stderr
            ) in
          load('struct _IO_FILE*', a_1028)
        ,
          {-# <./cheri/memcpy1.c:16:21, ./cheri/memcpy1.c:16:38> #-} let weak a_1031: pointer =
            {-# <./cheri/memcpy1.c:16:21, ./cheri/memcpy1.c:16:38> #-} pure(
              a_1030
            ) in
          {-# ยง6.3.2.1#3 #-}
          let weak a_1032: pointer =
            memop(PtrArrayShift, a_1031, 'char', 0) in
          pure(Specified(a_1032))
        ,
          {-# ยง6.5.2.2#10, sentence 1 #-}
          {-# <./cheri/memcpy1.c:16:40, ./cheri/memcpy1.c:16:56> #-} let strong ((a_1035: loaded pointer,
          (a_1036: ctype, a_1037: [ctype], a_1038: boolean, a_1039: boolean)),
          a_1041: loaded pointer) =
            {-# ยง6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_1034: loaded pointer =
                {-# <./cheri/memcpy1.c:16:40, ./cheri/memcpy1.c:16:44> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_1034, cfunction(a_1034)))
            ,
              {-# ยง6.5.4 #-}
              {-# <./cheri/memcpy1.c:16:45, ./cheri/memcpy1.c:16:55> ./cheri/memcpy1.c:16:45 #-} let weak a_1048: pointer =
                {-# ยง6.5.3.2 #-}
                {-# <./cheri/memcpy1.c:16:52, ./cheri/memcpy1.c:16:55> ./cheri/memcpy1.c:16:52 #-} let weak a_1044: loaded pointer =
                  {-# <./cheri/memcpy1.c:16:53, ./cheri/memcpy1.c:16:55> #-} let weak a_1047: pointer =
                    {-# <./cheri/memcpy1.c:16:53, ./cheri/memcpy1.c:16:55> #-} pure(
                      p1
                    ) in
                  load('signed int**', a_1047) in
                case a_1044 of
                  | Specified(a_1045: pointer) =>
                      let weak a_1046: boolean =
                        memop(PtrValidForDeref, 'signed int*', a_1045) in
                      pure(
                        if a_1046 then
                          a_1045
                        else
                          undef(<<UB043_indirection_invalid_value>>)
                      )
                  | Unspecified(_: ctype) =>
                      pure(undef(<<UB043_indirection_invalid_value>>))
                end in
              load('signed int*', a_1048)
            ) in
          if not(params_length(a_1037) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_1038 \/ not(are_compatible ('const char*', a_1036)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1040: pointer =
                let a_1050: ctype = params_nth(a_1037, 0) in
                if not(are_compatible ('void*', a_1050)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# ยง6.5.2.2#7, sentence 1 #-}
                  let weak a_1051: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_1051, a_1041) in
                  pure(a_1051) in
              let strong a_1052: loaded pointer =
                ccall('const char* (*) (void*)', a_1035, a_1040) in
              kill('void*', a_1040) ;
              pure(a_1052)
        ) in
      if not(params_length(a_1021) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1022) \/ not(are_compatible ('signed int', a_1020)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1026: pointer =
            let a_1053: ctype = params_nth(a_1021, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1053)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# ยง6.5.2.2#7, sentence 1 #-}
              let weak a_1054: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1054, a_1027) in
              pure(a_1054) in
          let strong a_1025: pointer =
            let a_1055: ctype = params_nth(a_1021, 1) in
            if not(are_compatible ('const char*', a_1055)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# ยง6.5.2.2#7, sentence 1 #-}
              let weak a_1056: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1056, a_1029) in
              pure(a_1056) in
          let strong a_1024: pointer =
            {-# ยง6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_1033) in
          let strong a_1057: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1019, a_1026, a_1025, [('const char*', a_1024)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1026)
            ,
              kill('char*', a_1025)
            ,
              kill('char*', a_1024)
            ) in
          pure(a_1057)
    ) in
  pure(Unit) ;
  {-# <./cheri/memcpy1.c:17:4, ./cheri/memcpy1.c:18:80> #-} let strong _: loaded integer =
    {-# ยง6.5#2 #-}
    bound(
      {-# ยง6.5.2.2#10, sentence 1 #-}
      {-# <./cheri/memcpy1.c:17:4, ./cheri/memcpy1.c:18:79> #-} let strong ((a_1058: loaded pointer,
      (a_1059: ctype, a_1060: [ctype], a_1061: boolean, a_1062: boolean)),
      a_1066: loaded pointer, a_1068: loaded pointer, a_1072: loaded pointer) =
        {-# ยง6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_909: loaded pointer =
            {-# <./cheri/memcpy1.c:17:4, ./cheri/memcpy1.c:17:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_909, cfunction(a_909)))
        ,
          {-# <./cheri/memcpy1.c:17:12, ./cheri/memcpy1.c:17:20> #-} let weak a_1067: pointer =
            {-# <./cheri/memcpy1.c:17:12, ./cheri/memcpy1.c:17:20> #-} pure(
              __stderr
            ) in
          load('struct _IO_FILE*', a_1067)
        ,
          {-# <./cheri/memcpy1.c:17:21, ./cheri/memcpy1.c:17:40> #-} let weak a_1070: pointer =
            {-# <./cheri/memcpy1.c:17:21, ./cheri/memcpy1.c:17:40> #-} pure(
              a_1069
            ) in
          {-# ยง6.3.2.1#3 #-}
          let weak a_1071: pointer =
            memop(PtrArrayShift, a_1070, 'char', 0) in
          pure(Specified(a_1071))
        ,
          {-# ยง6.5.15#4, sentence 1 #-}
          {-# <./cheri/memcpy1.c:18:12, ./cheri/memcpy1.c:18:78> ./cheri/memcpy1.c:18:50 #-} let strong a_1094: loaded integer =
            {-# <./cheri/memcpy1.c:18:12, ./cheri/memcpy1.c:18:50> #-} let weak (a_1073: loaded integer,
            a_1074: loaded integer) =
              unseq(
                {-# <./cheri/memcpy1.c:18:12, ./cheri/memcpy1.c:18:50> #-} let strong a_1091: (loaded pointer,loaded pointer) =
                  unseq(
                    {-# ยง6.5.4 #-}
                    {-# <./cheri/memcpy1.c:18:43, ./cheri/memcpy1.c:18:45> #-} let weak a_1079: loaded pointer =
                      {-# <./cheri/memcpy1.c:18:43, ./cheri/memcpy1.c:18:45> #-} let weak a_1081: pointer =
                        {-# <./cheri/memcpy1.c:18:43, ./cheri/memcpy1.c:18:45> #-} pure(
                          p0
                        ) in
                      load('signed int*', a_1081) in
                    case a_1079 of
                      | Specified(a_1080: pointer) =>
                          let weak a_1082: boolean =
                            memop(PtrWellAligned, 'signed int', a_1080) in
                          pure(
                            Specified(if a_1082 then
                              a_1080
                            else
                              undef(<<UB025_misaligned_pointer_conversion>>))
                          )
                      | Unspecified(_: ctype) =>
                          pure(undef(<<UB025_misaligned_pointer_conversion>>))
                    end
                  ,
                    {-# ยง6.5.4 #-}
                    {-# <./cheri/memcpy1.c:18:46, ./cheri/memcpy1.c:18:49> ./cheri/memcpy1.c:18:46 #-} let weak a_1078: loaded pointer =
                      {-# <./cheri/memcpy1.c:18:46, ./cheri/memcpy1.c:18:49> ./cheri/memcpy1.c:18:46 #-} let weak a_1088: pointer =
                        {-# ยง6.5.3.2 #-}
                        {-# <./cheri/memcpy1.c:18:46, ./cheri/memcpy1.c:18:49> ./cheri/memcpy1.c:18:46 #-} let weak a_1084: loaded pointer =
                          {-# <./cheri/memcpy1.c:18:47, ./cheri/memcpy1.c:18:49> #-} let weak a_1087: pointer =
                            {-# <./cheri/memcpy1.c:18:47, ./cheri/memcpy1.c:18:49> #-} pure(
                              p1
                            ) in
                          load('signed int**', a_1087) in
                        case a_1084 of
                          | Specified(a_1085: pointer) =>
                              let weak a_1086: boolean =
                                memop(PtrValidForDeref, 'signed int*', a_1085) in
                              pure(
                                if a_1086 then
                                  a_1085
                                else
                                  undef(<<UB043_indirection_invalid_value>>)
                              )
                          | Unspecified(_: ctype) =>
                              pure(undef(<<UB043_indirection_invalid_value>>))
                        end in
                      load('signed int*', a_1088) in
                    case a_1078 of
                      | Specified(a_1083: pointer) =>
                          let weak a_1089: boolean =
                            memop(PtrWellAligned, 'signed int', a_1083) in
                          pure(
                            Specified(if a_1089 then
                              a_1083
                            else
                              undef(<<UB025_misaligned_pointer_conversion>>))
                          )
                      | Unspecified(_: ctype) =>
                          pure(undef(<<UB025_misaligned_pointer_conversion>>))
                    end
                  ) in
                case a_1091 of
                  | (Specified(a_1092: pointer), Specified(a_1093: pointer)) =>
                      memop(cheri_cheri_is_equal_exact['_Bool (signed int*, signed int*)'], a_1092,
                      a_1093)
                  | _: (loaded pointer,loaded pointer) =>
                      pure(undef(<<DUMMY(Elab, CHERI intrinsics (unspec))>>))
                end
              ,
                {-# <./cheri/memcpy1.c:18:12, ./cheri/memcpy1.c:18:50> #-} pure(
                  Specified(0)
                )
              ) in
            pure(
              case (a_1073, a_1074) of
                | (Specified(a_1075: integer), Specified(a_1076: integer)) =>
                    if conv_int('signed int', a_1075) =
                    conv_int('signed int', a_1076) then
                      Specified(1)
                    else
                      Specified(0)
                | _: (loaded integer,loaded integer) =>
                    Unspecified('signed int')
              end
            ) in
          case a_1094 of
            | Specified(a_1095: integer) =>
                {-# ยง6.5.15#4, sentence 2 #-}
                if a_1095 = 0 then
                  {-# <./cheri/memcpy1.c:18:51, ./cheri/memcpy1.c:18:66> #-} let weak a_1097: pointer =
                    {-# <./cheri/memcpy1.c:18:51, ./cheri/memcpy1.c:18:66> #-} pure(
                      a_1096
                    ) in
                  {-# ยง6.3.2.1#3 #-}
                  let weak a_1098: pointer =
                    memop(PtrArrayShift, a_1097, 'char', 0) in
                  pure(Specified(a_1098))
                else
                  {-# <./cheri/memcpy1.c:18:67, ./cheri/memcpy1.c:18:78> #-} let weak a_1100: pointer =
                    {-# <./cheri/memcpy1.c:18:67, ./cheri/memcpy1.c:18:78> #-} pure(
                      a_1099
                    ) in
                  {-# ยง6.3.2.1#3 #-}
                  let weak a_1101: pointer =
                    memop(PtrArrayShift, a_1100, 'char', 0) in
                  pure(Specified(a_1101))
            | Unspecified(_: ctype) =>
                pure(undef(<<UB_CERB004_unspecified__conditional>>))
          end
        ) in
      if not(params_length(a_1060) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1061) \/ not(are_compatible ('signed int', a_1059)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1065: pointer =
            let a_1102: ctype = params_nth(a_1060, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1102)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# ยง6.5.2.2#7, sentence 1 #-}
              let weak a_1103: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1103, a_1066) in
              pure(a_1103) in
          let strong a_1064: pointer =
            let a_1104: ctype = params_nth(a_1060, 1) in
            if not(are_compatible ('const char*', a_1104)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# ยง6.5.2.2#7, sentence 1 #-}
              let weak a_1105: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1105, a_1068) in
              pure(a_1105) in
          let strong a_1063: pointer =
            {-# ยง6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'char*', a_1072) in
          let strong a_1106: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1058, a_1065, a_1064, [('char*', a_1063)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1065)
            ,
              kill('char*', a_1064)
            ,
              kill('char*', a_1063)
            ) in
          pure(a_1106)
    ) in
  pure(Unit) ;
  kill('signed int', x) ;
  kill('signed int*', p0) ;
  kill('signed int**', p1) ;
  pure(Unit) ;
  {-# <./cheri/memcpy1.c:7:0, ./cheri/memcpy1.c:19:1> ./cheri/memcpy1.c:7:4 - ./cheri/memcpy1.c:7:8 #-} save ret_908: loaded integer (a_1107: loaded integer:= Specified(0)) in
    pure(a_1107)

