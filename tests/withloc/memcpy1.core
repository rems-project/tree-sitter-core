-- Aggregates










-- Globals
glob a_954: pointer [ail_ctype = 'char[13]'] :=
  let strong a_1445: pointer = create(Ivalignof('char[13]'), 'char[13]') in
  store_lock('char[13]', a_1445,
  Specified(Array(Specified(conv_int('char', 79)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 103)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1446: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1445,
    18446744073701163007) in
  case a_1446 of
    | Specified(a_1445: pointer) =>
        pure(a_1445)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_990: pointer [ail_ctype = 'char[20]'] :=
  let strong a_1447: pointer = create(Ivalignof('char[20]'), 'char[20]') in
  store_lock('char[20]', a_1447,
  Specified(Array(Specified(conv_int('char', 80)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1448: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1447,
    18446744073701163007) in
  case a_1448 of
    | Specified(a_1447: pointer) =>
        pure(a_1447)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1026: pointer [ail_ctype = 'char[9]'] :=
  let strong a_1449: pointer = create(Ivalignof('char[9]'), 'char[9]') in
  store_lock('char[9]', a_1449,
  Specified(Array(Specified(conv_int('char', 67)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1450: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1449,
    18446744073701163007) in
  case a_1450 of
    | Specified(a_1449: pointer) =>
        pure(a_1449)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1066: pointer [ail_ctype = 'char[17]'] :=
  let strong a_1451: pointer = create(Ivalignof('char[17]'), 'char[17]') in
  store_lock('char[17]', a_1451,
  Specified(Array(Specified(conv_int('char', 80)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1452: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1451,
    18446744073701163007) in
  case a_1452 of
    | Specified(a_1451: pointer) =>
        pure(a_1451)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1093: pointer [ail_ctype = 'char[14]'] :=
  let strong a_1453: pointer = create(Ivalignof('char[14]'), 'char[14]') in
  store_lock('char[14]', a_1453,
  Specified(Array(Specified(conv_int('char', 101)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(0)))) ;
  let strong a_1454: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1453,
    18446744073701163007) in
  case a_1454 of
    | Specified(a_1453: pointer) =>
        pure(a_1453)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1096: pointer [ail_ctype = 'char[10]'] :=
  let strong a_1455: pointer = create(Ivalignof('char[10]'), 'char[10]') in
  store_lock('char[10]', a_1455,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(0)))) ;
  let strong a_1456: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1455,
    18446744073701163007) in
  case a_1456 of
    | Specified(a_1455: pointer) =>
        pure(a_1455)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1119: pointer [ail_ctype = 'char[5]'] :=
  let strong a_1457: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_1457,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0)))) ;
  let strong a_1458: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1457,
    18446744073701163007) in
  case a_1458 of
    | Specified(a_1457: pointer) =>
        pure(a_1457)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1123: pointer [ail_ctype = 'char[9]'] :=
  let strong a_1459: pointer = create(Ivalignof('char[9]'), 'char[9]') in
  store_lock('char[9]', a_1459,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0)))) ;
  let strong a_1460: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1459,
    18446744073701163007) in
  case a_1460 of
    | Specified(a_1459: pointer) =>
        pure(a_1459)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1147: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1461: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1461,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(0)))) ;
  let strong a_1462: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1461,
    18446744073701163007) in
  case a_1462 of
    | Specified(a_1461: pointer) =>
        pure(a_1461)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1188: pointer [ail_ctype = 'char[5]'] :=
  let strong a_1463: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_1463,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 48)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 120)), Specified(0)))) ;
  let strong a_1464: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1463,
    18446744073701163007) in
  case a_1464 of
    | Specified(a_1463: pointer) =>
        pure(a_1463)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1236: pointer [ail_ctype = 'char[2]'] :=
  let strong a_1465: pointer = create(Ivalignof('char[2]'), 'char[2]') in
  store_lock('char[2]', a_1465,
  Specified(Array(Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1466: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1465,
    18446744073701163007) in
  case a_1466 of
    | Specified(a_1465: pointer) =>
        pure(a_1465)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1309: pointer [ail_ctype = 'char[26]'] :=
  let strong a_1467: pointer = create(Ivalignof('char[26]'), 'char[26]') in
  store_lock('char[26]', a_1467,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 96)),
  Specified(0)))) ;
  let strong a_1468: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1467,
    18446744073701163007) in
  case a_1468 of
    | Specified(a_1467: pointer) =>
        pure(a_1467)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1325: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1469: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1469,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 112)),
  Specified(0)))) ;
  let strong a_1470: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1469,
    18446744073701163007) in
  case a_1470 of
    | Specified(a_1469: pointer) =>
        pure(a_1469)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1365: pointer [ail_ctype = 'char[31]'] :=
  let strong a_1471: pointer = create(Ivalignof('char[31]'), 'char[31]') in
  store_lock('char[31]', a_1471,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 96)), Specified(0)))) ;
  let strong a_1472: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1471,
    18446744073701163007) in
  case a_1472 of
    | Specified(a_1471: pointer) =>
        pure(a_1471)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1380: pointer [ail_ctype = 'char[27]'] :=
  let strong a_1473: pointer = create(Ivalignof('char[27]'), 'char[27]') in
  store_lock('char[27]', a_1473,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 91)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 80)), Specified(conv_int('char', 44)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 35)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 98)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 93)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 63)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 65)), Specified(0)))) ;
  let strong a_1474: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1473,
    18446744073701163007) in
  case a_1474 of
    | Specified(a_1473: pointer) =>
        pure(a_1473)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1420: pointer [ail_ctype = 'char[15]'] :=
  let strong a_1475: pointer = create(Ivalignof('char[15]'), 'char[15]') in
  store_lock('char[15]', a_1475,
  Specified(Array(Specified(conv_int('char', 115)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1476: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1475,
    18446744073701163007) in
  case a_1476 of
    | Specified(a_1475: pointer) =>
        pure(a_1475)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

-- Fun map
proc main (): eff loaded integer :=
  {-# <memcpy1.c:8:0, memcpy1.c:19:1> #-} let strong x: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong p0: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong p1: pointer =
    create(Ivalignof('signed int**'), 'signed int**') in
  {-# <memcpy1.c:9:4, memcpy1.c:9:13> #-} let strong a_906: loaded integer =
    {-# §6.5#2 #-}
    bound({-# <memcpy1.c:9:10, memcpy1.c:9:12> #-} pure(Specified(42))) in
  store('signed int', x, conv_loaded_int('signed int', a_906)) ;
  {-# <memcpy1.c:10:4, memcpy1.c:10:17> #-} let strong a_907: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.3.2#3, sentence 5 #-}
      {-# <memcpy1.c:10:14, memcpy1.c:10:16> memcpy1.c:10:14 #-} let weak a_908: pointer =
        {-# <memcpy1.c:10:15, memcpy1.c:10:16> #-} pure(x) in
      pure(Specified(a_908))
    ) in
  store('signed int*', p0, a_907) ;
  {-# <memcpy1.c:11:4, memcpy1.c:11:36> #-} let strong a_909: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <memcpy1.c:11:15, memcpy1.c:11:35> #-} let strong ((a_911: loaded pointer,
      (a_912: ctype, a_913: [ctype], a_914: boolean, a_915: boolean)),
      a_917: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_910: loaded pointer =
            {-# <memcpy1.c:11:15, memcpy1.c:11:21> #-} pure(
              Specified(Cfunction(malloc_proxy))
            ) in
          pure((a_910, cfunction(a_910)))
        ,
          {-# <memcpy1.c:11:22, memcpy1.c:11:34> memcpy1.c:11:22 #-} pure(
            Specified(Ivsizeof('signed int*'))
          )
        ) in
      if not(params_length(a_913) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_914 \/ not(are_compatible ('void*', a_912)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_916: pointer =
            let a_918: ctype = params_nth(a_913, 0) in
            if not(are_compatible ('size_t', a_918)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_919: pointer =
                create(Ivalignof('size_t'), 'size_t') in
              let weak _: unit =
                store('size_t', a_919, conv_loaded_int('size_t', a_917)) in
              pure(a_919) in
          let strong a_920: loaded pointer =
            ccall('void* (*) (size_t)', a_911, a_916) in
          kill('size_t', a_916) ;
          pure(a_920)
    ) in
  store('signed int**', p1, a_909) ;
  {-# <memcpy1.c:12:4, memcpy1.c:12:32> #-} let strong _: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <memcpy1.c:12:4, memcpy1.c:12:31> #-} let strong ((a_922: loaded pointer,
      (a_923: ctype, a_924: [ctype], a_925: boolean, a_926: boolean)),
      a_930: loaded pointer, a_932: loaded pointer, a_934: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_921: loaded pointer =
            {-# <memcpy1.c:12:4, memcpy1.c:12:10> #-} pure(
              Specified(Cfunction(memcpy_proxy))
            ) in
          pure((a_921, cfunction(a_921)))
        ,
          {-# <memcpy1.c:12:11, memcpy1.c:12:13> #-} let weak a_931: pointer =
            {-# <memcpy1.c:12:11, memcpy1.c:12:13> #-} pure(p1) in
          load('signed int**', a_931)
        ,
          {-# §6.5.3.2#3, sentence 5 #-}
          {-# <memcpy1.c:12:14, memcpy1.c:12:17> memcpy1.c:12:14 #-} let weak a_933: pointer =
            {-# <memcpy1.c:12:15, memcpy1.c:12:17> #-} pure(p0) in
          pure(Specified(a_933))
        ,
          {-# <memcpy1.c:12:18, memcpy1.c:12:30> memcpy1.c:12:18 #-} pure(
            Specified(Ivsizeof('signed int*'))
          )
        ) in
      if not(params_length(a_924) = 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_925 \/ not(are_compatible ('void*', a_923)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_929: pointer =
            let a_935: ctype = params_nth(a_924, 0) in
            if not(are_compatible ('void*', a_935)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_936: pointer =
                create(Ivalignof('void*'), 'void*') in
              let weak _: unit = store('void*', a_936, a_930) in
              pure(a_936) in
          let strong a_928: pointer =
            let a_937: ctype = params_nth(a_924, 1) in
            if not(are_compatible ('const void*', a_937)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_938: pointer =
                create(Ivalignof('const void*'), 'const void*') in
              let weak _: unit = store('const void*', a_938, a_932) in
              pure(a_938) in
          let strong a_927: pointer =
            let a_939: ctype = params_nth(a_924, 2) in
            if not(are_compatible ('size_t', a_939)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_940: pointer =
                create(Ivalignof('size_t'), 'size_t') in
              let weak _: unit =
                store('size_t', a_940, conv_loaded_int('size_t', a_934)) in
              pure(a_940) in
          let strong a_941: loaded pointer =
            ccall('void* (*) (void*restrict , const void*restrict , size_t)',
            a_922, a_929, a_928, a_927) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('void*', a_929)
            ,
              kill('void*', a_928)
            ,
              kill('size_t', a_927)
            ) in
          pure(a_941)
    ) in
  pure(Unit) ;
  {-# <memcpy1.c:14:4, memcpy1.c:14:61> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <memcpy1.c:14:4, memcpy1.c:14:60> #-} let strong ((a_943: loaded pointer,
      (a_944: ctype, a_945: [ctype], a_946: boolean, a_947: boolean)),
      a_951: loaded pointer, a_953: loaded pointer, a_957: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_942: loaded pointer =
            {-# <memcpy1.c:14:4, memcpy1.c:14:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_942, cfunction(a_942)))
        ,
          {-# <memcpy1.c:14:12, memcpy1.c:14:20> #-} let weak a_952: pointer =
            {-# <memcpy1.c:14:12, memcpy1.c:14:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_952)
        ,
          {-# <memcpy1.c:14:21, memcpy1.c:14:42> #-} let weak a_955: pointer =
            {-# <memcpy1.c:14:21, memcpy1.c:14:42> #-} pure(a_954) in
          {-# §6.3.2.1#3 #-}
          let weak a_956: pointer = memop(PtrArrayShift, a_955, 'char', 0) in
          pure(Specified(a_956))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <memcpy1.c:14:44, memcpy1.c:14:59> #-} let strong ((a_959: loaded pointer,
          (a_960: ctype, a_961: [ctype], a_962: boolean, a_963: boolean)),
          a_965: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_958: loaded pointer =
                {-# <memcpy1.c:14:44, memcpy1.c:14:48> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_958, cfunction(a_958)))
            ,
              {-# §6.5.4 #-}
              {-# <memcpy1.c:14:49, memcpy1.c:14:58> memcpy1.c:14:49 #-} let weak a_968: pointer =
                {-# <memcpy1.c:14:56, memcpy1.c:14:58> #-} pure(p0) in
              load('signed int*', a_968)
            ) in
          if not(params_length(a_961) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_962 \/ not(are_compatible ('const char*', a_960)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_964: pointer =
                let a_970: ctype = params_nth(a_961, 0) in
                if not(are_compatible ('void*', a_970)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_971: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_971, a_965) in
                  pure(a_971) in
              let strong a_972: loaded pointer =
                ccall('const char* (*) (void*)', a_959, a_964) in
              kill('void*', a_964) ;
              pure(a_972)
        ) in
      if not(params_length(a_945) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_946) \/ not(are_compatible ('signed int', a_944)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_950: pointer =
            let a_973: ctype = params_nth(a_945, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_973)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_974: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_974, a_951) in
              pure(a_974) in
          let strong a_949: pointer =
            let a_975: ctype = params_nth(a_945, 1) in
            if not(are_compatible ('const char*', a_975)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_976: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_976, a_953) in
              pure(a_976) in
          let strong a_948: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_957) in
          let strong a_977: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_943, a_950, a_949, [('const char*', a_948)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_950)
            ,
              kill('char*', a_949)
            ,
              kill('char*', a_948)
            ) in
          pure(a_977)
    ) in
  pure(Unit) ;
  {-# <memcpy1.c:15:4, memcpy1.c:15:68> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <memcpy1.c:15:4, memcpy1.c:15:67> #-} let strong ((a_979: loaded pointer,
      (a_980: ctype, a_981: [ctype], a_982: boolean, a_983: boolean)),
      a_987: loaded pointer, a_989: loaded pointer, a_993: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_978: loaded pointer =
            {-# <memcpy1.c:15:4, memcpy1.c:15:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_978, cfunction(a_978)))
        ,
          {-# <memcpy1.c:15:12, memcpy1.c:15:20> #-} let weak a_988: pointer =
            {-# <memcpy1.c:15:12, memcpy1.c:15:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_988)
        ,
          {-# <memcpy1.c:15:21, memcpy1.c:15:49> #-} let weak a_991: pointer =
            {-# <memcpy1.c:15:21, memcpy1.c:15:49> #-} pure(a_990) in
          {-# §6.3.2.1#3 #-}
          let weak a_992: pointer = memop(PtrArrayShift, a_991, 'char', 0) in
          pure(Specified(a_992))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <memcpy1.c:15:51, memcpy1.c:15:66> #-} let strong ((a_995: loaded pointer,
          (a_996: ctype, a_997: [ctype], a_998: boolean, a_999: boolean)),
          a_1001: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_994: loaded pointer =
                {-# <memcpy1.c:15:51, memcpy1.c:15:55> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_994, cfunction(a_994)))
            ,
              {-# §6.5.4 #-}
              {-# <memcpy1.c:15:56, memcpy1.c:15:65> memcpy1.c:15:56 #-} let weak a_1004: pointer =
                {-# <memcpy1.c:15:63, memcpy1.c:15:65> #-} pure(p1) in
              load('signed int**', a_1004)
            ) in
          if not(params_length(a_997) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_998 \/ not(are_compatible ('const char*', a_996)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1000: pointer =
                let a_1006: ctype = params_nth(a_997, 0) in
                if not(are_compatible ('void*', a_1006)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_1007: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_1007, a_1001) in
                  pure(a_1007) in
              let strong a_1008: loaded pointer =
                ccall('const char* (*) (void*)', a_995, a_1000) in
              kill('void*', a_1000) ;
              pure(a_1008)
        ) in
      if not(params_length(a_981) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_982) \/ not(are_compatible ('signed int', a_980)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_986: pointer =
            let a_1009: ctype = params_nth(a_981, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1009)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1010: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1010, a_987) in
              pure(a_1010) in
          let strong a_985: pointer =
            let a_1011: ctype = params_nth(a_981, 1) in
            if not(are_compatible ('const char*', a_1011)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1012: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1012, a_989) in
              pure(a_1012) in
          let strong a_984: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_993) in
          let strong a_1013: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_979, a_986, a_985, [('const char*', a_984)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_986)
            ,
              kill('char*', a_985)
            ,
              kill('char*', a_984)
            ) in
          pure(a_1013)
    ) in
  pure(Unit) ;
  {-# <memcpy1.c:16:4, memcpy1.c:16:58> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <memcpy1.c:16:4, memcpy1.c:16:57> #-} let strong ((a_1015: loaded pointer,
      (a_1016: ctype, a_1017: [ctype], a_1018: boolean, a_1019: boolean)),
      a_1023: loaded pointer, a_1025: loaded pointer, a_1029: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_1014: loaded pointer =
            {-# <memcpy1.c:16:4, memcpy1.c:16:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_1014, cfunction(a_1014)))
        ,
          {-# <memcpy1.c:16:12, memcpy1.c:16:20> #-} let weak a_1024: pointer =
            {-# <memcpy1.c:16:12, memcpy1.c:16:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_1024)
        ,
          {-# <memcpy1.c:16:21, memcpy1.c:16:38> #-} let weak a_1027: pointer =
            {-# <memcpy1.c:16:21, memcpy1.c:16:38> #-} pure(a_1026) in
          {-# §6.3.2.1#3 #-}
          let weak a_1028: pointer =
            memop(PtrArrayShift, a_1027, 'char', 0) in
          pure(Specified(a_1028))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <memcpy1.c:16:40, memcpy1.c:16:56> #-} let strong ((a_1031: loaded pointer,
          (a_1032: ctype, a_1033: [ctype], a_1034: boolean, a_1035: boolean)),
          a_1037: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_1030: loaded pointer =
                {-# <memcpy1.c:16:40, memcpy1.c:16:44> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_1030, cfunction(a_1030)))
            ,
              {-# §6.5.4 #-}
              {-# <memcpy1.c:16:45, memcpy1.c:16:55> memcpy1.c:16:45 #-} let weak a_1044: pointer =
                {-# §6.5.3.2 #-}
                {-# <memcpy1.c:16:52, memcpy1.c:16:55> memcpy1.c:16:52 #-} let weak a_1040: loaded pointer =
                  {-# <memcpy1.c:16:53, memcpy1.c:16:55> #-} let weak a_1043: pointer =
                    {-# <memcpy1.c:16:53, memcpy1.c:16:55> #-} pure(p1) in
                  load('signed int**', a_1043) in
                case a_1040 of
                  | Specified(a_1041: pointer) =>
                      let weak a_1042: boolean =
                        memop(PtrValidForDeref, 'signed int*', a_1041) in
                      pure(
                        if a_1042 then
                          a_1041
                        else
                          undef(<<UB043_indirection_invalid_value>>)
                      )
                  | Unspecified(_: ctype) =>
                      pure(undef(<<UB043_indirection_invalid_value>>))
                end in
              load('signed int*', a_1044)
            ) in
          if not(params_length(a_1033) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_1034 \/ not(are_compatible ('const char*', a_1032)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1036: pointer =
                let a_1046: ctype = params_nth(a_1033, 0) in
                if not(are_compatible ('void*', a_1046)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_1047: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_1047, a_1037) in
                  pure(a_1047) in
              let strong a_1048: loaded pointer =
                ccall('const char* (*) (void*)', a_1031, a_1036) in
              kill('void*', a_1036) ;
              pure(a_1048)
        ) in
      if not(params_length(a_1017) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1018) \/ not(are_compatible ('signed int', a_1016)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1022: pointer =
            let a_1049: ctype = params_nth(a_1017, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1049)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1050: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1050, a_1023) in
              pure(a_1050) in
          let strong a_1021: pointer =
            let a_1051: ctype = params_nth(a_1017, 1) in
            if not(are_compatible ('const char*', a_1051)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1052: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1052, a_1025) in
              pure(a_1052) in
          let strong a_1020: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_1029) in
          let strong a_1053: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1015, a_1022, a_1021, [('const char*', a_1020)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1022)
            ,
              kill('char*', a_1021)
            ,
              kill('char*', a_1020)
            ) in
          pure(a_1053)
    ) in
  pure(Unit) ;
  {-# <memcpy1.c:17:4, memcpy1.c:18:80> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <memcpy1.c:17:4, memcpy1.c:18:79> #-} let strong ((a_1055: loaded pointer,
      (a_1056: ctype, a_1057: [ctype], a_1058: boolean, a_1059: boolean)),
      a_1063: loaded pointer, a_1065: loaded pointer, a_1069: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_1054: loaded pointer =
            {-# <memcpy1.c:17:4, memcpy1.c:17:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_1054, cfunction(a_1054)))
        ,
          {-# <memcpy1.c:17:12, memcpy1.c:17:20> #-} let weak a_1064: pointer =
            {-# <memcpy1.c:17:12, memcpy1.c:17:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_1064)
        ,
          {-# <memcpy1.c:17:21, memcpy1.c:17:40> #-} let weak a_1067: pointer =
            {-# <memcpy1.c:17:21, memcpy1.c:17:40> #-} pure(a_1066) in
          {-# §6.3.2.1#3 #-}
          let weak a_1068: pointer =
            memop(PtrArrayShift, a_1067, 'char', 0) in
          pure(Specified(a_1068))
        ,
          {-# §6.5.15#4, sentence 1 #-}
          {-# <memcpy1.c:18:12, memcpy1.c:18:78> memcpy1.c:18:50 #-} let strong a_1091: loaded integer =
            {-# <memcpy1.c:18:12, memcpy1.c:18:50> #-} let weak (a_1070: loaded integer,
            a_1071: loaded integer) =
              unseq(
                {-# <memcpy1.c:18:12, memcpy1.c:18:50> #-} let strong a_1088: (loaded pointer,loaded pointer) =
                  unseq(
                    {-# §6.5.4 #-}
                    {-# <memcpy1.c:18:43, memcpy1.c:18:45> #-} let weak a_1076: loaded pointer =
                      {-# <memcpy1.c:18:43, memcpy1.c:18:45> #-} let weak a_1078: pointer =
                        {-# <memcpy1.c:18:43, memcpy1.c:18:45> #-} pure(p0) in
                      load('signed int*', a_1078) in
                    case a_1076 of
                      | Specified(a_1077: pointer) =>
                          let weak a_1079: boolean =
                            memop(PtrWellAligned, 'signed int', a_1077) in
                          pure(
                            Specified(if a_1079 then
                              a_1077
                            else
                              undef(<<UB025_misaligned_pointer_conversion>>))
                          )
                      | Unspecified(_: ctype) =>
                          pure(
                            undef(<<UB025_misaligned_pointer_conversion>>)
                          )
                    end
                  ,
                    {-# §6.5.4 #-}
                    {-# <memcpy1.c:18:46, memcpy1.c:18:49> memcpy1.c:18:46 #-} let weak a_1075: loaded pointer =
                      {-# <memcpy1.c:18:46, memcpy1.c:18:49> memcpy1.c:18:46 #-} let weak a_1085: pointer =
                        {-# §6.5.3.2 #-}
                        {-# <memcpy1.c:18:46, memcpy1.c:18:49> memcpy1.c:18:46 #-} let weak a_1081: loaded pointer =
                          {-# <memcpy1.c:18:47, memcpy1.c:18:49> #-} let weak a_1084: pointer =
                            {-# <memcpy1.c:18:47, memcpy1.c:18:49> #-} pure(
                              p1
                            ) in
                          load('signed int**', a_1084) in
                        case a_1081 of
                          | Specified(a_1082: pointer) =>
                              let weak a_1083: boolean =
                                memop(PtrValidForDeref, 'signed int*', a_1082) in
                              pure(
                                if a_1083 then
                                  a_1082
                                else
                                  undef(<<UB043_indirection_invalid_value>>)
                              )
                          | Unspecified(_: ctype) =>
                              pure(
                                undef(<<UB043_indirection_invalid_value>>)
                              )
                        end in
                      load('signed int*', a_1085) in
                    case a_1075 of
                      | Specified(a_1080: pointer) =>
                          let weak a_1086: boolean =
                            memop(PtrWellAligned, 'signed int', a_1080) in
                          pure(
                            Specified(if a_1086 then
                              a_1080
                            else
                              undef(<<UB025_misaligned_pointer_conversion>>))
                          )
                      | Unspecified(_: ctype) =>
                          pure(
                            undef(<<UB025_misaligned_pointer_conversion>>)
                          )
                    end
                  ) in
                case a_1088 of
                  | (Specified(a_1089: pointer), Specified(a_1090: pointer)) =>
                      memop(cheri_cheri_is_equal_exact['_Bool (signed int*, signed int*)'], a_1089,
                      a_1090)
                  | _: (loaded pointer,loaded pointer) =>
                      pure(undef(<<DUMMY(Elab, CHERI intrinsics (unspec))>>))
                end
              ,
                {-# <memcpy1.c:18:12, memcpy1.c:18:50> #-} pure(Specified(0))
              ) in
            pure(
              case (a_1070, a_1071) of
                | (Specified(a_1072: integer), Specified(a_1073: integer)) =>
                    if conv_int('signed int', a_1072) =
                    conv_int('signed int', a_1073) then
                      Specified(1)
                    else
                      Specified(0)
                | _: (loaded integer,loaded integer) =>
                    Unspecified('signed int')
              end
            ) in
          case a_1091 of
            | Specified(a_1092: integer) =>
                {-# §6.5.15#4, sentence 2 #-}
                if a_1092 = 0 then
                  {-# <memcpy1.c:18:51, memcpy1.c:18:66> #-} let weak a_1094: pointer =
                    {-# <memcpy1.c:18:51, memcpy1.c:18:66> #-} pure(a_1093) in
                  {-# §6.3.2.1#3 #-}
                  let weak a_1095: pointer =
                    memop(PtrArrayShift, a_1094, 'char', 0) in
                  pure(Specified(a_1095))
                else
                  {-# <memcpy1.c:18:67, memcpy1.c:18:78> #-} let weak a_1097: pointer =
                    {-# <memcpy1.c:18:67, memcpy1.c:18:78> #-} pure(a_1096) in
                  {-# §6.3.2.1#3 #-}
                  let weak a_1098: pointer =
                    memop(PtrArrayShift, a_1097, 'char', 0) in
                  pure(Specified(a_1098))
            | Unspecified(_: ctype) =>
                pure(undef(<<UB_CERB004_unspecified__conditional>>))
          end
        ) in
      if not(params_length(a_1057) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1058) \/ not(are_compatible ('signed int', a_1056)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1062: pointer =
            let a_1099: ctype = params_nth(a_1057, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1099)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1100: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1100, a_1063) in
              pure(a_1100) in
          let strong a_1061: pointer =
            let a_1101: ctype = params_nth(a_1057, 1) in
            if not(are_compatible ('const char*', a_1101)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1102: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1102, a_1065) in
              pure(a_1102) in
          let strong a_1060: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'char*', a_1069) in
          let strong a_1103: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1055, a_1062, a_1061, [('char*', a_1060)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1062)
            ,
              kill('char*', a_1061)
            ,
              kill('char*', a_1060)
            ) in
          pure(a_1103)
    ) in
  pure(Unit) ;
  kill('signed int', x) ;
  kill('signed int*', p0) ;
  kill('signed int**', p1) ;
  pure(Unit) ;
  {-# <memcpy1.c:7:0, memcpy1.c:19:1> memcpy1.c:7:4 - memcpy1.c:7:8 #-} save ret_905: loaded integer (a_1104: loaded integer:= Specified(0)) in
    pure(a_1104)

