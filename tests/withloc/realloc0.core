-- Aggregates










-- Globals
glob a_1027: pointer [ail_ctype = 'char[36]'] :=
  let strong a_1726: pointer = create(Ivalignof('char[36]'), 'char[36]') in
  store_lock('char[36]', a_1726,
  Specified(Array(Specified(conv_int('char', 82)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 103)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 109)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 122)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1727: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1726,
    18446744073701163007) in
  case a_1727 of
    | Specified(a_1726: pointer) =>
        pure(a_1726)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1160: pointer [ail_ctype = 'char[21]'] :=
  let strong a_1728: pointer = create(Ivalignof('char[21]'), 'char[21]') in
  store_lock('char[21]', a_1728,
  Specified(Array(Specified(conv_int('char', 9)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 104)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 103)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1729: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1728,
    18446744073701163007) in
  case a_1729 of
    | Specified(a_1728: pointer) =>
        pure(a_1728)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1180: pointer [ail_ctype = 'char[19]'] :=
  let strong a_1730: pointer = create(Ivalignof('char[19]'), 'char[19]') in
  store_lock('char[19]', a_1730,
  Specified(Array(Specified(conv_int('char', 9)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 119)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1731: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1730,
    18446744073701163007) in
  case a_1731 of
    | Specified(a_1730: pointer) =>
        pure(a_1730)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1245: pointer [ail_ctype = 'char[36]'] :=
  let strong a_1732: pointer = create(Ivalignof('char[36]'), 'char[36]') in
  store_lock('char[36]', a_1732,
  Specified(Array(Specified(conv_int('char', 33)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 103)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1733: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1732,
    18446744073701163007) in
  case a_1733 of
    | Specified(a_1732: pointer) =>
        pure(a_1732)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1295: pointer [ail_ctype = 'char[19]'] :=
  let strong a_1734: pointer = create(Ivalignof('char[19]'), 'char[19]') in
  store_lock('char[19]', a_1734,
  Specified(Array(Specified(conv_int('char', 33)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 45)), Specified(conv_int('char', 122)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1735: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1734,
    18446744073701163007) in
  case a_1735 of
    | Specified(a_1734: pointer) =>
        pure(a_1734)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1354: pointer [ail_ctype = 'char[24]'] :=
  let strong a_1736: pointer = create(Ivalignof('char[24]'), 'char[24]') in
  store_lock('char[24]', a_1736,
  Specified(Array(Specified(conv_int('char', 33)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1737: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1736,
    18446744073701163007) in
  case a_1737 of
    | Specified(a_1736: pointer) =>
        pure(a_1736)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1377: pointer [ail_ctype = 'char[6]'] :=
  let strong a_1738: pointer = create(Ivalignof('char[6]'), 'char[6]') in
  store_lock('char[6]', a_1738,
  Specified(Array(Specified(conv_int('char', 68)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1739: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1738,
    18446744073701163007) in
  case a_1739 of
    | Specified(a_1738: pointer) =>
        pure(a_1738)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1400: pointer [ail_ctype = 'char[5]'] :=
  let strong a_1740: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_1740,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0)))) ;
  let strong a_1741: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1740,
    18446744073701163007) in
  case a_1741 of
    | Specified(a_1740: pointer) =>
        pure(a_1740)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1404: pointer [ail_ctype = 'char[9]'] :=
  let strong a_1742: pointer = create(Ivalignof('char[9]'), 'char[9]') in
  store_lock('char[9]', a_1742,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0)))) ;
  let strong a_1743: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1742,
    18446744073701163007) in
  case a_1743 of
    | Specified(a_1742: pointer) =>
        pure(a_1742)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1428: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1744: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1744,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(0)))) ;
  let strong a_1745: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1744,
    18446744073701163007) in
  case a_1745 of
    | Specified(a_1744: pointer) =>
        pure(a_1744)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1469: pointer [ail_ctype = 'char[5]'] :=
  let strong a_1746: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_1746,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 48)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 120)), Specified(0)))) ;
  let strong a_1747: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1746,
    18446744073701163007) in
  case a_1747 of
    | Specified(a_1746: pointer) =>
        pure(a_1746)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1517: pointer [ail_ctype = 'char[2]'] :=
  let strong a_1748: pointer = create(Ivalignof('char[2]'), 'char[2]') in
  store_lock('char[2]', a_1748,
  Specified(Array(Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1749: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1748,
    18446744073701163007) in
  case a_1749 of
    | Specified(a_1748: pointer) =>
        pure(a_1748)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1590: pointer [ail_ctype = 'char[26]'] :=
  let strong a_1750: pointer = create(Ivalignof('char[26]'), 'char[26]') in
  store_lock('char[26]', a_1750,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 96)),
  Specified(0)))) ;
  let strong a_1751: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1750,
    18446744073701163007) in
  case a_1751 of
    | Specified(a_1750: pointer) =>
        pure(a_1750)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1606: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1752: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1752,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 112)),
  Specified(0)))) ;
  let strong a_1753: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1752,
    18446744073701163007) in
  case a_1753 of
    | Specified(a_1752: pointer) =>
        pure(a_1752)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1646: pointer [ail_ctype = 'char[31]'] :=
  let strong a_1754: pointer = create(Ivalignof('char[31]'), 'char[31]') in
  store_lock('char[31]', a_1754,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 96)), Specified(0)))) ;
  let strong a_1755: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1754,
    18446744073701163007) in
  case a_1755 of
    | Specified(a_1754: pointer) =>
        pure(a_1754)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1661: pointer [ail_ctype = 'char[27]'] :=
  let strong a_1756: pointer = create(Ivalignof('char[27]'), 'char[27]') in
  store_lock('char[27]', a_1756,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 91)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 80)), Specified(conv_int('char', 44)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 35)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 98)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 93)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 63)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 65)), Specified(0)))) ;
  let strong a_1757: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1756,
    18446744073701163007) in
  case a_1757 of
    | Specified(a_1756: pointer) =>
        pure(a_1756)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1701: pointer [ail_ctype = 'char[15]'] :=
  let strong a_1758: pointer = create(Ivalignof('char[15]'), 'char[15]') in
  store_lock('char[15]', a_1758,
  Specified(Array(Specified(conv_int('char', 115)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1759: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1758,
    18446744073701163007) in
  case a_1759 of
    | Specified(a_1758: pointer) =>
        pure(a_1758)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

-- Fun map
proc main (): eff loaded integer :=
  {-# <realloc0.c:13:0, realloc0.c:48:1> #-} let strong p: pointer =
    create(Ivalignof('void*[20]'), 'void*[20]') in
  {-# §6.2.4#6 #-}
  {-# <realloc0.c:14:4, realloc0.c:14:16> #-} store('void*[20]', p,
  Unspecified('void*[20]')) ;
  {-# <realloc0.c:16:4, realloc0.c:17:27> #-} let strong i: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  {-# <realloc0.c:16:8, realloc0.c:16:16> #-} let strong a_924: loaded integer =
    {-# §6.5#2 #-}
    bound({-# <realloc0.c:16:14, realloc0.c:16:15> #-} pure(Specified(1))) in
  store('signed int', i, conv_loaded_int('signed int', a_924)) ;
  {-# <realloc0.c:16:4, realloc0.c:17:27> #-} {-# <realloc0.c:16:4, realloc0.c:17:27> #-} save while_922: unit (i: pointer:= i,
  p: pointer:= p) in
    let strong a_925: loaded integer =
      {-# §6.5#2 #-}
      bound(
        {-# <realloc0.c:16:16, realloc0.c:16:20> realloc0.c:16:17 #-} let weak (a_927: loaded integer,
        a_928: loaded integer) =
          unseq(
            {-# §6.5.8 #-}
            {-# <realloc0.c:16:16, realloc0.c:16:20> realloc0.c:16:17 #-} let weak (a_933: loaded integer,
            a_934: loaded integer) =
              unseq(
                {-# <realloc0.c:16:16, realloc0.c:16:17> #-} let weak a_932: pointer =
                  {-# <realloc0.c:16:16, realloc0.c:16:17> #-} pure(i) in
                load('signed int', a_932)
              ,
                {-# <realloc0.c:16:18, realloc0.c:16:20> #-} pure(
                  Specified(20)
                )
              ) in
            case (a_933, a_934) of
              | (Specified(a_935: integer), Specified(a_936: integer)) =>
                  {-# §6.5.8#6 #-}
                  pure(
                    if conv_int('signed int', a_935) <
                    conv_int('signed int', a_936) then
                      Specified(1)
                    else
                      Specified(0)
                  )
              | _: (loaded integer,loaded integer) =>
                  pure(Unspecified('signed int'))
            end
          ,
            {-# <realloc0.c:16:16, realloc0.c:16:20> realloc0.c:16:17 #-} pure(
              Specified(0)
            )
          ) in
        pure(
          case (a_927, a_928) of
            | (Specified(a_929: integer), Specified(a_930: integer)) =>
                if conv_int('signed int', a_929) =
                conv_int('signed int', a_930) then
                  Specified(1)
                else
                  Specified(0)
            | _: (loaded integer,loaded integer) =>
                Unspecified('signed int')
          end
        )
      ) in
    let strong a_923: boolean =
      case a_925 of
        | Specified(a_926: integer) =>
            pure(if not(a_926 = 1) then True else False)
        | Unspecified(_: ctype) =>
            nd(pure(True), pure(False))
      end in
    if a_923 then
      {-# <realloc0.c:16:4, realloc0.c:17:27> #-} {-# <realloc0.c:16:4, realloc0.c:17:27> #-} {-# <realloc0.c:17:8, realloc0.c:17:27> #-} let strong _: loaded pointer =
        {-# §6.5#2 #-}
        bound(
          {-# §6.5.16#3, sentence 4 #-}
          {-# <realloc0.c:17:8, realloc0.c:17:26> realloc0.c:17:13 #-} let weak (a_938: pointer,
          a_966: loaded pointer) =
            {-# §6.5.16#3, sentence 5 #-}
            unseq(
              {-# §6.5.3.2 #-}
              {-# <realloc0.c:17:8, realloc0.c:17:12> #-} let weak a_939: loaded pointer =
                {-# §6.5.6 #-}
                {-# <realloc0.c:17:8, realloc0.c:17:12> #-} let weak (a_942: loaded pointer,
                a_944: loaded integer) =
                  unseq(
                    {-# <realloc0.c:17:8, realloc0.c:17:9> #-} let weak a_947: pointer =
                      {-# <realloc0.c:17:8, realloc0.c:17:9> #-} pure(p) in
                    {-# §6.3.2.1#3 #-}
                    let weak a_948: pointer =
                      memop(PtrArrayShift, a_947, 'void*', 0) in
                    pure(Specified(a_948))
                  ,
                    {-# <realloc0.c:17:10, realloc0.c:17:11> #-} let weak a_949: pointer =
                      {-# <realloc0.c:17:10, realloc0.c:17:11> #-} pure(i) in
                    load('signed int', a_949)
                  ) in
                case (a_942, a_944) of
                  | (Specified(a_943: pointer), Specified(a_945: integer)) =>
                      let weak a_946: pointer =
                        memop(PtrArrayShift, a_943, 'void*', a_945) in
                      pure(Specified(a_946))
                  | _: (loaded pointer,loaded integer) =>
                      pure(undef(<<UB_CERB004_unspecified__pointer_add>>))
                end in
              case a_939 of
                | Specified(a_940: pointer) =>
                    let weak a_941: boolean =
                      memop(PtrValidForDeref, 'void*', a_940) in
                    pure(
                      if a_941 then
                        a_940
                      else
                        undef(<<UB043_indirection_invalid_value>>)
                    )
                | Unspecified(_: ctype) =>
                    pure(undef(<<UB043_indirection_invalid_value>>))
              end
            ,
              {-# §6.5.2.2#10, sentence 1 #-}
              {-# <realloc0.c:17:15, realloc0.c:17:26> #-} let strong ((a_951: loaded pointer,
              (a_952: ctype, a_953: [ctype], a_954: boolean, a_955: boolean)),
              a_958: loaded integer, a_959: loaded integer) =
                {-# §6.5.2.2#4, sentence 2 #-}
                unseq(
                  let strong a_950: loaded pointer =
                    {-# <realloc0.c:17:15, realloc0.c:17:21> #-} pure(
                      Specified(Cfunction(calloc))
                    ) in
                  pure((a_950, cfunction(a_950)))
                ,
                  {-# <realloc0.c:17:22, realloc0.c:17:23> #-} pure(
                    Specified(1)
                  )
                ,
                  {-# <realloc0.c:17:24, realloc0.c:17:25> #-} let weak a_960: pointer =
                    {-# <realloc0.c:17:24, realloc0.c:17:25> #-} pure(i) in
                  load('signed int', a_960)
                ) in
              if not(params_length(a_953) = 2) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_954 \/ not(are_compatible ('void*', a_952)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_957: pointer =
                    let a_961: ctype = params_nth(a_953, 0) in
                    if not(are_compatible ('size_t', a_961)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {-# §6.5.2.2#7, sentence 1 #-}
                      let weak a_962: pointer =
                        create(Ivalignof('size_t'), 'size_t') in
                      let weak _: unit =
                        store('size_t', a_962,
                        conv_loaded_int('size_t', a_958)) in
                      pure(a_962) in
                  let strong a_956: pointer =
                    let a_963: ctype = params_nth(a_953, 1) in
                    if not(are_compatible ('size_t', a_963)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {-# §6.5.2.2#7, sentence 1 #-}
                      let weak a_964: pointer =
                        create(Ivalignof('size_t'), 'size_t') in
                      let weak _: unit =
                        store('size_t', a_964,
                        conv_loaded_int('size_t', a_959)) in
                      pure(a_964) in
                  let strong a_965: loaded pointer =
                    ccall('void* (*) (size_t, size_t)', a_951, a_957, a_956) in
                  let strong _: (unit,unit) =
                    unseq(kill('size_t', a_957), kill('size_t', a_956)) in
                  pure(a_965)
            ) in
          let weak _: unit =
            {-# §6.5.16.1#2, store #-}
            neg(store('void*', a_938, a_966)) in
          pure(a_966)
        ) in
      pure(Unit) ;
      {-# <realloc0.c:16:4, realloc0.c:17:27> #-} save __cerb_continue1: unit (i: pointer:= i,
      p: pointer:= p) in
        {-# <unknown location> #-} let strong _: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# §6.5.2.4#2, sentence 3 #-}
            {-# §6.5.2.4#2, sentence 1 #-}
            {-# §6.5.2.4 #-}
            {-# <realloc0.c:16:21, realloc0.c:16:24> realloc0.c:16:22 #-} let weak a_967: pointer =
              {-# <realloc0.c:16:21, realloc0.c:16:22> #-} pure(i) in
            seq_rmw('signed int', a_967, a_968 => case a_968 of
              | Specified(a_969: integer) =>
                  Specified(conv_int('signed int',
                  catch_exceptional_condition_add('signed int', conv_int('signed int',
                  a_969), 1)))
              | Unspecified(_: ctype) =>
                  Unspecified('signed int')
            end)
          ) in
        pure(Unit) ;
      pure(Unit) ;
      {-# <realloc0.c:16:4, realloc0.c:17:27> #-} save continue_916: unit (i: pointer:= i,
      p: pointer:= p) in
        {-# <realloc0.c:16:4, realloc0.c:17:27> #-} pure(Unit) ;
      pure(Unit) ;
      run while_922(i, p)
    else
      pure(Unit) ;
  {-# <realloc0.c:16:4, realloc0.c:17:27> #-} save break_917: unit (i: pointer:= i,
  p: pointer:= p) in
    {-# <realloc0.c:16:4, realloc0.c:17:27> #-} pure(Unit) ;
  pure(Unit) ;
  kill('signed int', i) ;
  pure(Unit) ;
  {-# <realloc0.c:19:4, realloc0.c:46:5> #-} let strong i: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  {-# <realloc0.c:19:8, realloc0.c:19:20> #-} let strong a_970: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.6 #-}
      {-# <realloc0.c:19:14, realloc0.c:19:19> realloc0.c:19:17 #-} let weak (a_971: loaded integer,
      a_972: loaded integer) =
        unseq(
          {-# <realloc0.c:19:14, realloc0.c:19:16> #-} pure(Specified(20))
        ,
          {-# <realloc0.c:19:18, realloc0.c:19:19> #-} pure(Specified(1))
        ) in
      pure(
        case (a_971, a_972) of
          | (Specified(a_973: integer), Specified(a_974: integer)) =>
              Specified(catch_exceptional_condition_sub('signed int', conv_int('signed int',
              a_973), conv_int('signed int', a_974)))
          | _: (loaded integer,loaded integer) =>
              undef(<<UB036_exceptional_condition>>)
        end
      )
    ) in
  store('signed int', i, conv_loaded_int('signed int', a_970)) ;
  {-# <realloc0.c:19:4, realloc0.c:46:5> #-} {-# <realloc0.c:19:4, realloc0.c:46:5> #-} save while_920: unit (i: pointer:= i,
  p: pointer:= p) in
    let strong a_976: loaded integer =
      {-# §6.5#2 #-}
      bound(
        {-# <realloc0.c:19:20, realloc0.c:19:24> realloc0.c:19:21 #-} let weak (a_978: loaded integer,
        a_979: loaded integer) =
          unseq(
            {-# §6.5.8 #-}
            {-# <realloc0.c:19:20, realloc0.c:19:24> realloc0.c:19:21 #-} let weak (a_984: loaded integer,
            a_985: loaded integer) =
              unseq(
                {-# <realloc0.c:19:20, realloc0.c:19:21> #-} let weak a_983: pointer =
                  {-# <realloc0.c:19:20, realloc0.c:19:21> #-} pure(i) in
                load('signed int', a_983)
              ,
                {-# <realloc0.c:19:23, realloc0.c:19:24> #-} pure(
                  Specified(1)
                )
              ) in
            case (a_984, a_985) of
              | (Specified(a_986: integer), Specified(a_987: integer)) =>
                  {-# §6.5.8#6 #-}
                  pure(
                    if conv_int('signed int', a_986) >=
                    conv_int('signed int', a_987) then
                      Specified(1)
                    else
                      Specified(0)
                  )
              | _: (loaded integer,loaded integer) =>
                  pure(Unspecified('signed int'))
            end
          ,
            {-# <realloc0.c:19:20, realloc0.c:19:24> realloc0.c:19:21 #-} pure(
              Specified(0)
            )
          ) in
        pure(
          case (a_978, a_979) of
            | (Specified(a_980: integer), Specified(a_981: integer)) =>
                if conv_int('signed int', a_980) =
                conv_int('signed int', a_981) then
                  Specified(1)
                else
                  Specified(0)
            | _: (loaded integer,loaded integer) =>
                Unspecified('signed int')
          end
        )
      ) in
    let strong a_921: boolean =
      case a_976 of
        | Specified(a_977: integer) =>
            pure(if not(a_977 = 1) then True else False)
        | Unspecified(_: ctype) =>
            nd(pure(True), pure(False))
      end in
    if a_921 then
      {-# <realloc0.c:19:4, realloc0.c:46:5> #-} {-# <realloc0.c:20:4, realloc0.c:46:5> #-} let strong old_a: pointer =
        create(Ivalignof('ptraddr_t'), 'ptraddr_t') in
      let strong new_a: pointer =
        create(Ivalignof('ptraddr_t'), 'ptraddr_t') in
      {-# <realloc0.c:21:8, realloc0.c:21:60> #-} let strong a_994: loaded integer =
        {-# §6.5#2 #-}
        bound(
          {-# <realloc0.c:21:26, realloc0.c:21:59> #-} let strong a_1011: loaded pointer =
            {-# §6.5.4 #-}
            {-# <realloc0.c:21:54, realloc0.c:21:58> #-} let weak a_1008: pointer =
              {-# §6.5.3.2 #-}
              {-# <realloc0.c:21:54, realloc0.c:21:58> #-} let weak a_997: loaded pointer =
                {-# §6.5.6 #-}
                {-# <realloc0.c:21:54, realloc0.c:21:58> #-} let weak (a_1000: loaded pointer,
                a_1002: loaded integer) =
                  unseq(
                    {-# <realloc0.c:21:54, realloc0.c:21:55> #-} let weak a_1005: pointer =
                      {-# <realloc0.c:21:54, realloc0.c:21:55> #-} pure(p) in
                    {-# §6.3.2.1#3 #-}
                    let weak a_1006: pointer =
                      memop(PtrArrayShift, a_1005, 'void*', 0) in
                    pure(Specified(a_1006))
                  ,
                    {-# <realloc0.c:21:56, realloc0.c:21:57> #-} let weak a_1007: pointer =
                      {-# <realloc0.c:21:56, realloc0.c:21:57> #-} pure(i) in
                    load('signed int', a_1007)
                  ) in
                case (a_1000, a_1002) of
                  | (Specified(a_1001: pointer), Specified(a_1003: integer)) =>
                      let weak a_1004: pointer =
                        memop(PtrArrayShift, a_1001, 'void*', a_1003) in
                      pure(Specified(a_1004))
                  | _: (loaded pointer,loaded integer) =>
                      pure(undef(<<UB_CERB004_unspecified__pointer_add>>))
                end in
              case a_997 of
                | Specified(a_998: pointer) =>
                    let weak a_999: boolean =
                      memop(PtrValidForDeref, 'void*', a_998) in
                    pure(
                      if a_999 then
                        a_998
                      else
                        undef(<<UB043_indirection_invalid_value>>)
                    )
                | Unspecified(_: ctype) =>
                    pure(undef(<<UB043_indirection_invalid_value>>))
              end in
            load('void*', a_1008) in
          case a_1011 of
            | Specified(a_1012: pointer) =>
                memop(cheri_cheri_address_get['ptraddr_t (void*)'], a_1012)
            | _: loaded pointer =>
                pure(undef(<<DUMMY(Elab, CHERI intrinsics (unspec))>>))
          end
        ) in
      store('ptraddr_t', old_a, conv_loaded_int('ptraddr_t', a_994)) ;
      {-# <realloc0.c:22:8, realloc0.c:22:97> #-} let strong _: loaded integer =
        {-# §6.5#2 #-}
        bound(
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <realloc0.c:22:8, realloc0.c:22:96> #-} let strong ((a_1014: loaded pointer,
          (a_1015: ctype, a_1016: [ctype], a_1017: boolean, a_1018: boolean)),
          a_1024: loaded pointer, a_1026: loaded pointer,
          a_1030: loaded pointer, a_1057: loaded integer,
          a_1059: loaded integer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_1013: loaded pointer =
                {-# <realloc0.c:22:8, realloc0.c:22:15> #-} pure(
                  Specified(Cfunction(fprintf))
                ) in
              pure((a_1013, cfunction(a_1013)))
            ,
              {-# <realloc0.c:22:16, realloc0.c:22:24> #-} let weak a_1025: pointer =
                {-# <realloc0.c:22:16, realloc0.c:22:24> #-} pure(__stderr) in
              load('struct _IO_FILE*', a_1025)
            ,
              {-# <realloc0.c:22:25, realloc0.c:22:69> #-} let weak a_1028: pointer =
                {-# <realloc0.c:22:25, realloc0.c:22:69> #-} pure(a_1027) in
              {-# §6.3.2.1#3 #-}
              let weak a_1029: pointer =
                memop(PtrArrayShift, a_1028, 'char', 0) in
              pure(Specified(a_1029))
            ,
              {-# §6.5.2.2#10, sentence 1 #-}
              {-# <realloc0.c:22:70, realloc0.c:22:87> #-} let strong ((a_1032: loaded pointer,
              (a_1033: ctype, a_1034: [ctype], a_1035: boolean,
              a_1036: boolean)), a_1038: loaded pointer) =
                {-# §6.5.2.2#4, sentence 2 #-}
                unseq(
                  let strong a_1031: loaded pointer =
                    {-# <realloc0.c:22:70, realloc0.c:22:74> #-} pure(
                      Specified(Cfunction(sptr))
                    ) in
                  pure((a_1031, cfunction(a_1031)))
                ,
                  {-# §6.5.4 #-}
                  {-# <realloc0.c:22:75, realloc0.c:22:86> realloc0.c:22:75 #-} let weak a_1052: pointer =
                    {-# §6.5.3.2 #-}
                    {-# <realloc0.c:22:82, realloc0.c:22:86> #-} let weak a_1041: loaded pointer =
                      {-# §6.5.6 #-}
                      {-# <realloc0.c:22:82, realloc0.c:22:86> #-} let weak (a_1044: loaded pointer,
                      a_1046: loaded integer) =
                        unseq(
                          {-# <realloc0.c:22:82, realloc0.c:22:83> #-} let weak a_1049: pointer =
                            {-# <realloc0.c:22:82, realloc0.c:22:83> #-} pure(
                              p
                            ) in
                          {-# §6.3.2.1#3 #-}
                          let weak a_1050: pointer =
                            memop(PtrArrayShift, a_1049, 'void*', 0) in
                          pure(Specified(a_1050))
                        ,
                          {-# <realloc0.c:22:84, realloc0.c:22:85> #-} let weak a_1051: pointer =
                            {-# <realloc0.c:22:84, realloc0.c:22:85> #-} pure(
                              i
                            ) in
                          load('signed int', a_1051)
                        ) in
                      case (a_1044, a_1046) of
                        | (Specified(a_1045: pointer),
                        Specified(a_1047: integer)) =>
                            let weak a_1048: pointer =
                              memop(PtrArrayShift, a_1045, 'void*', a_1047) in
                            pure(Specified(a_1048))
                        | _: (loaded pointer,loaded integer) =>
                            pure(
                              undef(<<UB_CERB004_unspecified__pointer_add>>)
                            )
                      end in
                    case a_1041 of
                      | Specified(a_1042: pointer) =>
                          let weak a_1043: boolean =
                            memop(PtrValidForDeref, 'void*', a_1042) in
                          pure(
                            if a_1043 then
                              a_1042
                            else
                              undef(<<UB043_indirection_invalid_value>>)
                          )
                      | Unspecified(_: ctype) =>
                          pure(undef(<<UB043_indirection_invalid_value>>))
                    end in
                  load('void*', a_1052)
                ) in
              if not(params_length(a_1034) = 1) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_1035 \/ not(are_compatible ('const char*', a_1033)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_1037: pointer =
                    let a_1054: ctype = params_nth(a_1034, 0) in
                    if not(are_compatible ('void*', a_1054)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {-# §6.5.2.2#7, sentence 1 #-}
                      let weak a_1055: pointer =
                        create(Ivalignof('void*'), 'void*') in
                      let weak _: unit = store('void*', a_1055, a_1038) in
                      pure(a_1055) in
                  let strong a_1056: loaded pointer =
                    ccall('const char* (*) (void*)', a_1032, a_1037) in
                  kill('void*', a_1037) ;
                  pure(a_1056)
            ,
              {-# <realloc0.c:22:88, realloc0.c:22:89> #-} let weak a_1058: pointer =
                {-# <realloc0.c:22:88, realloc0.c:22:89> #-} pure(i) in
              load('signed int', a_1058)
            ,
              {-# §6.5.6 #-}
              {-# <realloc0.c:22:90, realloc0.c:22:95> realloc0.c:22:93 #-} let weak (a_1061: loaded integer,
              a_1062: loaded integer) =
                unseq(
                  {-# <realloc0.c:22:90, realloc0.c:22:92> #-} pure(
                    Specified(20)
                  )
                ,
                  {-# <realloc0.c:22:94, realloc0.c:22:95> #-} let weak a_1060: pointer =
                    {-# <realloc0.c:22:94, realloc0.c:22:95> #-} pure(i) in
                  load('signed int', a_1060)
                ) in
              pure(
                case (a_1061, a_1062) of
                  | (Specified(a_1063: integer), Specified(a_1064: integer)) =>
                      Specified(catch_exceptional_condition_sub('signed int', conv_int('signed int',
                      a_1063), conv_int('signed int', a_1064)))
                  | _: (loaded integer,loaded integer) =>
                      undef(<<UB036_exceptional_condition>>)
                end
              )
            ) in
          if not(params_length(a_1016) <= 5) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if not(a_1017) \/ not(are_compatible ('signed int', a_1015)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1023: pointer =
                let a_1066: ctype = params_nth(a_1016, 0) in
                if not(are_compatible ('struct _IO_FILE*', a_1066)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_1067: pointer =
                    create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                  let weak _: unit =
                    store('struct _IO_FILE*', a_1067, a_1024) in
                  pure(a_1067) in
              let strong a_1022: pointer =
                let a_1068: ctype = params_nth(a_1016, 1) in
                if not(are_compatible ('const char*', a_1068)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_1069: pointer =
                    create(Ivalignof('const char*'), 'const char*') in
                  let weak _: unit = store('const char*', a_1069, a_1026) in
                  pure(a_1069) in
              let strong a_1021: pointer =
                {-# §6.5.2.2#7, sentences 2 and 3 #-}
                pcall(create_and_store, 'const char*', a_1030) in
              let strong a_1020: pointer =
                {-# §6.5.2.2#7, sentences 2 and 3 #-}
                pcall(create_and_store, 'signed int',
                conv_loaded_int('signed int', a_1057)) in
              let strong a_1019: pointer =
                {-# §6.5.2.2#7, sentences 2 and 3 #-}
                pcall(create_and_store, 'signed int',
                conv_loaded_int('signed int', a_1059)) in
              let strong a_1070: loaded integer =
                ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
                a_1014, a_1023, a_1022,
                [('const char*', a_1021), ('signed int', a_1020),
                ('signed int', a_1019)]) in
              let strong _: (unit,unit,unit,unit,unit) =
                unseq(
                  kill('struct _IO_FILE*', a_1023)
                ,
                  kill('char*', a_1022)
                ,
                  kill('char*', a_1021)
                ,
                  kill('signed int', a_1020)
                ,
                  kill('signed int', a_1019)
                ) in
              pure(a_1070)
        ) in
      pure(Unit) ;
      {-# <realloc0.c:24:8, realloc0.c:24:33> #-} let strong _: loaded pointer =
        {-# §6.5#2 #-}
        bound(
          {-# §6.5.16#3, sentence 4 #-}
          {-# <realloc0.c:24:8, realloc0.c:24:32> realloc0.c:24:12 #-} let weak (a_993: pointer,
          a_1115: loaded pointer) =
            {-# §6.5.16#3, sentence 5 #-}
            unseq(
              {-# §6.5.3.2 #-}
              {-# <realloc0.c:24:8, realloc0.c:24:12> #-} let weak a_1071: loaded pointer =
                {-# §6.5.6 #-}
                {-# <realloc0.c:24:8, realloc0.c:24:12> #-} let weak (a_1074: loaded pointer,
                a_1076: loaded integer) =
                  unseq(
                    {-# <realloc0.c:24:8, realloc0.c:24:9> #-} let weak a_1079: pointer =
                      {-# <realloc0.c:24:8, realloc0.c:24:9> #-} pure(p) in
                    {-# §6.3.2.1#3 #-}
                    let weak a_1080: pointer =
                      memop(PtrArrayShift, a_1079, 'void*', 0) in
                    pure(Specified(a_1080))
                  ,
                    {-# <realloc0.c:24:10, realloc0.c:24:11> #-} let weak a_1081: pointer =
                      {-# <realloc0.c:24:10, realloc0.c:24:11> #-} pure(i) in
                    load('signed int', a_1081)
                  ) in
                case (a_1074, a_1076) of
                  | (Specified(a_1075: pointer), Specified(a_1077: integer)) =>
                      let weak a_1078: pointer =
                        memop(PtrArrayShift, a_1075, 'void*', a_1077) in
                      pure(Specified(a_1078))
                  | _: (loaded pointer,loaded integer) =>
                      pure(undef(<<UB_CERB004_unspecified__pointer_add>>))
                end in
              case a_1071 of
                | Specified(a_1072: pointer) =>
                    let weak a_1073: boolean =
                      memop(PtrValidForDeref, 'void*', a_1072) in
                    pure(
                      if a_1073 then
                        a_1072
                      else
                        undef(<<UB043_indirection_invalid_value>>)
                    )
                | Unspecified(_: ctype) =>
                    pure(undef(<<UB043_indirection_invalid_value>>))
              end
            ,
              {-# §6.5.2.2#10, sentence 1 #-}
              {-# <realloc0.c:24:13, realloc0.c:24:32> #-} let strong ((a_1083: loaded pointer,
              (a_1084: ctype, a_1085: [ctype], a_1086: boolean,
              a_1087: boolean)), a_1090: loaded pointer,
              a_1103: loaded integer) =
                {-# §6.5.2.2#4, sentence 2 #-}
                unseq(
                  let strong a_1082: loaded pointer =
                    {-# <realloc0.c:24:13, realloc0.c:24:20> #-} pure(
                      Specified(Cfunction(realloc_proxy))
                    ) in
                  pure((a_1082, cfunction(a_1082)))
                ,
                  {-# <realloc0.c:24:21, realloc0.c:24:25> #-} let weak a_1102: pointer =
                    {-# §6.5.3.2 #-}
                    {-# <realloc0.c:24:21, realloc0.c:24:25> #-} let weak a_1091: loaded pointer =
                      {-# §6.5.6 #-}
                      {-# <realloc0.c:24:21, realloc0.c:24:25> #-} let weak (a_1094: loaded pointer,
                      a_1096: loaded integer) =
                        unseq(
                          {-# <realloc0.c:24:21, realloc0.c:24:22> #-} let weak a_1099: pointer =
                            {-# <realloc0.c:24:21, realloc0.c:24:22> #-} pure(
                              p
                            ) in
                          {-# §6.3.2.1#3 #-}
                          let weak a_1100: pointer =
                            memop(PtrArrayShift, a_1099, 'void*', 0) in
                          pure(Specified(a_1100))
                        ,
                          {-# <realloc0.c:24:23, realloc0.c:24:24> #-} let weak a_1101: pointer =
                            {-# <realloc0.c:24:23, realloc0.c:24:24> #-} pure(
                              i
                            ) in
                          load('signed int', a_1101)
                        ) in
                      case (a_1094, a_1096) of
                        | (Specified(a_1095: pointer),
                        Specified(a_1097: integer)) =>
                            let weak a_1098: pointer =
                              memop(PtrArrayShift, a_1095, 'void*', a_1097) in
                            pure(Specified(a_1098))
                        | _: (loaded pointer,loaded integer) =>
                            pure(
                              undef(<<UB_CERB004_unspecified__pointer_add>>)
                            )
                      end in
                    case a_1091 of
                      | Specified(a_1092: pointer) =>
                          let weak a_1093: boolean =
                            memop(PtrValidForDeref, 'void*', a_1092) in
                          pure(
                            if a_1093 then
                              a_1092
                            else
                              undef(<<UB043_indirection_invalid_value>>)
                          )
                      | Unspecified(_: ctype) =>
                          pure(undef(<<UB043_indirection_invalid_value>>))
                    end in
                  load('void*', a_1102)
                ,
                  {-# §6.5.6 #-}
                  {-# <realloc0.c:24:26, realloc0.c:24:31> realloc0.c:24:29 #-} let weak (a_1105: loaded integer,
                  a_1106: loaded integer) =
                    unseq(
                      {-# <realloc0.c:24:26, realloc0.c:24:28> #-} pure(
                        Specified(20)
                      )
                    ,
                      {-# <realloc0.c:24:30, realloc0.c:24:31> #-} let weak a_1104: pointer =
                        {-# <realloc0.c:24:30, realloc0.c:24:31> #-} pure(i) in
                      load('signed int', a_1104)
                    ) in
                  pure(
                    case (a_1105, a_1106) of
                      | (Specified(a_1107: integer),
                      Specified(a_1108: integer)) =>
                          Specified(catch_exceptional_condition_sub('signed int', conv_int('signed int',
                          a_1107), conv_int('signed int', a_1108)))
                      | _: (loaded integer,loaded integer) =>
                          undef(<<UB036_exceptional_condition>>)
                    end
                  )
                ) in
              if not(params_length(a_1085) = 2) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_1086 \/ not(are_compatible ('void*', a_1084)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_1089: pointer =
                    let a_1110: ctype = params_nth(a_1085, 0) in
                    if not(are_compatible ('void*', a_1110)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {-# §6.5.2.2#7, sentence 1 #-}
                      let weak a_1111: pointer =
                        create(Ivalignof('void*'), 'void*') in
                      let weak _: unit = store('void*', a_1111, a_1090) in
                      pure(a_1111) in
                  let strong a_1088: pointer =
                    let a_1112: ctype = params_nth(a_1085, 1) in
                    if not(are_compatible ('size_t', a_1112)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {-# §6.5.2.2#7, sentence 1 #-}
                      let weak a_1113: pointer =
                        create(Ivalignof('size_t'), 'size_t') in
                      let weak _: unit =
                        store('size_t', a_1113,
                        conv_loaded_int('size_t', a_1103)) in
                      pure(a_1113) in
                  let strong a_1114: loaded pointer =
                    ccall('void* (*) (void*, size_t)', a_1083, a_1089, a_1088) in
                  let strong _: (unit,unit) =
                    unseq(kill('void*', a_1089), kill('size_t', a_1088)) in
                  pure(a_1114)
            ) in
          let weak _: unit =
            {-# §6.5.16.1#2, store #-}
            neg(store('void*', a_993, a_1115)) in
          pure(a_1115)
        ) in
      pure(Unit) ;
      {-# <realloc0.c:25:8, realloc0.c:25:60> #-} let strong a_1116: loaded integer =
        {-# §6.5#2 #-}
        bound(
          {-# <realloc0.c:25:26, realloc0.c:25:59> #-} let strong a_1133: loaded pointer =
            {-# §6.5.4 #-}
            {-# <realloc0.c:25:54, realloc0.c:25:58> #-} let weak a_1130: pointer =
              {-# §6.5.3.2 #-}
              {-# <realloc0.c:25:54, realloc0.c:25:58> #-} let weak a_1119: loaded pointer =
                {-# §6.5.6 #-}
                {-# <realloc0.c:25:54, realloc0.c:25:58> #-} let weak (a_1122: loaded pointer,
                a_1124: loaded integer) =
                  unseq(
                    {-# <realloc0.c:25:54, realloc0.c:25:55> #-} let weak a_1127: pointer =
                      {-# <realloc0.c:25:54, realloc0.c:25:55> #-} pure(p) in
                    {-# §6.3.2.1#3 #-}
                    let weak a_1128: pointer =
                      memop(PtrArrayShift, a_1127, 'void*', 0) in
                    pure(Specified(a_1128))
                  ,
                    {-# <realloc0.c:25:56, realloc0.c:25:57> #-} let weak a_1129: pointer =
                      {-# <realloc0.c:25:56, realloc0.c:25:57> #-} pure(i) in
                    load('signed int', a_1129)
                  ) in
                case (a_1122, a_1124) of
                  | (Specified(a_1123: pointer), Specified(a_1125: integer)) =>
                      let weak a_1126: pointer =
                        memop(PtrArrayShift, a_1123, 'void*', a_1125) in
                      pure(Specified(a_1126))
                  | _: (loaded pointer,loaded integer) =>
                      pure(undef(<<UB_CERB004_unspecified__pointer_add>>))
                end in
              case a_1119 of
                | Specified(a_1120: pointer) =>
                    let weak a_1121: boolean =
                      memop(PtrValidForDeref, 'void*', a_1120) in
                    pure(
                      if a_1121 then
                        a_1120
                      else
                        undef(<<UB043_indirection_invalid_value>>)
                    )
                | Unspecified(_: ctype) =>
                    pure(undef(<<UB043_indirection_invalid_value>>))
              end in
            load('void*', a_1130) in
          case a_1133 of
            | Specified(a_1134: pointer) =>
                memop(cheri_cheri_address_get['ptraddr_t (void*)'], a_1134)
            | _: loaded pointer =>
                pure(undef(<<DUMMY(Elab, CHERI intrinsics (unspec))>>))
          end
        ) in
      store('ptraddr_t', new_a, conv_loaded_int('ptraddr_t', a_1116)) ;
      {-# <realloc0.c:26:8, realloc0.c:29:77> #-} let strong a_1135: loaded integer =
        {-# §6.5#2 #-}
        bound(
          {-# <realloc0.c:26:11, realloc0.c:26:25> realloc0.c:26:17 #-} let weak (a_1137: loaded integer,
          a_1138: loaded integer) =
            unseq(
              {-# <realloc0.c:26:11, realloc0.c:26:25> realloc0.c:26:17 #-} let weak (a_1142: loaded integer,
              a_1143: loaded integer) =
                unseq(
                  {-# <realloc0.c:26:11, realloc0.c:26:16> #-} let weak a_1147: pointer =
                    {-# <realloc0.c:26:11, realloc0.c:26:16> #-} pure(old_a) in
                  load('ptraddr_t', a_1147)
                ,
                  {-# <realloc0.c:26:20, realloc0.c:26:25> #-} let weak a_1148: pointer =
                    {-# <realloc0.c:26:20, realloc0.c:26:25> #-} pure(new_a) in
                  load('ptraddr_t', a_1148)
                ) in
              pure(
                case (a_1142, a_1143) of
                  | (Specified(a_1144: integer), Specified(a_1145: integer)) =>
                      if conv_int('ptraddr_t', a_1144) =
                      conv_int('ptraddr_t', a_1145) then
                        Specified(1)
                      else
                        Specified(0)
                  | _: (loaded integer,loaded integer) =>
                      Unspecified('signed int')
                end
              )
            ,
              {-# <realloc0.c:26:11, realloc0.c:26:25> realloc0.c:26:17 #-} pure(
                Specified(0)
              )
            ) in
          pure(
            case (a_1137, a_1138) of
              | (Specified(a_1139: integer), Specified(a_1140: integer)) =>
                  if conv_int('signed int', a_1139) =
                  conv_int('signed int', a_1140) then
                    Specified(1)
                  else
                    Specified(0)
              | _: (loaded integer,loaded integer) =>
                  Unspecified('signed int')
            end
          )
        ) in
      let strong a_992: boolean =
        case a_1135 of
          | Specified(a_1136: integer) =>
              pure(if not(a_1136 = 1) then True else False)
          | Unspecified(_: ctype) =>
              nd(pure(True), pure(False))
        end in
      if a_992 then
        {-# <realloc0.c:27:12, realloc0.c:27:55> #-} let strong _: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# §6.5.2.2#10, sentence 1 #-}
            {-# <realloc0.c:27:12, realloc0.c:27:54> #-} let strong ((a_1150: loaded pointer,
            (a_1151: ctype, a_1152: [ctype], a_1153: boolean, a_1154: boolean)),
            a_1157: loaded pointer, a_1159: loaded pointer) =
              {-# §6.5.2.2#4, sentence 2 #-}
              unseq(
                let strong a_1149: loaded pointer =
                  {-# <realloc0.c:27:12, realloc0.c:27:19> #-} pure(
                    Specified(Cfunction(fprintf))
                  ) in
                pure((a_1149, cfunction(a_1149)))
              ,
                {-# <realloc0.c:27:20, realloc0.c:27:28> #-} let weak a_1158: pointer =
                  {-# <realloc0.c:27:20, realloc0.c:27:28> #-} pure(__stderr) in
                load('struct _IO_FILE*', a_1158)
              ,
                {-# <realloc0.c:27:29, realloc0.c:27:53> #-} let weak a_1161: pointer =
                  {-# <realloc0.c:27:29, realloc0.c:27:53> #-} pure(a_1160) in
                {-# §6.3.2.1#3 #-}
                let weak a_1162: pointer =
                  memop(PtrArrayShift, a_1161, 'char', 0) in
                pure(Specified(a_1162))
              ) in
            if not(params_length(a_1152) <= 2) then
              pure(undef(<<UB038_number_of_args>>))
            else
              if not(a_1153) \/ not(are_compatible ('signed int', a_1151)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                let strong a_1156: pointer =
                  let a_1163: ctype = params_nth(a_1152, 0) in
                  if not(are_compatible ('struct _IO_FILE*', a_1163)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    {-# §6.5.2.2#7, sentence 1 #-}
                    let weak a_1164: pointer =
                      create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                    let weak _: unit =
                      store('struct _IO_FILE*', a_1164, a_1157) in
                    pure(a_1164) in
                let strong a_1155: pointer =
                  let a_1165: ctype = params_nth(a_1152, 1) in
                  if not(are_compatible ('const char*', a_1165)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    {-# §6.5.2.2#7, sentence 1 #-}
                    let weak a_1166: pointer =
                      create(Ivalignof('const char*'), 'const char*') in
                    let weak _: unit =
                      store('const char*', a_1166, a_1159) in
                    pure(a_1166) in
                let strong a_1167: loaded integer =
                  ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
                  a_1150, a_1156, a_1155, []: (ctype,pointer)) in
                let strong _: (unit,unit) =
                  unseq(
                    kill('struct _IO_FILE*', a_1156)
                  ,
                    kill('char*', a_1155)
                  ) in
                pure(a_1167)
          ) in
        pure(Unit)
      else
        {-# <realloc0.c:29:12, realloc0.c:29:77> #-} let strong _: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# §6.5.2.2#10, sentence 1 #-}
            {-# <realloc0.c:29:12, realloc0.c:29:76> #-} let strong ((a_1169: loaded pointer,
            (a_1170: ctype, a_1171: [ctype], a_1172: boolean, a_1173: boolean)),
            a_1177: loaded pointer, a_1179: loaded pointer,
            a_1183: loaded pointer) =
              {-# §6.5.2.2#4, sentence 2 #-}
              unseq(
                let strong a_1168: loaded pointer =
                  {-# <realloc0.c:29:12, realloc0.c:29:19> #-} pure(
                    Specified(Cfunction(fprintf))
                  ) in
                pure((a_1168, cfunction(a_1168)))
              ,
                {-# <realloc0.c:29:20, realloc0.c:29:28> #-} let weak a_1178: pointer =
                  {-# <realloc0.c:29:20, realloc0.c:29:28> #-} pure(__stderr) in
                load('struct _IO_FILE*', a_1178)
              ,
                {-# <realloc0.c:29:29, realloc0.c:29:57> #-} let weak a_1181: pointer =
                  {-# <realloc0.c:29:29, realloc0.c:29:57> #-} pure(a_1180) in
                {-# §6.3.2.1#3 #-}
                let weak a_1182: pointer =
                  memop(PtrArrayShift, a_1181, 'char', 0) in
                pure(Specified(a_1182))
              ,
                {-# §6.5.2.2#10, sentence 1 #-}
                {-# <realloc0.c:29:58, realloc0.c:29:75> #-} let strong ((a_1185: loaded pointer,
                (a_1186: ctype, a_1187: [ctype], a_1188: boolean,
                a_1189: boolean)), a_1191: loaded pointer) =
                  {-# §6.5.2.2#4, sentence 2 #-}
                  unseq(
                    let strong a_1184: loaded pointer =
                      {-# <realloc0.c:29:58, realloc0.c:29:62> #-} pure(
                        Specified(Cfunction(sptr))
                      ) in
                    pure((a_1184, cfunction(a_1184)))
                  ,
                    {-# §6.5.4 #-}
                    {-# <realloc0.c:29:63, realloc0.c:29:74> realloc0.c:29:63 #-} let weak a_1205: pointer =
                      {-# §6.5.3.2 #-}
                      {-# <realloc0.c:29:70, realloc0.c:29:74> #-} let weak a_1194: loaded pointer =
                        {-# §6.5.6 #-}
                        {-# <realloc0.c:29:70, realloc0.c:29:74> #-} let weak (a_1197: loaded pointer,
                        a_1199: loaded integer) =
                          unseq(
                            {-# <realloc0.c:29:70, realloc0.c:29:71> #-} let weak a_1202: pointer =
                              {-# <realloc0.c:29:70, realloc0.c:29:71> #-} pure(
                                p
                              ) in
                            {-# §6.3.2.1#3 #-}
                            let weak a_1203: pointer =
                              memop(PtrArrayShift, a_1202, 'void*', 0) in
                            pure(Specified(a_1203))
                          ,
                            {-# <realloc0.c:29:72, realloc0.c:29:73> #-} let weak a_1204: pointer =
                              {-# <realloc0.c:29:72, realloc0.c:29:73> #-} pure(
                                i
                              ) in
                            load('signed int', a_1204)
                          ) in
                        case (a_1197, a_1199) of
                          | (Specified(a_1198: pointer),
                          Specified(a_1200: integer)) =>
                              let weak a_1201: pointer =
                                memop(PtrArrayShift, a_1198, 'void*', a_1200) in
                              pure(Specified(a_1201))
                          | _: (loaded pointer,loaded integer) =>
                              pure(
                                undef(<<UB_CERB004_unspecified__pointer_add>>)
                              )
                        end in
                      case a_1194 of
                        | Specified(a_1195: pointer) =>
                            let weak a_1196: boolean =
                              memop(PtrValidForDeref, 'void*', a_1195) in
                            pure(
                              if a_1196 then
                                a_1195
                              else
                                undef(<<UB043_indirection_invalid_value>>)
                            )
                        | Unspecified(_: ctype) =>
                            pure(undef(<<UB043_indirection_invalid_value>>))
                      end in
                    load('void*', a_1205)
                  ) in
                if not(params_length(a_1187) = 1) then
                  pure(undef(<<UB038_number_of_args>>))
                else
                  if a_1188 \/ not(are_compatible ('const char*', a_1186)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    let strong a_1190: pointer =
                      let a_1207: ctype = params_nth(a_1187, 0) in
                      if not(are_compatible ('void*', a_1207)) then
                        pure(undef(<<UB041_function_not_compatible>>))
                      else
                        {-# §6.5.2.2#7, sentence 1 #-}
                        let weak a_1208: pointer =
                          create(Ivalignof('void*'), 'void*') in
                        let weak _: unit = store('void*', a_1208, a_1191) in
                        pure(a_1208) in
                    let strong a_1209: loaded pointer =
                      ccall('const char* (*) (void*)', a_1185, a_1190) in
                    kill('void*', a_1190) ;
                    pure(a_1209)
              ) in
            if not(params_length(a_1171) <= 3) then
              pure(undef(<<UB038_number_of_args>>))
            else
              if not(a_1172) \/ not(are_compatible ('signed int', a_1170)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                let strong a_1176: pointer =
                  let a_1210: ctype = params_nth(a_1171, 0) in
                  if not(are_compatible ('struct _IO_FILE*', a_1210)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    {-# §6.5.2.2#7, sentence 1 #-}
                    let weak a_1211: pointer =
                      create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                    let weak _: unit =
                      store('struct _IO_FILE*', a_1211, a_1177) in
                    pure(a_1211) in
                let strong a_1175: pointer =
                  let a_1212: ctype = params_nth(a_1171, 1) in
                  if not(are_compatible ('const char*', a_1212)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    {-# §6.5.2.2#7, sentence 1 #-}
                    let weak a_1213: pointer =
                      create(Ivalignof('const char*'), 'const char*') in
                    let weak _: unit =
                      store('const char*', a_1213, a_1179) in
                    pure(a_1213) in
                let strong a_1174: pointer =
                  {-# §6.5.2.2#7, sentences 2 and 3 #-}
                  pcall(create_and_store, 'const char*', a_1183) in
                let strong a_1214: loaded integer =
                  ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
                  a_1169, a_1176, a_1175, [('const char*', a_1174)]) in
                let strong _: (unit,unit,unit) =
                  unseq(
                    kill('struct _IO_FILE*', a_1176)
                  ,
                    kill('char*', a_1175)
                  ,
                    kill('char*', a_1174)
                  ) in
                pure(a_1214)
          ) in
        pure(Unit) ;
      {-# <realloc0.c:31:8, realloc0.c:35:9> #-} let strong a_1215: loaded integer =
        {-# §6.5#2 #-}
        bound(
          {-# <realloc0.c:31:11, realloc0.c:31:45> realloc0.c:31:41 #-} let weak (a_1217: loaded integer,
          a_1218: loaded integer) =
            unseq(
              {-# <realloc0.c:31:11, realloc0.c:31:45> realloc0.c:31:41 #-} let weak (a_1222: loaded integer,
              a_1223: loaded integer) =
                unseq(
                  {-# §6.5.5 #-}
                  {-# <realloc0.c:31:11, realloc0.c:31:40> realloc0.c:31:17 #-} let weak (a_1228: loaded integer,
                  a_1229: loaded integer) =
                    unseq(
                      {-# <realloc0.c:31:11, realloc0.c:31:16> #-} let weak a_1227: pointer =
                        {-# <realloc0.c:31:11, realloc0.c:31:16> #-} pure(
                          new_a
                        ) in
                      load('ptraddr_t', a_1227)
                    ,
                      {-# <realloc0.c:31:19, realloc0.c:31:40> realloc0.c:31:19 #-} pure(
                        Specified(Ivalignof('struct __cerbty_unnamed_tag_744'))
                      )
                    ) in
                  pure(
                    case (a_1228, a_1229) of
                      | (Unspecified(_: ctype), _: loaded integer) =>
                          Unspecified('size_t')
                      | (_: loaded integer, Unspecified(_: ctype)) =>
                          undef(<<UB045b_modulo_by_zero>>)
                      | (Specified(a_1230: integer),
                      Specified(a_1231: integer)) =>
                          let a_1232: integer =
                            conv_int('ptraddr_t', a_1230) in
                          let a_1233: integer =
                            conv_int('ptraddr_t', a_1231) in
                          if a_1233 = 0 then
                            undef(<<UB045b_modulo_by_zero>>)
                          else
                            if is_representable_integer(conv_int('ptraddr_t',
                            a_1230) /
                            a_1233, 'size_t') then
                              Specified(wrapI('size_t', a_1232 rem_t a_1233))
                            else
                              undef(<<UB045c_quotient_not_representable>>)
                    end
                  )
                ,
                  {-# <realloc0.c:31:44, realloc0.c:31:45> #-} pure(
                    Specified(0)
                  )
                ) in
              pure(
                case (a_1222, a_1223) of
                  | (Specified(a_1224: integer), Specified(a_1225: integer)) =>
                      if not(if all_values_representable_in('size_t',
                      'signed int') then
                        conv_int('signed int', a_1224)
                      else
                        conv_int('unsigned int', a_1224) =
                      if all_values_representable_in('size_t', 'signed int') then
                        conv_int('signed int', a_1225)
                      else
                        conv_int('unsigned int', a_1225)) then
                        Specified(1)
                      else
                        Specified(0)
                  | _: (loaded integer,loaded integer) =>
                      Unspecified('signed int')
                end
              )
            ,
              {-# <realloc0.c:31:11, realloc0.c:31:45> realloc0.c:31:41 #-} pure(
                Specified(0)
              )
            ) in
          pure(
            case (a_1217, a_1218) of
              | (Specified(a_1219: integer), Specified(a_1220: integer)) =>
                  if conv_int('signed int', a_1219) =
                  conv_int('signed int', a_1220) then
                    Specified(1)
                  else
                    Specified(0)
              | _: (loaded integer,loaded integer) =>
                  Unspecified('signed int')
            end
          )
        ) in
      let strong a_991: boolean =
        case a_1215 of
          | Specified(a_1216: integer) =>
              pure(if not(a_1216 = 1) then True else False)
          | Unspecified(_: ctype) =>
              nd(pure(True), pure(False))
        end in
      if a_991 then
        {-# <realloc0.c:32:8, realloc0.c:35:9> #-} {-# <realloc0.c:33:12, realloc0.c:33:69> #-} let strong _: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# §6.5.2.2#10, sentence 1 #-}
            {-# <realloc0.c:33:12, realloc0.c:33:68> #-} let strong ((a_1235: loaded pointer,
            (a_1236: ctype, a_1237: [ctype], a_1238: boolean, a_1239: boolean)),
            a_1242: loaded pointer, a_1244: loaded pointer) =
              {-# §6.5.2.2#4, sentence 2 #-}
              unseq(
                let strong a_1234: loaded pointer =
                  {-# <realloc0.c:33:12, realloc0.c:33:19> #-} pure(
                    Specified(Cfunction(fprintf))
                  ) in
                pure((a_1234, cfunction(a_1234)))
              ,
                {-# <realloc0.c:33:20, realloc0.c:33:28> #-} let weak a_1243: pointer =
                  {-# <realloc0.c:33:20, realloc0.c:33:28> #-} pure(__stderr) in
                load('struct _IO_FILE*', a_1243)
              ,
                {-# <realloc0.c:33:29, realloc0.c:33:67> #-} let weak a_1246: pointer =
                  {-# <realloc0.c:33:29, realloc0.c:33:67> #-} pure(a_1245) in
                {-# §6.3.2.1#3 #-}
                let weak a_1247: pointer =
                  memop(PtrArrayShift, a_1246, 'char', 0) in
                pure(Specified(a_1247))
              ) in
            if not(params_length(a_1237) <= 2) then
              pure(undef(<<UB038_number_of_args>>))
            else
              if not(a_1238) \/ not(are_compatible ('signed int', a_1236)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                let strong a_1241: pointer =
                  let a_1248: ctype = params_nth(a_1237, 0) in
                  if not(are_compatible ('struct _IO_FILE*', a_1248)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    {-# §6.5.2.2#7, sentence 1 #-}
                    let weak a_1249: pointer =
                      create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                    let weak _: unit =
                      store('struct _IO_FILE*', a_1249, a_1242) in
                    pure(a_1249) in
                let strong a_1240: pointer =
                  let a_1250: ctype = params_nth(a_1237, 1) in
                  if not(are_compatible ('const char*', a_1250)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    {-# §6.5.2.2#7, sentence 1 #-}
                    let weak a_1251: pointer =
                      create(Ivalignof('const char*'), 'const char*') in
                    let weak _: unit =
                      store('const char*', a_1251, a_1244) in
                    pure(a_1251) in
                let strong a_1252: loaded integer =
                  ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
                  a_1235, a_1241, a_1240, []: (ctype,pointer)) in
                let strong _: (unit,unit) =
                  unseq(
                    kill('struct _IO_FILE*', a_1241)
                  ,
                    kill('char*', a_1240)
                  ) in
                pure(a_1252)
          ) in
        pure(Unit) ;
        {-# <realloc0.c:34:12, realloc0.c:34:22> #-} let strong a_1253: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# <realloc0.c:34:18, realloc0.c:34:21> #-} pure(Specified(1))
          ) in
        kill('ptraddr_t', old_a) ;
        kill('ptraddr_t', new_a) ;
        kill('signed int', i) ;
        kill('void*[20]', p) ;
        run ret_915(conv_loaded_int('signed int', a_1253)) ;
        pure(Unit)
      else
        {-# <realloc0.c:31:8, realloc0.c:35:9> #-} pure(Unit) ;
      {-# <realloc0.c:36:8, realloc0.c:40:9> #-} let strong a_1254: loaded integer =
        {-# §6.5#2 #-}
        bound(
          {-# <realloc0.c:36:11, realloc0.c:36:48> realloc0.c:36:44 #-} let weak (a_1256: loaded integer,
          a_1257: loaded integer) =
            unseq(
              {-# <realloc0.c:36:11, realloc0.c:36:48> realloc0.c:36:44 #-} let weak (a_1261: loaded integer,
              a_1262: loaded integer) =
                unseq(
                  {-# <realloc0.c:36:11, realloc0.c:36:43> #-} let strong a_1282: loaded pointer =
                    {-# §6.5.4 #-}
                    {-# <realloc0.c:36:38, realloc0.c:36:42> #-} let weak a_1279: pointer =
                      {-# §6.5.3.2 #-}
                      {-# <realloc0.c:36:38, realloc0.c:36:42> #-} let weak a_1268: loaded pointer =
                        {-# §6.5.6 #-}
                        {-# <realloc0.c:36:38, realloc0.c:36:42> #-} let weak (a_1271: loaded pointer,
                        a_1273: loaded integer) =
                          unseq(
                            {-# <realloc0.c:36:38, realloc0.c:36:39> #-} let weak a_1276: pointer =
                              {-# <realloc0.c:36:38, realloc0.c:36:39> #-} pure(
                                p
                              ) in
                            {-# §6.3.2.1#3 #-}
                            let weak a_1277: pointer =
                              memop(PtrArrayShift, a_1276, 'void*', 0) in
                            pure(Specified(a_1277))
                          ,
                            {-# <realloc0.c:36:40, realloc0.c:36:41> #-} let weak a_1278: pointer =
                              {-# <realloc0.c:36:40, realloc0.c:36:41> #-} pure(
                                i
                              ) in
                            load('signed int', a_1278)
                          ) in
                        case (a_1271, a_1273) of
                          | (Specified(a_1272: pointer),
                          Specified(a_1274: integer)) =>
                              let weak a_1275: pointer =
                                memop(PtrArrayShift, a_1272, 'void*', a_1274) in
                              pure(Specified(a_1275))
                          | _: (loaded pointer,loaded integer) =>
                              pure(
                                undef(<<UB_CERB004_unspecified__pointer_add>>)
                              )
                        end in
                      case a_1268 of
                        | Specified(a_1269: pointer) =>
                            let weak a_1270: boolean =
                              memop(PtrValidForDeref, 'void*', a_1269) in
                            pure(
                              if a_1270 then
                                a_1269
                              else
                                undef(<<UB043_indirection_invalid_value>>)
                            )
                        | Unspecified(_: ctype) =>
                            pure(undef(<<UB043_indirection_invalid_value>>))
                      end in
                    load('void*', a_1279) in
                  case a_1282 of
                    | Specified(a_1283: pointer) =>
                        memop(cheri_cheri_offset_get['size_t (void*)'], a_1283)
                    | _: loaded pointer =>
                        pure(
                          undef(<<DUMMY(Elab, CHERI intrinsics (unspec))>>)
                        )
                  end
                ,
                  {-# <realloc0.c:36:47, realloc0.c:36:48> #-} pure(
                    Specified(0)
                  )
                ) in
              pure(
                case (a_1261, a_1262) of
                  | (Specified(a_1263: integer), Specified(a_1264: integer)) =>
                      if not(if all_values_representable_in('size_t',
                      'signed int') then
                        conv_int('signed int', a_1263)
                      else
                        conv_int('unsigned int', a_1263) =
                      if all_values_representable_in('size_t', 'signed int') then
                        conv_int('signed int', a_1264)
                      else
                        conv_int('unsigned int', a_1264)) then
                        Specified(1)
                      else
                        Specified(0)
                  | _: (loaded integer,loaded integer) =>
                      Unspecified('signed int')
                end
              )
            ,
              {-# <realloc0.c:36:11, realloc0.c:36:48> realloc0.c:36:44 #-} pure(
                Specified(0)
              )
            ) in
          pure(
            case (a_1256, a_1257) of
              | (Specified(a_1258: integer), Specified(a_1259: integer)) =>
                  if conv_int('signed int', a_1258) =
                  conv_int('signed int', a_1259) then
                    Specified(1)
                  else
                    Specified(0)
              | _: (loaded integer,loaded integer) =>
                  Unspecified('signed int')
            end
          )
        ) in
      let strong a_990: boolean =
        case a_1254 of
          | Specified(a_1255: integer) =>
              pure(if not(a_1255 = 1) then True else False)
          | Unspecified(_: ctype) =>
              nd(pure(True), pure(False))
        end in
      if a_990 then
        {-# <realloc0.c:37:8, realloc0.c:40:9> #-} {-# <realloc0.c:38:12, realloc0.c:38:52> #-} let strong _: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# §6.5.2.2#10, sentence 1 #-}
            {-# <realloc0.c:38:12, realloc0.c:38:51> #-} let strong ((a_1285: loaded pointer,
            (a_1286: ctype, a_1287: [ctype], a_1288: boolean, a_1289: boolean)),
            a_1292: loaded pointer, a_1294: loaded pointer) =
              {-# §6.5.2.2#4, sentence 2 #-}
              unseq(
                let strong a_1284: loaded pointer =
                  {-# <realloc0.c:38:12, realloc0.c:38:19> #-} pure(
                    Specified(Cfunction(fprintf))
                  ) in
                pure((a_1284, cfunction(a_1284)))
              ,
                {-# <realloc0.c:38:20, realloc0.c:38:28> #-} let weak a_1293: pointer =
                  {-# <realloc0.c:38:20, realloc0.c:38:28> #-} pure(__stderr) in
                load('struct _IO_FILE*', a_1293)
              ,
                {-# <realloc0.c:38:29, realloc0.c:38:50> #-} let weak a_1296: pointer =
                  {-# <realloc0.c:38:29, realloc0.c:38:50> #-} pure(a_1295) in
                {-# §6.3.2.1#3 #-}
                let weak a_1297: pointer =
                  memop(PtrArrayShift, a_1296, 'char', 0) in
                pure(Specified(a_1297))
              ) in
            if not(params_length(a_1287) <= 2) then
              pure(undef(<<UB038_number_of_args>>))
            else
              if not(a_1288) \/ not(are_compatible ('signed int', a_1286)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                let strong a_1291: pointer =
                  let a_1298: ctype = params_nth(a_1287, 0) in
                  if not(are_compatible ('struct _IO_FILE*', a_1298)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    {-# §6.5.2.2#7, sentence 1 #-}
                    let weak a_1299: pointer =
                      create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                    let weak _: unit =
                      store('struct _IO_FILE*', a_1299, a_1292) in
                    pure(a_1299) in
                let strong a_1290: pointer =
                  let a_1300: ctype = params_nth(a_1287, 1) in
                  if not(are_compatible ('const char*', a_1300)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    {-# §6.5.2.2#7, sentence 1 #-}
                    let weak a_1301: pointer =
                      create(Ivalignof('const char*'), 'const char*') in
                    let weak _: unit =
                      store('const char*', a_1301, a_1294) in
                    pure(a_1301) in
                let strong a_1302: loaded integer =
                  ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
                  a_1285, a_1291, a_1290, []: (ctype,pointer)) in
                let strong _: (unit,unit) =
                  unseq(
                    kill('struct _IO_FILE*', a_1291)
                  ,
                    kill('char*', a_1290)
                  ) in
                pure(a_1302)
          ) in
        pure(Unit) ;
        {-# <realloc0.c:39:12, realloc0.c:39:22> #-} let strong a_1303: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# <realloc0.c:39:18, realloc0.c:39:21> #-} pure(Specified(1))
          ) in
        kill('ptraddr_t', old_a) ;
        kill('ptraddr_t', new_a) ;
        kill('signed int', i) ;
        kill('void*[20]', p) ;
        run ret_915(conv_loaded_int('signed int', a_1303)) ;
        pure(Unit)
      else
        {-# <realloc0.c:36:8, realloc0.c:40:9> #-} pure(Unit) ;
      {-# <realloc0.c:41:8, realloc0.c:45:9> #-} let strong a_1304: loaded integer =
        {-# §6.5#2 #-}
        bound(
          {-# <realloc0.c:41:11, realloc0.c:41:61> realloc0.c:41:44 #-} let weak (a_1306: loaded integer,
          a_1307: loaded integer) =
            unseq(
              {-# §6.5.8 #-}
              {-# <realloc0.c:41:11, realloc0.c:41:61> realloc0.c:41:44 #-} let weak (a_1338: loaded integer,
              a_1339: loaded integer) =
                unseq(
                  {-# <realloc0.c:41:11, realloc0.c:41:43> #-} let strong a_1327: loaded pointer =
                    {-# §6.5.4 #-}
                    {-# <realloc0.c:41:38, realloc0.c:41:42> #-} let weak a_1324: pointer =
                      {-# §6.5.3.2 #-}
                      {-# <realloc0.c:41:38, realloc0.c:41:42> #-} let weak a_1313: loaded pointer =
                        {-# §6.5.6 #-}
                        {-# <realloc0.c:41:38, realloc0.c:41:42> #-} let weak (a_1316: loaded pointer,
                        a_1318: loaded integer) =
                          unseq(
                            {-# <realloc0.c:41:38, realloc0.c:41:39> #-} let weak a_1321: pointer =
                              {-# <realloc0.c:41:38, realloc0.c:41:39> #-} pure(
                                p
                              ) in
                            {-# §6.3.2.1#3 #-}
                            let weak a_1322: pointer =
                              memop(PtrArrayShift, a_1321, 'void*', 0) in
                            pure(Specified(a_1322))
                          ,
                            {-# <realloc0.c:41:40, realloc0.c:41:41> #-} let weak a_1323: pointer =
                              {-# <realloc0.c:41:40, realloc0.c:41:41> #-} pure(
                                i
                              ) in
                            load('signed int', a_1323)
                          ) in
                        case (a_1316, a_1318) of
                          | (Specified(a_1317: pointer),
                          Specified(a_1319: integer)) =>
                              let weak a_1320: pointer =
                                memop(PtrArrayShift, a_1317, 'void*', a_1319) in
                              pure(Specified(a_1320))
                          | _: (loaded pointer,loaded integer) =>
                              pure(
                                undef(<<UB_CERB004_unspecified__pointer_add>>)
                              )
                        end in
                      case a_1313 of
                        | Specified(a_1314: pointer) =>
                            let weak a_1315: boolean =
                              memop(PtrValidForDeref, 'void*', a_1314) in
                            pure(
                              if a_1315 then
                                a_1314
                              else
                                undef(<<UB043_indirection_invalid_value>>)
                            )
                        | Unspecified(_: ctype) =>
                            pure(undef(<<UB043_indirection_invalid_value>>))
                      end in
                    load('void*', a_1324) in
                  case a_1327 of
                    | Specified(a_1328: pointer) =>
                        memop(cheri_cheri_length_get['size_t (void*)'], a_1328)
                    | _: loaded pointer =>
                        pure(
                          undef(<<DUMMY(Elab, CHERI intrinsics (unspec))>>)
                        )
                  end
                ,
                  {-# §6.5.4 #-}
                  {-# <realloc0.c:41:46, realloc0.c:41:61> realloc0.c:41:46 #-} let weak a_1329: loaded integer =
                    {-# §6.5.6 #-}
                    {-# <realloc0.c:41:54, realloc0.c:41:61> #-} let weak (a_1332: loaded integer,
                    a_1333: loaded integer) =
                      unseq(
                        {-# <realloc0.c:41:55, realloc0.c:41:57> #-} pure(
                          Specified(20)
                        )
                      ,
                        {-# <realloc0.c:41:59, realloc0.c:41:60> #-} let weak a_1331: pointer =
                          {-# <realloc0.c:41:59, realloc0.c:41:60> #-} pure(
                            i
                          ) in
                        load('signed int', a_1331)
                      ) in
                    pure(
                      case (a_1332, a_1333) of
                        | (Specified(a_1334: integer),
                        Specified(a_1335: integer)) =>
                            Specified(catch_exceptional_condition_sub('signed int', conv_int('signed int',
                            a_1334), conv_int('signed int', a_1335)))
                        | _: (loaded integer,loaded integer) =>
                            undef(<<UB036_exceptional_condition>>)
                      end
                    ) in
                  pure(conv_loaded_int('size_t', a_1329))
                ) in
              case (a_1338, a_1339) of
                | (Specified(a_1340: integer), Specified(a_1341: integer)) =>
                    {-# §6.5.8#6 #-}
                    pure(
                      if conv_int('size_t', a_1340) <
                      conv_int('size_t', a_1341) then
                        Specified(1)
                      else
                        Specified(0)
                    )
                | _: (loaded integer,loaded integer) =>
                    pure(Unspecified('signed int'))
              end
            ,
              {-# <realloc0.c:41:11, realloc0.c:41:61> realloc0.c:41:44 #-} pure(
                Specified(0)
              )
            ) in
          pure(
            case (a_1306, a_1307) of
              | (Specified(a_1308: integer), Specified(a_1309: integer)) =>
                  if conv_int('signed int', a_1308) =
                  conv_int('signed int', a_1309) then
                    Specified(1)
                  else
                    Specified(0)
              | _: (loaded integer,loaded integer) =>
                  Unspecified('signed int')
            end
          )
        ) in
      let strong a_989: boolean =
        case a_1304 of
          | Specified(a_1305: integer) =>
              pure(if not(a_1305 = 1) then True else False)
          | Unspecified(_: ctype) =>
              nd(pure(True), pure(False))
        end in
      if a_989 then
        {-# <realloc0.c:42:8, realloc0.c:45:9> #-} {-# <realloc0.c:43:12, realloc0.c:43:57> #-} let strong _: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# §6.5.2.2#10, sentence 1 #-}
            {-# <realloc0.c:43:12, realloc0.c:43:56> #-} let strong ((a_1344: loaded pointer,
            (a_1345: ctype, a_1346: [ctype], a_1347: boolean, a_1348: boolean)),
            a_1351: loaded pointer, a_1353: loaded pointer) =
              {-# §6.5.2.2#4, sentence 2 #-}
              unseq(
                let strong a_1343: loaded pointer =
                  {-# <realloc0.c:43:12, realloc0.c:43:19> #-} pure(
                    Specified(Cfunction(fprintf))
                  ) in
                pure((a_1343, cfunction(a_1343)))
              ,
                {-# <realloc0.c:43:20, realloc0.c:43:28> #-} let weak a_1352: pointer =
                  {-# <realloc0.c:43:20, realloc0.c:43:28> #-} pure(__stderr) in
                load('struct _IO_FILE*', a_1352)
              ,
                {-# <realloc0.c:43:29, realloc0.c:43:55> #-} let weak a_1355: pointer =
                  {-# <realloc0.c:43:29, realloc0.c:43:55> #-} pure(a_1354) in
                {-# §6.3.2.1#3 #-}
                let weak a_1356: pointer =
                  memop(PtrArrayShift, a_1355, 'char', 0) in
                pure(Specified(a_1356))
              ) in
            if not(params_length(a_1346) <= 2) then
              pure(undef(<<UB038_number_of_args>>))
            else
              if not(a_1347) \/ not(are_compatible ('signed int', a_1345)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                let strong a_1350: pointer =
                  let a_1357: ctype = params_nth(a_1346, 0) in
                  if not(are_compatible ('struct _IO_FILE*', a_1357)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    {-# §6.5.2.2#7, sentence 1 #-}
                    let weak a_1358: pointer =
                      create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                    let weak _: unit =
                      store('struct _IO_FILE*', a_1358, a_1351) in
                    pure(a_1358) in
                let strong a_1349: pointer =
                  let a_1359: ctype = params_nth(a_1346, 1) in
                  if not(are_compatible ('const char*', a_1359)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    {-# §6.5.2.2#7, sentence 1 #-}
                    let weak a_1360: pointer =
                      create(Ivalignof('const char*'), 'const char*') in
                    let weak _: unit =
                      store('const char*', a_1360, a_1353) in
                    pure(a_1360) in
                let strong a_1361: loaded integer =
                  ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
                  a_1344, a_1350, a_1349, []: (ctype,pointer)) in
                let strong _: (unit,unit) =
                  unseq(
                    kill('struct _IO_FILE*', a_1350)
                  ,
                    kill('char*', a_1349)
                  ) in
                pure(a_1361)
          ) in
        pure(Unit) ;
        {-# <realloc0.c:44:12, realloc0.c:44:22> #-} let strong a_1362: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# <realloc0.c:44:18, realloc0.c:44:21> #-} pure(Specified(1))
          ) in
        kill('ptraddr_t', old_a) ;
        kill('ptraddr_t', new_a) ;
        kill('signed int', i) ;
        kill('void*[20]', p) ;
        run ret_915(conv_loaded_int('signed int', a_1362)) ;
        pure(Unit)
      else
        {-# <realloc0.c:41:8, realloc0.c:45:9> #-} pure(Unit) ;
      {-# <realloc0.c:19:4, realloc0.c:46:5> #-} save __cerb_continue2: unit (old_a: pointer:= old_a,
      new_a: pointer:= new_a, i: pointer:= i, p: pointer:= p) in
        {-# <unknown location> #-} let strong _: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# §6.5.2.4#3, sentence 3 #-}
            {-# §6.5.2.4#3, sentence 1 #-}
            {-# §6.5.2.4 #-}
            {-# <realloc0.c:19:25, realloc0.c:19:28> realloc0.c:19:26 #-} let weak a_1363: pointer =
              {-# <realloc0.c:19:25, realloc0.c:19:26> #-} pure(i) in
            seq_rmw('signed int', a_1363, a_1364 => case a_1364 of
              | Specified(a_1365: integer) =>
                  Specified(conv_int('signed int',
                  catch_exceptional_condition_sub('signed int', conv_int('signed int',
                  a_1365), 1)))
              | Unspecified(_: ctype) =>
                  Unspecified('signed int')
            end)
          ) in
        pure(Unit) ;
      kill('ptraddr_t', old_a) ;
      kill('ptraddr_t', new_a) ;
      pure(Unit) ;
      {-# <realloc0.c:19:4, realloc0.c:46:5> #-} save continue_918: unit (i: pointer:= i,
      p: pointer:= p) in
        {-# <realloc0.c:19:4, realloc0.c:46:5> #-} pure(Unit) ;
      pure(Unit) ;
      run while_920(i, p)
    else
      pure(Unit) ;
  {-# <realloc0.c:19:4, realloc0.c:46:5> #-} save break_919: unit (i: pointer:= i,
  p: pointer:= p) in
    {-# <realloc0.c:19:4, realloc0.c:46:5> #-} pure(Unit) ;
  pure(Unit) ;
  kill('signed int', i) ;
  pure(Unit) ;
  {-# <realloc0.c:47:4, realloc0.c:47:31> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <realloc0.c:47:4, realloc0.c:47:30> #-} let strong ((a_1367: loaded pointer,
      (a_1368: ctype, a_1369: [ctype], a_1370: boolean, a_1371: boolean)),
      a_1374: loaded pointer, a_1376: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_1366: loaded pointer =
            {-# <realloc0.c:47:4, realloc0.c:47:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_1366, cfunction(a_1366)))
        ,
          {-# <realloc0.c:47:12, realloc0.c:47:20> #-} let weak a_1375: pointer =
            {-# <realloc0.c:47:12, realloc0.c:47:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_1375)
        ,
          {-# <realloc0.c:47:21, realloc0.c:47:29> #-} let weak a_1378: pointer =
            {-# <realloc0.c:47:21, realloc0.c:47:29> #-} pure(a_1377) in
          {-# §6.3.2.1#3 #-}
          let weak a_1379: pointer =
            memop(PtrArrayShift, a_1378, 'char', 0) in
          pure(Specified(a_1379))
        ) in
      if not(params_length(a_1369) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1370) \/ not(are_compatible ('signed int', a_1368)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1373: pointer =
            let a_1380: ctype = params_nth(a_1369, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1380)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1381: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1381, a_1374) in
              pure(a_1381) in
          let strong a_1372: pointer =
            let a_1382: ctype = params_nth(a_1369, 1) in
            if not(are_compatible ('const char*', a_1382)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1383: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1383, a_1376) in
              pure(a_1383) in
          let strong a_1384: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1367, a_1373, a_1372, []: (ctype,pointer)) in
          let strong _: (unit,unit) =
            unseq(kill('struct _IO_FILE*', a_1373), kill('char*', a_1372)) in
          pure(a_1384)
    ) in
  pure(Unit) ;
  kill('void*[20]', p) ;
  pure(Unit) ;
  {-# <realloc0.c:12:0, realloc0.c:48:1> realloc0.c:12:4 - realloc0.c:12:8 #-} save ret_915: loaded integer (a_1385: loaded integer:= Specified(0)) in
    pure(a_1385)

