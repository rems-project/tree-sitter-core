-- Aggregates










def struct my_header :=
  x: 'size_t'

-- Globals
glob a_923: pointer [ail_ctype = 'char[20]'] :=
  let strong a_1421: pointer = create(Ivalignof('char[20]'), 'char[20]') in
  store_lock('char[20]', a_1421,
  Specified(Array(Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 103)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 40)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 41)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 122)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1422: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1421,
    18446744073701163007) in
  case a_1422 of
    | Specified(a_1421: pointer) =>
        pure(a_1421)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_944: pointer [ail_ctype = 'char[31]'] :=
  let strong a_1423: pointer = create(Ivalignof('char[31]'), 'char[31]') in
  store_lock('char[31]', a_1423,
  Specified(Array(Specified(conv_int('char', 115)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 122)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 109)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 104)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 58)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 122)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1424: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1423,
    18446744073701163007) in
  case a_1424 of
    | Specified(a_1423: pointer) =>
        pure(a_1423)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_978: pointer [ail_ctype = 'char[8]'] :=
  let strong a_1425: pointer = create(Ivalignof('char[8]'), 'char[8]') in
  store_lock('char[8]', a_1425,
  Specified(Array(Specified(conv_int('char', 80)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1426: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1425,
    18446744073701163007) in
  case a_1426 of
    | Specified(a_1425: pointer) =>
        pure(a_1425)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1020: pointer [ail_ctype = 'char[10]'] :=
  let strong a_1427: pointer = create(Ivalignof('char[10]'), 'char[10]') in
  store_lock('char[10]', a_1427,
  Specified(Array(Specified(conv_int('char', 86)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1428: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1427,
    18446744073701163007) in
  case a_1428 of
    | Specified(a_1427: pointer) =>
        pure(a_1427)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1095: pointer [ail_ctype = 'char[5]'] :=
  let strong a_1429: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_1429,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0)))) ;
  let strong a_1430: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1429,
    18446744073701163007) in
  case a_1430 of
    | Specified(a_1429: pointer) =>
        pure(a_1429)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1099: pointer [ail_ctype = 'char[9]'] :=
  let strong a_1431: pointer = create(Ivalignof('char[9]'), 'char[9]') in
  store_lock('char[9]', a_1431,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0)))) ;
  let strong a_1432: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1431,
    18446744073701163007) in
  case a_1432 of
    | Specified(a_1431: pointer) =>
        pure(a_1431)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1123: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1433: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1433,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(0)))) ;
  let strong a_1434: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1433,
    18446744073701163007) in
  case a_1434 of
    | Specified(a_1433: pointer) =>
        pure(a_1433)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1164: pointer [ail_ctype = 'char[5]'] :=
  let strong a_1435: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_1435,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 48)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 120)), Specified(0)))) ;
  let strong a_1436: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1435,
    18446744073701163007) in
  case a_1436 of
    | Specified(a_1435: pointer) =>
        pure(a_1435)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1212: pointer [ail_ctype = 'char[2]'] :=
  let strong a_1437: pointer = create(Ivalignof('char[2]'), 'char[2]') in
  store_lock('char[2]', a_1437,
  Specified(Array(Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1438: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1437,
    18446744073701163007) in
  case a_1438 of
    | Specified(a_1437: pointer) =>
        pure(a_1437)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1285: pointer [ail_ctype = 'char[26]'] :=
  let strong a_1439: pointer = create(Ivalignof('char[26]'), 'char[26]') in
  store_lock('char[26]', a_1439,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 96)),
  Specified(0)))) ;
  let strong a_1440: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1439,
    18446744073701163007) in
  case a_1440 of
    | Specified(a_1439: pointer) =>
        pure(a_1439)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1301: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1441: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1441,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 112)),
  Specified(0)))) ;
  let strong a_1442: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1441,
    18446744073701163007) in
  case a_1442 of
    | Specified(a_1441: pointer) =>
        pure(a_1441)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1341: pointer [ail_ctype = 'char[31]'] :=
  let strong a_1443: pointer = create(Ivalignof('char[31]'), 'char[31]') in
  store_lock('char[31]', a_1443,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 96)), Specified(0)))) ;
  let strong a_1444: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1443,
    18446744073701163007) in
  case a_1444 of
    | Specified(a_1443: pointer) =>
        pure(a_1443)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1356: pointer [ail_ctype = 'char[27]'] :=
  let strong a_1445: pointer = create(Ivalignof('char[27]'), 'char[27]') in
  store_lock('char[27]', a_1445,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 91)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 80)), Specified(conv_int('char', 44)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 35)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 98)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 93)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 63)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 65)), Specified(0)))) ;
  let strong a_1446: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1445,
    18446744073701163007) in
  case a_1446 of
    | Specified(a_1445: pointer) =>
        pure(a_1445)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1396: pointer [ail_ctype = 'char[15]'] :=
  let strong a_1447: pointer = create(Ivalignof('char[15]'), 'char[15]') in
  store_lock('char[15]', a_1447,
  Specified(Array(Specified(conv_int('char', 115)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1448: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1447,
    18446744073701163007) in
  case a_1448 of
    | Specified(a_1447: pointer) =>
        pure(a_1447)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

-- Fun map
proc my_malloc_wrapper (size: pointer): eff loaded pointer :=
  {-# <align1.c:9:0, align1.c:13:1> #-} let strong p: pointer =
    create(Ivalignof('void*'), 'void*') in
  {-# <align1.c:10:4, align1.c:10:54> #-} let strong a_1042: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <align1.c:10:14, align1.c:10:53> #-} let strong ((a_1044: loaded pointer,
      (a_1045: ctype, a_1046: [ctype], a_1047: boolean, a_1048: boolean)),
      a_1050: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_1043: loaded pointer =
            {-# <align1.c:10:14, align1.c:10:20> #-} pure(
              Specified(Cfunction(malloc_proxy))
            ) in
          pure((a_1043, cfunction(a_1043)))
        ,
          {-# §6.5.6 #-}
          {-# <align1.c:10:21, align1.c:10:52> align1.c:10:46 #-} let weak (a_1051: loaded integer,
          a_1052: loaded integer) =
            unseq(
              {-# <align1.c:10:21, align1.c:10:45> align1.c:10:21 #-} pure(
                Specified(Ivsizeof('struct my_header'))
              )
            ,
              {-# <align1.c:10:48, align1.c:10:52> #-} let weak a_1056: pointer =
                {-# <align1.c:10:48, align1.c:10:52> #-} pure(size) in
              load('size_t', a_1056)
            ) in
          pure(
            case (a_1051, a_1052) of
              | (Specified(a_1053: integer), Specified(a_1054: integer)) =>
                  Specified(wrapI_add('size_t', __conv_int__('size_t', a_1053), __conv_int__('size_t', a_1054)))
              | _: (loaded integer,loaded integer) =>
                  Unspecified('size_t')
            end
          )
        ) in
      if not(params_length(a_1046) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_1047 \/ not(are_compatible ('void*', a_1045)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1049: pointer =
            let a_1057: ctype = params_nth(a_1046, 0) in
            if not(are_compatible ('size_t', a_1057)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1058: pointer =
                create(Ivalignof('size_t'), 'size_t') in
              let weak _: unit =
                store('size_t', a_1058, conv_loaded_int('size_t', a_1050)) in
              pure(a_1058) in
          let strong a_1059: loaded pointer =
            ccall('void* (*) (size_t)', a_1044, a_1049) in
          kill('size_t', a_1049) ;
          pure(a_1059)
    ) in
  store('void*', p, a_1042) ;
  {-# <align1.c:11:4, align1.c:11:38> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <align1.c:11:4, align1.c:11:37> align1.c:11:31 #-} let weak (a_1041: pointer,
      a_1069: loaded integer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# §6.5.2.3#4, sentence 2 #-}
          {-# <align1.c:11:4, align1.c:11:30> align1.c:11:27 #-} let strong a_1060: loaded pointer =
            {-# §6.5.4 #-}
            {-# <align1.c:11:4, align1.c:11:27> #-} let weak a_1064: loaded pointer =
              {-# <align1.c:11:25, align1.c:11:26> #-} let weak a_1066: pointer =
                {-# <align1.c:11:25, align1.c:11:26> #-} pure(p) in
              load('void*', a_1066) in
            case a_1064 of
              | Specified(a_1065: pointer) =>
                  let weak a_1067: boolean =
                    memop(PtrWellAligned, 'struct my_header', a_1065) in
                  pure(
                    Specified(if a_1067 then
                      a_1065
                    else
                      undef(<<UB025_misaligned_pointer_conversion>>))
                  )
              | Unspecified(_: ctype) =>
                  pure(undef(<<UB025_misaligned_pointer_conversion>>))
            end in
          case a_1060 of
            | Unspecified(_: ctype) =>
                pure(undef(<<UB_CERB004_unspecified__memberofptr>>))
            | Specified(a_1061: pointer) =>
                let weak a_1062: boolean =
                  memop(PtrValidForDeref, 'struct my_header', a_1061) in
                if a_1062 then
                  let weak a_1063: pointer =
                    memop(PtrArrayShift[my_header, x], a_1061) in
                  pure(a_1063)
                else
                  pure(undef(<<UB043_indirection_invalid_value>>))
          end
        ,
          {-# <align1.c:11:33, align1.c:11:37> #-} let weak a_1068: pointer =
            {-# <align1.c:11:33, align1.c:11:37> #-} pure(size) in
          load('size_t', a_1068)
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('size_t', a_1041, conv_loaded_int('size_t', a_1069))) in
      pure(conv_loaded_int('size_t', a_1069))
    ) in
  pure(Unit) ;
  {-# <align1.c:12:4, align1.c:12:48> #-} let strong a_1079: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.6 #-}
      {-# <align1.c:12:11, align1.c:12:47> align1.c:12:21 #-} let weak (a_1070: loaded pointer,
      a_1072: loaded integer) =
        unseq(
          {-# §6.5.4 #-}
          {-# <align1.c:12:11, align1.c:12:20> align1.c:12:11 #-} let weak a_1075: loaded pointer =
            {-# <align1.c:12:19, align1.c:12:20> #-} let weak a_1077: pointer =
              {-# <align1.c:12:19, align1.c:12:20> #-} pure(p) in
            load('void*', a_1077) in
          case a_1075 of
            | Specified(a_1076: pointer) =>
                let weak a_1078: boolean =
                  memop(PtrWellAligned, 'char', a_1076) in
                pure(
                  Specified(if a_1078 then
                    a_1076
                  else
                    undef(<<UB025_misaligned_pointer_conversion>>))
                )
            | Unspecified(_: ctype) =>
                pure(undef(<<UB025_misaligned_pointer_conversion>>))
          end
        ,
          {-# <align1.c:12:23, align1.c:12:47> align1.c:12:23 #-} pure(
            Specified(Ivsizeof('struct my_header'))
          )
        ) in
      case (a_1070, a_1072) of
        | (Specified(a_1071: pointer), Specified(a_1073: integer)) =>
            let weak a_1074: pointer =
              memop(PtrArrayShift, a_1071, 'char', a_1073) in
            pure(Specified(a_1074))
        | _: (loaded pointer,loaded integer) =>
            pure(undef(<<UB_CERB004_unspecified__pointer_add>>))
      end
    ) in
  kill('void*', p) ;
  run ret_1040(a_1079) ;
  kill('void*', p) ;
  pure(Unit) ;
  {-# <align1.c:8:0, align1.c:13:1> align1.c:8:13 - align1.c:8:30 #-} save ret_1040: loaded pointer (a_1080: loaded pointer:= undef(<<UB088_reached_end_of_function>>)) in
    pure(a_1080)

proc main (): eff loaded integer :=
  {-# <align1.c:16:0, align1.c:25:1> #-} let strong x: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong p: pointer =
    create(Ivalignof('signed int**'), 'signed int**') in
  {-# <align1.c:17:4, align1.c:17:62> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <align1.c:17:4, align1.c:17:61> #-} let strong ((a_912: loaded pointer,
      (a_913: ctype, a_914: [ctype], a_915: boolean, a_916: boolean)),
      a_920: loaded pointer, a_922: loaded pointer, a_926: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_911: loaded pointer =
            {-# <align1.c:17:4, align1.c:17:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_911, cfunction(a_911)))
        ,
          {-# <align1.c:17:12, align1.c:17:20> #-} let weak a_921: pointer =
            {-# <align1.c:17:12, align1.c:17:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_921)
        ,
          {-# <align1.c:17:22, align1.c:17:44> #-} let weak a_924: pointer =
            {-# <align1.c:17:22, align1.c:17:44> #-} pure(a_923) in
          {-# §6.3.2.1#3 #-}
          let weak a_925: pointer = memop(PtrArrayShift, a_924, 'char', 0) in
          pure(Specified(a_925))
        ,
          {-# <align1.c:17:46, align1.c:17:60> align1.c:17:46 #-} pure(
            Specified(Ivalignof('signed int*'))
          )
        ) in
      if not(params_length(a_914) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_915) \/ not(are_compatible ('signed int', a_913)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_919: pointer =
            let a_927: ctype = params_nth(a_914, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_927)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_928: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_928, a_920) in
              pure(a_928) in
          let strong a_918: pointer =
            let a_929: ctype = params_nth(a_914, 1) in
            if not(are_compatible ('const char*', a_929)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_930: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_930, a_922) in
              pure(a_930) in
          let strong a_917: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'size_t',
            conv_loaded_int('size_t', a_926)) in
          let strong a_931: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_912, a_919, a_918, [('size_t', a_917)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_919)
            ,
              kill('char*', a_918)
            ,
              kill('size_t', a_917)
            ) in
          pure(a_931)
    ) in
  pure(Unit) ;
  {-# <align1.c:18:4, align1.c:18:83> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <align1.c:18:4, align1.c:18:82> #-} let strong ((a_933: loaded pointer,
      (a_934: ctype, a_935: [ctype], a_936: boolean, a_937: boolean)),
      a_941: loaded pointer, a_943: loaded pointer, a_947: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_932: loaded pointer =
            {-# <align1.c:18:4, align1.c:18:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_932, cfunction(a_932)))
        ,
          {-# <align1.c:18:12, align1.c:18:20> #-} let weak a_942: pointer =
            {-# <align1.c:18:12, align1.c:18:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_942)
        ,
          {-# <align1.c:18:22, align1.c:18:55> #-} let weak a_945: pointer =
            {-# <align1.c:18:22, align1.c:18:55> #-} pure(a_944) in
          {-# §6.3.2.1#3 #-}
          let weak a_946: pointer = memop(PtrArrayShift, a_945, 'char', 0) in
          pure(Specified(a_946))
        ,
          {-# <align1.c:18:57, align1.c:18:81> align1.c:18:57 #-} pure(
            Specified(Ivsizeof('struct my_header'))
          )
        ) in
      if not(params_length(a_935) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_936) \/ not(are_compatible ('signed int', a_934)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_940: pointer =
            let a_948: ctype = params_nth(a_935, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_948)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_949: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_949, a_941) in
              pure(a_949) in
          let strong a_939: pointer =
            let a_950: ctype = params_nth(a_935, 1) in
            if not(are_compatible ('const char*', a_950)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_951: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_951, a_943) in
              pure(a_951) in
          let strong a_938: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'size_t',
            conv_loaded_int('size_t', a_947)) in
          let strong a_952: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_933, a_940, a_939, [('size_t', a_938)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_940)
            ,
              kill('char*', a_939)
            ,
              kill('size_t', a_938)
            ) in
          pure(a_952)
    ) in
  pure(Unit) ;
  {-# <align1.c:20:4, align1.c:20:15> #-} let strong a_953: loaded integer =
    {-# §6.5#2 #-}
    bound({-# <align1.c:20:12, align1.c:20:14> #-} pure(Specified(42))) in
  store('signed int', x, conv_loaded_int('signed int', a_953)) ;
  {-# <align1.c:21:4, align1.c:21:46> #-} let strong a_954: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <align1.c:21:14, align1.c:21:45> #-} let strong ((a_956: loaded pointer,
      (a_957: ctype, a_958: [ctype], a_959: boolean, a_960: boolean)),
      a_962: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_955: loaded pointer =
            {-# <align1.c:21:14, align1.c:21:31> #-} pure(
              Specified(Cfunction(my_malloc_wrapper))
            ) in
          pure((a_955, cfunction(a_955)))
        ,
          {-# <align1.c:21:32, align1.c:21:44> align1.c:21:32 #-} pure(
            Specified(Ivsizeof('signed int*'))
          )
        ) in
      if not(params_length(a_958) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_959 \/ not(are_compatible ('void*', a_957)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_961: pointer =
            let a_963: ctype = params_nth(a_958, 0) in
            if not(are_compatible ('size_t', a_963)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_964: pointer =
                create(Ivalignof('size_t'), 'size_t') in
              let weak _: unit =
                store('size_t', a_964, conv_loaded_int('size_t', a_962)) in
              pure(a_964) in
          let strong a_965: loaded pointer =
            ccall('void* (*) (size_t)', a_956, a_961) in
          kill('size_t', a_961) ;
          pure(a_965)
    ) in
  store('signed int**', p, a_954) ;
  {-# <align1.c:22:4, align1.c:22:55> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <align1.c:22:4, align1.c:22:54> #-} let strong ((a_967: loaded pointer,
      (a_968: ctype, a_969: [ctype], a_970: boolean, a_971: boolean)),
      a_975: loaded pointer, a_977: loaded pointer, a_981: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_966: loaded pointer =
            {-# <align1.c:22:4, align1.c:22:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_966, cfunction(a_966)))
        ,
          {-# <align1.c:22:12, align1.c:22:20> #-} let weak a_976: pointer =
            {-# <align1.c:22:12, align1.c:22:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_976)
        ,
          {-# <align1.c:22:21, align1.c:22:37> #-} let weak a_979: pointer =
            {-# <align1.c:22:21, align1.c:22:37> #-} pure(a_978) in
          {-# §6.3.2.1#3 #-}
          let weak a_980: pointer = memop(PtrArrayShift, a_979, 'char', 0) in
          pure(Specified(a_980))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <align1.c:22:39, align1.c:22:53> #-} let strong ((a_983: loaded pointer,
          (a_984: ctype, a_985: [ctype], a_986: boolean, a_987: boolean)),
          a_989: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_982: loaded pointer =
                {-# <align1.c:22:39, align1.c:22:43> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_982, cfunction(a_982)))
            ,
              {-# §6.5.4 #-}
              {-# <align1.c:22:44, align1.c:22:52> align1.c:22:44 #-} let weak a_992: pointer =
                {-# <align1.c:22:51, align1.c:22:52> #-} pure(p) in
              load('signed int**', a_992)
            ) in
          if not(params_length(a_985) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_986 \/ not(are_compatible ('const char*', a_984)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_988: pointer =
                let a_994: ctype = params_nth(a_985, 0) in
                if not(are_compatible ('void*', a_994)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_995: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_995, a_989) in
                  pure(a_995) in
              let strong a_996: loaded pointer =
                ccall('const char* (*) (void*)', a_983, a_988) in
              kill('void*', a_988) ;
              pure(a_996)
        ) in
      if not(params_length(a_969) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_970) \/ not(are_compatible ('signed int', a_968)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_974: pointer =
            let a_997: ctype = params_nth(a_969, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_997)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_998: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_998, a_975) in
              pure(a_998) in
          let strong a_973: pointer =
            let a_999: ctype = params_nth(a_969, 1) in
            if not(are_compatible ('const char*', a_999)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1000: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1000, a_977) in
              pure(a_1000) in
          let strong a_972: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_981) in
          let strong a_1001: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_967, a_974, a_973, [('const char*', a_972)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_974)
            ,
              kill('char*', a_973)
            ,
              kill('char*', a_972)
            ) in
          pure(a_1001)
    ) in
  pure(Unit) ;
  {-# <align1.c:23:4, align1.c:23:12> #-} let strong _: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <align1.c:23:4, align1.c:23:11> align1.c:23:7 #-} let weak (a_910: pointer,
      a_1007: loaded pointer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# §6.5.3.2 #-}
          {-# <align1.c:23:4, align1.c:23:6> align1.c:23:4 #-} let weak a_1002: loaded pointer =
            {-# <align1.c:23:5, align1.c:23:6> #-} let weak a_1005: pointer =
              {-# <align1.c:23:5, align1.c:23:6> #-} pure(p) in
            load('signed int**', a_1005) in
          case a_1002 of
            | Specified(a_1003: pointer) =>
                let weak a_1004: boolean =
                  memop(PtrValidForDeref, 'signed int*', a_1003) in
                pure(
                  if a_1004 then
                    a_1003
                  else
                    undef(<<UB043_indirection_invalid_value>>)
                )
            | Unspecified(_: ctype) =>
                pure(undef(<<UB043_indirection_invalid_value>>))
          end
        ,
          {-# §6.5.3.2#3, sentence 5 #-}
          {-# <align1.c:23:9, align1.c:23:11> align1.c:23:9 #-} let weak a_1006: pointer =
            {-# <align1.c:23:10, align1.c:23:11> #-} pure(x) in
          pure(Specified(a_1006))
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('signed int*', a_910, a_1007)) in
      pure(a_1007)
    ) in
  pure(Unit) ;
  {-# <align1.c:24:4, align1.c:24:40> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <align1.c:24:4, align1.c:24:39> #-} let strong ((a_1009: loaded pointer,
      (a_1010: ctype, a_1011: [ctype], a_1012: boolean, a_1013: boolean)),
      a_1017: loaded pointer, a_1019: loaded pointer, a_1023: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_1008: loaded pointer =
            {-# <align1.c:24:4, align1.c:24:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_1008, cfunction(a_1008)))
        ,
          {-# <align1.c:24:12, align1.c:24:20> #-} let weak a_1018: pointer =
            {-# <align1.c:24:12, align1.c:24:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_1018)
        ,
          {-# <align1.c:24:21, align1.c:24:33> #-} let weak a_1021: pointer =
            {-# <align1.c:24:21, align1.c:24:33> #-} pure(a_1020) in
          {-# §6.3.2.1#3 #-}
          let weak a_1022: pointer =
            memop(PtrArrayShift, a_1021, 'char', 0) in
          pure(Specified(a_1022))
        ,
          {-# <align1.c:24:35, align1.c:24:38> align1.c:24:35 #-} let weak a_1032: pointer =
            {-# §6.5.3.2 #-}
            {-# <align1.c:24:35, align1.c:24:38> align1.c:24:35 #-} let weak a_1024: loaded pointer =
              {-# <align1.c:24:36, align1.c:24:38> align1.c:24:36 #-} let weak a_1031: pointer =
                {-# §6.5.3.2 #-}
                {-# <align1.c:24:36, align1.c:24:38> align1.c:24:36 #-} let weak a_1027: loaded pointer =
                  {-# <align1.c:24:37, align1.c:24:38> #-} let weak a_1030: pointer =
                    {-# <align1.c:24:37, align1.c:24:38> #-} pure(p) in
                  load('signed int**', a_1030) in
                case a_1027 of
                  | Specified(a_1028: pointer) =>
                      let weak a_1029: boolean =
                        memop(PtrValidForDeref, 'signed int*', a_1028) in
                      pure(
                        if a_1029 then
                          a_1028
                        else
                          undef(<<UB043_indirection_invalid_value>>)
                      )
                  | Unspecified(_: ctype) =>
                      pure(undef(<<UB043_indirection_invalid_value>>))
                end in
              load('signed int*', a_1031) in
            case a_1024 of
              | Specified(a_1025: pointer) =>
                  let weak a_1026: boolean =
                    memop(PtrValidForDeref, 'signed int', a_1025) in
                  pure(
                    if a_1026 then
                      a_1025
                    else
                      undef(<<UB043_indirection_invalid_value>>)
                  )
              | Unspecified(_: ctype) =>
                  pure(undef(<<UB043_indirection_invalid_value>>))
            end in
          load('signed int', a_1032)
        ) in
      if not(params_length(a_1011) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1012) \/ not(are_compatible ('signed int', a_1010)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1016: pointer =
            let a_1033: ctype = params_nth(a_1011, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1033)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1034: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1034, a_1017) in
              pure(a_1034) in
          let strong a_1015: pointer =
            let a_1035: ctype = params_nth(a_1011, 1) in
            if not(are_compatible ('const char*', a_1035)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1036: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1036, a_1019) in
              pure(a_1036) in
          let strong a_1014: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_1023)) in
          let strong a_1037: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1009, a_1016, a_1015, [('signed int', a_1014)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1016)
            ,
              kill('char*', a_1015)
            ,
              kill('signed int', a_1014)
            ) in
          pure(a_1037)
    ) in
  pure(Unit) ;
  kill('signed int', x) ;
  kill('signed int**', p) ;
  pure(Unit) ;
  {-# <align1.c:15:0, align1.c:25:1> align1.c:15:4 - align1.c:15:8 #-} save ret_909: loaded integer (a_1038: loaded integer:= Specified(0)) in
    pure(a_1038)

