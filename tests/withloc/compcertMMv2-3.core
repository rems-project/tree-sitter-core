-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def union point3d :=
  s: 'struct __cerbty_unnamed_tag_647'
  d: 'signed int[3]'

def struct __cerbty_unnamed_tag_647 :=
  x: 'signed int'
  y: 'signed int'
  z: 'signed int'

-- Globals
glob a_683: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  119)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  {-# <./de_facto_memory_model/compcertMMv2-3.c:6:11, ./de_facto_memory_model/compcertMMv2-3.c:12:1> #-} let strong p: pointer =
    create(Ivalignof('union point3d'), 'union point3d') in
  let strong w: pointer = create(Ivalignof('signed int'), 'signed int') in
  {-# §6.2.4#6 #-}
  {-# <./de_facto_memory_model/compcertMMv2-3.c:7:2, ./de_facto_memory_model/compcertMMv2-3.c:7:18> #-} store('union point3d',
  p, Unspecified('union point3d')) ;
  {-# <./de_facto_memory_model/compcertMMv2-3.c:8:2, ./de_facto_memory_model/compcertMMv2-3.c:8:13> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <./de_facto_memory_model/compcertMMv2-3.c:8:2, ./de_facto_memory_model/compcertMMv2-3.c:8:12> ./de_facto_memory_model/compcertMMv2-3.c:8:8 #-} let weak (a_658: pointer,
      a_661: loaded integer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# §6.5.2.3#3, sentence 2 #-}
          {-# <./de_facto_memory_model/compcertMMv2-3.c:8:2, ./de_facto_memory_model/compcertMMv2-3.c:8:7> ./de_facto_memory_model/compcertMMv2-3.c:8:5 #-} let strong a_659: pointer =
            {-# §6.5.2.3#3, sentence 2 #-}
            {-# <./de_facto_memory_model/compcertMMv2-3.c:8:2, ./de_facto_memory_model/compcertMMv2-3.c:8:5> ./de_facto_memory_model/compcertMMv2-3.c:8:3 #-} let strong a_660: pointer =
              {-# <./de_facto_memory_model/compcertMMv2-3.c:8:2, ./de_facto_memory_model/compcertMMv2-3.c:8:3> #-} pure(
                p
              ) in
            memop(PtrArrayShift[point3d, s], a_660) in
          memop(PtrArrayShift[__cerbty_unnamed_tag_647, y], a_659)
        ,
          {-# <./de_facto_memory_model/compcertMMv2-3.c:8:10, ./de_facto_memory_model/compcertMMv2-3.c:8:12> #-} pure(
            Specified(42)
          )
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('signed int', a_658, conv_loaded_int('signed int', a_661))) in
      pure(conv_loaded_int('signed int', a_661))
    ) in
  pure(Unit) ;
  {-# §6.2.4#6 #-}
  {-# <./de_facto_memory_model/compcertMMv2-3.c:9:2, ./de_facto_memory_model/compcertMMv2-3.c:9:8> #-} store('signed int',
  w, Unspecified('signed int')) ;
  {-# <./de_facto_memory_model/compcertMMv2-3.c:10:2, ./de_facto_memory_model/compcertMMv2-3.c:10:13> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <./de_facto_memory_model/compcertMMv2-3.c:10:2, ./de_facto_memory_model/compcertMMv2-3.c:10:12> ./de_facto_memory_model/compcertMMv2-3.c:10:4 #-} let weak (a_657: pointer,
      a_674: loaded integer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# <./de_facto_memory_model/compcertMMv2-3.c:10:2, ./de_facto_memory_model/compcertMMv2-3.c:10:3> #-} pure(
            w
          )
        ,
          {-# <./de_facto_memory_model/compcertMMv2-3.c:10:6, ./de_facto_memory_model/compcertMMv2-3.c:10:12> #-} let weak a_673: pointer =
            {-# §6.5.3.2 #-}
            {-# <./de_facto_memory_model/compcertMMv2-3.c:10:6, ./de_facto_memory_model/compcertMMv2-3.c:10:12> #-} let weak a_662: loaded pointer =
              {-# §6.5.6 #-}
              {-# <./de_facto_memory_model/compcertMMv2-3.c:10:6, ./de_facto_memory_model/compcertMMv2-3.c:10:12> #-} let weak (a_665: loaded pointer,
              a_667: loaded integer) =
                unseq(
                  {-# <./de_facto_memory_model/compcertMMv2-3.c:10:6, ./de_facto_memory_model/compcertMMv2-3.c:10:9> ./de_facto_memory_model/compcertMMv2-3.c:10:7 #-} let weak a_671: pointer =
                    {-# §6.5.2.3#3, sentence 2 #-}
                    {-# <./de_facto_memory_model/compcertMMv2-3.c:10:6, ./de_facto_memory_model/compcertMMv2-3.c:10:9> ./de_facto_memory_model/compcertMMv2-3.c:10:7 #-} let strong a_670: pointer =
                      {-# <./de_facto_memory_model/compcertMMv2-3.c:10:6, ./de_facto_memory_model/compcertMMv2-3.c:10:7> #-} pure(
                        p
                      ) in
                    memop(PtrArrayShift[point3d, d], a_670) in
                  {-# §6.3.2.1#3 #-}
                  let weak a_672: pointer =
                    memop(PtrArrayShift, a_671, 'signed int', 0) in
                  pure(Specified(a_672))
                ,
                  {-# <./de_facto_memory_model/compcertMMv2-3.c:10:10, ./de_facto_memory_model/compcertMMv2-3.c:10:11> #-} pure(
                    Specified(1)
                  )
                ) in
              let (Specified(a_666: pointer), Specified(a_668: integer)) =
                (a_665, a_667) in
              let weak a_669: pointer =
                memop(PtrArrayShift, a_666, 'signed int', a_668) in
              pure(Specified(a_669)) in
            let Specified(a_663: pointer) = a_662 in
            let weak a_664: boolean =
              memop(PtrValidForDeref, 'signed int', a_663) in
            pure(
              if a_664 then
                a_663
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_673)
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('signed int', a_657, conv_loaded_int('signed int', a_674))) in
      pure(conv_loaded_int('signed int', a_674))
    ) in
  pure(Unit) ;
  {-# <./de_facto_memory_model/compcertMMv2-3.c:11:2, ./de_facto_memory_model/compcertMMv2-3.c:11:21> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./de_facto_memory_model/compcertMMv2-3.c:11:2, ./de_facto_memory_model/compcertMMv2-3.c:11:20> #-} let strong ((a_675: loaded pointer,
      (a_676: ctype, a_677: [ctype], a_678: boolean, a_679: boolean)),
      a_682: loaded pointer, a_686: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_656: loaded pointer =
            {-# <./de_facto_memory_model/compcertMMv2-3.c:11:2, ./de_facto_memory_model/compcertMMv2-3.c:11:8> #-} pure(
              Specified(Cfunction(printf_proxy))
            ) in
          pure((a_656, cfunction(a_656)))
        ,
          {-# <./de_facto_memory_model/compcertMMv2-3.c:11:9, ./de_facto_memory_model/compcertMMv2-3.c:11:17> #-} let weak a_684: pointer =
            {-# <./de_facto_memory_model/compcertMMv2-3.c:11:9, ./de_facto_memory_model/compcertMMv2-3.c:11:17> #-} pure(
              a_683
            ) in
          {-# §6.3.2.1#3 #-}
          let weak a_685: pointer = memop(PtrArrayShift, a_684, 'char', 0) in
          pure(Specified(a_685))
        ,
          {-# <./de_facto_memory_model/compcertMMv2-3.c:11:18, ./de_facto_memory_model/compcertMMv2-3.c:11:19> #-} let weak a_687: pointer =
            {-# <./de_facto_memory_model/compcertMMv2-3.c:11:18, ./de_facto_memory_model/compcertMMv2-3.c:11:19> #-} pure(
              w
            ) in
          load('signed int', a_687)
        ) in
      if not(params_length(a_677) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_678) \/ not(are_compatible ('signed int', a_676)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_681: pointer =
            let a_688: ctype = params_nth(a_677, 0) in
            if not(are_compatible ('const char*', a_688)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_689: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_689, a_682) in
              pure(a_689) in
          let strong a_680: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_686)) in
          let strong a_690: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_675, a_681,
            [('signed int', a_680)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_681), kill('signed int', a_680)) in
          pure(a_690)
    ) in
  pure(Unit) ;
  kill('union point3d', p) ;
  kill('signed int', w) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/compcertMMv2-3.c:6:0, ./de_facto_memory_model/compcertMMv2-3.c:12:1> ./de_facto_memory_model/compcertMMv2-3.c:6:4 - ./de_facto_memory_model/compcertMMv2-3.c:6:8 #-} save ret_655: loaded integer (a_691: loaded integer:= Specified(0)) in
    pure(a_691)

