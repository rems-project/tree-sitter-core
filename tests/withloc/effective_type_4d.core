-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

-- Globals
glob a_899: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  106)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc user_memcpy (dest: pointer, src: pointer, n: pointer): eff unit :=
  {-# <./de_facto_memory_model/effective_type_4d.c:5:47, ./de_facto_memory_model/effective_type_4d.c:10:1> #-} {-# <./de_facto_memory_model/effective_type_4d.c:6:2, ./de_facto_memory_model/effective_type_4d.c:9:3> #-} {-# <./de_facto_memory_model/effective_type_4d.c:6:2, ./de_facto_memory_model/effective_type_4d.c:9:3> #-} save while_914: unit () in
    let strong a_916: loaded integer =
      {-# §6.5#2 #-}
      bound(
        {-# <./de_facto_memory_model/effective_type_4d.c:6:9, ./de_facto_memory_model/effective_type_4d.c:6:14> ./de_facto_memory_model/effective_type_4d.c:6:11 #-} let weak (a_918: loaded integer,
        a_919: loaded integer) =
          unseq(
            {-# §6.5.8 #-}
            {-# <./de_facto_memory_model/effective_type_4d.c:6:9, ./de_facto_memory_model/effective_type_4d.c:6:14> ./de_facto_memory_model/effective_type_4d.c:6:11 #-} let weak (a_924: loaded integer,
            a_925: loaded integer) =
              unseq(
                {-# <./de_facto_memory_model/effective_type_4d.c:6:9, ./de_facto_memory_model/effective_type_4d.c:6:10> #-} let weak a_923: pointer =
                  {-# <./de_facto_memory_model/effective_type_4d.c:6:9, ./de_facto_memory_model/effective_type_4d.c:6:10> #-} pure(
                    n
                  ) in
                load('size_t', a_923)
              ,
                {-# <./de_facto_memory_model/effective_type_4d.c:6:13, ./de_facto_memory_model/effective_type_4d.c:6:14> #-} pure(
                  Specified(0)
                )
              ) in
            let (Specified(a_926: integer), Specified(a_927: integer)) =
              (a_924, a_925) in
            {-# §6.5.8#6 #-}
            pure(
              if if all_values_representable_in('size_t', 'signed int') then
                conv_int('signed int', a_926)
              else
                conv_int('unsigned int', a_926) >
              if all_values_representable_in('size_t', 'signed int') then
                conv_int('signed int', a_927)
              else
                conv_int('unsigned int', a_927) then
                Specified(1)
              else
                Specified(0)
            )
          ,
            {-# <./de_facto_memory_model/effective_type_4d.c:6:9, ./de_facto_memory_model/effective_type_4d.c:6:14> ./de_facto_memory_model/effective_type_4d.c:6:11 #-} pure(
              Specified(0)
            )
          ) in
        pure(
          let (Specified(a_920: integer), Specified(a_921: integer)) =
            (a_918, a_919) in
          if conv_int('signed int', a_920) = conv_int('signed int', a_921) then
            Specified(1)
          else
            Specified(0)
        )
      ) in
    let strong a_915: boolean =
      let Specified(a_917: integer) = a_916 in
      pure(if not(a_917 = 1) then True else False) in
    if a_915 then
      {-# <./de_facto_memory_model/effective_type_4d.c:6:2, ./de_facto_memory_model/effective_type_4d.c:9:3> #-} {-# <./de_facto_memory_model/effective_type_4d.c:6:16, ./de_facto_memory_model/effective_type_4d.c:9:3> #-} {-# <./de_facto_memory_model/effective_type_4d.c:7:4, ./de_facto_memory_model/effective_type_4d.c:7:17> #-} let strong _: loaded integer =
        {-# §6.5#2 #-}
        bound(
          {-# §6.5.16#3, sentence 4 #-}
          {-# <./de_facto_memory_model/effective_type_4d.c:7:4, ./de_facto_memory_model/effective_type_4d.c:7:16> ./de_facto_memory_model/effective_type_4d.c:7:10 #-} let weak (a_932: pointer,
          a_942: loaded integer) =
            {-# §6.5.16#3, sentence 5 #-}
            unseq(
              {-# §6.5.3.2 #-}
              {-# <./de_facto_memory_model/effective_type_4d.c:7:4, ./de_facto_memory_model/effective_type_4d.c:7:9> ./de_facto_memory_model/effective_type_4d.c:7:4 #-} let weak a_933: loaded pointer =
                {-# <./de_facto_memory_model/effective_type_4d.c:7:5, ./de_facto_memory_model/effective_type_4d.c:7:9> #-} let weak a_936: pointer =
                  {-# <./de_facto_memory_model/effective_type_4d.c:7:5, ./de_facto_memory_model/effective_type_4d.c:7:9> #-} pure(
                    dest
                  ) in
                load('unsigned char*', a_936) in
              let Specified(a_934: pointer) = a_933 in
              let weak a_935: boolean =
                memop(PtrValidForDeref, 'unsigned char', a_934) in
              pure(
                if a_935 then
                  a_934
                else
                  undef(<<UB043_indirection_invalid_value>>)
              )
            ,
              {-# <./de_facto_memory_model/effective_type_4d.c:7:12, ./de_facto_memory_model/effective_type_4d.c:7:16> ./de_facto_memory_model/effective_type_4d.c:7:12 #-} let weak a_941: pointer =
                {-# §6.5.3.2 #-}
                {-# <./de_facto_memory_model/effective_type_4d.c:7:12, ./de_facto_memory_model/effective_type_4d.c:7:16> ./de_facto_memory_model/effective_type_4d.c:7:12 #-} let weak a_937: loaded pointer =
                  {-# <./de_facto_memory_model/effective_type_4d.c:7:13, ./de_facto_memory_model/effective_type_4d.c:7:16> #-} let weak a_940: pointer =
                    {-# <./de_facto_memory_model/effective_type_4d.c:7:13, ./de_facto_memory_model/effective_type_4d.c:7:16> #-} pure(
                      src
                    ) in
                  load('unsigned char*', a_940) in
                let Specified(a_938: pointer) = a_937 in
                let weak a_939: boolean =
                  memop(PtrValidForDeref, 'unsigned char', a_938) in
                pure(
                  if a_939 then
                    a_938
                  else
                    undef(<<UB043_indirection_invalid_value>>)
                ) in
              load('unsigned char', a_941)
            ) in
          let weak _: unit =
            {-# §6.5.16.1#2, store #-}
            neg(store('unsigned char', a_932,
            conv_loaded_int('unsigned char', a_942))) in
          pure(conv_loaded_int('unsigned char', a_942))
        ) in
      pure(Unit) ;
      {-# <./de_facto_memory_model/effective_type_4d.c:8:4, ./de_facto_memory_model/effective_type_4d.c:8:13> #-} let strong _: loaded pointer =
        {-# §6.5#2 #-}
        bound(
          {-# §6.5.16#3, sentence 4 #-}
          {-# <./de_facto_memory_model/effective_type_4d.c:8:4, ./de_facto_memory_model/effective_type_4d.c:8:12> ./de_facto_memory_model/effective_type_4d.c:8:8 #-} let weak (a_931: pointer,
          a_949: loaded pointer) =
            {-# §6.5.16#3, sentence 5 #-}
            unseq(
              {-# <./de_facto_memory_model/effective_type_4d.c:8:4, ./de_facto_memory_model/effective_type_4d.c:8:7> #-} pure(
                src
              )
            ,
              {-# §6.5.6 #-}
              {-# <./de_facto_memory_model/effective_type_4d.c:8:4, ./de_facto_memory_model/effective_type_4d.c:8:12> ./de_facto_memory_model/effective_type_4d.c:8:8 #-} let weak (a_943: loaded pointer,
              a_945: loaded integer) =
                unseq(
                  {-# <./de_facto_memory_model/effective_type_4d.c:8:4, ./de_facto_memory_model/effective_type_4d.c:8:7> #-} let weak a_948: pointer =
                    {-# <./de_facto_memory_model/effective_type_4d.c:8:4, ./de_facto_memory_model/effective_type_4d.c:8:7> #-} pure(
                      src
                    ) in
                  load('unsigned char*', a_948)
                ,
                  {-# <./de_facto_memory_model/effective_type_4d.c:8:11, ./de_facto_memory_model/effective_type_4d.c:8:12> #-} pure(
                    Specified(1)
                  )
                ) in
              let (Specified(a_944: pointer), Specified(a_946: integer)) =
                (a_943, a_945) in
              let weak a_947: pointer =
                memop(PtrArrayShift, a_944, 'unsigned char', a_946) in
              pure(Specified(a_947))
            ) in
          let weak _: unit =
            {-# §6.5.16.1#2, store #-}
            neg(store('unsigned char*', a_931, a_949)) in
          pure(a_949)
        ) in
      pure(Unit) ;
      {-# <./de_facto_memory_model/effective_type_4d.c:8:14, ./de_facto_memory_model/effective_type_4d.c:8:24> #-} let strong _: loaded pointer =
        {-# §6.5#2 #-}
        bound(
          {-# §6.5.16#3, sentence 4 #-}
          {-# <./de_facto_memory_model/effective_type_4d.c:8:14, ./de_facto_memory_model/effective_type_4d.c:8:23> ./de_facto_memory_model/effective_type_4d.c:8:19 #-} let weak (a_930: pointer,
          a_956: loaded pointer) =
            {-# §6.5.16#3, sentence 5 #-}
            unseq(
              {-# <./de_facto_memory_model/effective_type_4d.c:8:14, ./de_facto_memory_model/effective_type_4d.c:8:18> #-} pure(
                dest
              )
            ,
              {-# §6.5.6 #-}
              {-# <./de_facto_memory_model/effective_type_4d.c:8:14, ./de_facto_memory_model/effective_type_4d.c:8:23> ./de_facto_memory_model/effective_type_4d.c:8:19 #-} let weak (a_950: loaded pointer,
              a_952: loaded integer) =
                unseq(
                  {-# <./de_facto_memory_model/effective_type_4d.c:8:14, ./de_facto_memory_model/effective_type_4d.c:8:18> #-} let weak a_955: pointer =
                    {-# <./de_facto_memory_model/effective_type_4d.c:8:14, ./de_facto_memory_model/effective_type_4d.c:8:18> #-} pure(
                      dest
                    ) in
                  load('unsigned char*', a_955)
                ,
                  {-# <./de_facto_memory_model/effective_type_4d.c:8:22, ./de_facto_memory_model/effective_type_4d.c:8:23> #-} pure(
                    Specified(1)
                  )
                ) in
              let (Specified(a_951: pointer), Specified(a_953: integer)) =
                (a_950, a_952) in
              let weak a_954: pointer =
                memop(PtrArrayShift, a_951, 'unsigned char', a_953) in
              pure(Specified(a_954))
            ) in
          let weak _: unit =
            {-# §6.5.16.1#2, store #-}
            neg(store('unsigned char*', a_930, a_956)) in
          pure(a_956)
        ) in
      pure(Unit) ;
      {-# <./de_facto_memory_model/effective_type_4d.c:8:25, ./de_facto_memory_model/effective_type_4d.c:8:32> #-} let strong _: loaded integer =
        {-# §6.5#2 #-}
        bound(
          {-# §6.5.16#3, sentence 4 #-}
          {-# <./de_facto_memory_model/effective_type_4d.c:8:25, ./de_facto_memory_model/effective_type_4d.c:8:31> ./de_facto_memory_model/effective_type_4d.c:8:27 #-} let weak (a_929: pointer,
          a_963: loaded integer) =
            {-# §6.5.16#3, sentence 5 #-}
            unseq(
              {-# <./de_facto_memory_model/effective_type_4d.c:8:25, ./de_facto_memory_model/effective_type_4d.c:8:26> #-} pure(
                n
              )
            ,
              {-# §6.5.6 #-}
              {-# <./de_facto_memory_model/effective_type_4d.c:8:25, ./de_facto_memory_model/effective_type_4d.c:8:31> ./de_facto_memory_model/effective_type_4d.c:8:27 #-} let weak (a_958: loaded integer,
              a_959: loaded integer) =
                unseq(
                  {-# <./de_facto_memory_model/effective_type_4d.c:8:25, ./de_facto_memory_model/effective_type_4d.c:8:26> #-} let weak a_957: pointer =
                    {-# <./de_facto_memory_model/effective_type_4d.c:8:25, ./de_facto_memory_model/effective_type_4d.c:8:26> #-} pure(
                      n
                    ) in
                  load('size_t', a_957)
                ,
                  {-# <./de_facto_memory_model/effective_type_4d.c:8:30, ./de_facto_memory_model/effective_type_4d.c:8:31> #-} pure(
                    Specified(1)
                  )
                ) in
              pure(
                let (Specified(a_960: integer), Specified(a_961: integer)) =
                  (a_958, a_959) in
                Specified(wrapI_sub('size_t', if all_values_representable_in('size_t',
                'signed int') then
                  conv_int('signed int', a_960)
                else
                  conv_int('unsigned int', a_960), if all_values_representable_in('size_t',
                'signed int') then
                  conv_int('signed int', a_961)
                else
                  conv_int('unsigned int', a_961)))
              )
            ) in
          let weak _: unit =
            {-# §6.5.16.1#2, store #-}
            neg(store('size_t', a_929, conv_loaded_int('size_t', a_963))) in
          pure(conv_loaded_int('size_t', a_963))
        ) in
      pure(Unit) ;
      pure(Unit) ;
      {-# <./de_facto_memory_model/effective_type_4d.c:6:2, ./de_facto_memory_model/effective_type_4d.c:9:3> #-} save continue_912: unit () in
        {-# <./de_facto_memory_model/effective_type_4d.c:6:2, ./de_facto_memory_model/effective_type_4d.c:9:3> #-} pure(
          Unit
        ) ;
      pure(Unit) ;
      run while_914()
    else
      pure(Unit) ;
  {-# <./de_facto_memory_model/effective_type_4d.c:6:2, ./de_facto_memory_model/effective_type_4d.c:9:3> #-} save break_913: unit () in
    {-# <./de_facto_memory_model/effective_type_4d.c:6:2, ./de_facto_memory_model/effective_type_4d.c:9:3> #-} pure(
      Unit
    ) ;
  pure(Unit) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/effective_type_4d.c:4:0, ./de_facto_memory_model/effective_type_4d.c:10:1> ./de_facto_memory_model/effective_type_4d.c:4:5 - ./de_facto_memory_model/effective_type_4d.c:4:16 #-} save ret_911: unit (a_964: unit:= Unit) in
    pure(a_964)

proc main (): eff loaded integer :=
  {-# <./de_facto_memory_model/effective_type_4d.c:11:11, ./de_facto_memory_model/effective_type_4d.c:18:1> #-} let strong i: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong p: pointer = create(Ivalignof('void*'), 'void*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong j: pointer = create(Ivalignof('signed int'), 'signed int') in
  {-# <./de_facto_memory_model/effective_type_4d.c:12:2, ./de_facto_memory_model/effective_type_4d.c:12:10> #-} let strong a_841: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <./de_facto_memory_model/effective_type_4d.c:12:8, ./de_facto_memory_model/effective_type_4d.c:12:9> #-} pure(
        Specified(1)
      )
    ) in
  store('signed int', i, conv_loaded_int('signed int', a_841)) ;
  {-# <./de_facto_memory_model/effective_type_4d.c:13:2, ./de_facto_memory_model/effective_type_4d.c:13:32> #-} let strong a_842: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./de_facto_memory_model/effective_type_4d.c:13:12, ./de_facto_memory_model/effective_type_4d.c:13:31> #-} let strong ((a_844: loaded pointer,
      (a_845: ctype, a_846: [ctype], a_847: boolean, a_848: boolean)),
      a_850: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_843: loaded pointer =
            {-# <./de_facto_memory_model/effective_type_4d.c:13:12, ./de_facto_memory_model/effective_type_4d.c:13:18> #-} pure(
              Specified(Cfunction(malloc_proxy))
            ) in
          pure((a_843, cfunction(a_843)))
        ,
          {-# <./de_facto_memory_model/effective_type_4d.c:13:19, ./de_facto_memory_model/effective_type_4d.c:13:30> ./de_facto_memory_model/effective_type_4d.c:13:19 #-} pure(
            Specified(Ivsizeof('signed int'))
          )
        ) in
      if not(params_length(a_846) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_847 \/ not(are_compatible ('void*', a_845)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_849: pointer =
            let a_851: ctype = params_nth(a_846, 0) in
            if not(are_compatible ('size_t', a_851)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_852: pointer =
                create(Ivalignof('size_t'), 'size_t') in
              let weak _: unit =
                store('size_t', a_852, conv_loaded_int('size_t', a_850)) in
              pure(a_852) in
          let strong a_853: loaded pointer =
            ccall('void* (*) (size_t)', a_844, a_849) in
          kill('size_t', a_849) ;
          pure(a_853)
    ) in
  store('void*', p, a_842) ;
  {-# <./de_facto_memory_model/effective_type_4d.c:14:2, ./de_facto_memory_model/effective_type_4d.c:14:68> #-} {-# §6.5#2 #-}
  bound(
    {-# §6.5.2.2#10, sentence 1 #-}
    {-# <./de_facto_memory_model/effective_type_4d.c:14:2, ./de_facto_memory_model/effective_type_4d.c:14:67> #-} let strong ((a_854: loaded pointer,
    (a_855: ctype, a_856: [ctype], a_857: boolean, a_858: boolean)),
    a_862: loaded pointer, a_867: loaded pointer, a_872: loaded integer) =
      {-# §6.5.2.2#4, sentence 2 #-}
      unseq(
        let strong a_840: loaded pointer =
          {-# <./de_facto_memory_model/effective_type_4d.c:14:2, ./de_facto_memory_model/effective_type_4d.c:14:13> #-} pure(
            Specified(Cfunction(user_memcpy))
          ) in
        pure((a_840, cfunction(a_840)))
      ,
        {-# §6.5.4 #-}
        {-# <./de_facto_memory_model/effective_type_4d.c:14:14, ./de_facto_memory_model/effective_type_4d.c:14:31> ./de_facto_memory_model/effective_type_4d.c:14:14 #-} let weak a_863: loaded pointer =
          {-# <./de_facto_memory_model/effective_type_4d.c:14:30, ./de_facto_memory_model/effective_type_4d.c:14:31> #-} let weak a_865: pointer =
            {-# <./de_facto_memory_model/effective_type_4d.c:14:30, ./de_facto_memory_model/effective_type_4d.c:14:31> #-} pure(
              p
            ) in
          load('void*', a_865) in
        let Specified(a_864: pointer) = a_863 in
        let weak a_866: boolean =
          memop(PtrWellAligned, 'unsigned char', a_864) in
        pure(
          Specified(if a_866 then
            a_864
          else
            undef(<<UB025_misaligned_pointer_conversion>>))
        )
      ,
        {-# §6.5.4 #-}
        {-# <./de_facto_memory_model/effective_type_4d.c:14:33, ./de_facto_memory_model/effective_type_4d.c:14:53> ./de_facto_memory_model/effective_type_4d.c:14:33 #-} let weak a_868: loaded pointer =
          {-# §6.5.3.2#3, sentence 5 #-}
          {-# <./de_facto_memory_model/effective_type_4d.c:14:49, ./de_facto_memory_model/effective_type_4d.c:14:53> #-} let weak a_870: pointer =
            {-# <./de_facto_memory_model/effective_type_4d.c:14:51, ./de_facto_memory_model/effective_type_4d.c:14:52> #-} pure(
              i
            ) in
          pure(Specified(a_870)) in
        let Specified(a_869: pointer) = a_868 in
        let weak a_871: boolean =
          memop(PtrWellAligned, 'unsigned char', a_869) in
        pure(
          Specified(if a_871 then
            a_869
          else
            undef(<<UB025_misaligned_pointer_conversion>>))
        )
      ,
        {-# <./de_facto_memory_model/effective_type_4d.c:14:55, ./de_facto_memory_model/effective_type_4d.c:14:66> ./de_facto_memory_model/effective_type_4d.c:14:55 #-} pure(
          Specified(Ivsizeof('signed int'))
        )
      ) in
    if not(params_length(a_856) = 3) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_857 \/ not(are_compatible ('void', a_855)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_861: pointer =
          let a_873: ctype = params_nth(a_856, 0) in
          if not(are_compatible ('unsigned char*', a_873)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {-# §6.5.2.2#7, sentence 1 #-}
            let weak a_874: pointer =
              create(Ivalignof('unsigned char*'), 'unsigned char*') in
            let weak _: unit = store('unsigned char*', a_874, a_862) in
            pure(a_874) in
        let strong a_860: pointer =
          let a_875: ctype = params_nth(a_856, 1) in
          if not(are_compatible ('unsigned char*', a_875)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {-# §6.5.2.2#7, sentence 1 #-}
            let weak a_876: pointer =
              create(Ivalignof('unsigned char*'), 'unsigned char*') in
            let weak _: unit = store('unsigned char*', a_876, a_867) in
            pure(a_876) in
        let strong a_859: pointer =
          let a_877: ctype = params_nth(a_856, 2) in
          if not(are_compatible ('size_t', a_877)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {-# §6.5.2.2#7, sentence 1 #-}
            let weak a_878: pointer = create(Ivalignof('size_t'), 'size_t') in
            let weak _: unit =
              store('size_t', a_878, conv_loaded_int('size_t', a_872)) in
            pure(a_878) in
        let strong a_879: unit =
          ccall('void (*) (unsigned char*, unsigned char*, size_t)', a_854,
          a_861, a_860, a_859) in
        let strong _: (unit,unit,unit) =
          unseq(
            kill('unsigned ichar*', a_861)
          ,
            kill('unsigned ichar*', a_860)
          ,
            kill('size_t', a_859)
          ) in
        pure(a_879)
  ) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/effective_type_4d.c:15:2, ./de_facto_memory_model/effective_type_4d.c:15:19> #-} let strong a_880: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.4 #-}
      {-# <./de_facto_memory_model/effective_type_4d.c:15:11, ./de_facto_memory_model/effective_type_4d.c:15:18> ./de_facto_memory_model/effective_type_4d.c:15:11 #-} let weak a_881: loaded pointer =
        {-# <./de_facto_memory_model/effective_type_4d.c:15:17, ./de_facto_memory_model/effective_type_4d.c:15:18> #-} let weak a_883: pointer =
          {-# <./de_facto_memory_model/effective_type_4d.c:15:17, ./de_facto_memory_model/effective_type_4d.c:15:18> #-} pure(
            p
          ) in
        load('void*', a_883) in
      let Specified(a_882: pointer) = a_881 in
      let weak a_884: boolean = memop(PtrWellAligned, 'signed int', a_882) in
      pure(
        Specified(if a_884 then
          a_882
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('signed int*', q, a_880) ;
  {-# <./de_facto_memory_model/effective_type_4d.c:16:2, ./de_facto_memory_model/effective_type_4d.c:16:11> #-} let strong a_885: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <./de_facto_memory_model/effective_type_4d.c:16:8, ./de_facto_memory_model/effective_type_4d.c:16:10> ./de_facto_memory_model/effective_type_4d.c:16:8 #-} let weak a_890: pointer =
        {-# §6.5.3.2 #-}
        {-# <./de_facto_memory_model/effective_type_4d.c:16:8, ./de_facto_memory_model/effective_type_4d.c:16:10> ./de_facto_memory_model/effective_type_4d.c:16:8 #-} let weak a_886: loaded pointer =
          {-# <./de_facto_memory_model/effective_type_4d.c:16:9, ./de_facto_memory_model/effective_type_4d.c:16:10> #-} let weak a_889: pointer =
            {-# <./de_facto_memory_model/effective_type_4d.c:16:9, ./de_facto_memory_model/effective_type_4d.c:16:10> #-} pure(
              q
            ) in
          load('signed int*', a_889) in
        let Specified(a_887: pointer) = a_886 in
        let weak a_888: boolean =
          memop(PtrValidForDeref, 'signed int', a_887) in
        pure(
          if a_888 then a_887 else undef(<<UB043_indirection_invalid_value>>)
        ) in
      load('signed int', a_890)
    ) in
  store('signed int', j, conv_loaded_int('signed int', a_885)) ;
  {-# <./de_facto_memory_model/effective_type_4d.c:17:2, ./de_facto_memory_model/effective_type_4d.c:17:21> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./de_facto_memory_model/effective_type_4d.c:17:2, ./de_facto_memory_model/effective_type_4d.c:17:20> #-} let strong ((a_891: loaded pointer,
      (a_892: ctype, a_893: [ctype], a_894: boolean, a_895: boolean)),
      a_898: loaded pointer, a_902: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_839: loaded pointer =
            {-# <./de_facto_memory_model/effective_type_4d.c:17:2, ./de_facto_memory_model/effective_type_4d.c:17:8> #-} pure(
              Specified(Cfunction(printf_proxy))
            ) in
          pure((a_839, cfunction(a_839)))
        ,
          {-# <./de_facto_memory_model/effective_type_4d.c:17:9, ./de_facto_memory_model/effective_type_4d.c:17:17> #-} let weak a_900: pointer =
            {-# <./de_facto_memory_model/effective_type_4d.c:17:9, ./de_facto_memory_model/effective_type_4d.c:17:17> #-} pure(
              a_899
            ) in
          {-# §6.3.2.1#3 #-}
          let weak a_901: pointer = memop(PtrArrayShift, a_900, 'char', 0) in
          pure(Specified(a_901))
        ,
          {-# <./de_facto_memory_model/effective_type_4d.c:17:18, ./de_facto_memory_model/effective_type_4d.c:17:19> #-} let weak a_903: pointer =
            {-# <./de_facto_memory_model/effective_type_4d.c:17:18, ./de_facto_memory_model/effective_type_4d.c:17:19> #-} pure(
              j
            ) in
          load('signed int', a_903)
        ) in
      if not(params_length(a_893) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_894) \/ not(are_compatible ('signed int', a_892)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_897: pointer =
            let a_904: ctype = params_nth(a_893, 0) in
            if not(are_compatible ('const char*', a_904)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_905: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_905, a_898) in
              pure(a_905) in
          let strong a_896: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_902)) in
          let strong a_906: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_891, a_897,
            [('signed int', a_896)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_897), kill('signed int', a_896)) in
          pure(a_906)
    ) in
  pure(Unit) ;
  kill('signed int', i) ;
  kill('void*', p) ;
  kill('signed int*', q) ;
  kill('signed int', j) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/effective_type_4d.c:11:0, ./de_facto_memory_model/effective_type_4d.c:18:1> ./de_facto_memory_model/effective_type_4d.c:11:4 - ./de_facto_memory_model/effective_type_4d.c:11:8 #-} save ret_838: loaded integer (a_907: loaded integer:= Specified(0)) in
    pure(a_907)

