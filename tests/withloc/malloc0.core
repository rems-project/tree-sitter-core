-- Aggregates










-- Globals
glob a_876: pointer [ail_ctype = 'char[34]'] :=
  let strong a_1002: pointer = create(Ivalignof('char[34]'), 'char[34]') in
  store_lock('char[34]', a_1002,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 103)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1003: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1002,
    18446744073701163007) in
  case a_1003 of
    | Specified(a_1002: pointer) =>
        pure(a_1002)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_915: pointer [ail_ctype = 'char[17]'] :=
  let strong a_1004: pointer = create(Ivalignof('char[17]'), 'char[17]') in
  store_lock('char[17]', a_1004,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 45)), Specified(conv_int('char', 122)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1005: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1004,
    18446744073701163007) in
  case a_1005 of
    | Specified(a_1004: pointer) =>
        pure(a_1004)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_955: pointer [ail_ctype = 'char[22]'] :=
  let strong a_1006: pointer = create(Ivalignof('char[22]'), 'char[22]') in
  store_lock('char[22]', a_1006,
  Specified(Array(Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1007: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1006,
    18446744073701163007) in
  case a_1007 of
    | Specified(a_1006: pointer) =>
        pure(a_1006)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_990: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1008: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1008,
  Specified(Array(Specified(conv_int('char', 79)),
  Specified(conv_int('char', 75)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1009: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1008,
    18446744073701163007) in
  case a_1009 of
    | Specified(a_1008: pointer) =>
        pure(a_1008)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

-- Fun map
proc main (): eff loaded integer :=
  {-# <malloc0.c:9:0, malloc0.c:32:1> #-} {-# <malloc0.c:10:4, malloc0.c:30:5> #-} let strong i: pointer =
    create(Ivalignof('unsigned long'), 'unsigned long') in
  {-# <malloc0.c:10:8, malloc0.c:10:26> #-} let strong a_808: loaded integer =
    {-# §6.5#2 #-}
    bound({-# <malloc0.c:10:24, malloc0.c:10:25> #-} pure(Specified(0))) in
  store('unsigned long', i, conv_loaded_int('unsigned long', a_808)) ;
  {-# <malloc0.c:10:4, malloc0.c:30:5> #-} {-# <malloc0.c:10:4, malloc0.c:30:5> #-} save while_806: unit (i: pointer:= i) in
    let strong a_809: loaded integer =
      {-# §6.5#2 #-}
      bound(
        {-# <malloc0.c:10:26, malloc0.c:10:30> malloc0.c:10:27 #-} let weak (a_811: loaded integer,
        a_812: loaded integer) =
          unseq(
            {-# §6.5.8 #-}
            {-# <malloc0.c:10:26, malloc0.c:10:30> malloc0.c:10:27 #-} let weak (a_817: loaded integer,
            a_818: loaded integer) =
              unseq(
                {-# <malloc0.c:10:26, malloc0.c:10:27> #-} let weak a_816: pointer =
                  {-# <malloc0.c:10:26, malloc0.c:10:27> #-} pure(i) in
                load('unsigned long', a_816)
              ,
                {-# <malloc0.c:10:28, malloc0.c:10:30> #-} pure(
                  Specified(20)
                )
              ) in
            case (a_817, a_818) of
              | (Specified(a_819: integer), Specified(a_820: integer)) =>
                  {-# §6.5.8#6 #-}
                  pure(
                    if conv_int('unsigned long', a_819) <
                    conv_int('unsigned long', a_820) then
                      Specified(1)
                    else
                      Specified(0)
                  )
              | _: (loaded integer,loaded integer) =>
                  pure(Unspecified('signed int'))
            end
          ,
            {-# <malloc0.c:10:26, malloc0.c:10:30> malloc0.c:10:27 #-} pure(
              Specified(0)
            )
          ) in
        pure(
          case (a_811, a_812) of
            | (Specified(a_813: integer), Specified(a_814: integer)) =>
                if conv_int('signed int', a_813) =
                conv_int('signed int', a_814) then
                  Specified(1)
                else
                  Specified(0)
            | _: (loaded integer,loaded integer) =>
                Unspecified('signed int')
          end
        )
      ) in
    let strong a_807: boolean =
      case a_809 of
        | Specified(a_810: integer) =>
            pure(if not(a_810 = 1) then True else False)
        | Unspecified(_: ctype) =>
            nd(pure(True), pure(False))
      end in
    if a_807 then
      {-# <malloc0.c:10:4, malloc0.c:30:5> #-} {-# <malloc0.c:11:4, malloc0.c:30:5> #-} let strong p: pointer =
        create(Ivalignof('void*'), 'void*') in
      let strong a: pointer = create(Ivalignof('ptraddr_t'), 'ptraddr_t') in
      {-# <malloc0.c:12:8, malloc0.c:12:28> #-} let strong a_825: loaded pointer =
        {-# §6.5#2 #-}
        bound(
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <malloc0.c:12:18, malloc0.c:12:27> #-} let strong ((a_827: loaded pointer,
          (a_828: ctype, a_829: [ctype], a_830: boolean, a_831: boolean)),
          a_833: loaded integer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_826: loaded pointer =
                {-# <malloc0.c:12:18, malloc0.c:12:24> #-} pure(
                  Specified(Cfunction(malloc_proxy))
                ) in
              pure((a_826, cfunction(a_826)))
            ,
              {-# <malloc0.c:12:25, malloc0.c:12:26> #-} let weak a_834: pointer =
                {-# <malloc0.c:12:25, malloc0.c:12:26> #-} pure(i) in
              load('unsigned long', a_834)
            ) in
          if not(params_length(a_829) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_830 \/ not(are_compatible ('void*', a_828)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_832: pointer =
                let a_835: ctype = params_nth(a_829, 0) in
                if not(are_compatible ('size_t', a_835)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_836: pointer =
                    create(Ivalignof('size_t'), 'size_t') in
                  let weak _: unit =
                    store('size_t', a_836, conv_loaded_int('size_t', a_833)) in
                  pure(a_836) in
              let strong a_837: loaded pointer =
                ccall('void* (*) (size_t)', a_827, a_832) in
              kill('size_t', a_832) ;
              pure(a_837)
        ) in
      store('void*', p, a_825) ;
      {-# <malloc0.c:13:8, malloc0.c:13:53> #-} let strong a_838: loaded integer =
        {-# §6.5#2 #-}
        bound(
          {-# <malloc0.c:13:22, malloc0.c:13:52> #-} let strong a_844: loaded pointer =
            {-# §6.5.4 #-}
            {-# <malloc0.c:13:50, malloc0.c:13:51> #-} let weak a_841: pointer =
              {-# <malloc0.c:13:50, malloc0.c:13:51> #-} pure(p) in
            load('void*', a_841) in
          case a_844 of
            | Specified(a_845: pointer) =>
                memop(cheri_cheri_address_get['ptraddr_t (void*)'], a_845)
            | _: loaded pointer =>
                pure(undef(<<DUMMY(Elab, CHERI intrinsics (unspec))>>))
          end
        ) in
      store('ptraddr_t', a, conv_loaded_int('ptraddr_t', a_838)) ;
      {-# <malloc0.c:14:8, malloc0.c:18:9> #-} let strong a_846: loaded integer =
        {-# §6.5#2 #-}
        bound(
          {-# <malloc0.c:14:11, malloc0.c:14:41> malloc0.c:14:37 #-} let weak (a_848: loaded integer,
          a_849: loaded integer) =
            unseq(
              {-# <malloc0.c:14:11, malloc0.c:14:41> malloc0.c:14:37 #-} let weak (a_853: loaded integer,
              a_854: loaded integer) =
                unseq(
                  {-# §6.5.5 #-}
                  {-# <malloc0.c:14:11, malloc0.c:14:36> malloc0.c:14:13 #-} let weak (a_859: loaded integer,
                  a_860: loaded integer) =
                    unseq(
                      {-# <malloc0.c:14:11, malloc0.c:14:12> #-} let weak a_858: pointer =
                        {-# <malloc0.c:14:11, malloc0.c:14:12> #-} pure(a) in
                      load('ptraddr_t', a_858)
                    ,
                      {-# <malloc0.c:14:15, malloc0.c:14:36> malloc0.c:14:15 #-} pure(
                        Specified(Ivalignof('struct __cerbty_unnamed_tag_744'))
                      )
                    ) in
                  pure(
                    case (a_859, a_860) of
                      | (Unspecified(_: ctype), _: loaded integer) =>
                          Unspecified('size_t')
                      | (_: loaded integer, Unspecified(_: ctype)) =>
                          undef(<<UB045b_modulo_by_zero>>)
                      | (Specified(a_861: integer), Specified(a_862: integer)) =>
                          let a_863: integer =
                            conv_int('ptraddr_t', a_861) in
                          let a_864: integer =
                            conv_int('ptraddr_t', a_862) in
                          if a_864 = 0 then
                            undef(<<UB045b_modulo_by_zero>>)
                          else
                            if is_representable_integer(conv_int('ptraddr_t',
                            a_861) /
                            a_864, 'size_t') then
                              Specified(wrapI('size_t', a_863 rem_t a_864))
                            else
                              undef(<<UB045c_quotient_not_representable>>)
                    end
                  )
                ,
                  {-# <malloc0.c:14:40, malloc0.c:14:41> #-} pure(
                    Specified(0)
                  )
                ) in
              pure(
                case (a_853, a_854) of
                  | (Specified(a_855: integer), Specified(a_856: integer)) =>
                      if not(if all_values_representable_in('size_t',
                      'signed int') then
                        conv_int('signed int', a_855)
                      else
                        conv_int('unsigned int', a_855) =
                      if all_values_representable_in('size_t', 'signed int') then
                        conv_int('signed int', a_856)
                      else
                        conv_int('unsigned int', a_856)) then
                        Specified(1)
                      else
                        Specified(0)
                  | _: (loaded integer,loaded integer) =>
                      Unspecified('signed int')
                end
              )
            ,
              {-# <malloc0.c:14:11, malloc0.c:14:41> malloc0.c:14:37 #-} pure(
                Specified(0)
              )
            ) in
          pure(
            case (a_848, a_849) of
              | (Specified(a_850: integer), Specified(a_851: integer)) =>
                  if conv_int('signed int', a_850) =
                  conv_int('signed int', a_851) then
                    Specified(1)
                  else
                    Specified(0)
              | _: (loaded integer,loaded integer) =>
                  Unspecified('signed int')
            end
          )
        ) in
      let strong a_824: boolean =
        case a_846 of
          | Specified(a_847: integer) =>
              pure(if not(a_847 = 1) then True else False)
          | Unspecified(_: ctype) =>
              nd(pure(True), pure(False))
        end in
      if a_824 then
        {-# <malloc0.c:15:8, malloc0.c:18:9> #-} {-# <malloc0.c:16:12, malloc0.c:16:67> #-} let strong _: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# §6.5.2.2#10, sentence 1 #-}
            {-# <malloc0.c:16:12, malloc0.c:16:66> #-} let strong ((a_866: loaded pointer,
            (a_867: ctype, a_868: [ctype], a_869: boolean, a_870: boolean)),
            a_873: loaded pointer, a_875: loaded pointer) =
              {-# §6.5.2.2#4, sentence 2 #-}
              unseq(
                let strong a_865: loaded pointer =
                  {-# <malloc0.c:16:12, malloc0.c:16:19> #-} pure(
                    Specified(Cfunction(fprintf))
                  ) in
                pure((a_865, cfunction(a_865)))
              ,
                {-# <malloc0.c:16:20, malloc0.c:16:28> #-} let weak a_874: pointer =
                  {-# <malloc0.c:16:20, malloc0.c:16:28> #-} pure(__stderr) in
                load('struct _IO_FILE*', a_874)
              ,
                {-# <malloc0.c:16:29, malloc0.c:16:65> #-} let weak a_877: pointer =
                  {-# <malloc0.c:16:29, malloc0.c:16:65> #-} pure(a_876) in
                {-# §6.3.2.1#3 #-}
                let weak a_878: pointer =
                  memop(PtrArrayShift, a_877, 'char', 0) in
                pure(Specified(a_878))
              ) in
            if not(params_length(a_868) <= 2) then
              pure(undef(<<UB038_number_of_args>>))
            else
              if not(a_869) \/ not(are_compatible ('signed int', a_867)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                let strong a_872: pointer =
                  let a_879: ctype = params_nth(a_868, 0) in
                  if not(are_compatible ('struct _IO_FILE*', a_879)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    {-# §6.5.2.2#7, sentence 1 #-}
                    let weak a_880: pointer =
                      create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                    let weak _: unit =
                      store('struct _IO_FILE*', a_880, a_873) in
                    pure(a_880) in
                let strong a_871: pointer =
                  let a_881: ctype = params_nth(a_868, 1) in
                  if not(are_compatible ('const char*', a_881)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    {-# §6.5.2.2#7, sentence 1 #-}
                    let weak a_882: pointer =
                      create(Ivalignof('const char*'), 'const char*') in
                    let weak _: unit = store('const char*', a_882, a_875) in
                    pure(a_882) in
                let strong a_883: loaded integer =
                  ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
                  a_866, a_872, a_871, []: (ctype,pointer)) in
                let strong _: (unit,unit) =
                  unseq(
                    kill('struct _IO_FILE*', a_872)
                  ,
                    kill('char*', a_871)
                  ) in
                pure(a_883)
          ) in
        pure(Unit) ;
        {-# <malloc0.c:17:12, malloc0.c:17:22> #-} let strong a_884: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# <malloc0.c:17:18, malloc0.c:17:21> #-} pure(Specified(1))
          ) in
        kill('void*', p) ;
        kill('ptraddr_t', a) ;
        kill('unsigned long', i) ;
        run ret_803(conv_loaded_int('signed int', a_884)) ;
        pure(Unit)
      else
        {-# <malloc0.c:14:8, malloc0.c:18:9> #-} pure(Unit) ;
      {-# <malloc0.c:19:8, malloc0.c:23:9> #-} let strong a_885: loaded integer =
        {-# §6.5#2 #-}
        bound(
          {-# <malloc0.c:19:11, malloc0.c:19:45> malloc0.c:19:41 #-} let weak (a_887: loaded integer,
          a_888: loaded integer) =
            unseq(
              {-# <malloc0.c:19:11, malloc0.c:19:45> malloc0.c:19:41 #-} let weak (a_892: loaded integer,
              a_893: loaded integer) =
                unseq(
                  {-# <malloc0.c:19:11, malloc0.c:19:40> #-} let strong a_902: loaded pointer =
                    {-# §6.5.4 #-}
                    {-# <malloc0.c:19:38, malloc0.c:19:39> #-} let weak a_899: pointer =
                      {-# <malloc0.c:19:38, malloc0.c:19:39> #-} pure(p) in
                    load('void*', a_899) in
                  case a_902 of
                    | Specified(a_903: pointer) =>
                        memop(cheri_cheri_offset_get['size_t (void*)'], a_903)
                    | _: loaded pointer =>
                        pure(
                          undef(<<DUMMY(Elab, CHERI intrinsics (unspec))>>)
                        )
                  end
                ,
                  {-# <malloc0.c:19:44, malloc0.c:19:45> #-} pure(
                    Specified(0)
                  )
                ) in
              pure(
                case (a_892, a_893) of
                  | (Specified(a_894: integer), Specified(a_895: integer)) =>
                      if not(if all_values_representable_in('size_t',
                      'signed int') then
                        conv_int('signed int', a_894)
                      else
                        conv_int('unsigned int', a_894) =
                      if all_values_representable_in('size_t', 'signed int') then
                        conv_int('signed int', a_895)
                      else
                        conv_int('unsigned int', a_895)) then
                        Specified(1)
                      else
                        Specified(0)
                  | _: (loaded integer,loaded integer) =>
                      Unspecified('signed int')
                end
              )
            ,
              {-# <malloc0.c:19:11, malloc0.c:19:45> malloc0.c:19:41 #-} pure(
                Specified(0)
              )
            ) in
          pure(
            case (a_887, a_888) of
              | (Specified(a_889: integer), Specified(a_890: integer)) =>
                  if conv_int('signed int', a_889) =
                  conv_int('signed int', a_890) then
                    Specified(1)
                  else
                    Specified(0)
              | _: (loaded integer,loaded integer) =>
                  Unspecified('signed int')
            end
          )
        ) in
      let strong a_823: boolean =
        case a_885 of
          | Specified(a_886: integer) =>
              pure(if not(a_886 = 1) then True else False)
          | Unspecified(_: ctype) =>
              nd(pure(True), pure(False))
        end in
      if a_823 then
        {-# <malloc0.c:20:8, malloc0.c:23:9> #-} {-# <malloc0.c:21:12, malloc0.c:21:50> #-} let strong _: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# §6.5.2.2#10, sentence 1 #-}
            {-# <malloc0.c:21:12, malloc0.c:21:49> #-} let strong ((a_905: loaded pointer,
            (a_906: ctype, a_907: [ctype], a_908: boolean, a_909: boolean)),
            a_912: loaded pointer, a_914: loaded pointer) =
              {-# §6.5.2.2#4, sentence 2 #-}
              unseq(
                let strong a_904: loaded pointer =
                  {-# <malloc0.c:21:12, malloc0.c:21:19> #-} pure(
                    Specified(Cfunction(fprintf))
                  ) in
                pure((a_904, cfunction(a_904)))
              ,
                {-# <malloc0.c:21:20, malloc0.c:21:28> #-} let weak a_913: pointer =
                  {-# <malloc0.c:21:20, malloc0.c:21:28> #-} pure(__stderr) in
                load('struct _IO_FILE*', a_913)
              ,
                {-# <malloc0.c:21:29, malloc0.c:21:48> #-} let weak a_916: pointer =
                  {-# <malloc0.c:21:29, malloc0.c:21:48> #-} pure(a_915) in
                {-# §6.3.2.1#3 #-}
                let weak a_917: pointer =
                  memop(PtrArrayShift, a_916, 'char', 0) in
                pure(Specified(a_917))
              ) in
            if not(params_length(a_907) <= 2) then
              pure(undef(<<UB038_number_of_args>>))
            else
              if not(a_908) \/ not(are_compatible ('signed int', a_906)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                let strong a_911: pointer =
                  let a_918: ctype = params_nth(a_907, 0) in
                  if not(are_compatible ('struct _IO_FILE*', a_918)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    {-# §6.5.2.2#7, sentence 1 #-}
                    let weak a_919: pointer =
                      create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                    let weak _: unit =
                      store('struct _IO_FILE*', a_919, a_912) in
                    pure(a_919) in
                let strong a_910: pointer =
                  let a_920: ctype = params_nth(a_907, 1) in
                  if not(are_compatible ('const char*', a_920)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    {-# §6.5.2.2#7, sentence 1 #-}
                    let weak a_921: pointer =
                      create(Ivalignof('const char*'), 'const char*') in
                    let weak _: unit = store('const char*', a_921, a_914) in
                    pure(a_921) in
                let strong a_922: loaded integer =
                  ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
                  a_905, a_911, a_910, []: (ctype,pointer)) in
                let strong _: (unit,unit) =
                  unseq(
                    kill('struct _IO_FILE*', a_911)
                  ,
                    kill('char*', a_910)
                  ) in
                pure(a_922)
          ) in
        pure(Unit) ;
        {-# <malloc0.c:22:12, malloc0.c:22:22> #-} let strong a_923: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# <malloc0.c:22:18, malloc0.c:22:21> #-} pure(Specified(1))
          ) in
        kill('void*', p) ;
        kill('ptraddr_t', a) ;
        kill('unsigned long', i) ;
        run ret_803(conv_loaded_int('signed int', a_923)) ;
        pure(Unit)
      else
        {-# <malloc0.c:19:8, malloc0.c:23:9> #-} pure(Unit) ;
      {-# <malloc0.c:24:8, malloc0.c:28:9> #-} let strong a_924: loaded integer =
        {-# §6.5#2 #-}
        bound(
          {-# <malloc0.c:24:11, malloc0.c:24:44> malloc0.c:24:41 #-} let weak (a_926: loaded integer,
          a_927: loaded integer) =
            unseq(
              {-# §6.5.8 #-}
              {-# <malloc0.c:24:11, malloc0.c:24:44> malloc0.c:24:41 #-} let weak (a_939: loaded integer,
              a_940: loaded integer) =
                unseq(
                  {-# <malloc0.c:24:11, malloc0.c:24:40> #-} let strong a_936: loaded pointer =
                    {-# §6.5.4 #-}
                    {-# <malloc0.c:24:38, malloc0.c:24:39> #-} let weak a_933: pointer =
                      {-# <malloc0.c:24:38, malloc0.c:24:39> #-} pure(p) in
                    load('void*', a_933) in
                  case a_936 of
                    | Specified(a_937: pointer) =>
                        memop(cheri_cheri_length_get['size_t (void*)'], a_937)
                    | _: loaded pointer =>
                        pure(
                          undef(<<DUMMY(Elab, CHERI intrinsics (unspec))>>)
                        )
                  end
                ,
                  {-# <malloc0.c:24:43, malloc0.c:24:44> #-} let weak a_938: pointer =
                    {-# <malloc0.c:24:43, malloc0.c:24:44> #-} pure(i) in
                  load('unsigned long', a_938)
                ) in
              case (a_939, a_940) of
                | (Specified(a_941: integer), Specified(a_942: integer)) =>
                    {-# §6.5.8#6 #-}
                    pure(
                      if conv_int('size_t', a_941) <
                      conv_int('size_t', a_942) then
                        Specified(1)
                      else
                        Specified(0)
                    )
                | _: (loaded integer,loaded integer) =>
                    pure(Unspecified('signed int'))
              end
            ,
              {-# <malloc0.c:24:11, malloc0.c:24:44> malloc0.c:24:41 #-} pure(
                Specified(0)
              )
            ) in
          pure(
            case (a_926, a_927) of
              | (Specified(a_928: integer), Specified(a_929: integer)) =>
                  if conv_int('signed int', a_928) =
                  conv_int('signed int', a_929) then
                    Specified(1)
                  else
                    Specified(0)
              | _: (loaded integer,loaded integer) =>
                  Unspecified('signed int')
            end
          )
        ) in
      let strong a_822: boolean =
        case a_924 of
          | Specified(a_925: integer) =>
              pure(if not(a_925 = 1) then True else False)
          | Unspecified(_: ctype) =>
              nd(pure(True), pure(False))
        end in
      if a_822 then
        {-# <malloc0.c:25:8, malloc0.c:28:9> #-} {-# <malloc0.c:26:12, malloc0.c:26:55> #-} let strong _: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# §6.5.2.2#10, sentence 1 #-}
            {-# <malloc0.c:26:12, malloc0.c:26:54> #-} let strong ((a_945: loaded pointer,
            (a_946: ctype, a_947: [ctype], a_948: boolean, a_949: boolean)),
            a_952: loaded pointer, a_954: loaded pointer) =
              {-# §6.5.2.2#4, sentence 2 #-}
              unseq(
                let strong a_944: loaded pointer =
                  {-# <malloc0.c:26:12, malloc0.c:26:19> #-} pure(
                    Specified(Cfunction(fprintf))
                  ) in
                pure((a_944, cfunction(a_944)))
              ,
                {-# <malloc0.c:26:20, malloc0.c:26:28> #-} let weak a_953: pointer =
                  {-# <malloc0.c:26:20, malloc0.c:26:28> #-} pure(__stderr) in
                load('struct _IO_FILE*', a_953)
              ,
                {-# <malloc0.c:26:29, malloc0.c:26:53> #-} let weak a_956: pointer =
                  {-# <malloc0.c:26:29, malloc0.c:26:53> #-} pure(a_955) in
                {-# §6.3.2.1#3 #-}
                let weak a_957: pointer =
                  memop(PtrArrayShift, a_956, 'char', 0) in
                pure(Specified(a_957))
              ) in
            if not(params_length(a_947) <= 2) then
              pure(undef(<<UB038_number_of_args>>))
            else
              if not(a_948) \/ not(are_compatible ('signed int', a_946)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                let strong a_951: pointer =
                  let a_958: ctype = params_nth(a_947, 0) in
                  if not(are_compatible ('struct _IO_FILE*', a_958)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    {-# §6.5.2.2#7, sentence 1 #-}
                    let weak a_959: pointer =
                      create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                    let weak _: unit =
                      store('struct _IO_FILE*', a_959, a_952) in
                    pure(a_959) in
                let strong a_950: pointer =
                  let a_960: ctype = params_nth(a_947, 1) in
                  if not(are_compatible ('const char*', a_960)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    {-# §6.5.2.2#7, sentence 1 #-}
                    let weak a_961: pointer =
                      create(Ivalignof('const char*'), 'const char*') in
                    let weak _: unit = store('const char*', a_961, a_954) in
                    pure(a_961) in
                let strong a_962: loaded integer =
                  ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
                  a_945, a_951, a_950, []: (ctype,pointer)) in
                let strong _: (unit,unit) =
                  unseq(
                    kill('struct _IO_FILE*', a_951)
                  ,
                    kill('char*', a_950)
                  ) in
                pure(a_962)
          ) in
        pure(Unit) ;
        {-# <malloc0.c:27:12, malloc0.c:27:22> #-} let strong a_963: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# <malloc0.c:27:18, malloc0.c:27:21> #-} pure(Specified(1))
          ) in
        kill('void*', p) ;
        kill('ptraddr_t', a) ;
        kill('unsigned long', i) ;
        run ret_803(conv_loaded_int('signed int', a_963)) ;
        pure(Unit)
      else
        {-# <malloc0.c:24:8, malloc0.c:28:9> #-} pure(Unit) ;
      {-# <malloc0.c:29:8, malloc0.c:29:16> #-} {-# §6.5#2 #-}
      bound(
        {-# §6.5.2.2#10, sentence 1 #-}
        {-# <malloc0.c:29:8, malloc0.c:29:15> #-} let strong ((a_965: loaded pointer,
        (a_966: ctype, a_967: [ctype], a_968: boolean, a_969: boolean)),
        a_971: loaded pointer) =
          {-# §6.5.2.2#4, sentence 2 #-}
          unseq(
            let strong a_964: loaded pointer =
              {-# <malloc0.c:29:8, malloc0.c:29:12> #-} pure(
                Specified(Cfunction(free_proxy))
              ) in
            pure((a_964, cfunction(a_964)))
          ,
            {-# <malloc0.c:29:13, malloc0.c:29:14> #-} let weak a_972: pointer =
              {-# <malloc0.c:29:13, malloc0.c:29:14> #-} pure(p) in
            load('void*', a_972)
          ) in
        if not(params_length(a_967) = 1) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if a_968 \/ not(are_compatible ('void', a_966)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_970: pointer =
              let a_973: ctype = params_nth(a_967, 0) in
              if not(are_compatible ('void*', a_973)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# §6.5.2.2#7, sentence 1 #-}
                let weak a_974: pointer =
                  create(Ivalignof('void*'), 'void*') in
                let weak _: unit = store('void*', a_974, a_971) in
                pure(a_974) in
            let strong a_975: unit =
              ccall('void (*) (void*)', a_965, a_970) in
            kill('void*', a_970) ;
            pure(a_975)
      ) ;
      pure(Unit) ;
      {-# <malloc0.c:10:4, malloc0.c:30:5> #-} save __cerb_continue0: unit (p: pointer:= p,
      a: pointer:= a, i: pointer:= i) in
        {-# <unknown location> #-} let strong _: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# §6.5.2.4#2, sentence 3 #-}
            {-# §6.5.2.4#2, sentence 1 #-}
            {-# §6.5.2.4 #-}
            {-# <malloc0.c:10:31, malloc0.c:10:34> malloc0.c:10:32 #-} let weak a_976: pointer =
              {-# <malloc0.c:10:31, malloc0.c:10:32> #-} pure(i) in
            seq_rmw('unsigned long', a_976, a_977 => case a_977 of
              | Specified(a_978: integer) =>
                  Specified(conv_int('unsigned long',
                  wrapI_add('unsigned long', conv_int('unsigned long', a_978), 1)))
              | Unspecified(_: ctype) =>
                  Unspecified('unsigned long')
            end)
          ) in
        pure(Unit) ;
      kill('void*', p) ;
      kill('ptraddr_t', a) ;
      pure(Unit) ;
      {-# <malloc0.c:10:4, malloc0.c:30:5> #-} save continue_804: unit (i: pointer:= i) in
        {-# <malloc0.c:10:4, malloc0.c:30:5> #-} pure(Unit) ;
      pure(Unit) ;
      run while_806(i)
    else
      pure(Unit) ;
  {-# <malloc0.c:10:4, malloc0.c:30:5> #-} save break_805: unit (i: pointer:= i) in
    {-# <malloc0.c:10:4, malloc0.c:30:5> #-} pure(Unit) ;
  pure(Unit) ;
  kill('unsigned long', i) ;
  pure(Unit) ;
  {-# <malloc0.c:31:4, malloc0.c:31:29> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <malloc0.c:31:4, malloc0.c:31:28> #-} let strong ((a_980: loaded pointer,
      (a_981: ctype, a_982: [ctype], a_983: boolean, a_984: boolean)),
      a_987: loaded pointer, a_989: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_979: loaded pointer =
            {-# <malloc0.c:31:4, malloc0.c:31:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_979, cfunction(a_979)))
        ,
          {-# <malloc0.c:31:12, malloc0.c:31:20> #-} let weak a_988: pointer =
            {-# <malloc0.c:31:12, malloc0.c:31:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_988)
        ,
          {-# <malloc0.c:31:21, malloc0.c:31:27> #-} let weak a_991: pointer =
            {-# <malloc0.c:31:21, malloc0.c:31:27> #-} pure(a_990) in
          {-# §6.3.2.1#3 #-}
          let weak a_992: pointer = memop(PtrArrayShift, a_991, 'char', 0) in
          pure(Specified(a_992))
        ) in
      if not(params_length(a_982) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_983) \/ not(are_compatible ('signed int', a_981)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_986: pointer =
            let a_993: ctype = params_nth(a_982, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_993)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_994: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_994, a_987) in
              pure(a_994) in
          let strong a_985: pointer =
            let a_995: ctype = params_nth(a_982, 1) in
            if not(are_compatible ('const char*', a_995)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_996: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_996, a_989) in
              pure(a_996) in
          let strong a_997: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_980, a_986, a_985, []: (ctype,pointer)) in
          let strong _: (unit,unit) =
            unseq(kill('struct _IO_FILE*', a_986), kill('char*', a_985)) in
          pure(a_997)
    ) in
  pure(Unit) ;
  pure(Unit) ;
  {-# <malloc0.c:8:0, malloc0.c:32:1> malloc0.c:8:4 - malloc0.c:8:8 #-} save ret_803: loaded integer (a_998: loaded integer:= Specified(0)) in
    pure(a_998)

