-- Aggregates










-- Globals
glob a_922: pointer [ail_ctype = 'char[14]'] :=
  let strong a_1399: pointer = create(Ivalignof('char[14]'), 'char[14]') in
  store_lock('char[14]', a_1399,
  Specified(Array(Specified(conv_int('char', 79)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 103)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 58)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1400: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1399,
    18446744073701163007) in
  case a_1400 of
    | Specified(a_1399: pointer) =>
        pure(a_1399)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_965: pointer [ail_ctype = 'char[9]'] :=
  let strong a_1401: pointer = create(Ivalignof('char[9]'), 'char[9]') in
  store_lock('char[9]', a_1401,
  Specified(Array(Specified(conv_int('char', 79)),
  Specified(conv_int('char', 79)), Specified(conv_int('char', 66)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1402: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1401,
    18446744073701163007) in
  case a_1402 of
    | Specified(a_1401: pointer) =>
        pure(a_1401)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1008: pointer [ail_ctype = 'char[15]'] :=
  let strong a_1403: pointer = create(Ivalignof('char[15]'), 'char[15]') in
  store_lock('char[15]', a_1403,
  Specified(Array(Specified(conv_int('char', 82)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 118)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1404: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1403,
    18446744073701163007) in
  case a_1404 of
    | Specified(a_1403: pointer) =>
        pure(a_1403)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1044: pointer [ail_ctype = 'char[11]'] :=
  let strong a_1405: pointer = create(Ivalignof('char[11]'), 'char[11]') in
  store_lock('char[11]', a_1405,
  Specified(Array(Specified(conv_int('char', 86)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1406: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1405,
    18446744073701163007) in
  case a_1406 of
    | Specified(a_1405: pointer) =>
        pure(a_1405)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1073: pointer [ail_ctype = 'char[5]'] :=
  let strong a_1407: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_1407,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0)))) ;
  let strong a_1408: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1407,
    18446744073701163007) in
  case a_1408 of
    | Specified(a_1407: pointer) =>
        pure(a_1407)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1077: pointer [ail_ctype = 'char[9]'] :=
  let strong a_1409: pointer = create(Ivalignof('char[9]'), 'char[9]') in
  store_lock('char[9]', a_1409,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0)))) ;
  let strong a_1410: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1409,
    18446744073701163007) in
  case a_1410 of
    | Specified(a_1409: pointer) =>
        pure(a_1409)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1101: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1411: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1411,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(0)))) ;
  let strong a_1412: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1411,
    18446744073701163007) in
  case a_1412 of
    | Specified(a_1411: pointer) =>
        pure(a_1411)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1142: pointer [ail_ctype = 'char[5]'] :=
  let strong a_1413: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_1413,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 48)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 120)), Specified(0)))) ;
  let strong a_1414: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1413,
    18446744073701163007) in
  case a_1414 of
    | Specified(a_1413: pointer) =>
        pure(a_1413)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1190: pointer [ail_ctype = 'char[2]'] :=
  let strong a_1415: pointer = create(Ivalignof('char[2]'), 'char[2]') in
  store_lock('char[2]', a_1415,
  Specified(Array(Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1416: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1415,
    18446744073701163007) in
  case a_1416 of
    | Specified(a_1415: pointer) =>
        pure(a_1415)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1263: pointer [ail_ctype = 'char[26]'] :=
  let strong a_1417: pointer = create(Ivalignof('char[26]'), 'char[26]') in
  store_lock('char[26]', a_1417,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 96)),
  Specified(0)))) ;
  let strong a_1418: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1417,
    18446744073701163007) in
  case a_1418 of
    | Specified(a_1417: pointer) =>
        pure(a_1417)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1279: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1419: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1419,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 112)),
  Specified(0)))) ;
  let strong a_1420: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1419,
    18446744073701163007) in
  case a_1420 of
    | Specified(a_1419: pointer) =>
        pure(a_1419)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1319: pointer [ail_ctype = 'char[31]'] :=
  let strong a_1421: pointer = create(Ivalignof('char[31]'), 'char[31]') in
  store_lock('char[31]', a_1421,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 96)), Specified(0)))) ;
  let strong a_1422: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1421,
    18446744073701163007) in
  case a_1422 of
    | Specified(a_1421: pointer) =>
        pure(a_1421)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1334: pointer [ail_ctype = 'char[27]'] :=
  let strong a_1423: pointer = create(Ivalignof('char[27]'), 'char[27]') in
  store_lock('char[27]', a_1423,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 91)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 80)), Specified(conv_int('char', 44)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 35)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 98)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 93)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 63)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 65)), Specified(0)))) ;
  let strong a_1424: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1423,
    18446744073701163007) in
  case a_1424 of
    | Specified(a_1423: pointer) =>
        pure(a_1423)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1374: pointer [ail_ctype = 'char[15]'] :=
  let strong a_1425: pointer = create(Ivalignof('char[15]'), 'char[15]') in
  store_lock('char[15]', a_1425,
  Specified(Array(Specified(conv_int('char', 115)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1426: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1425,
    18446744073701163007) in
  case a_1426 of
    | Specified(a_1425: pointer) =>
        pure(a_1425)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

-- Fun map
proc main (): eff loaded integer :=
  {-# <bounds2.c:5:0, bounds2.c:17:1> #-} let strong x: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  {-# <bounds2.c:6:4, bounds2.c:6:13> #-} let strong a_907: loaded integer =
    {-# §6.5#2 #-}
    bound({-# <bounds2.c:6:10, bounds2.c:6:12> #-} pure(Specified(42))) in
  store('signed int', x, conv_loaded_int('signed int', a_907)) ;
  {-# <bounds2.c:7:4, bounds2.c:7:16> #-} let strong a_908: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.3.2#3, sentence 5 #-}
      {-# <bounds2.c:7:13, bounds2.c:7:15> bounds2.c:7:13 #-} let weak a_909: pointer =
        {-# <bounds2.c:7:14, bounds2.c:7:15> #-} pure(x) in
      pure(Specified(a_909))
    ) in
  store('signed int*', p, a_908) ;
  {-# <bounds2.c:9:4, bounds2.c:9:61> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <bounds2.c:9:4, bounds2.c:9:60> #-} let strong ((a_911: loaded pointer,
      (a_912: ctype, a_913: [ctype], a_914: boolean, a_915: boolean)),
      a_919: loaded pointer, a_921: loaded pointer, a_925: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_910: loaded pointer =
            {-# <bounds2.c:9:4, bounds2.c:9:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_910, cfunction(a_910)))
        ,
          {-# <bounds2.c:9:12, bounds2.c:9:20> #-} let weak a_920: pointer =
            {-# <bounds2.c:9:12, bounds2.c:9:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_920)
        ,
          {-# <bounds2.c:9:21, bounds2.c:9:43> #-} let weak a_923: pointer =
            {-# <bounds2.c:9:21, bounds2.c:9:43> #-} pure(a_922) in
          {-# §6.3.2.1#3 #-}
          let weak a_924: pointer = memop(PtrArrayShift, a_923, 'char', 0) in
          pure(Specified(a_924))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <bounds2.c:9:45, bounds2.c:9:59> #-} let strong ((a_927: loaded pointer,
          (a_928: ctype, a_929: [ctype], a_930: boolean, a_931: boolean)),
          a_933: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_926: loaded pointer =
                {-# <bounds2.c:9:45, bounds2.c:9:49> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_926, cfunction(a_926)))
            ,
              {-# §6.5.4 #-}
              {-# <bounds2.c:9:50, bounds2.c:9:58> bounds2.c:9:50 #-} let weak a_936: pointer =
                {-# <bounds2.c:9:57, bounds2.c:9:58> #-} pure(p) in
              load('signed int*', a_936)
            ) in
          if not(params_length(a_929) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_930 \/ not(are_compatible ('const char*', a_928)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_932: pointer =
                let a_938: ctype = params_nth(a_929, 0) in
                if not(are_compatible ('void*', a_938)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_939: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_939, a_933) in
                  pure(a_939) in
              let strong a_940: loaded pointer =
                ccall('const char* (*) (void*)', a_927, a_932) in
              kill('void*', a_932) ;
              pure(a_940)
        ) in
      if not(params_length(a_913) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_914) \/ not(are_compatible ('signed int', a_912)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_918: pointer =
            let a_941: ctype = params_nth(a_913, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_941)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_942: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_942, a_919) in
              pure(a_942) in
          let strong a_917: pointer =
            let a_943: ctype = params_nth(a_913, 1) in
            if not(are_compatible ('const char*', a_943)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_944: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_944, a_921) in
              pure(a_944) in
          let strong a_916: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_925) in
          let strong a_945: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_911, a_918, a_917, [('const char*', a_916)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_918)
            ,
              kill('char*', a_917)
            ,
              kill('char*', a_916)
            ) in
          pure(a_945)
    ) in
  pure(Unit) ;
  {-# <bounds2.c:11:4, bounds2.c:11:12> #-} let strong _: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <bounds2.c:11:4, bounds2.c:11:11> bounds2.c:11:5 #-} let weak (a_906: pointer,
      a_952: loaded pointer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# <bounds2.c:11:4, bounds2.c:11:5> #-} pure(p)
        ,
          {-# §6.5.6 #-}
          {-# <bounds2.c:11:6, bounds2.c:11:11> bounds2.c:11:7 #-} let weak (a_946: loaded pointer,
          a_948: loaded integer) =
            unseq(
              {-# <bounds2.c:11:6, bounds2.c:11:7> #-} let weak a_951: pointer =
                {-# <bounds2.c:11:6, bounds2.c:11:7> #-} pure(p) in
              load('signed int*', a_951)
            ,
              {-# <bounds2.c:11:8, bounds2.c:11:11> #-} pure(Specified(100))
            ) in
          case (a_946, a_948) of
            | (Specified(a_947: pointer), Specified(a_949: integer)) =>
                let weak a_950: pointer =
                  memop(PtrArrayShift, a_947, 'signed int', a_949) in
                pure(Specified(a_950))
            | _: (loaded pointer,loaded integer) =>
                pure(undef(<<UB_CERB004_unspecified__pointer_add>>))
          end
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('signed int*', a_906, a_952)) in
      pure(a_952)
    ) in
  pure(Unit) ;
  {-# <bounds2.c:12:4, bounds2.c:12:56> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <bounds2.c:12:4, bounds2.c:12:55> #-} let strong ((a_954: loaded pointer,
      (a_955: ctype, a_956: [ctype], a_957: boolean, a_958: boolean)),
      a_962: loaded pointer, a_964: loaded pointer, a_968: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_953: loaded pointer =
            {-# <bounds2.c:12:4, bounds2.c:12:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_953, cfunction(a_953)))
        ,
          {-# <bounds2.c:12:12, bounds2.c:12:20> #-} let weak a_963: pointer =
            {-# <bounds2.c:12:12, bounds2.c:12:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_963)
        ,
          {-# <bounds2.c:12:21, bounds2.c:12:38> #-} let weak a_966: pointer =
            {-# <bounds2.c:12:21, bounds2.c:12:38> #-} pure(a_965) in
          {-# §6.3.2.1#3 #-}
          let weak a_967: pointer = memop(PtrArrayShift, a_966, 'char', 0) in
          pure(Specified(a_967))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <bounds2.c:12:40, bounds2.c:12:54> #-} let strong ((a_970: loaded pointer,
          (a_971: ctype, a_972: [ctype], a_973: boolean, a_974: boolean)),
          a_976: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_969: loaded pointer =
                {-# <bounds2.c:12:40, bounds2.c:12:44> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_969, cfunction(a_969)))
            ,
              {-# §6.5.4 #-}
              {-# <bounds2.c:12:45, bounds2.c:12:53> bounds2.c:12:45 #-} let weak a_979: pointer =
                {-# <bounds2.c:12:52, bounds2.c:12:53> #-} pure(p) in
              load('signed int*', a_979)
            ) in
          if not(params_length(a_972) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_973 \/ not(are_compatible ('const char*', a_971)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_975: pointer =
                let a_981: ctype = params_nth(a_972, 0) in
                if not(are_compatible ('void*', a_981)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_982: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_982, a_976) in
                  pure(a_982) in
              let strong a_983: loaded pointer =
                ccall('const char* (*) (void*)', a_970, a_975) in
              kill('void*', a_975) ;
              pure(a_983)
        ) in
      if not(params_length(a_956) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_957) \/ not(are_compatible ('signed int', a_955)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_961: pointer =
            let a_984: ctype = params_nth(a_956, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_984)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_985: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_985, a_962) in
              pure(a_985) in
          let strong a_960: pointer =
            let a_986: ctype = params_nth(a_956, 1) in
            if not(are_compatible ('const char*', a_986)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_987: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_987, a_964) in
              pure(a_987) in
          let strong a_959: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_968) in
          let strong a_988: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_954, a_961, a_960, [('const char*', a_959)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_961)
            ,
              kill('char*', a_960)
            ,
              kill('char*', a_959)
            ) in
          pure(a_988)
    ) in
  pure(Unit) ;
  {-# <bounds2.c:14:4, bounds2.c:14:12> #-} let strong _: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <bounds2.c:14:4, bounds2.c:14:11> bounds2.c:14:5 #-} let weak (a_905: pointer,
      a_995: loaded pointer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# <bounds2.c:14:4, bounds2.c:14:5> #-} pure(p)
        ,
          {-# §6.5.6 #-}
          {-# <bounds2.c:14:6, bounds2.c:14:11> bounds2.c:14:7 #-} let weak (a_990: loaded pointer,
          a_991: loaded integer) =
            unseq(
              {-# <bounds2.c:14:6, bounds2.c:14:7> #-} let weak a_989: pointer =
                {-# <bounds2.c:14:6, bounds2.c:14:7> #-} pure(p) in
              load('signed int*', a_989)
            ,
              {-# <bounds2.c:14:8, bounds2.c:14:11> #-} pure(Specified(100))
            ) in
          case (a_990, a_991) of
            | (Specified(a_992: pointer), Specified(a_993: integer)) =>
                let weak a_994: pointer =
                  memop(PtrArrayShift, a_992, 'signed int', 0 - a_993) in
                pure(Specified(a_994))
            | _: (loaded pointer,loaded integer) =>
                pure(undef(<<UB_CERB004_unspecified__pointer_sub>>))
          end
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('signed int*', a_905, a_995)) in
      pure(a_995)
    ) in
  pure(Unit) ;
  {-# <bounds2.c:15:4, bounds2.c:15:62> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <bounds2.c:15:4, bounds2.c:15:61> #-} let strong ((a_997: loaded pointer,
      (a_998: ctype, a_999: [ctype], a_1000: boolean, a_1001: boolean)),
      a_1005: loaded pointer, a_1007: loaded pointer, a_1011: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_996: loaded pointer =
            {-# <bounds2.c:15:4, bounds2.c:15:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_996, cfunction(a_996)))
        ,
          {-# <bounds2.c:15:12, bounds2.c:15:20> #-} let weak a_1006: pointer =
            {-# <bounds2.c:15:12, bounds2.c:15:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_1006)
        ,
          {-# <bounds2.c:15:21, bounds2.c:15:44> #-} let weak a_1009: pointer =
            {-# <bounds2.c:15:21, bounds2.c:15:44> #-} pure(a_1008) in
          {-# §6.3.2.1#3 #-}
          let weak a_1010: pointer =
            memop(PtrArrayShift, a_1009, 'char', 0) in
          pure(Specified(a_1010))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <bounds2.c:15:46, bounds2.c:15:60> #-} let strong ((a_1013: loaded pointer,
          (a_1014: ctype, a_1015: [ctype], a_1016: boolean, a_1017: boolean)),
          a_1019: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_1012: loaded pointer =
                {-# <bounds2.c:15:46, bounds2.c:15:50> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_1012, cfunction(a_1012)))
            ,
              {-# §6.5.4 #-}
              {-# <bounds2.c:15:51, bounds2.c:15:59> bounds2.c:15:51 #-} let weak a_1022: pointer =
                {-# <bounds2.c:15:58, bounds2.c:15:59> #-} pure(p) in
              load('signed int*', a_1022)
            ) in
          if not(params_length(a_1015) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_1016 \/ not(are_compatible ('const char*', a_1014)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1018: pointer =
                let a_1024: ctype = params_nth(a_1015, 0) in
                if not(are_compatible ('void*', a_1024)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_1025: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_1025, a_1019) in
                  pure(a_1025) in
              let strong a_1026: loaded pointer =
                ccall('const char* (*) (void*)', a_1013, a_1018) in
              kill('void*', a_1018) ;
              pure(a_1026)
        ) in
      if not(params_length(a_999) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1000) \/ not(are_compatible ('signed int', a_998)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1004: pointer =
            let a_1027: ctype = params_nth(a_999, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1027)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1028: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1028, a_1005) in
              pure(a_1028) in
          let strong a_1003: pointer =
            let a_1029: ctype = params_nth(a_999, 1) in
            if not(are_compatible ('const char*', a_1029)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1030: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1030, a_1007) in
              pure(a_1030) in
          let strong a_1002: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_1011) in
          let strong a_1031: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_997, a_1004, a_1003, [('const char*', a_1002)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1004)
            ,
              kill('char*', a_1003)
            ,
              kill('char*', a_1002)
            ) in
          pure(a_1031)
    ) in
  pure(Unit) ;
  {-# <bounds2.c:16:4, bounds2.c:16:40> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <bounds2.c:16:4, bounds2.c:16:39> #-} let strong ((a_1033: loaded pointer,
      (a_1034: ctype, a_1035: [ctype], a_1036: boolean, a_1037: boolean)),
      a_1041: loaded pointer, a_1043: loaded pointer, a_1047: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_1032: loaded pointer =
            {-# <bounds2.c:16:4, bounds2.c:16:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_1032, cfunction(a_1032)))
        ,
          {-# <bounds2.c:16:12, bounds2.c:16:20> #-} let weak a_1042: pointer =
            {-# <bounds2.c:16:12, bounds2.c:16:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_1042)
        ,
          {-# <bounds2.c:16:21, bounds2.c:16:34> #-} let weak a_1045: pointer =
            {-# <bounds2.c:16:21, bounds2.c:16:34> #-} pure(a_1044) in
          {-# §6.3.2.1#3 #-}
          let weak a_1046: pointer =
            memop(PtrArrayShift, a_1045, 'char', 0) in
          pure(Specified(a_1046))
        ,
          {-# <bounds2.c:16:36, bounds2.c:16:38> bounds2.c:16:36 #-} let weak a_1052: pointer =
            {-# §6.5.3.2 #-}
            {-# <bounds2.c:16:36, bounds2.c:16:38> bounds2.c:16:36 #-} let weak a_1048: loaded pointer =
              {-# <bounds2.c:16:37, bounds2.c:16:38> #-} let weak a_1051: pointer =
                {-# <bounds2.c:16:37, bounds2.c:16:38> #-} pure(p) in
              load('signed int*', a_1051) in
            case a_1048 of
              | Specified(a_1049: pointer) =>
                  let weak a_1050: boolean =
                    memop(PtrValidForDeref, 'signed int', a_1049) in
                  pure(
                    if a_1050 then
                      a_1049
                    else
                      undef(<<UB043_indirection_invalid_value>>)
                  )
              | Unspecified(_: ctype) =>
                  pure(undef(<<UB043_indirection_invalid_value>>))
            end in
          load('signed int', a_1052)
        ) in
      if not(params_length(a_1035) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1036) \/ not(are_compatible ('signed int', a_1034)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1040: pointer =
            let a_1053: ctype = params_nth(a_1035, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1053)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1054: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1054, a_1041) in
              pure(a_1054) in
          let strong a_1039: pointer =
            let a_1055: ctype = params_nth(a_1035, 1) in
            if not(are_compatible ('const char*', a_1055)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1056: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1056, a_1043) in
              pure(a_1056) in
          let strong a_1038: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_1047)) in
          let strong a_1057: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1033, a_1040, a_1039, [('signed int', a_1038)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1040)
            ,
              kill('char*', a_1039)
            ,
              kill('signed int', a_1038)
            ) in
          pure(a_1057)
    ) in
  pure(Unit) ;
  kill('signed int', x) ;
  kill('signed int*', p) ;
  pure(Unit) ;
  {-# <bounds2.c:4:0, bounds2.c:17:1> bounds2.c:4:4 - bounds2.c:4:8 #-} save ret_904: loaded integer (a_1058: loaded integer:= Specified(0)) in
    pure(a_1058)

