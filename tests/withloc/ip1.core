-- Aggregates










-- Globals
glob a_929: pointer [ail_ctype = 'char[14]'] :=
  let strong a_1330: pointer = create(Ivalignof('char[14]'), 'char[14]') in
  store_lock('char[14]', a_1330,
  Specified(Array(Specified(conv_int('char', 79)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 103)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 58)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1331: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1330,
    18446744073701163007) in
  case a_1331 of
    | Specified(a_1330: pointer) =>
        pure(a_1330)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_965: pointer [ail_ctype = 'char[15]'] :=
  let strong a_1332: pointer = create(Ivalignof('char[15]'), 'char[15]') in
  store_lock('char[15]', a_1332,
  Specified(Array(Specified(conv_int('char', 82)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 118)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1333: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1332,
    18446744073701163007) in
  case a_1333 of
    | Specified(a_1332: pointer) =>
        pure(a_1332)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1004: pointer [ail_ctype = 'char[5]'] :=
  let strong a_1334: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_1334,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0)))) ;
  let strong a_1335: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1334,
    18446744073701163007) in
  case a_1335 of
    | Specified(a_1334: pointer) =>
        pure(a_1334)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1008: pointer [ail_ctype = 'char[9]'] :=
  let strong a_1336: pointer = create(Ivalignof('char[9]'), 'char[9]') in
  store_lock('char[9]', a_1336,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0)))) ;
  let strong a_1337: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1336,
    18446744073701163007) in
  case a_1337 of
    | Specified(a_1336: pointer) =>
        pure(a_1336)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1032: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1338: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1338,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(0)))) ;
  let strong a_1339: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1338,
    18446744073701163007) in
  case a_1339 of
    | Specified(a_1338: pointer) =>
        pure(a_1338)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1073: pointer [ail_ctype = 'char[5]'] :=
  let strong a_1340: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_1340,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 48)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 120)), Specified(0)))) ;
  let strong a_1341: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1340,
    18446744073701163007) in
  case a_1341 of
    | Specified(a_1340: pointer) =>
        pure(a_1340)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1121: pointer [ail_ctype = 'char[2]'] :=
  let strong a_1342: pointer = create(Ivalignof('char[2]'), 'char[2]') in
  store_lock('char[2]', a_1342,
  Specified(Array(Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1343: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1342,
    18446744073701163007) in
  case a_1343 of
    | Specified(a_1342: pointer) =>
        pure(a_1342)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1194: pointer [ail_ctype = 'char[26]'] :=
  let strong a_1344: pointer = create(Ivalignof('char[26]'), 'char[26]') in
  store_lock('char[26]', a_1344,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 96)),
  Specified(0)))) ;
  let strong a_1345: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1344,
    18446744073701163007) in
  case a_1345 of
    | Specified(a_1344: pointer) =>
        pure(a_1344)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1210: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1346: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1346,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 112)),
  Specified(0)))) ;
  let strong a_1347: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1346,
    18446744073701163007) in
  case a_1347 of
    | Specified(a_1346: pointer) =>
        pure(a_1346)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1250: pointer [ail_ctype = 'char[31]'] :=
  let strong a_1348: pointer = create(Ivalignof('char[31]'), 'char[31]') in
  store_lock('char[31]', a_1348,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 96)), Specified(0)))) ;
  let strong a_1349: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1348,
    18446744073701163007) in
  case a_1349 of
    | Specified(a_1348: pointer) =>
        pure(a_1348)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1265: pointer [ail_ctype = 'char[27]'] :=
  let strong a_1350: pointer = create(Ivalignof('char[27]'), 'char[27]') in
  store_lock('char[27]', a_1350,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 91)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 80)), Specified(conv_int('char', 44)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 35)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 98)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 93)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 63)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 65)), Specified(0)))) ;
  let strong a_1351: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1350,
    18446744073701163007) in
  case a_1351 of
    | Specified(a_1350: pointer) =>
        pure(a_1350)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1305: pointer [ail_ctype = 'char[15]'] :=
  let strong a_1352: pointer = create(Ivalignof('char[15]'), 'char[15]') in
  store_lock('char[15]', a_1352,
  Specified(Array(Specified(conv_int('char', 115)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1353: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1352,
    18446744073701163007) in
  case a_1353 of
    | Specified(a_1352: pointer) =>
        pure(a_1352)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

-- Fun map
proc main (): eff loaded integer :=
  {-# <ip1.c:5:0, ip1.c:12:1> #-} let strong x: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong ix: pointer =
    create(Ivalignof('unsigned long long'), 'unsigned long long') in
  let strong px: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  {-# <ip1.c:6:4, ip1.c:6:15> #-} let strong a_906: loaded integer =
    {-# §6.5#2 #-}
    bound({-# <ip1.c:6:12, ip1.c:6:14> #-} pure(Specified(42))) in
  store('signed int', x, conv_loaded_int('signed int', a_906)) ;
  {-# <ip1.c:7:4, ip1.c:7:52> #-} let strong a_907: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.4 #-}
      {-# <ip1.c:7:28, ip1.c:7:51> ip1.c:7:28 #-} let weak a_908: loaded pointer =
        {-# §6.5.3.2#3, sentence 5 #-}
        {-# <ip1.c:7:49, ip1.c:7:51> ip1.c:7:49 #-} let weak a_910: pointer =
          {-# <ip1.c:7:50, ip1.c:7:51> #-} pure(x) in
        pure(Specified(a_910)) in
      case a_908 of
        | Specified(a_909: pointer) =>
            let weak a_911: integer =
              memop(IntFromPtr, 'signed int', 'unsigned long long', a_909) in
            pure(Specified(a_911))
        | Unspecified(_: ctype) =>
            pure(Unspecified('unsigned long_long'))
      end
    ) in
  store('unsigned long long', ix,
  conv_loaded_int('unsigned long long', a_907)) ;
  {-# <ip1.c:8:4, ip1.c:8:23> #-} let strong a_912: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.4 #-}
      {-# <ip1.c:8:14, ip1.c:8:22> ip1.c:8:14 #-} let weak a_913: loaded integer =
        {-# <ip1.c:8:20, ip1.c:8:22> #-} let weak a_915: pointer =
          {-# <ip1.c:8:20, ip1.c:8:22> #-} pure(ix) in
        load('unsigned long long', a_915) in
      case a_913 of
        | Specified(a_914: integer) =>
            let weak a_916: pointer =
              memop(PtrFromInt, 'unsigned long long', 'signed int', a_914) in
            pure(Specified(a_916))
        | Unspecified(_: ctype) =>
            pure(Unspecified('signed int*'))
      end
    ) in
  store('signed int*', px, a_912) ;
  {-# <ip1.c:10:4, ip1.c:10:63> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <ip1.c:10:4, ip1.c:10:62> #-} let strong ((a_918: loaded pointer,
      (a_919: ctype, a_920: [ctype], a_921: boolean, a_922: boolean)),
      a_926: loaded pointer, a_928: loaded pointer, a_932: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_917: loaded pointer =
            {-# <ip1.c:10:4, ip1.c:10:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_917, cfunction(a_917)))
        ,
          {-# <ip1.c:10:12, ip1.c:10:20> #-} let weak a_927: pointer =
            {-# <ip1.c:10:12, ip1.c:10:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_927)
        ,
          {-# <ip1.c:10:21, ip1.c:10:43> #-} let weak a_930: pointer =
            {-# <ip1.c:10:21, ip1.c:10:43> #-} pure(a_929) in
          {-# §6.3.2.1#3 #-}
          let weak a_931: pointer = memop(PtrArrayShift, a_930, 'char', 0) in
          pure(Specified(a_931))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <ip1.c:10:45, ip1.c:10:61> #-} let strong ((a_934: loaded pointer,
          (a_935: ctype, a_936: [ctype], a_937: boolean, a_938: boolean)),
          a_940: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_933: loaded pointer =
                {-# <ip1.c:10:45, ip1.c:10:49> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_933, cfunction(a_933)))
            ,
              {-# §6.5.3.2#3, sentence 5 #-}
              {-# §6.5.4 #-}
              {-# <ip1.c:10:50, ip1.c:10:60> ip1.c:10:50 #-} let weak a_943: pointer =
                {-# <ip1.c:10:59, ip1.c:10:60> #-} pure(x) in
              pure(Specified(a_943))
            ) in
          if not(params_length(a_936) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_937 \/ not(are_compatible ('const char*', a_935)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_939: pointer =
                let a_945: ctype = params_nth(a_936, 0) in
                if not(are_compatible ('void*', a_945)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_946: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_946, a_940) in
                  pure(a_946) in
              let strong a_947: loaded pointer =
                ccall('const char* (*) (void*)', a_934, a_939) in
              kill('void*', a_939) ;
              pure(a_947)
        ) in
      if not(params_length(a_920) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_921) \/ not(are_compatible ('signed int', a_919)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_925: pointer =
            let a_948: ctype = params_nth(a_920, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_948)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_949: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_949, a_926) in
              pure(a_949) in
          let strong a_924: pointer =
            let a_950: ctype = params_nth(a_920, 1) in
            if not(are_compatible ('const char*', a_950)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_951: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_951, a_928) in
              pure(a_951) in
          let strong a_923: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_932) in
          let strong a_952: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_918, a_925, a_924, [('const char*', a_923)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_925)
            ,
              kill('char*', a_924)
            ,
              kill('char*', a_923)
            ) in
          pure(a_952)
    ) in
  pure(Unit) ;
  {-# <ip1.c:11:4, ip1.c:11:64> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <ip1.c:11:4, ip1.c:11:63> #-} let strong ((a_954: loaded pointer,
      (a_955: ctype, a_956: [ctype], a_957: boolean, a_958: boolean)),
      a_962: loaded pointer, a_964: loaded pointer, a_968: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_953: loaded pointer =
            {-# <ip1.c:11:4, ip1.c:11:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_953, cfunction(a_953)))
        ,
          {-# <ip1.c:11:12, ip1.c:11:20> #-} let weak a_963: pointer =
            {-# <ip1.c:11:12, ip1.c:11:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_963)
        ,
          {-# <ip1.c:11:21, ip1.c:11:44> #-} let weak a_966: pointer =
            {-# <ip1.c:11:21, ip1.c:11:44> #-} pure(a_965) in
          {-# §6.3.2.1#3 #-}
          let weak a_967: pointer = memop(PtrArrayShift, a_966, 'char', 0) in
          pure(Specified(a_967))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <ip1.c:11:46, ip1.c:11:62> #-} let strong ((a_970: loaded pointer,
          (a_971: ctype, a_972: [ctype], a_973: boolean, a_974: boolean)),
          a_976: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_969: loaded pointer =
                {-# <ip1.c:11:46, ip1.c:11:50> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_969, cfunction(a_969)))
            ,
              {-# §6.5.4 #-}
              {-# <ip1.c:11:51, ip1.c:11:61> ip1.c:11:51 #-} let weak a_979: pointer =
                {-# <ip1.c:11:59, ip1.c:11:61> #-} pure(px) in
              load('signed int*', a_979)
            ) in
          if not(params_length(a_972) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_973 \/ not(are_compatible ('const char*', a_971)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_975: pointer =
                let a_981: ctype = params_nth(a_972, 0) in
                if not(are_compatible ('void*', a_981)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_982: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_982, a_976) in
                  pure(a_982) in
              let strong a_983: loaded pointer =
                ccall('const char* (*) (void*)', a_970, a_975) in
              kill('void*', a_975) ;
              pure(a_983)
        ) in
      if not(params_length(a_956) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_957) \/ not(are_compatible ('signed int', a_955)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_961: pointer =
            let a_984: ctype = params_nth(a_956, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_984)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_985: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_985, a_962) in
              pure(a_985) in
          let strong a_960: pointer =
            let a_986: ctype = params_nth(a_956, 1) in
            if not(are_compatible ('const char*', a_986)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_987: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_987, a_964) in
              pure(a_987) in
          let strong a_959: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_968) in
          let strong a_988: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_954, a_961, a_960, [('const char*', a_959)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_961)
            ,
              kill('char*', a_960)
            ,
              kill('char*', a_959)
            ) in
          pure(a_988)
    ) in
  pure(Unit) ;
  kill('signed int', x) ;
  kill('unsigned long_long', ix) ;
  kill('signed int*', px) ;
  pure(Unit) ;
  {-# <ip1.c:4:0, ip1.c:12:1> ip1.c:4:4 - ip1.c:4:8 #-} save ret_905: loaded integer (a_989: loaded integer:= Specified(0)) in
    pure(a_989)

