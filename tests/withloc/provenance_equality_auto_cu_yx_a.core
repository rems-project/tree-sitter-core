-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_757: pointer [ail_ctype = 'char[22]'] :=
  create_readonly(Ivalignof('char[22]'), 'char[22]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc f (pointer, pointer)

proc main (): eff loaded integer :=
  {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:4:11, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:11:1> #-} let strong y: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:5:2, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:5:15> #-} let strong a_737: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:5:8, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:5:9> #-} pure(
        Specified(2)
      )
    ) in
  store('signed int', y, conv_loaded_int('signed int', a_737)) ;
  let strong a_738: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:5:13, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:5:14> #-} pure(
        Specified(1)
      )
    ) in
  store('signed int', x, conv_loaded_int('signed int', a_738)) ;
  {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:6:2, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:6:18> #-} let strong a_739: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.6 #-}
      {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:6:11, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:6:17> ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:6:14 #-} let weak (a_740: loaded pointer,
      a_742: loaded integer) =
        unseq(
          {-# §6.5.3.2#3, sentence 5 #-}
          {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:6:11, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:6:13> ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:6:11 #-} let weak a_745: pointer =
            {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:6:12, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:6:13> #-} pure(
              x
            ) in
          pure(Specified(a_745))
        ,
          {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:6:16, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:6:17> #-} pure(
            Specified(1)
          )
        ) in
      let (Specified(a_741: pointer), Specified(a_743: integer)) =
        (a_740, a_742) in
      let weak a_744: pointer =
        memop(PtrArrayShift, a_741, 'signed int', a_743) in
      pure(Specified(a_744))
    ) in
  store('signed int*', p, a_739) ;
  {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:7:2, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:7:14> #-} let strong a_746: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.3.2#3, sentence 5 #-}
      {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:7:11, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:7:13> ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:7:11 #-} let weak a_747: pointer =
        {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:7:12, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:7:13> #-} pure(
          y
        ) in
      pure(Specified(a_747))
    ) in
  store('signed int*', q, a_746) ;
  {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:8:2, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:8:53> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:8:2, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:8:52> #-} let strong ((a_748: loaded pointer,
      (a_749: ctype, a_750: [ctype], a_751: boolean, a_752: boolean)),
      a_756: loaded pointer, a_760: loaded pointer, a_765: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_736: loaded pointer =
            {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:8:2, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:8:8> #-} pure(
              Specified(Cfunction(printf_proxy))
            ) in
          pure((a_736, cfunction(a_736)))
        ,
          {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:8:9, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:8:33> #-} let weak a_758: pointer =
            {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:8:9, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:8:33> #-} pure(
              a_757
            ) in
          {-# §6.3.2.1#3 #-}
          let weak a_759: pointer = memop(PtrArrayShift, a_758, 'char', 0) in
          pure(Specified(a_759))
        ,
          {-# §6.5.4 #-}
          {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:8:34, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:8:42> ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:8:34 #-} let weak a_763: pointer =
            {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:8:41, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:8:42> #-} pure(
              p
            ) in
          load('signed int*', a_763)
        ,
          {-# §6.5.4 #-}
          {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:8:43, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:8:51> ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:8:43 #-} let weak a_768: pointer =
            {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:8:50, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:8:51> #-} pure(
              q
            ) in
          load('signed int*', a_768)
        ) in
      if not(params_length(a_750) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_751) \/ not(are_compatible ('signed int', a_749)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_755: pointer =
            let a_770: ctype = params_nth(a_750, 0) in
            if not(are_compatible ('const char*', a_770)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_771: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_771, a_756) in
              pure(a_771) in
          let strong a_754: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'void*', a_760) in
          let strong a_753: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'void*', a_765) in
          let strong a_772: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_748, a_755,
            [('void*', a_754), ('void*', a_753)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_755)
            ,
              kill('void*', a_754)
            ,
              kill('void*', a_753)
            ) in
          pure(a_772)
    ) in
  pure(Unit) ;
  {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:9:2, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:9:9> #-} {-# §6.5#2 #-}
  bound(
    {-# §6.5.2.2#10, sentence 1 #-}
    {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:9:2, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:9:8> #-} let strong ((a_773: loaded pointer,
    (a_774: ctype, a_775: [ctype], a_776: boolean, a_777: boolean)),
    a_780: loaded pointer, a_782: loaded pointer) =
      {-# §6.5.2.2#4, sentence 2 #-}
      unseq(
        let strong a_735: loaded pointer =
          {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:9:2, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:9:3> #-} pure(
            Specified(Cfunction(f))
          ) in
        pure((a_735, cfunction(a_735)))
      ,
        {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:9:4, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:9:5> #-} let weak a_781: pointer =
          {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:9:4, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:9:5> #-} pure(
            p
          ) in
        load('signed int*', a_781)
      ,
        {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:9:6, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:9:7> #-} let weak a_783: pointer =
          {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:9:6, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:9:7> #-} pure(
            q
          ) in
        load('signed int*', a_783)
      ) in
    if not(params_length(a_775) = 2) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_776 \/ not(are_compatible ('void', a_774)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_779: pointer =
          let a_784: ctype = params_nth(a_775, 0) in
          if not(are_compatible ('signed int*', a_784)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {-# §6.5.2.2#7, sentence 1 #-}
            let weak a_785: pointer =
              create(Ivalignof('signed int*'), 'signed int*') in
            let weak _: unit = store('signed int*', a_785, a_780) in
            pure(a_785) in
        let strong a_778: pointer =
          let a_786: ctype = params_nth(a_775, 1) in
          if not(are_compatible ('signed int*', a_786)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {-# §6.5.2.2#7, sentence 1 #-}
            let weak a_787: pointer =
              create(Ivalignof('signed int*'), 'signed int*') in
            let weak _: unit = store('signed int*', a_787, a_782) in
            pure(a_787) in
        let strong a_788: unit =
          ccall('void (*) (signed int*, signed int*)', a_773, a_779, a_778) in
        let strong _: (unit,unit) =
          unseq(kill('signed int*', a_779), kill('signed int*', a_778)) in
        pure(a_788)
  ) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:10:2, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:10:11> #-} let strong a_789: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:10:9, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:10:10> #-} pure(
        Specified(0)
      )
    ) in
  kill('signed int', y) ;
  kill('signed int', x) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  run ret_734(conv_loaded_int('signed int', a_789)) ;
  kill('signed int', y) ;
  kill('signed int', x) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:4:0, ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:11:1> ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:4:4 - ./de_facto_memory_model/provenance_equality_auto_cu_yx_a.c:4:8 #-} save ret_734: loaded integer (a_790: loaded integer:= Specified(0)) in
    pure(a_790)

