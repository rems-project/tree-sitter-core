-- Globals
glob a_677: pointer [ail_ctype = 'char[10]'] :=
  let strong a_691: pointer = create(Ivalignof('char[10]'), 'char[10]') in
  store_lock('char[10]', a_691,
  Specified(Array(Specified(conv_int('char', 82)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 58)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_692: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_691,
    18446744073701163007) in
  case a_692 of
    | Specified(a_691: pointer) =>
        pure(a_691)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

-- Fun map
proc main (): eff loaded integer :=
  {-# <bounds1.c:4:0, bounds1.c:12:1> #-} let strong y: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong z: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong v: pointer = create(Ivalignof('signed int'), 'signed int') in
  {-# <bounds1.c:5:4, bounds1.c:5:13> #-} let strong a_651: loaded integer =
    {-# §6.5#2 #-}
    bound({-# <bounds1.c:5:10, bounds1.c:5:12> #-} pure(Specified(42))) in
  store('signed int', y, conv_loaded_int('signed int', a_651)) ;
  {-# <bounds1.c:6:4, bounds1.c:6:13> #-} let strong a_652: loaded integer =
    {-# §6.5#2 #-}
    bound({-# <bounds1.c:6:10, bounds1.c:6:12> #-} pure(Specified(43))) in
  store('signed int', x, conv_loaded_int('signed int', a_652)) ;
  {-# <bounds1.c:7:4, bounds1.c:7:13> #-} let strong a_653: loaded integer =
    {-# §6.5#2 #-}
    bound({-# <bounds1.c:7:10, bounds1.c:7:12> #-} pure(Specified(44))) in
  store('signed int', z, conv_loaded_int('signed int', a_653)) ;
  {-# <bounds1.c:9:4, bounds1.c:9:19> #-} let strong a_654: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <bounds1.c:9:10, bounds1.c:9:18> bounds1.c:9:10 #-} let weak a_664: pointer =
        {-# §6.5.3.2 #-}
        {-# <bounds1.c:9:10, bounds1.c:9:18> bounds1.c:9:10 #-} let weak a_655: loaded pointer =
          {-# §6.5.6 #-}
          {-# <bounds1.c:9:11, bounds1.c:9:18> #-} let weak (a_659: loaded pointer,
          a_660: loaded integer) =
            unseq(
              {-# §6.5.3.2#3, sentence 5 #-}
              {-# <bounds1.c:9:12, bounds1.c:9:14> bounds1.c:9:12 #-} let weak a_658: pointer =
                {-# <bounds1.c:9:13, bounds1.c:9:14> #-} pure(x) in
              pure(Specified(a_658))
            ,
              {-# <bounds1.c:9:16, bounds1.c:9:17> #-} pure(Specified(1))
            ) in
          case (a_659, a_660) of
            | (Specified(a_661: pointer), Specified(a_662: integer)) =>
                let weak a_663: pointer =
                  memop(PtrArrayShift, a_661, 'signed int', 0 - a_662) in
                pure(Specified(a_663))
            | _: (loaded pointer,loaded integer) =>
                pure(undef(<<UB_CERB004_unspecified__pointer_sub>>))
          end in
        case a_655 of
          | Specified(a_656: pointer) =>
              let weak a_657: boolean =
                memop(PtrValidForDeref, 'signed int', a_656) in
              pure(
                if a_657 then
                  a_656
                else
                  undef(<<UB043_indirection_invalid_value>>)
              )
          | Unspecified(_: ctype) =>
              pure(undef(<<UB043_indirection_invalid_value>>))
        end in
      load('signed int', a_664)
    ) in
  store('signed int', v, conv_loaded_int('signed int', a_654)) ;
  {-# <bounds1.c:11:4, bounds1.c:11:37> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <bounds1.c:11:4, bounds1.c:11:36> #-} let strong ((a_666: loaded pointer,
      (a_667: ctype, a_668: [ctype], a_669: boolean, a_670: boolean)),
      a_674: loaded pointer, a_676: loaded pointer, a_680: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_665: loaded pointer =
            {-# <bounds1.c:11:4, bounds1.c:11:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_665, cfunction(a_665)))
        ,
          {-# <bounds1.c:11:12, bounds1.c:11:20> #-} let weak a_675: pointer =
            {-# <bounds1.c:11:12, bounds1.c:11:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_675)
        ,
          {-# <bounds1.c:11:21, bounds1.c:11:33> #-} let weak a_678: pointer =
            {-# <bounds1.c:11:21, bounds1.c:11:33> #-} pure(a_677) in
          {-# §6.3.2.1#3 #-}
          let weak a_679: pointer = memop(PtrArrayShift, a_678, 'char', 0) in
          pure(Specified(a_679))
        ,
          {-# <bounds1.c:11:34, bounds1.c:11:35> #-} let weak a_681: pointer =
            {-# <bounds1.c:11:34, bounds1.c:11:35> #-} pure(v) in
          load('signed int', a_681)
        ) in
      if not(params_length(a_668) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_669) \/ not(are_compatible ('signed int', a_667)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_673: pointer =
            let a_682: ctype = params_nth(a_668, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_682)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_683: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_683, a_674) in
              pure(a_683) in
          let strong a_672: pointer =
            let a_684: ctype = params_nth(a_668, 1) in
            if not(are_compatible ('const char*', a_684)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_685: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_685, a_676) in
              pure(a_685) in
          let strong a_671: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_680)) in
          let strong a_686: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_666, a_673, a_672, [('signed int', a_671)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_673)
            ,
              kill('char*', a_672)
            ,
              kill('signed int', a_671)
            ) in
          pure(a_686)
    ) in
  pure(Unit) ;
  kill('signed int', y) ;
  kill('signed int', x) ;
  kill('signed int', z) ;
  kill('signed int', v) ;
  pure(Unit) ;
  {-# <bounds1.c:3:0, bounds1.c:12:1> bounds1.c:3:4 - bounds1.c:3:8 #-} save ret_650: loaded integer (a_687: loaded integer:= Specified(0)) in
    pure(a_687)

