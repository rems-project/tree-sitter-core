-- Aggregates




-- Globals
glob a_728: pointer [ail_ctype = 'char[17]'] :=
  let strong a_761: pointer = create(Ivalignof('char[17]'), 'char[17]') in
  store_lock('char[17]', a_761,
  Specified(Array(Specified(conv_int('char', 105)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 48)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 60)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_762: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_761,
    18446744073701163007) in
  case a_762 of
    | Specified(a_761: pointer) =>
        pure(a_761)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_746: pointer [ail_ctype = 'char[5]'] :=
  let strong a_763: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_763,
  Specified(Array(Specified(conv_int('char', 116)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0)))) ;
  let strong a_764: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_763,
    18446744073701163007) in
  case a_764 of
    | Specified(a_763: pointer) =>
        pure(a_763)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_749: pointer [ail_ctype = 'char[6]'] :=
  let strong a_765: pointer = create(Ivalignof('char[6]'), 'char[6]') in
  store_lock('char[6]', a_765,
  Specified(Array(Specified(conv_int('char', 102)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0)))) ;
  let strong a_766: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_765,
    18446744073701163007) in
  case a_766 of
    | Specified(a_765: pointer) =>
        pure(a_765)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

-- Fun map
proc main (): eff loaded integer :=
  {-# <prov0.c:6:0, prov0.c:14:1> #-} let strong x0: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong x1: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong ip0: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong ip1: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  {-# <prov0.c:7:4, prov0.c:7:13> #-} let strong a_704: loaded integer =
    {-# §6.5#2 #-}
    bound({-# <prov0.c:7:11, prov0.c:7:12> #-} pure(Specified(0))) in
  store('signed int', x0, conv_loaded_int('signed int', a_704)) ;
  {-# <prov0.c:8:4, prov0.c:8:13> #-} let strong a_705: loaded integer =
    {-# §6.5#2 #-}
    bound({-# <prov0.c:8:11, prov0.c:8:12> #-} pure(Specified(0))) in
  store('signed int', x1, conv_loaded_int('signed int', a_705)) ;
  {-# <prov0.c:10:4, prov0.c:10:35> #-} let strong a_706: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.4 #-}
      {-# <prov0.c:10:20, prov0.c:10:34> prov0.c:10:20 #-} let weak a_707: loaded pointer =
        {-# §6.5.3.2#3, sentence 5 #-}
        {-# <prov0.c:10:31, prov0.c:10:34> prov0.c:10:31 #-} let weak a_709: pointer =
          {-# <prov0.c:10:32, prov0.c:10:34> #-} pure(x0) in
        pure(Specified(a_709)) in
      case a_707 of
        | Specified(a_708: pointer) =>
            let weak a_710: integer =
              memop(IntFromPtr, 'signed int', 'uintptr_t', a_708) in
            pure(Specified(a_710))
        | Unspecified(_: ctype) =>
            pure(Unspecified('uintptr_t'))
      end
    ) in
  store('uintptr_t', ip0, conv_loaded_int('uintptr_t', a_706)) ;
  {-# <prov0.c:11:4, prov0.c:11:35> #-} let strong a_711: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.4 #-}
      {-# <prov0.c:11:20, prov0.c:11:34> prov0.c:11:20 #-} let weak a_712: loaded pointer =
        {-# §6.5.3.2#3, sentence 5 #-}
        {-# <prov0.c:11:31, prov0.c:11:34> prov0.c:11:31 #-} let weak a_714: pointer =
          {-# <prov0.c:11:32, prov0.c:11:34> #-} pure(x1) in
        pure(Specified(a_714)) in
      case a_712 of
        | Specified(a_713: pointer) =>
            let weak a_715: integer =
              memop(IntFromPtr, 'signed int', 'uintptr_t', a_713) in
            pure(Specified(a_715))
        | Unspecified(_: ctype) =>
            pure(Unspecified('uintptr_t'))
      end
    ) in
  store('uintptr_t', ip1, conv_loaded_int('uintptr_t', a_711)) ;
  {-# <prov0.c:13:4, prov0.c:13:65> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <prov0.c:13:4, prov0.c:13:64> #-} let strong ((a_717: loaded pointer,
      (a_718: ctype, a_719: [ctype], a_720: boolean, a_721: boolean)),
      a_725: loaded pointer, a_727: loaded pointer, a_731: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_716: loaded pointer =
            {-# <prov0.c:13:4, prov0.c:13:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_716, cfunction(a_716)))
        ,
          {-# <prov0.c:13:12, prov0.c:13:20> #-} let weak a_726: pointer =
            {-# <prov0.c:13:12, prov0.c:13:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_726)
        ,
          {-# <prov0.c:13:21, prov0.c:13:40> #-} let weak a_729: pointer =
            {-# <prov0.c:13:21, prov0.c:13:40> #-} pure(a_728) in
          {-# §6.3.2.1#3 #-}
          let weak a_730: pointer = memop(PtrArrayShift, a_729, 'char', 0) in
          pure(Specified(a_730))
        ,
          {-# §6.5.15#4, sentence 1 #-}
          {-# <prov0.c:13:41, prov0.c:13:63> prov0.c:13:48 #-} let strong a_744: loaded integer =
            {-# <prov0.c:13:41, prov0.c:13:48> prov0.c:13:44 #-} let weak (a_732: loaded integer,
            a_733: loaded integer) =
              unseq(
                {-# §6.5.8 #-}
                {-# <prov0.c:13:41, prov0.c:13:48> prov0.c:13:44 #-} let weak (a_739: loaded integer,
                a_740: loaded integer) =
                  unseq(
                    {-# <prov0.c:13:41, prov0.c:13:44> #-} let weak a_737: pointer =
                      {-# <prov0.c:13:41, prov0.c:13:44> #-} pure(ip0) in
                    load('uintptr_t', a_737)
                  ,
                    {-# <prov0.c:13:45, prov0.c:13:48> #-} let weak a_738: pointer =
                      {-# <prov0.c:13:45, prov0.c:13:48> #-} pure(ip1) in
                    load('uintptr_t', a_738)
                  ) in
                case (a_739, a_740) of
                  | (Specified(a_741: integer), Specified(a_742: integer)) =>
                      {-# §6.5.8#6 #-}
                      pure(
                        if conv_int('uintptr_t', a_741) <
                        conv_int('uintptr_t', a_742) then
                          Specified(1)
                        else
                          Specified(0)
                      )
                  | _: (loaded integer,loaded integer) =>
                      pure(Unspecified('signed int'))
                end
              ,
                {-# <prov0.c:13:41, prov0.c:13:48> prov0.c:13:44 #-} pure(
                  Specified(0)
                )
              ) in
            pure(
              case (a_732, a_733) of
                | (Specified(a_734: integer), Specified(a_735: integer)) =>
                    if conv_int('signed int', a_734) =
                    conv_int('signed int', a_735) then
                      Specified(1)
                    else
                      Specified(0)
                | _: (loaded integer,loaded integer) =>
                    Unspecified('signed int')
              end
            ) in
          case a_744 of
            | Specified(a_745: integer) =>
                {-# §6.5.15#4, sentence 2 #-}
                if a_745 = 0 then
                  {-# <prov0.c:13:49, prov0.c:13:55> #-} let weak a_747: pointer =
                    {-# <prov0.c:13:49, prov0.c:13:55> #-} pure(a_746) in
                  {-# §6.3.2.1#3 #-}
                  let weak a_748: pointer =
                    memop(PtrArrayShift, a_747, 'char', 0) in
                  pure(Specified(a_748))
                else
                  {-# <prov0.c:13:56, prov0.c:13:63> #-} let weak a_750: pointer =
                    {-# <prov0.c:13:56, prov0.c:13:63> #-} pure(a_749) in
                  {-# §6.3.2.1#3 #-}
                  let weak a_751: pointer =
                    memop(PtrArrayShift, a_750, 'char', 0) in
                  pure(Specified(a_751))
            | Unspecified(_: ctype) =>
                pure(undef(<<UB_CERB004_unspecified__conditional>>))
          end
        ) in
      if not(params_length(a_719) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_720) \/ not(are_compatible ('signed int', a_718)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_724: pointer =
            let a_752: ctype = params_nth(a_719, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_752)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_753: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_753, a_725) in
              pure(a_753) in
          let strong a_723: pointer =
            let a_754: ctype = params_nth(a_719, 1) in
            if not(are_compatible ('const char*', a_754)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_755: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_755, a_727) in
              pure(a_755) in
          let strong a_722: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'char*', a_731) in
          let strong a_756: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_717, a_724, a_723, [('char*', a_722)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_724)
            ,
              kill('char*', a_723)
            ,
              kill('char*', a_722)
            ) in
          pure(a_756)
    ) in
  pure(Unit) ;
  kill('signed int', x0) ;
  kill('signed int', x1) ;
  kill('uintptr_t', ip0) ;
  kill('uintptr_t', ip1) ;
  pure(Unit) ;
  {-# <prov0.c:5:0, prov0.c:14:1> prov0.c:5:4 - prov0.c:5:8 #-} save ret_703: loaded integer (a_757: loaded integer:= Specified(0)) in
    pure(a_757)

