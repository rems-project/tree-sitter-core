-- Aggregates










-- Globals
glob a_941: pointer [ail_ctype = 'char[23]'] :=
  let strong a_1442: pointer = create(Ivalignof('char[23]'), 'char[23]') in
  store_lock('char[23]', a_1442,
  Specified(Array(Specified(conv_int('char', 68)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 98)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1443: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1442,
    18446744073701163007) in
  case a_1443 of
    | Specified(a_1442: pointer) =>
        pure(a_1442)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1007: pointer [ail_ctype = 'char[11]'] :=
  let strong a_1444: pointer = create(Ivalignof('char[11]'), 'char[11]') in
  store_lock('char[11]', a_1444,
  Specified(Array(Specified(conv_int('char', 83)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1445: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1444,
    18446744073701163007) in
  case a_1445 of
    | Specified(a_1444: pointer) =>
        pure(a_1444)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1043: pointer [ail_ctype = 'char[22]'] :=
  let strong a_1446: pointer = create(Ivalignof('char[22]'), 'char[22]') in
  store_lock('char[22]', a_1446,
  Specified(Array(Specified(conv_int('char', 68)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1447: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1446,
    18446744073701163007) in
  case a_1447 of
    | Specified(a_1446: pointer) =>
        pure(a_1446)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1083: pointer [ail_ctype = 'char[11]'] :=
  let strong a_1448: pointer = create(Ivalignof('char[11]'), 'char[11]') in
  store_lock('char[11]', a_1448,
  Specified(Array(Specified(conv_int('char', 86)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1449: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1448,
    18446744073701163007) in
  case a_1449 of
    | Specified(a_1448: pointer) =>
        pure(a_1448)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1116: pointer [ail_ctype = 'char[5]'] :=
  let strong a_1450: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_1450,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0)))) ;
  let strong a_1451: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1450,
    18446744073701163007) in
  case a_1451 of
    | Specified(a_1450: pointer) =>
        pure(a_1450)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1120: pointer [ail_ctype = 'char[9]'] :=
  let strong a_1452: pointer = create(Ivalignof('char[9]'), 'char[9]') in
  store_lock('char[9]', a_1452,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0)))) ;
  let strong a_1453: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1452,
    18446744073701163007) in
  case a_1453 of
    | Specified(a_1452: pointer) =>
        pure(a_1452)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1144: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1454: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1454,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(0)))) ;
  let strong a_1455: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1454,
    18446744073701163007) in
  case a_1455 of
    | Specified(a_1454: pointer) =>
        pure(a_1454)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1185: pointer [ail_ctype = 'char[5]'] :=
  let strong a_1456: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_1456,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 48)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 120)), Specified(0)))) ;
  let strong a_1457: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1456,
    18446744073701163007) in
  case a_1457 of
    | Specified(a_1456: pointer) =>
        pure(a_1456)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1233: pointer [ail_ctype = 'char[2]'] :=
  let strong a_1458: pointer = create(Ivalignof('char[2]'), 'char[2]') in
  store_lock('char[2]', a_1458,
  Specified(Array(Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1459: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1458,
    18446744073701163007) in
  case a_1459 of
    | Specified(a_1458: pointer) =>
        pure(a_1458)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1306: pointer [ail_ctype = 'char[26]'] :=
  let strong a_1460: pointer = create(Ivalignof('char[26]'), 'char[26]') in
  store_lock('char[26]', a_1460,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 96)),
  Specified(0)))) ;
  let strong a_1461: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1460,
    18446744073701163007) in
  case a_1461 of
    | Specified(a_1460: pointer) =>
        pure(a_1460)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1322: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1462: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1462,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 112)),
  Specified(0)))) ;
  let strong a_1463: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1462,
    18446744073701163007) in
  case a_1463 of
    | Specified(a_1462: pointer) =>
        pure(a_1462)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1362: pointer [ail_ctype = 'char[31]'] :=
  let strong a_1464: pointer = create(Ivalignof('char[31]'), 'char[31]') in
  store_lock('char[31]', a_1464,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 96)), Specified(0)))) ;
  let strong a_1465: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1464,
    18446744073701163007) in
  case a_1465 of
    | Specified(a_1464: pointer) =>
        pure(a_1464)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1377: pointer [ail_ctype = 'char[27]'] :=
  let strong a_1466: pointer = create(Ivalignof('char[27]'), 'char[27]') in
  store_lock('char[27]', a_1466,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 91)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 80)), Specified(conv_int('char', 44)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 35)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 98)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 93)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 63)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 65)), Specified(0)))) ;
  let strong a_1467: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1466,
    18446744073701163007) in
  case a_1467 of
    | Specified(a_1466: pointer) =>
        pure(a_1466)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1417: pointer [ail_ctype = 'char[15]'] :=
  let strong a_1468: pointer = create(Ivalignof('char[15]'), 'char[15]') in
  store_lock('char[15]', a_1468,
  Specified(Array(Specified(conv_int('char', 115)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1469: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1468,
    18446744073701163007) in
  case a_1469 of
    | Specified(a_1468: pointer) =>
        pure(a_1468)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

-- Fun map
proc main (): eff loaded integer :=
  {-# <ghost2.c:7:0, ghost2.c:21:1> #-} let strong x: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong y: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong p0: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong p1: pointer =
    create(Ivalignof('signed int**'), 'signed int**') in
  {-# <ghost2.c:8:4, ghost2.c:8:13> #-} let strong a_908: loaded integer =
    {-# §6.5#2 #-}
    bound({-# <ghost2.c:8:10, ghost2.c:8:12> #-} pure(Specified(42))) in
  store('signed int', x, conv_loaded_int('signed int', a_908)) ;
  {-# §6.2.4#6 #-}
  {-# <ghost2.c:9:4, ghost2.c:9:10> #-} store('signed int', y,
  Unspecified('signed int')) ;
  {-# <ghost2.c:10:4, ghost2.c:10:17> #-} let strong a_909: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.3.2#3, sentence 5 #-}
      {-# <ghost2.c:10:14, ghost2.c:10:16> ghost2.c:10:14 #-} let weak a_910: pointer =
        {-# <ghost2.c:10:15, ghost2.c:10:16> #-} pure(x) in
      pure(Specified(a_910))
    ) in
  store('signed int*', p0, a_909) ;
  {-# <ghost2.c:11:4, ghost2.c:11:36> #-} let strong a_911: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <ghost2.c:11:15, ghost2.c:11:35> #-} let strong ((a_913: loaded pointer,
      (a_914: ctype, a_915: [ctype], a_916: boolean, a_917: boolean)),
      a_919: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_912: loaded pointer =
            {-# <ghost2.c:11:15, ghost2.c:11:21> #-} pure(
              Specified(Cfunction(malloc_proxy))
            ) in
          pure((a_912, cfunction(a_912)))
        ,
          {-# <ghost2.c:11:22, ghost2.c:11:34> ghost2.c:11:22 #-} pure(
            Specified(Ivsizeof('signed int*'))
          )
        ) in
      if not(params_length(a_915) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_916 \/ not(are_compatible ('void*', a_914)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_918: pointer =
            let a_920: ctype = params_nth(a_915, 0) in
            if not(are_compatible ('size_t', a_920)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_921: pointer =
                create(Ivalignof('size_t'), 'size_t') in
              let weak _: unit =
                store('size_t', a_921, conv_loaded_int('size_t', a_919)) in
              pure(a_921) in
          let strong a_922: loaded pointer =
            ccall('void* (*) (size_t)', a_913, a_918) in
          kill('size_t', a_918) ;
          pure(a_922)
    ) in
  store('signed int**', p1, a_911) ;
  {-# <ghost2.c:12:4, ghost2.c:12:13> #-} let strong _: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <ghost2.c:12:4, ghost2.c:12:12> ghost2.c:12:8 #-} let weak (a_907: pointer,
      a_928: loaded pointer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# §6.5.3.2 #-}
          {-# <ghost2.c:12:4, ghost2.c:12:7> ghost2.c:12:4 #-} let weak a_923: loaded pointer =
            {-# <ghost2.c:12:5, ghost2.c:12:7> #-} let weak a_926: pointer =
              {-# <ghost2.c:12:5, ghost2.c:12:7> #-} pure(p1) in
            load('signed int**', a_926) in
          case a_923 of
            | Specified(a_924: pointer) =>
                let weak a_925: boolean =
                  memop(PtrValidForDeref, 'signed int*', a_924) in
                pure(
                  if a_925 then
                    a_924
                  else
                    undef(<<UB043_indirection_invalid_value>>)
                )
            | Unspecified(_: ctype) =>
                pure(undef(<<UB043_indirection_invalid_value>>))
          end
        ,
          {-# §6.5.3.2#3, sentence 5 #-}
          {-# <ghost2.c:12:10, ghost2.c:12:12> ghost2.c:12:10 #-} let weak a_927: pointer =
            {-# <ghost2.c:12:11, ghost2.c:12:12> #-} pure(y) in
          pure(Specified(a_927))
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('signed int*', a_907, a_928)) in
      pure(a_928)
    ) in
  pure(Unit) ;
  {-# <ghost2.c:14:4, ghost2.c:14:72> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <ghost2.c:14:4, ghost2.c:14:71> #-} let strong ((a_930: loaded pointer,
      (a_931: ctype, a_932: [ctype], a_933: boolean, a_934: boolean)),
      a_938: loaded pointer, a_940: loaded pointer, a_944: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_929: loaded pointer =
            {-# <ghost2.c:14:4, ghost2.c:14:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_929, cfunction(a_929)))
        ,
          {-# <ghost2.c:14:12, ghost2.c:14:20> #-} let weak a_939: pointer =
            {-# <ghost2.c:14:12, ghost2.c:14:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_939)
        ,
          {-# <ghost2.c:14:21, ghost2.c:14:52> #-} let weak a_942: pointer =
            {-# <ghost2.c:14:21, ghost2.c:14:52> #-} pure(a_941) in
          {-# §6.3.2.1#3 #-}
          let weak a_943: pointer = memop(PtrArrayShift, a_942, 'char', 0) in
          pure(Specified(a_943))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <ghost2.c:14:54, ghost2.c:14:70> #-} let strong ((a_946: loaded pointer,
          (a_947: ctype, a_948: [ctype], a_949: boolean, a_950: boolean)),
          a_952: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_945: loaded pointer =
                {-# <ghost2.c:14:54, ghost2.c:14:58> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_945, cfunction(a_945)))
            ,
              {-# §6.5.4 #-}
              {-# <ghost2.c:14:59, ghost2.c:14:69> ghost2.c:14:59 #-} let weak a_959: pointer =
                {-# §6.5.3.2 #-}
                {-# <ghost2.c:14:66, ghost2.c:14:69> ghost2.c:14:66 #-} let weak a_955: loaded pointer =
                  {-# <ghost2.c:14:67, ghost2.c:14:69> #-} let weak a_958: pointer =
                    {-# <ghost2.c:14:67, ghost2.c:14:69> #-} pure(p1) in
                  load('signed int**', a_958) in
                case a_955 of
                  | Specified(a_956: pointer) =>
                      let weak a_957: boolean =
                        memop(PtrValidForDeref, 'signed int*', a_956) in
                      pure(
                        if a_957 then
                          a_956
                        else
                          undef(<<UB043_indirection_invalid_value>>)
                      )
                  | Unspecified(_: ctype) =>
                      pure(undef(<<UB043_indirection_invalid_value>>))
                end in
              load('signed int*', a_959)
            ) in
          if not(params_length(a_948) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_949 \/ not(are_compatible ('const char*', a_947)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_951: pointer =
                let a_961: ctype = params_nth(a_948, 0) in
                if not(are_compatible ('void*', a_961)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_962: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_962, a_952) in
                  pure(a_962) in
              let strong a_963: loaded pointer =
                ccall('const char* (*) (void*)', a_946, a_951) in
              kill('void*', a_951) ;
              pure(a_963)
        ) in
      if not(params_length(a_932) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_933) \/ not(are_compatible ('signed int', a_931)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_937: pointer =
            let a_964: ctype = params_nth(a_932, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_964)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_965: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_965, a_938) in
              pure(a_965) in
          let strong a_936: pointer =
            let a_966: ctype = params_nth(a_932, 1) in
            if not(are_compatible ('const char*', a_966)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_967: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_967, a_940) in
              pure(a_967) in
          let strong a_935: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_944) in
          let strong a_968: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_930, a_937, a_936, [('const char*', a_935)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_937)
            ,
              kill('char*', a_936)
            ,
              kill('char*', a_935)
            ) in
          pure(a_968)
    ) in
  pure(Unit) ;
  {-# <ghost2.c:15:4, ghost2.c:15:34> #-} let strong _: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <ghost2.c:15:4, ghost2.c:15:33> #-} let strong ((a_970: loaded pointer,
      (a_971: ctype, a_972: [ctype], a_973: boolean, a_974: boolean)),
      a_978: loaded pointer, a_980: loaded pointer, a_982: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_969: loaded pointer =
            {-# <ghost2.c:15:4, ghost2.c:15:10> #-} pure(
              Specified(Cfunction(memcpy_proxy))
            ) in
          pure((a_969, cfunction(a_969)))
        ,
          {-# <ghost2.c:15:11, ghost2.c:15:13> #-} let weak a_979: pointer =
            {-# <ghost2.c:15:11, ghost2.c:15:13> #-} pure(p1) in
          load('signed int**', a_979)
        ,
          {-# §6.5.3.2#3, sentence 5 #-}
          {-# <ghost2.c:15:14, ghost2.c:15:17> ghost2.c:15:14 #-} let weak a_981: pointer =
            {-# <ghost2.c:15:15, ghost2.c:15:17> #-} pure(p0) in
          pure(Specified(a_981))
        ,
          {-# §6.5.6 #-}
          {-# <ghost2.c:15:18, ghost2.c:15:32> ghost2.c:15:30 #-} let weak (a_983: loaded integer,
          a_984: loaded integer) =
            unseq(
              {-# <ghost2.c:15:18, ghost2.c:15:30> ghost2.c:15:18 #-} pure(
                Specified(Ivsizeof('signed int*'))
              )
            ,
              {-# <ghost2.c:15:31, ghost2.c:15:32> #-} pure(Specified(1))
            ) in
          pure(
            case (a_983, a_984) of
              | (Specified(a_985: integer), Specified(a_986: integer)) =>
                  Specified(wrapI_sub('size_t', if all_values_representable_in('size_t',
                  'signed int') then
                    conv_int('signed int', a_985)
                  else
                    conv_int('unsigned int', a_985), if all_values_representable_in('size_t',
                  'signed int') then
                    conv_int('signed int', a_986)
                  else
                    conv_int('unsigned int', a_986)))
              | _: (loaded integer,loaded integer) =>
                  Unspecified('size_t')
            end
          )
        ) in
      if not(params_length(a_972) = 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_973 \/ not(are_compatible ('void*', a_971)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_977: pointer =
            let a_988: ctype = params_nth(a_972, 0) in
            if not(are_compatible ('void*', a_988)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_989: pointer =
                create(Ivalignof('void*'), 'void*') in
              let weak _: unit = store('void*', a_989, a_978) in
              pure(a_989) in
          let strong a_976: pointer =
            let a_990: ctype = params_nth(a_972, 1) in
            if not(are_compatible ('const void*', a_990)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_991: pointer =
                create(Ivalignof('const void*'), 'const void*') in
              let weak _: unit = store('const void*', a_991, a_980) in
              pure(a_991) in
          let strong a_975: pointer =
            let a_992: ctype = params_nth(a_972, 2) in
            if not(are_compatible ('size_t', a_992)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_993: pointer =
                create(Ivalignof('size_t'), 'size_t') in
              let weak _: unit =
                store('size_t', a_993, conv_loaded_int('size_t', a_982)) in
              pure(a_993) in
          let strong a_994: loaded pointer =
            ccall('void* (*) (void*restrict , const void*restrict , size_t)',
            a_970, a_977, a_976, a_975) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('void*', a_977)
            ,
              kill('void*', a_976)
            ,
              kill('size_t', a_975)
            ) in
          pure(a_994)
    ) in
  pure(Unit) ;
  {-# <ghost2.c:17:4, ghost2.c:17:59> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <ghost2.c:17:4, ghost2.c:17:58> #-} let strong ((a_996: loaded pointer,
      (a_997: ctype, a_998: [ctype], a_999: boolean, a_1000: boolean)),
      a_1004: loaded pointer, a_1006: loaded pointer, a_1010: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_995: loaded pointer =
            {-# <ghost2.c:17:4, ghost2.c:17:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_995, cfunction(a_995)))
        ,
          {-# <ghost2.c:17:12, ghost2.c:17:20> #-} let weak a_1005: pointer =
            {-# <ghost2.c:17:12, ghost2.c:17:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_1005)
        ,
          {-# <ghost2.c:17:21, ghost2.c:17:40> #-} let weak a_1008: pointer =
            {-# <ghost2.c:17:21, ghost2.c:17:40> #-} pure(a_1007) in
          {-# §6.3.2.1#3 #-}
          let weak a_1009: pointer =
            memop(PtrArrayShift, a_1008, 'char', 0) in
          pure(Specified(a_1009))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <ghost2.c:17:42, ghost2.c:17:57> #-} let strong ((a_1012: loaded pointer,
          (a_1013: ctype, a_1014: [ctype], a_1015: boolean, a_1016: boolean)),
          a_1018: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_1011: loaded pointer =
                {-# <ghost2.c:17:42, ghost2.c:17:46> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_1011, cfunction(a_1011)))
            ,
              {-# §6.5.4 #-}
              {-# <ghost2.c:17:47, ghost2.c:17:56> ghost2.c:17:47 #-} let weak a_1021: pointer =
                {-# <ghost2.c:17:54, ghost2.c:17:56> #-} pure(p0) in
              load('signed int*', a_1021)
            ) in
          if not(params_length(a_1014) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_1015 \/ not(are_compatible ('const char*', a_1013)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1017: pointer =
                let a_1023: ctype = params_nth(a_1014, 0) in
                if not(are_compatible ('void*', a_1023)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_1024: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_1024, a_1018) in
                  pure(a_1024) in
              let strong a_1025: loaded pointer =
                ccall('const char* (*) (void*)', a_1012, a_1017) in
              kill('void*', a_1017) ;
              pure(a_1025)
        ) in
      if not(params_length(a_998) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_999) \/ not(are_compatible ('signed int', a_997)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1003: pointer =
            let a_1026: ctype = params_nth(a_998, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1026)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1027: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1027, a_1004) in
              pure(a_1027) in
          let strong a_1002: pointer =
            let a_1028: ctype = params_nth(a_998, 1) in
            if not(are_compatible ('const char*', a_1028)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1029: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1029, a_1006) in
              pure(a_1029) in
          let strong a_1001: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_1010) in
          let strong a_1030: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_996, a_1003, a_1002, [('const char*', a_1001)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1003)
            ,
              kill('char*', a_1002)
            ,
              kill('char*', a_1001)
            ) in
          pure(a_1030)
    ) in
  pure(Unit) ;
  {-# <ghost2.c:18:4, ghost2.c:18:71> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <ghost2.c:18:4, ghost2.c:18:70> #-} let strong ((a_1032: loaded pointer,
      (a_1033: ctype, a_1034: [ctype], a_1035: boolean, a_1036: boolean)),
      a_1040: loaded pointer, a_1042: loaded pointer, a_1046: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_1031: loaded pointer =
            {-# <ghost2.c:18:4, ghost2.c:18:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_1031, cfunction(a_1031)))
        ,
          {-# <ghost2.c:18:12, ghost2.c:18:20> #-} let weak a_1041: pointer =
            {-# <ghost2.c:18:12, ghost2.c:18:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_1041)
        ,
          {-# <ghost2.c:18:21, ghost2.c:18:51> #-} let weak a_1044: pointer =
            {-# <ghost2.c:18:21, ghost2.c:18:51> #-} pure(a_1043) in
          {-# §6.3.2.1#3 #-}
          let weak a_1045: pointer =
            memop(PtrArrayShift, a_1044, 'char', 0) in
          pure(Specified(a_1045))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <ghost2.c:18:53, ghost2.c:18:69> #-} let strong ((a_1048: loaded pointer,
          (a_1049: ctype, a_1050: [ctype], a_1051: boolean, a_1052: boolean)),
          a_1054: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_1047: loaded pointer =
                {-# <ghost2.c:18:53, ghost2.c:18:57> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_1047, cfunction(a_1047)))
            ,
              {-# §6.5.4 #-}
              {-# <ghost2.c:18:58, ghost2.c:18:68> ghost2.c:18:58 #-} let weak a_1061: pointer =
                {-# §6.5.3.2 #-}
                {-# <ghost2.c:18:65, ghost2.c:18:68> ghost2.c:18:65 #-} let weak a_1057: loaded pointer =
                  {-# <ghost2.c:18:66, ghost2.c:18:68> #-} let weak a_1060: pointer =
                    {-# <ghost2.c:18:66, ghost2.c:18:68> #-} pure(p1) in
                  load('signed int**', a_1060) in
                case a_1057 of
                  | Specified(a_1058: pointer) =>
                      let weak a_1059: boolean =
                        memop(PtrValidForDeref, 'signed int*', a_1058) in
                      pure(
                        if a_1059 then
                          a_1058
                        else
                          undef(<<UB043_indirection_invalid_value>>)
                      )
                  | Unspecified(_: ctype) =>
                      pure(undef(<<UB043_indirection_invalid_value>>))
                end in
              load('signed int*', a_1061)
            ) in
          if not(params_length(a_1050) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_1051 \/ not(are_compatible ('const char*', a_1049)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1053: pointer =
                let a_1063: ctype = params_nth(a_1050, 0) in
                if not(are_compatible ('void*', a_1063)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_1064: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_1064, a_1054) in
                  pure(a_1064) in
              let strong a_1065: loaded pointer =
                ccall('const char* (*) (void*)', a_1048, a_1053) in
              kill('void*', a_1053) ;
              pure(a_1065)
        ) in
      if not(params_length(a_1034) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1035) \/ not(are_compatible ('signed int', a_1033)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1039: pointer =
            let a_1066: ctype = params_nth(a_1034, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1066)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1067: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1067, a_1040) in
              pure(a_1067) in
          let strong a_1038: pointer =
            let a_1068: ctype = params_nth(a_1034, 1) in
            if not(are_compatible ('const char*', a_1068)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1069: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1069, a_1042) in
              pure(a_1069) in
          let strong a_1037: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_1046) in
          let strong a_1070: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1032, a_1039, a_1038, [('const char*', a_1037)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1039)
            ,
              kill('char*', a_1038)
            ,
              kill('char*', a_1037)
            ) in
          pure(a_1070)
    ) in
  pure(Unit) ;
  {-# <ghost2.c:20:4, ghost2.c:20:41> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <ghost2.c:20:4, ghost2.c:20:40> #-} let strong ((a_1072: loaded pointer,
      (a_1073: ctype, a_1074: [ctype], a_1075: boolean, a_1076: boolean)),
      a_1080: loaded pointer, a_1082: loaded pointer, a_1086: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_1071: loaded pointer =
            {-# <ghost2.c:20:4, ghost2.c:20:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_1071, cfunction(a_1071)))
        ,
          {-# <ghost2.c:20:12, ghost2.c:20:20> #-} let weak a_1081: pointer =
            {-# <ghost2.c:20:12, ghost2.c:20:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_1081)
        ,
          {-# <ghost2.c:20:21, ghost2.c:20:34> #-} let weak a_1084: pointer =
            {-# <ghost2.c:20:21, ghost2.c:20:34> #-} pure(a_1083) in
          {-# §6.3.2.1#3 #-}
          let weak a_1085: pointer =
            memop(PtrArrayShift, a_1084, 'char', 0) in
          pure(Specified(a_1085))
        ,
          {-# <ghost2.c:20:35, ghost2.c:20:39> ghost2.c:20:35 #-} let weak a_1095: pointer =
            {-# §6.5.3.2 #-}
            {-# <ghost2.c:20:35, ghost2.c:20:39> ghost2.c:20:35 #-} let weak a_1087: loaded pointer =
              {-# <ghost2.c:20:36, ghost2.c:20:39> ghost2.c:20:36 #-} let weak a_1094: pointer =
                {-# §6.5.3.2 #-}
                {-# <ghost2.c:20:36, ghost2.c:20:39> ghost2.c:20:36 #-} let weak a_1090: loaded pointer =
                  {-# <ghost2.c:20:37, ghost2.c:20:39> #-} let weak a_1093: pointer =
                    {-# <ghost2.c:20:37, ghost2.c:20:39> #-} pure(p1) in
                  load('signed int**', a_1093) in
                case a_1090 of
                  | Specified(a_1091: pointer) =>
                      let weak a_1092: boolean =
                        memop(PtrValidForDeref, 'signed int*', a_1091) in
                      pure(
                        if a_1092 then
                          a_1091
                        else
                          undef(<<UB043_indirection_invalid_value>>)
                      )
                  | Unspecified(_: ctype) =>
                      pure(undef(<<UB043_indirection_invalid_value>>))
                end in
              load('signed int*', a_1094) in
            case a_1087 of
              | Specified(a_1088: pointer) =>
                  let weak a_1089: boolean =
                    memop(PtrValidForDeref, 'signed int', a_1088) in
                  pure(
                    if a_1089 then
                      a_1088
                    else
                      undef(<<UB043_indirection_invalid_value>>)
                  )
              | Unspecified(_: ctype) =>
                  pure(undef(<<UB043_indirection_invalid_value>>))
            end in
          load('signed int', a_1095)
        ) in
      if not(params_length(a_1074) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1075) \/ not(are_compatible ('signed int', a_1073)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1079: pointer =
            let a_1096: ctype = params_nth(a_1074, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1096)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1097: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1097, a_1080) in
              pure(a_1097) in
          let strong a_1078: pointer =
            let a_1098: ctype = params_nth(a_1074, 1) in
            if not(are_compatible ('const char*', a_1098)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1099: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1099, a_1082) in
              pure(a_1099) in
          let strong a_1077: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_1086)) in
          let strong a_1100: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1072, a_1079, a_1078, [('signed int', a_1077)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1079)
            ,
              kill('char*', a_1078)
            ,
              kill('signed int', a_1077)
            ) in
          pure(a_1100)
    ) in
  pure(Unit) ;
  kill('signed int', x) ;
  kill('signed int', y) ;
  kill('signed int*', p0) ;
  kill('signed int**', p1) ;
  pure(Unit) ;
  {-# <ghost2.c:6:0, ghost2.c:21:1> ghost2.c:6:4 - ghost2.c:6:8 #-} save ret_906: loaded integer (a_1101: loaded integer:= Specified(0)) in
    pure(a_1101)

