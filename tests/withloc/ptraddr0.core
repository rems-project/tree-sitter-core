-- Aggregates




-- Globals
glob a_724: pointer [ail_ctype = 'char[17]'] :=
  let strong a_751: pointer = create(Ivalignof('char[17]'), 'char[17]') in
  store_lock('char[17]', a_751,
  Specified(Array(Specified(conv_int('char', 112)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 95)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_752: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_751,
    18446744073701163007) in
  case a_752 of
    | Specified(a_751: pointer) =>
        pure(a_751)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_736: pointer [ail_ctype = 'char[9]'] :=
  let strong a_753: pointer = create(Ivalignof('char[9]'), 'char[9]') in
  store_lock('char[9]', a_753,
  Specified(Array(Specified(conv_int('char', 117)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 103)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 100)), Specified(0)))) ;
  let strong a_754: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_753,
    18446744073701163007) in
  case a_754 of
    | Specified(a_753: pointer) =>
        pure(a_753)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_739: pointer [ail_ctype = 'char[7]'] :=
  let strong a_755: pointer = create(Ivalignof('char[7]'), 'char[7]') in
  store_lock('char[7]', a_755,
  Specified(Array(Specified(conv_int('char', 115)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 103)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 100)), Specified(0)))) ;
  let strong a_756: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_755,
    18446744073701163007) in
  case a_756 of
    | Specified(a_755: pointer) =>
        pure(a_755)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

-- Fun map
proc main (): eff loaded integer :=
  {-# <ptraddr0.c:5:0, ptraddr0.c:8:1> #-} let strong is_unsigned: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  {-# <ptraddr0.c:6:4, ptraddr0.c:6:43> #-} let strong a_701: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.8 #-}
      {-# <ptraddr0.c:6:22, ptraddr0.c:6:42> #-} let weak (a_707: loaded integer,
      a_708: loaded integer) =
        unseq(
          {-# §6.5.4 #-}
          {-# <ptraddr0.c:6:23, ptraddr0.c:6:37> ptraddr0.c:6:23 #-} let weak a_702: loaded integer =
            {-# §6.5.3.3#3 #-}
            {-# <ptraddr0.c:6:35, ptraddr0.c:6:37> ptraddr0.c:6:35 #-} let weak a_705: loaded integer =
              {-# <ptraddr0.c:6:36, ptraddr0.c:6:37> #-} pure(Specified(1)) in
            pure(
              case a_705 of
                | Specified(a_704: integer) =>
                    Specified(catch_exceptional_condition_sub('signed int', 0, conv_int('signed int',
                    a_704)))
                | Unspecified(_: ctype) =>
                    Unspecified('signed int')
              end
            ) in
          pure(conv_loaded_int('ptraddr_t', a_702))
        ,
          {-# <ptraddr0.c:6:40, ptraddr0.c:6:41> #-} pure(Specified(0))
        ) in
      case (a_707, a_708) of
        | (Specified(a_709: integer), Specified(a_710: integer)) =>
            {-# §6.5.8#6 #-}
            pure(
              if if all_values_representable_in('ptraddr_t', 'signed int') then
                conv_int('signed int', a_709)
              else
                conv_int('unsigned int', a_709) >
              if all_values_representable_in('ptraddr_t', 'signed int') then
                conv_int('signed int', a_710)
              else
                conv_int('unsigned int', a_710) then
                Specified(1)
              else
                Specified(0)
            )
        | _: (loaded integer,loaded integer) =>
            pure(Unspecified('signed int'))
      end
    ) in
  store('signed int', is_unsigned, conv_loaded_int('signed int', a_701)) ;
  {-# <ptraddr0.c:7:4, ptraddr0.c:7:77> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <ptraddr0.c:7:4, ptraddr0.c:7:76> #-} let strong ((a_713: loaded pointer,
      (a_714: ctype, a_715: [ctype], a_716: boolean, a_717: boolean)),
      a_721: loaded pointer, a_723: loaded pointer, a_727: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_712: loaded pointer =
            {-# <ptraddr0.c:7:4, ptraddr0.c:7:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_712, cfunction(a_712)))
        ,
          {-# <ptraddr0.c:7:12, ptraddr0.c:7:20> #-} let weak a_722: pointer =
            {-# <ptraddr0.c:7:12, ptraddr0.c:7:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_722)
        ,
          {-# <ptraddr0.c:7:21, ptraddr0.c:7:40> #-} let weak a_725: pointer =
            {-# <ptraddr0.c:7:21, ptraddr0.c:7:40> #-} pure(a_724) in
          {-# §6.3.2.1#3 #-}
          let weak a_726: pointer = memop(PtrArrayShift, a_725, 'char', 0) in
          pure(Specified(a_726))
        ,
          {-# §6.5.15#4, sentence 1 #-}
          {-# <ptraddr0.c:7:42, ptraddr0.c:7:75> ptraddr0.c:7:54 #-} let strong a_734: loaded integer =
            {-# <ptraddr0.c:7:42, ptraddr0.c:7:53> #-} let weak (a_728: loaded integer,
            a_729: loaded integer) =
              unseq(
                {-# <ptraddr0.c:7:42, ptraddr0.c:7:53> #-} let weak a_733: pointer =
                  {-# <ptraddr0.c:7:42, ptraddr0.c:7:53> #-} pure(
                    is_unsigned
                  ) in
                load('signed int', a_733)
              ,
                {-# <ptraddr0.c:7:42, ptraddr0.c:7:53> #-} pure(Specified(0))
              ) in
            pure(
              case (a_728, a_729) of
                | (Specified(a_730: integer), Specified(a_731: integer)) =>
                    if conv_int('signed int', a_730) =
                    conv_int('signed int', a_731) then
                      Specified(1)
                    else
                      Specified(0)
                | _: (loaded integer,loaded integer) =>
                    Unspecified('signed int')
              end
            ) in
          case a_734 of
            | Specified(a_735: integer) =>
                {-# §6.5.15#4, sentence 2 #-}
                if a_735 = 0 then
                  {-# <ptraddr0.c:7:56, ptraddr0.c:7:66> #-} let weak a_737: pointer =
                    {-# <ptraddr0.c:7:56, ptraddr0.c:7:66> #-} pure(a_736) in
                  {-# §6.3.2.1#3 #-}
                  let weak a_738: pointer =
                    memop(PtrArrayShift, a_737, 'char', 0) in
                  pure(Specified(a_738))
                else
                  {-# <ptraddr0.c:7:67, ptraddr0.c:7:75> #-} let weak a_740: pointer =
                    {-# <ptraddr0.c:7:67, ptraddr0.c:7:75> #-} pure(a_739) in
                  {-# §6.3.2.1#3 #-}
                  let weak a_741: pointer =
                    memop(PtrArrayShift, a_740, 'char', 0) in
                  pure(Specified(a_741))
            | Unspecified(_: ctype) =>
                pure(undef(<<UB_CERB004_unspecified__conditional>>))
          end
        ) in
      if not(params_length(a_715) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_716) \/ not(are_compatible ('signed int', a_714)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_720: pointer =
            let a_742: ctype = params_nth(a_715, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_742)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_743: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_743, a_721) in
              pure(a_743) in
          let strong a_719: pointer =
            let a_744: ctype = params_nth(a_715, 1) in
            if not(are_compatible ('const char*', a_744)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_745: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_745, a_723) in
              pure(a_745) in
          let strong a_718: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'char*', a_727) in
          let strong a_746: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_713, a_720, a_719, [('char*', a_718)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_720)
            ,
              kill('char*', a_719)
            ,
              kill('char*', a_718)
            ) in
          pure(a_746)
    ) in
  pure(Unit) ;
  kill('signed int', is_unsigned) ;
  pure(Unit) ;
  {-# <ptraddr0.c:4:0, ptraddr0.c:8:1> ptraddr0.c:4:4 - ptraddr0.c:4:8 #-} save ret_700: loaded integer (a_747: loaded integer:= Specified(0)) in
    pure(a_747)

