-- Aggregates










-- Globals
glob a_1003: pointer [ail_ctype = 'char[35]'] :=
  let strong a_1610: pointer = create(Ivalignof('char[35]'), 'char[35]') in
  store_lock('char[35]', a_1610,
  Specified(Array(Specified(conv_int('char', 78)),
  Specified(conv_int('char', 85)), Specified(conv_int('char', 76)),
  Specified(conv_int('char', 76)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 122)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1611: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1610,
    18446744073701163007) in
  case a_1611 of
    | Specified(a_1610: pointer) =>
        pure(a_1610)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1104: pointer [ail_ctype = 'char[12]'] :=
  let strong a_1612: pointer = create(Ivalignof('char[12]'), 'char[12]') in
  store_lock('char[12]', a_1612,
  Specified(Array(Specified(conv_int('char', 112)),
  Specified(conv_int('char', 48)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 78)),
  Specified(conv_int('char', 85)), Specified(conv_int('char', 76)),
  Specified(conv_int('char', 76)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1613: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1612,
    18446744073701163007) in
  case a_1613 of
    | Specified(a_1612: pointer) =>
        pure(a_1612)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1134: pointer [ail_ctype = 'char[12]'] :=
  let strong a_1614: pointer = create(Ivalignof('char[12]'), 'char[12]') in
  store_lock('char[12]', a_1614,
  Specified(Array(Specified(conv_int('char', 112)),
  Specified(conv_int('char', 49)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 78)),
  Specified(conv_int('char', 85)), Specified(conv_int('char', 76)),
  Specified(conv_int('char', 76)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1615: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1614,
    18446744073701163007) in
  case a_1615 of
    | Specified(a_1614: pointer) =>
        pure(a_1614)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1167: pointer [ail_ctype = 'char[10]'] :=
  let strong a_1616: pointer = create(Ivalignof('char[10]'), 'char[10]') in
  store_lock('char[10]', a_1616,
  Specified(Array(Specified(conv_int('char', 112)),
  Specified(conv_int('char', 48)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 49)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1617: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1616,
    18446744073701163007) in
  case a_1617 of
    | Specified(a_1616: pointer) =>
        pure(a_1616)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1188: pointer [ail_ctype = 'char[21]'] :=
  let strong a_1618: pointer = create(Ivalignof('char[21]'), 'char[21]') in
  store_lock('char[21]', a_1618,
  Specified(Array(Specified(conv_int('char', 112)),
  Specified(conv_int('char', 48)), Specified(conv_int('char', 58)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 44)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 119)),
  Specified(conv_int('char', 104)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 104)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1619: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1618,
    18446744073701163007) in
  case a_1619 of
    | Specified(a_1618: pointer) =>
        pure(a_1618)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1235: pointer [ail_ctype = 'char[21]'] :=
  let strong a_1620: pointer = create(Ivalignof('char[21]'), 'char[21]') in
  store_lock('char[21]', a_1620,
  Specified(Array(Specified(conv_int('char', 112)),
  Specified(conv_int('char', 49)), Specified(conv_int('char', 58)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 44)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 119)),
  Specified(conv_int('char', 104)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 104)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1621: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1620,
    18446744073701163007) in
  case a_1621 of
    | Specified(a_1620: pointer) =>
        pure(a_1620)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1284: pointer [ail_ctype = 'char[5]'] :=
  let strong a_1622: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_1622,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0)))) ;
  let strong a_1623: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1622,
    18446744073701163007) in
  case a_1623 of
    | Specified(a_1622: pointer) =>
        pure(a_1622)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1288: pointer [ail_ctype = 'char[9]'] :=
  let strong a_1624: pointer = create(Ivalignof('char[9]'), 'char[9]') in
  store_lock('char[9]', a_1624,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0)))) ;
  let strong a_1625: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1624,
    18446744073701163007) in
  case a_1625 of
    | Specified(a_1624: pointer) =>
        pure(a_1624)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1312: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1626: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1626,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(0)))) ;
  let strong a_1627: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1626,
    18446744073701163007) in
  case a_1627 of
    | Specified(a_1626: pointer) =>
        pure(a_1626)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1353: pointer [ail_ctype = 'char[5]'] :=
  let strong a_1628: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_1628,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 48)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 120)), Specified(0)))) ;
  let strong a_1629: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1628,
    18446744073701163007) in
  case a_1629 of
    | Specified(a_1628: pointer) =>
        pure(a_1628)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1401: pointer [ail_ctype = 'char[2]'] :=
  let strong a_1630: pointer = create(Ivalignof('char[2]'), 'char[2]') in
  store_lock('char[2]', a_1630,
  Specified(Array(Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1631: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1630,
    18446744073701163007) in
  case a_1631 of
    | Specified(a_1630: pointer) =>
        pure(a_1630)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1474: pointer [ail_ctype = 'char[26]'] :=
  let strong a_1632: pointer = create(Ivalignof('char[26]'), 'char[26]') in
  store_lock('char[26]', a_1632,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 96)),
  Specified(0)))) ;
  let strong a_1633: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1632,
    18446744073701163007) in
  case a_1633 of
    | Specified(a_1632: pointer) =>
        pure(a_1632)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1490: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1634: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1634,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 112)),
  Specified(0)))) ;
  let strong a_1635: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1634,
    18446744073701163007) in
  case a_1635 of
    | Specified(a_1634: pointer) =>
        pure(a_1634)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1530: pointer [ail_ctype = 'char[31]'] :=
  let strong a_1636: pointer = create(Ivalignof('char[31]'), 'char[31]') in
  store_lock('char[31]', a_1636,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 96)), Specified(0)))) ;
  let strong a_1637: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1636,
    18446744073701163007) in
  case a_1637 of
    | Specified(a_1636: pointer) =>
        pure(a_1636)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1545: pointer [ail_ctype = 'char[27]'] :=
  let strong a_1638: pointer = create(Ivalignof('char[27]'), 'char[27]') in
  store_lock('char[27]', a_1638,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 91)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 80)), Specified(conv_int('char', 44)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 35)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 98)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 93)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 63)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 65)), Specified(0)))) ;
  let strong a_1639: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1638,
    18446744073701163007) in
  case a_1639 of
    | Specified(a_1638: pointer) =>
        pure(a_1638)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1585: pointer [ail_ctype = 'char[15]'] :=
  let strong a_1640: pointer = create(Ivalignof('char[15]'), 'char[15]') in
  store_lock('char[15]', a_1640,
  Specified(Array(Specified(conv_int('char', 115)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1641: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1640,
    18446744073701163007) in
  case a_1641 of
    | Specified(a_1640: pointer) =>
        pure(a_1640)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

-- Fun map
proc main (): eff loaded integer :=
  {-# <null3.c:10:0, null3.c:30:1> #-} let strong nullrepr0: pointer =
    create(Ivalignof('unsigned char[16]'), 'unsigned char[16]') in
  let strong nullrepr1: pointer =
    create(Ivalignof('unsigned char[16]'), 'unsigned char[16]') in
  let strong p0: pointer = create(Ivalignof('void*'), 'void*') in
  let strong p1: pointer = create(Ivalignof('void*'), 'void*') in
  {-# <null3.c:11:4, null3.c:11:79> #-} let strong a_923: loaded array(integer) =
    {-# §6.5#2 #-}
    bound(
      {-# <other location (Cabs_to_ail.constructValue)> #-} let weak (a_939: loaded integer,
      a_938: loaded integer, a_937: loaded integer, a_936: loaded integer,
      a_935: loaded integer, a_934: loaded integer, a_933: loaded integer,
      a_932: loaded integer, a_931: loaded integer, a_930: loaded integer,
      a_929: loaded integer, a_928: loaded integer, a_927: loaded integer,
      a_926: loaded integer, a_925: loaded integer, a_924: loaded integer) =
        {-# §6.7.9#23 #-}
        unseq(
          {-# <null3.c:11:76, null3.c:11:77> #-} pure(Specified(0))
        ,
          {-# <null3.c:11:74, null3.c:11:75> #-} pure(Specified(0))
        ,
          {-# <null3.c:11:72, null3.c:11:73> #-} pure(Specified(0))
        ,
          {-# <null3.c:11:70, null3.c:11:71> #-} pure(Specified(0))
        ,
          {-# <null3.c:11:68, null3.c:11:69> #-} pure(Specified(0))
        ,
          {-# <null3.c:11:66, null3.c:11:67> #-} pure(Specified(0))
        ,
          {-# <null3.c:11:64, null3.c:11:65> #-} pure(Specified(0))
        ,
          {-# <null3.c:11:62, null3.c:11:63> #-} pure(Specified(0))
        ,
          {-# <null3.c:11:60, null3.c:11:61> #-} pure(Specified(0))
        ,
          {-# <null3.c:11:58, null3.c:11:59> #-} pure(Specified(0))
        ,
          {-# <null3.c:11:56, null3.c:11:57> #-} pure(Specified(0))
        ,
          {-# <null3.c:11:54, null3.c:11:55> #-} pure(Specified(0))
        ,
          {-# <null3.c:11:52, null3.c:11:53> #-} pure(Specified(0))
        ,
          {-# <null3.c:11:50, null3.c:11:51> #-} pure(Specified(0))
        ,
          {-# <null3.c:11:48, null3.c:11:49> #-} pure(Specified(0))
        ,
          {-# <null3.c:11:46, null3.c:11:47> #-} pure(Specified(0))
        ) in
      pure(
        Specified(Array(conv_loaded_int('unsigned char', a_924),
        conv_loaded_int('unsigned char', a_925),
        conv_loaded_int('unsigned char', a_926),
        conv_loaded_int('unsigned char', a_927),
        conv_loaded_int('unsigned char', a_928),
        conv_loaded_int('unsigned char', a_929),
        conv_loaded_int('unsigned char', a_930),
        conv_loaded_int('unsigned char', a_931),
        conv_loaded_int('unsigned char', a_932),
        conv_loaded_int('unsigned char', a_933),
        conv_loaded_int('unsigned char', a_934),
        conv_loaded_int('unsigned char', a_935),
        conv_loaded_int('unsigned char', a_936),
        conv_loaded_int('unsigned char', a_937),
        conv_loaded_int('unsigned char', a_938),
        conv_loaded_int('unsigned char', a_939)))
      )
    ) in
  store('unsigned char[16]', nullrepr0, a_923) ;
  {-# <null3.c:12:4, null3.c:12:79> #-} let strong a_940: loaded array(integer) =
    {-# §6.5#2 #-}
    bound(
      {-# <other location (Cabs_to_ail.constructValue)> #-} let weak (a_956: loaded integer,
      a_955: loaded integer, a_954: loaded integer, a_953: loaded integer,
      a_952: loaded integer, a_951: loaded integer, a_950: loaded integer,
      a_949: loaded integer, a_948: loaded integer, a_947: loaded integer,
      a_946: loaded integer, a_945: loaded integer, a_944: loaded integer,
      a_943: loaded integer, a_942: loaded integer, a_941: loaded integer) =
        {-# §6.7.9#23 #-}
        unseq(
          {-# <null3.c:12:76, null3.c:12:77> #-} pure(Specified(0))
        ,
          {-# <null3.c:12:74, null3.c:12:75> #-} pure(Specified(0))
        ,
          {-# <null3.c:12:72, null3.c:12:73> #-} pure(Specified(0))
        ,
          {-# <null3.c:12:70, null3.c:12:71> #-} pure(Specified(0))
        ,
          {-# <null3.c:12:68, null3.c:12:69> #-} pure(Specified(0))
        ,
          {-# <null3.c:12:66, null3.c:12:67> #-} pure(Specified(1))
        ,
          {-# <null3.c:12:64, null3.c:12:65> #-} pure(Specified(0))
        ,
          {-# <null3.c:12:62, null3.c:12:63> #-} pure(Specified(5))
        ,
          {-# <null3.c:12:60, null3.c:12:61> #-} pure(Specified(0))
        ,
          {-# <null3.c:12:58, null3.c:12:59> #-} pure(Specified(0))
        ,
          {-# <null3.c:12:56, null3.c:12:57> #-} pure(Specified(0))
        ,
          {-# <null3.c:12:54, null3.c:12:55> #-} pure(Specified(0))
        ,
          {-# <null3.c:12:52, null3.c:12:53> #-} pure(Specified(0))
        ,
          {-# <null3.c:12:50, null3.c:12:51> #-} pure(Specified(0))
        ,
          {-# <null3.c:12:48, null3.c:12:49> #-} pure(Specified(0))
        ,
          {-# <null3.c:12:46, null3.c:12:47> #-} pure(Specified(0))
        ) in
      pure(
        Specified(Array(conv_loaded_int('unsigned char', a_941),
        conv_loaded_int('unsigned char', a_942),
        conv_loaded_int('unsigned char', a_943),
        conv_loaded_int('unsigned char', a_944),
        conv_loaded_int('unsigned char', a_945),
        conv_loaded_int('unsigned char', a_946),
        conv_loaded_int('unsigned char', a_947),
        conv_loaded_int('unsigned char', a_948),
        conv_loaded_int('unsigned char', a_949),
        conv_loaded_int('unsigned char', a_950),
        conv_loaded_int('unsigned char', a_951),
        conv_loaded_int('unsigned char', a_952),
        conv_loaded_int('unsigned char', a_953),
        conv_loaded_int('unsigned char', a_954),
        conv_loaded_int('unsigned char', a_955),
        conv_loaded_int('unsigned char', a_956)))
      )
    ) in
  store('unsigned char[16]', nullrepr1, a_940) ;
  {-# <null3.c:13:4, null3.c:13:32> #-} store('void*', p0, Specified(NULL)) ;
  {-# §6.2.4#6 #-}
  store('void*', p1, Unspecified('void*')) ;
  {-# <null3.c:15:4, null3.c:16:64> #-} let strong a_958: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <null3.c:15:7, null3.c:15:47> null3.c:15:44 #-} let weak (a_960: loaded integer,
      a_961: loaded integer) =
        unseq(
          {-# <null3.c:15:7, null3.c:15:47> null3.c:15:44 #-} let weak (a_965: loaded integer,
          a_966: loaded integer) =
            unseq(
              {-# §6.5.2.2#10, sentence 1 #-}
              {-# <null3.c:15:7, null3.c:15:44> #-} let strong ((a_971: loaded pointer,
              (a_972: ctype, a_973: [ctype], a_974: boolean, a_975: boolean)),
              a_979: loaded pointer, a_981: loaded pointer,
              a_984: loaded integer) =
                {-# §6.5.2.2#4, sentence 2 #-}
                unseq(
                  let strong a_970: loaded pointer =
                    {-# <null3.c:15:7, null3.c:15:13> #-} pure(
                      Specified(Cfunction(memcmp_proxy))
                    ) in
                  pure((a_970, cfunction(a_970)))
                ,
                  {-# §6.5.3.2#3, sentence 5 #-}
                  {-# <null3.c:15:14, null3.c:15:17> null3.c:15:14 #-} let weak a_980: pointer =
                    {-# <null3.c:15:15, null3.c:15:17> #-} pure(p0) in
                  pure(Specified(a_980))
                ,
                  {-# <null3.c:15:19, null3.c:15:28> #-} let weak a_982: pointer =
                    {-# <null3.c:15:19, null3.c:15:28> #-} pure(nullrepr0) in
                  {-# §6.3.2.1#3 #-}
                  let weak a_983: pointer =
                    memop(PtrArrayShift, a_982, 'unsigned char', 0) in
                  pure(Specified(a_983))
                ,
                  {-# <null3.c:15:30, null3.c:15:43> null3.c:15:30 #-} pure(
                    Specified(Ivsizeof('void*'))
                  )
                ) in
              if not(params_length(a_973) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_974 \/ not(are_compatible ('signed int', a_972)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_978: pointer =
                    let a_985: ctype = params_nth(a_973, 0) in
                    if not(are_compatible ('const void*', a_985)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {-# §6.5.2.2#7, sentence 1 #-}
                      let weak a_986: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit =
                        store('const void*', a_986, a_979) in
                      pure(a_986) in
                  let strong a_977: pointer =
                    let a_987: ctype = params_nth(a_973, 1) in
                    if not(are_compatible ('const void*', a_987)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {-# §6.5.2.2#7, sentence 1 #-}
                      let weak a_988: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit =
                        store('const void*', a_988, a_981) in
                      pure(a_988) in
                  let strong a_976: pointer =
                    let a_989: ctype = params_nth(a_973, 2) in
                    if not(are_compatible ('size_t', a_989)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {-# §6.5.2.2#7, sentence 1 #-}
                      let weak a_990: pointer =
                        create(Ivalignof('size_t'), 'size_t') in
                      let weak _: unit =
                        store('size_t', a_990,
                        conv_loaded_int('size_t', a_984)) in
                      pure(a_990) in
                  let strong a_991: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_971, a_978, a_977, a_976) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_978)
                    ,
                      kill('void*', a_977)
                    ,
                      kill('size_t', a_976)
                    ) in
                  pure(a_991)
            ,
              {-# <null3.c:15:46, null3.c:15:47> #-} pure(Specified(0))
            ) in
          pure(
            case (a_965, a_966) of
              | (Specified(a_967: integer), Specified(a_968: integer)) =>
                  if conv_int('signed int', a_967) =
                  conv_int('signed int', a_968) then
                    Specified(1)
                  else
                    Specified(0)
              | _: (loaded integer,loaded integer) =>
                  Unspecified('signed int')
            end
          )
        ,
          {-# <null3.c:15:7, null3.c:15:47> null3.c:15:44 #-} pure(
            Specified(0)
          )
        ) in
      pure(
        case (a_960, a_961) of
          | (Specified(a_962: integer), Specified(a_963: integer)) =>
              if conv_int('signed int', a_962) =
              conv_int('signed int', a_963) then
                Specified(1)
              else
                Specified(0)
          | _: (loaded integer,loaded integer) =>
              Unspecified('signed int')
        end
      )
    ) in
  let strong a_922: boolean =
    case a_958 of
      | Specified(a_959: integer) =>
          pure(if not(a_959 = 1) then True else False)
      | Unspecified(_: ctype) =>
          nd(pure(True), pure(False))
    end in
  if a_922 then
    {-# <null3.c:16:8, null3.c:16:64> #-} let strong _: loaded integer =
      {-# §6.5#2 #-}
      bound(
        {-# §6.5.2.2#10, sentence 1 #-}
        {-# <null3.c:16:8, null3.c:16:63> #-} let strong ((a_993: loaded pointer,
        (a_994: ctype, a_995: [ctype], a_996: boolean, a_997: boolean)),
        a_1000: loaded pointer, a_1002: loaded pointer) =
          {-# §6.5.2.2#4, sentence 2 #-}
          unseq(
            let strong a_992: loaded pointer =
              {-# <null3.c:16:8, null3.c:16:15> #-} pure(
                Specified(Cfunction(fprintf))
              ) in
            pure((a_992, cfunction(a_992)))
          ,
            {-# <null3.c:16:16, null3.c:16:24> #-} let weak a_1001: pointer =
              {-# <null3.c:16:16, null3.c:16:24> #-} pure(__stderr) in
            load('struct _IO_FILE*', a_1001)
          ,
            {-# <null3.c:16:25, null3.c:16:62> #-} let weak a_1004: pointer =
              {-# <null3.c:16:25, null3.c:16:62> #-} pure(a_1003) in
            {-# §6.3.2.1#3 #-}
            let weak a_1005: pointer =
              memop(PtrArrayShift, a_1004, 'char', 0) in
            pure(Specified(a_1005))
          ) in
        if not(params_length(a_995) <= 2) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_996) \/ not(are_compatible ('signed int', a_994)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_999: pointer =
              let a_1006: ctype = params_nth(a_995, 0) in
              if not(are_compatible ('struct _IO_FILE*', a_1006)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# §6.5.2.2#7, sentence 1 #-}
                let weak a_1007: pointer =
                  create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                let weak _: unit =
                  store('struct _IO_FILE*', a_1007, a_1000) in
                pure(a_1007) in
            let strong a_998: pointer =
              let a_1008: ctype = params_nth(a_995, 1) in
              if not(are_compatible ('const char*', a_1008)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# §6.5.2.2#7, sentence 1 #-}
                let weak a_1009: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_1009, a_1002) in
                pure(a_1009) in
            let strong a_1010: loaded integer =
              ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
              a_993, a_999, a_998, []: (ctype,pointer)) in
            let strong _: (unit,unit) =
              unseq(kill('struct _IO_FILE*', a_999), kill('char*', a_998)) in
            pure(a_1010)
      ) in
    pure(Unit)
  else
    {-# <null3.c:15:4, null3.c:16:64> #-} pure(Unit) ;
  {-# <null3.c:18:4, null3.c:22:5> #-} let strong i: pointer =
    create(Ivalignof('unsigned int'), 'unsigned int') in
  {-# <null3.c:18:8, null3.c:18:25> #-} let strong a_1011: loaded integer =
    {-# §6.5#2 #-}
    bound({-# <null3.c:18:23, null3.c:18:24> #-} pure(Specified(0))) in
  store('unsigned int', i, conv_loaded_int('unsigned int', a_1011)) ;
  {-# <null3.c:18:4, null3.c:22:5> #-} {-# <null3.c:18:4, null3.c:22:5> #-} save while_920: unit (i: pointer:= i,
  nullrepr0: pointer:= nullrepr0, nullrepr1: pointer:= nullrepr1,
  p0: pointer:= p0, p1: pointer:= p1) in
    let strong a_1012: loaded integer =
      {-# §6.5#2 #-}
      bound(
        {-# <null3.c:18:25, null3.c:18:40> null3.c:18:26 #-} let weak (a_1014: loaded integer,
        a_1015: loaded integer) =
          unseq(
            {-# §6.5.8 #-}
            {-# <null3.c:18:25, null3.c:18:40> null3.c:18:26 #-} let weak (a_1020: loaded integer,
            a_1021: loaded integer) =
              unseq(
                {-# <null3.c:18:25, null3.c:18:26> #-} let weak a_1019: pointer =
                  {-# <null3.c:18:25, null3.c:18:26> #-} pure(i) in
                load('unsigned int', a_1019)
              ,
                {-# <null3.c:18:27, null3.c:18:40> null3.c:18:27 #-} pure(
                  Specified(Ivsizeof('void*'))
                )
              ) in
            case (a_1020, a_1021) of
              | (Specified(a_1022: integer), Specified(a_1023: integer)) =>
                  {-# §6.5.8#6 #-}
                  pure(
                    if conv_int('unsigned int', a_1022) <
                    conv_int('unsigned int', a_1023) then
                      Specified(1)
                    else
                      Specified(0)
                  )
              | _: (loaded integer,loaded integer) =>
                  pure(Unspecified('signed int'))
            end
          ,
            {-# <null3.c:18:25, null3.c:18:40> null3.c:18:26 #-} pure(
              Specified(0)
            )
          ) in
        pure(
          case (a_1014, a_1015) of
            | (Specified(a_1016: integer), Specified(a_1017: integer)) =>
                if conv_int('signed int', a_1016) =
                conv_int('signed int', a_1017) then
                  Specified(1)
                else
                  Specified(0)
            | _: (loaded integer,loaded integer) =>
                Unspecified('signed int')
          end
        )
      ) in
    let strong a_921: boolean =
      case a_1012 of
        | Specified(a_1013: integer) =>
            pure(if not(a_1013 = 1) then True else False)
        | Unspecified(_: ctype) =>
            nd(pure(True), pure(False))
      end in
    if a_921 then
      {-# <null3.c:18:4, null3.c:22:5> #-} {-# <null3.c:19:4, null3.c:22:5> #-} {-# <null3.c:20:8, null3.c:20:46> #-} let strong _: loaded integer =
        {-# §6.5#2 #-}
        bound(
          {-# §6.5.16#3, sentence 4 #-}
          {-# <null3.c:20:8, null3.c:20:45> null3.c:20:32 #-} let weak (a_1026: pointer,
          a_1052: loaded integer) =
            {-# §6.5.16#3, sentence 5 #-}
            unseq(
              {-# §6.5.3.2 #-}
              {-# <null3.c:20:8, null3.c:20:32> #-} let weak a_1027: loaded pointer =
                {-# §6.5.6 #-}
                {-# <null3.c:20:8, null3.c:20:32> #-} let weak (a_1030: loaded pointer,
                a_1032: loaded integer) =
                  unseq(
                    {-# §6.5.4 #-}
                    {-# <null3.c:20:8, null3.c:20:29> #-} let weak a_1035: loaded pointer =
                      {-# §6.5.3.2#3, sentence 5 #-}
                      {-# <null3.c:20:25, null3.c:20:28> null3.c:20:25 #-} let weak a_1037: pointer =
                        {-# <null3.c:20:26, null3.c:20:28> #-} pure(p0) in
                      pure(Specified(a_1037)) in
                    case a_1035 of
                      | Specified(a_1036: pointer) =>
                          let weak a_1038: boolean =
                            memop(PtrWellAligned, 'unsigned char', a_1036) in
                          pure(
                            Specified(if a_1038 then
                              a_1036
                            else
                              undef(<<UB025_misaligned_pointer_conversion>>))
                          )
                      | Unspecified(_: ctype) =>
                          pure(
                            undef(<<UB025_misaligned_pointer_conversion>>)
                          )
                    end
                  ,
                    {-# <null3.c:20:30, null3.c:20:31> #-} let weak a_1039: pointer =
                      {-# <null3.c:20:30, null3.c:20:31> #-} pure(i) in
                    load('unsigned int', a_1039)
                  ) in
                case (a_1030, a_1032) of
                  | (Specified(a_1031: pointer), Specified(a_1033: integer)) =>
                      let weak a_1034: pointer =
                        memop(PtrArrayShift, a_1031, 'unsigned char', a_1033) in
                      pure(Specified(a_1034))
                  | _: (loaded pointer,loaded integer) =>
                      pure(undef(<<UB_CERB004_unspecified__pointer_add>>))
                end in
              case a_1027 of
                | Specified(a_1028: pointer) =>
                    let weak a_1029: boolean =
                      memop(PtrValidForDeref, 'unsigned char', a_1028) in
                    pure(
                      if a_1029 then
                        a_1028
                      else
                        undef(<<UB043_indirection_invalid_value>>)
                    )
                | Unspecified(_: ctype) =>
                    pure(undef(<<UB043_indirection_invalid_value>>))
              end
            ,
              {-# <null3.c:20:33, null3.c:20:45> #-} let weak a_1051: pointer =
                {-# §6.5.3.2 #-}
                {-# <null3.c:20:33, null3.c:20:45> #-} let weak a_1040: loaded pointer =
                  {-# §6.5.6 #-}
                  {-# <null3.c:20:33, null3.c:20:45> #-} let weak (a_1043: loaded pointer,
                  a_1045: loaded integer) =
                    unseq(
                      {-# <null3.c:20:33, null3.c:20:42> #-} let weak a_1048: pointer =
                        {-# <null3.c:20:33, null3.c:20:42> #-} pure(
                          nullrepr0
                        ) in
                      {-# §6.3.2.1#3 #-}
                      let weak a_1049: pointer =
                        memop(PtrArrayShift, a_1048, 'unsigned char', 0) in
                      pure(Specified(a_1049))
                    ,
                      {-# <null3.c:20:43, null3.c:20:44> #-} let weak a_1050: pointer =
                        {-# <null3.c:20:43, null3.c:20:44> #-} pure(i) in
                      load('unsigned int', a_1050)
                    ) in
                  case (a_1043, a_1045) of
                    | (Specified(a_1044: pointer), Specified(a_1046: integer)) =>
                        let weak a_1047: pointer =
                          memop(PtrArrayShift, a_1044, 'unsigned char',
                          a_1046) in
                        pure(Specified(a_1047))
                    | _: (loaded pointer,loaded integer) =>
                        pure(undef(<<UB_CERB004_unspecified__pointer_add>>))
                  end in
                case a_1040 of
                  | Specified(a_1041: pointer) =>
                      let weak a_1042: boolean =
                        memop(PtrValidForDeref, 'unsigned char', a_1041) in
                      pure(
                        if a_1042 then
                          a_1041
                        else
                          undef(<<UB043_indirection_invalid_value>>)
                      )
                  | Unspecified(_: ctype) =>
                      pure(undef(<<UB043_indirection_invalid_value>>))
                end in
              load('unsigned char', a_1051)
            ) in
          let weak _: unit =
            {-# §6.5.16.1#2, store #-}
            neg(store('unsigned char', a_1026,
            conv_loaded_int('unsigned char', a_1052))) in
          pure(conv_loaded_int('unsigned char', a_1052))
        ) in
      pure(Unit) ;
      {-# <null3.c:21:8, null3.c:21:46> #-} let strong _: loaded integer =
        {-# §6.5#2 #-}
        bound(
          {-# §6.5.16#3, sentence 4 #-}
          {-# <null3.c:21:8, null3.c:21:45> null3.c:21:32 #-} let weak (a_1025: pointer,
          a_1078: loaded integer) =
            {-# §6.5.16#3, sentence 5 #-}
            unseq(
              {-# §6.5.3.2 #-}
              {-# <null3.c:21:8, null3.c:21:32> #-} let weak a_1053: loaded pointer =
                {-# §6.5.6 #-}
                {-# <null3.c:21:8, null3.c:21:32> #-} let weak (a_1056: loaded pointer,
                a_1058: loaded integer) =
                  unseq(
                    {-# §6.5.4 #-}
                    {-# <null3.c:21:8, null3.c:21:29> #-} let weak a_1061: loaded pointer =
                      {-# §6.5.3.2#3, sentence 5 #-}
                      {-# <null3.c:21:25, null3.c:21:28> null3.c:21:25 #-} let weak a_1063: pointer =
                        {-# <null3.c:21:26, null3.c:21:28> #-} pure(p1) in
                      pure(Specified(a_1063)) in
                    case a_1061 of
                      | Specified(a_1062: pointer) =>
                          let weak a_1064: boolean =
                            memop(PtrWellAligned, 'unsigned char', a_1062) in
                          pure(
                            Specified(if a_1064 then
                              a_1062
                            else
                              undef(<<UB025_misaligned_pointer_conversion>>))
                          )
                      | Unspecified(_: ctype) =>
                          pure(
                            undef(<<UB025_misaligned_pointer_conversion>>)
                          )
                    end
                  ,
                    {-# <null3.c:21:30, null3.c:21:31> #-} let weak a_1065: pointer =
                      {-# <null3.c:21:30, null3.c:21:31> #-} pure(i) in
                    load('unsigned int', a_1065)
                  ) in
                case (a_1056, a_1058) of
                  | (Specified(a_1057: pointer), Specified(a_1059: integer)) =>
                      let weak a_1060: pointer =
                        memop(PtrArrayShift, a_1057, 'unsigned char', a_1059) in
                      pure(Specified(a_1060))
                  | _: (loaded pointer,loaded integer) =>
                      pure(undef(<<UB_CERB004_unspecified__pointer_add>>))
                end in
              case a_1053 of
                | Specified(a_1054: pointer) =>
                    let weak a_1055: boolean =
                      memop(PtrValidForDeref, 'unsigned char', a_1054) in
                    pure(
                      if a_1055 then
                        a_1054
                      else
                        undef(<<UB043_indirection_invalid_value>>)
                    )
                | Unspecified(_: ctype) =>
                    pure(undef(<<UB043_indirection_invalid_value>>))
              end
            ,
              {-# <null3.c:21:33, null3.c:21:45> #-} let weak a_1077: pointer =
                {-# §6.5.3.2 #-}
                {-# <null3.c:21:33, null3.c:21:45> #-} let weak a_1066: loaded pointer =
                  {-# §6.5.6 #-}
                  {-# <null3.c:21:33, null3.c:21:45> #-} let weak (a_1069: loaded pointer,
                  a_1071: loaded integer) =
                    unseq(
                      {-# <null3.c:21:33, null3.c:21:42> #-} let weak a_1074: pointer =
                        {-# <null3.c:21:33, null3.c:21:42> #-} pure(
                          nullrepr1
                        ) in
                      {-# §6.3.2.1#3 #-}
                      let weak a_1075: pointer =
                        memop(PtrArrayShift, a_1074, 'unsigned char', 0) in
                      pure(Specified(a_1075))
                    ,
                      {-# <null3.c:21:43, null3.c:21:44> #-} let weak a_1076: pointer =
                        {-# <null3.c:21:43, null3.c:21:44> #-} pure(i) in
                      load('unsigned int', a_1076)
                    ) in
                  case (a_1069, a_1071) of
                    | (Specified(a_1070: pointer), Specified(a_1072: integer)) =>
                        let weak a_1073: pointer =
                          memop(PtrArrayShift, a_1070, 'unsigned char',
                          a_1072) in
                        pure(Specified(a_1073))
                    | _: (loaded pointer,loaded integer) =>
                        pure(undef(<<UB_CERB004_unspecified__pointer_add>>))
                  end in
                case a_1066 of
                  | Specified(a_1067: pointer) =>
                      let weak a_1068: boolean =
                        memop(PtrValidForDeref, 'unsigned char', a_1067) in
                      pure(
                        if a_1068 then
                          a_1067
                        else
                          undef(<<UB043_indirection_invalid_value>>)
                      )
                  | Unspecified(_: ctype) =>
                      pure(undef(<<UB043_indirection_invalid_value>>))
                end in
              load('unsigned char', a_1077)
            ) in
          let weak _: unit =
            {-# §6.5.16.1#2, store #-}
            neg(store('unsigned char', a_1025,
            conv_loaded_int('unsigned char', a_1078))) in
          pure(conv_loaded_int('unsigned char', a_1078))
        ) in
      pure(Unit) ;
      {-# <null3.c:18:4, null3.c:22:5> #-} save __cerb_continue1: unit (i: pointer:= i,
      nullrepr0: pointer:= nullrepr0, nullrepr1: pointer:= nullrepr1,
      p0: pointer:= p0, p1: pointer:= p1) in
        {-# <unknown location> #-} let strong _: loaded integer =
          {-# §6.5#2 #-}
          bound(
            {-# §6.5.2.4#2, sentence 3 #-}
            {-# §6.5.2.4#2, sentence 1 #-}
            {-# §6.5.2.4 #-}
            {-# <null3.c:18:41, null3.c:18:44> null3.c:18:42 #-} let weak a_1079: pointer =
              {-# <null3.c:18:41, null3.c:18:42> #-} pure(i) in
            seq_rmw('unsigned int', a_1079, a_1080 => case a_1080 of
              | Specified(a_1081: integer) =>
                  Specified(conv_int('unsigned int',
                  wrapI_add('unsigned int', conv_int('unsigned int', a_1081), 1)))
              | Unspecified(_: ctype) =>
                  Unspecified('unsigned int')
            end)
          ) in
        pure(Unit) ;
      pure(Unit) ;
      {-# <null3.c:18:4, null3.c:22:5> #-} save continue_915: unit (i: pointer:= i,
      nullrepr0: pointer:= nullrepr0, nullrepr1: pointer:= nullrepr1,
      p0: pointer:= p0, p1: pointer:= p1) in
        {-# <null3.c:18:4, null3.c:22:5> #-} pure(Unit) ;
      pure(Unit) ;
      run while_920(i, nullrepr0, nullrepr1, p0, p1)
    else
      pure(Unit) ;
  {-# <null3.c:18:4, null3.c:22:5> #-} save break_916: unit (i: pointer:= i,
  nullrepr0: pointer:= nullrepr0, nullrepr1: pointer:= nullrepr1,
  p0: pointer:= p0, p1: pointer:= p1) in
    {-# <null3.c:18:4, null3.c:22:5> #-} pure(Unit) ;
  pure(Unit) ;
  kill('unsigned int', i) ;
  pure(Unit) ;
  {-# <null3.c:24:4, null3.c:24:60> #-} let strong a_1082: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <null3.c:24:7, null3.c:24:25> null3.c:24:9 #-} let weak (a_1084: loaded integer,
      a_1085: loaded integer) =
        unseq(
          {-# <null3.c:24:7, null3.c:24:25> null3.c:24:9 #-} let weak a_1090: loaded pointer =
            {-# <null3.c:24:7, null3.c:24:9> #-} let weak a_1089: pointer =
              {-# <null3.c:24:7, null3.c:24:9> #-} pure(p0) in
            load('void*', a_1089) in
          case a_1090 of
            | Specified(a_1091: pointer) =>
                let weak a_1092: boolean = memop(PtrEq, a_1091, NULL) in
                {-# §6.5.9#3 #-}
                pure(if a_1092 then Specified(1) else Specified(0))
            | _: loaded pointer =>
                pure(undef(<<UB_CERB004_unspecified__equality_ptr_vs_NULL>>))
          end
        ,
          {-# <null3.c:24:7, null3.c:24:25> null3.c:24:9 #-} pure(
            Specified(0)
          )
        ) in
      pure(
        case (a_1084, a_1085) of
          | (Specified(a_1086: integer), Specified(a_1087: integer)) =>
              if conv_int('signed int', a_1086) =
              conv_int('signed int', a_1087) then
                Specified(1)
              else
                Specified(0)
          | _: (loaded integer,loaded integer) =>
              Unspecified('signed int')
        end
      )
    ) in
  let strong a_919: boolean =
    case a_1082 of
      | Specified(a_1083: integer) =>
          pure(if not(a_1083 = 1) then True else False)
      | Unspecified(_: ctype) =>
          nd(pure(True), pure(False))
    end in
  if a_919 then
    {-# <null3.c:24:27, null3.c:24:60> #-} let strong _: loaded integer =
      {-# §6.5#2 #-}
      bound(
        {-# §6.5.2.2#10, sentence 1 #-}
        {-# <null3.c:24:27, null3.c:24:59> #-} let strong ((a_1094: loaded pointer,
        (a_1095: ctype, a_1096: [ctype], a_1097: boolean, a_1098: boolean)),
        a_1101: loaded pointer, a_1103: loaded pointer) =
          {-# §6.5.2.2#4, sentence 2 #-}
          unseq(
            let strong a_1093: loaded pointer =
              {-# <null3.c:24:27, null3.c:24:34> #-} pure(
                Specified(Cfunction(fprintf))
              ) in
            pure((a_1093, cfunction(a_1093)))
          ,
            {-# <null3.c:24:35, null3.c:24:43> #-} let weak a_1102: pointer =
              {-# <null3.c:24:35, null3.c:24:43> #-} pure(__stderr) in
            load('struct _IO_FILE*', a_1102)
          ,
            {-# <null3.c:24:44, null3.c:24:58> #-} let weak a_1105: pointer =
              {-# <null3.c:24:44, null3.c:24:58> #-} pure(a_1104) in
            {-# §6.3.2.1#3 #-}
            let weak a_1106: pointer =
              memop(PtrArrayShift, a_1105, 'char', 0) in
            pure(Specified(a_1106))
          ) in
        if not(params_length(a_1096) <= 2) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_1097) \/ not(are_compatible ('signed int', a_1095)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_1100: pointer =
              let a_1107: ctype = params_nth(a_1096, 0) in
              if not(are_compatible ('struct _IO_FILE*', a_1107)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# §6.5.2.2#7, sentence 1 #-}
                let weak a_1108: pointer =
                  create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                let weak _: unit =
                  store('struct _IO_FILE*', a_1108, a_1101) in
                pure(a_1108) in
            let strong a_1099: pointer =
              let a_1109: ctype = params_nth(a_1096, 1) in
              if not(are_compatible ('const char*', a_1109)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# §6.5.2.2#7, sentence 1 #-}
                let weak a_1110: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_1110, a_1103) in
                pure(a_1110) in
            let strong a_1111: loaded integer =
              ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
              a_1094, a_1100, a_1099, []: (ctype,pointer)) in
            let strong _: (unit,unit) =
              unseq(kill('struct _IO_FILE*', a_1100), kill('char*', a_1099)) in
            pure(a_1111)
      ) in
    pure(Unit)
  else
    {-# <null3.c:24:4, null3.c:24:60> #-} pure(Unit) ;
  {-# <null3.c:25:4, null3.c:25:60> #-} let strong a_1112: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <null3.c:25:7, null3.c:25:25> null3.c:25:9 #-} let weak (a_1114: loaded integer,
      a_1115: loaded integer) =
        unseq(
          {-# <null3.c:25:7, null3.c:25:25> null3.c:25:9 #-} let weak a_1120: loaded pointer =
            {-# <null3.c:25:7, null3.c:25:9> #-} let weak a_1119: pointer =
              {-# <null3.c:25:7, null3.c:25:9> #-} pure(p1) in
            load('void*', a_1119) in
          case a_1120 of
            | Specified(a_1121: pointer) =>
                let weak a_1122: boolean = memop(PtrEq, a_1121, NULL) in
                {-# §6.5.9#3 #-}
                pure(if a_1122 then Specified(1) else Specified(0))
            | _: loaded pointer =>
                pure(undef(<<UB_CERB004_unspecified__equality_ptr_vs_NULL>>))
          end
        ,
          {-# <null3.c:25:7, null3.c:25:25> null3.c:25:9 #-} pure(
            Specified(0)
          )
        ) in
      pure(
        case (a_1114, a_1115) of
          | (Specified(a_1116: integer), Specified(a_1117: integer)) =>
              if conv_int('signed int', a_1116) =
              conv_int('signed int', a_1117) then
                Specified(1)
              else
                Specified(0)
          | _: (loaded integer,loaded integer) =>
              Unspecified('signed int')
        end
      )
    ) in
  let strong a_918: boolean =
    case a_1112 of
      | Specified(a_1113: integer) =>
          pure(if not(a_1113 = 1) then True else False)
      | Unspecified(_: ctype) =>
          nd(pure(True), pure(False))
    end in
  if a_918 then
    {-# <null3.c:25:27, null3.c:25:60> #-} let strong _: loaded integer =
      {-# §6.5#2 #-}
      bound(
        {-# §6.5.2.2#10, sentence 1 #-}
        {-# <null3.c:25:27, null3.c:25:59> #-} let strong ((a_1124: loaded pointer,
        (a_1125: ctype, a_1126: [ctype], a_1127: boolean, a_1128: boolean)),
        a_1131: loaded pointer, a_1133: loaded pointer) =
          {-# §6.5.2.2#4, sentence 2 #-}
          unseq(
            let strong a_1123: loaded pointer =
              {-# <null3.c:25:27, null3.c:25:34> #-} pure(
                Specified(Cfunction(fprintf))
              ) in
            pure((a_1123, cfunction(a_1123)))
          ,
            {-# <null3.c:25:35, null3.c:25:43> #-} let weak a_1132: pointer =
              {-# <null3.c:25:35, null3.c:25:43> #-} pure(__stderr) in
            load('struct _IO_FILE*', a_1132)
          ,
            {-# <null3.c:25:44, null3.c:25:58> #-} let weak a_1135: pointer =
              {-# <null3.c:25:44, null3.c:25:58> #-} pure(a_1134) in
            {-# §6.3.2.1#3 #-}
            let weak a_1136: pointer =
              memop(PtrArrayShift, a_1135, 'char', 0) in
            pure(Specified(a_1136))
          ) in
        if not(params_length(a_1126) <= 2) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_1127) \/ not(are_compatible ('signed int', a_1125)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_1130: pointer =
              let a_1137: ctype = params_nth(a_1126, 0) in
              if not(are_compatible ('struct _IO_FILE*', a_1137)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# §6.5.2.2#7, sentence 1 #-}
                let weak a_1138: pointer =
                  create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                let weak _: unit =
                  store('struct _IO_FILE*', a_1138, a_1131) in
                pure(a_1138) in
            let strong a_1129: pointer =
              let a_1139: ctype = params_nth(a_1126, 1) in
              if not(are_compatible ('const char*', a_1139)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# §6.5.2.2#7, sentence 1 #-}
                let weak a_1140: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_1140, a_1133) in
                pure(a_1140) in
            let strong a_1141: loaded integer =
              ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
              a_1124, a_1130, a_1129, []: (ctype,pointer)) in
            let strong _: (unit,unit) =
              unseq(kill('struct _IO_FILE*', a_1130), kill('char*', a_1129)) in
            pure(a_1141)
      ) in
    pure(Unit)
  else
    {-# <null3.c:25:4, null3.c:25:60> #-} pure(Unit) ;
  {-# <null3.c:26:4, null3.c:26:46> #-} let strong a_1142: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <null3.c:26:7, null3.c:26:13> null3.c:26:9 #-} let weak (a_1144: loaded integer,
      a_1145: loaded integer) =
        unseq(
          {-# <null3.c:26:7, null3.c:26:13> null3.c:26:9 #-} let weak (a_1149: loaded pointer,
          a_1150: loaded pointer) =
            unseq(
              {-# <null3.c:26:7, null3.c:26:9> #-} let weak a_1154: pointer =
                {-# <null3.c:26:7, null3.c:26:9> #-} pure(p0) in
              load('void*', a_1154)
            ,
              {-# <null3.c:26:11, null3.c:26:13> #-} let weak a_1155: pointer =
                {-# <null3.c:26:11, null3.c:26:13> #-} pure(p1) in
              load('void*', a_1155)
            ) in
          case (a_1149, a_1150) of
            | (Specified(a_1151: pointer), Specified(a_1152: pointer)) =>
                let weak a_1153: boolean = memop(PtrEq, a_1151, a_1152) in
                pure(if a_1153 then Specified(1) else Specified(0))
            | _: (loaded pointer,loaded pointer) =>
                pure(
                  undef(<<UB_CERB004_unspecified__equality_both_arith_or_ptr>>)
                )
          end
        ,
          {-# <null3.c:26:7, null3.c:26:13> null3.c:26:9 #-} pure(
            Specified(0)
          )
        ) in
      pure(
        case (a_1144, a_1145) of
          | (Specified(a_1146: integer), Specified(a_1147: integer)) =>
              if conv_int('signed int', a_1146) =
              conv_int('signed int', a_1147) then
                Specified(1)
              else
                Specified(0)
          | _: (loaded integer,loaded integer) =>
              Unspecified('signed int')
        end
      )
    ) in
  let strong a_917: boolean =
    case a_1142 of
      | Specified(a_1143: integer) =>
          pure(if not(a_1143 = 1) then True else False)
      | Unspecified(_: ctype) =>
          nd(pure(True), pure(False))
    end in
  if a_917 then
    {-# <null3.c:26:15, null3.c:26:46> #-} let strong _: loaded integer =
      {-# §6.5#2 #-}
      bound(
        {-# §6.5.2.2#10, sentence 1 #-}
        {-# <null3.c:26:15, null3.c:26:45> #-} let strong ((a_1157: loaded pointer,
        (a_1158: ctype, a_1159: [ctype], a_1160: boolean, a_1161: boolean)),
        a_1164: loaded pointer, a_1166: loaded pointer) =
          {-# §6.5.2.2#4, sentence 2 #-}
          unseq(
            let strong a_1156: loaded pointer =
              {-# <null3.c:26:15, null3.c:26:22> #-} pure(
                Specified(Cfunction(fprintf))
              ) in
            pure((a_1156, cfunction(a_1156)))
          ,
            {-# <null3.c:26:23, null3.c:26:31> #-} let weak a_1165: pointer =
              {-# <null3.c:26:23, null3.c:26:31> #-} pure(__stderr) in
            load('struct _IO_FILE*', a_1165)
          ,
            {-# <null3.c:26:32, null3.c:26:44> #-} let weak a_1168: pointer =
              {-# <null3.c:26:32, null3.c:26:44> #-} pure(a_1167) in
            {-# §6.3.2.1#3 #-}
            let weak a_1169: pointer =
              memop(PtrArrayShift, a_1168, 'char', 0) in
            pure(Specified(a_1169))
          ) in
        if not(params_length(a_1159) <= 2) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_1160) \/ not(are_compatible ('signed int', a_1158)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_1163: pointer =
              let a_1170: ctype = params_nth(a_1159, 0) in
              if not(are_compatible ('struct _IO_FILE*', a_1170)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# §6.5.2.2#7, sentence 1 #-}
                let weak a_1171: pointer =
                  create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                let weak _: unit =
                  store('struct _IO_FILE*', a_1171, a_1164) in
                pure(a_1171) in
            let strong a_1162: pointer =
              let a_1172: ctype = params_nth(a_1159, 1) in
              if not(are_compatible ('const char*', a_1172)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# §6.5.2.2#7, sentence 1 #-}
                let weak a_1173: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_1173, a_1166) in
                pure(a_1173) in
            let strong a_1174: loaded integer =
              ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
              a_1157, a_1163, a_1162, []: (ctype,pointer)) in
            let strong _: (unit,unit) =
              unseq(kill('struct _IO_FILE*', a_1163), kill('char*', a_1162)) in
            pure(a_1174)
      ) in
    pure(Unit)
  else
    {-# <null3.c:26:4, null3.c:26:46> #-} pure(Unit) ;
  {-# <null3.c:28:4, null3.c:28:74> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <null3.c:28:4, null3.c:28:73> #-} let strong ((a_1176: loaded pointer,
      (a_1177: ctype, a_1178: [ctype], a_1179: boolean, a_1180: boolean)),
      a_1185: loaded pointer, a_1187: loaded pointer, a_1191: loaded pointer,
      a_1204: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_1175: loaded pointer =
            {-# <null3.c:28:4, null3.c:28:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_1175, cfunction(a_1175)))
        ,
          {-# <null3.c:28:12, null3.c:28:20> #-} let weak a_1186: pointer =
            {-# <null3.c:28:12, null3.c:28:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_1186)
        ,
          {-# <null3.c:28:21, null3.c:28:44> #-} let weak a_1189: pointer =
            {-# <null3.c:28:21, null3.c:28:44> #-} pure(a_1188) in
          {-# §6.3.2.1#3 #-}
          let weak a_1190: pointer =
            memop(PtrArrayShift, a_1189, 'char', 0) in
          pure(Specified(a_1190))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <null3.c:28:46, null3.c:28:59> #-} let strong ((a_1193: loaded pointer,
          (a_1194: ctype, a_1195: [ctype], a_1196: boolean, a_1197: boolean)),
          a_1199: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_1192: loaded pointer =
                {-# <null3.c:28:46, null3.c:28:55> #-} pure(
                  Specified(Cfunction(null_sptr))
                ) in
              pure((a_1192, cfunction(a_1192)))
            ,
              {-# <null3.c:28:56, null3.c:28:58> #-} let weak a_1200: pointer =
                {-# <null3.c:28:56, null3.c:28:58> #-} pure(p0) in
              load('void*', a_1200)
            ) in
          if not(params_length(a_1195) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_1196 \/ not(are_compatible ('const char*', a_1194)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1198: pointer =
                let a_1201: ctype = params_nth(a_1195, 0) in
                if not(are_compatible ('void*', a_1201)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_1202: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_1202, a_1199) in
                  pure(a_1202) in
              let strong a_1203: loaded pointer =
                ccall('const char* (*) (void*)', a_1193, a_1198) in
              kill('void*', a_1198) ;
              pure(a_1203)
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <null3.c:28:61, null3.c:28:72> #-} let strong ((a_1206: loaded pointer,
          (a_1207: ctype, a_1208: [ctype], a_1209: boolean, a_1210: boolean)),
          a_1212: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_1205: loaded pointer =
                {-# <null3.c:28:61, null3.c:28:68> #-} pure(
                  Specified(Cfunction(isnulls))
                ) in
              pure((a_1205, cfunction(a_1205)))
            ,
              {-# <null3.c:28:69, null3.c:28:71> #-} let weak a_1213: pointer =
                {-# <null3.c:28:69, null3.c:28:71> #-} pure(p0) in
              load('void*', a_1213)
            ) in
          if not(params_length(a_1208) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_1209 \/ not(are_compatible ('const char*', a_1207)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1211: pointer =
                let a_1214: ctype = params_nth(a_1208, 0) in
                if not(are_compatible ('void*', a_1214)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_1215: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_1215, a_1212) in
                  pure(a_1215) in
              let strong a_1216: loaded pointer =
                ccall('const char* (*) (void*)', a_1206, a_1211) in
              kill('void*', a_1211) ;
              pure(a_1216)
        ) in
      if not(params_length(a_1178) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1179) \/ not(are_compatible ('signed int', a_1177)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1184: pointer =
            let a_1217: ctype = params_nth(a_1178, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1217)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1218: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1218, a_1185) in
              pure(a_1218) in
          let strong a_1183: pointer =
            let a_1219: ctype = params_nth(a_1178, 1) in
            if not(are_compatible ('const char*', a_1219)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1220: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1220, a_1187) in
              pure(a_1220) in
          let strong a_1182: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_1191) in
          let strong a_1181: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_1204) in
          let strong a_1221: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1176, a_1184, a_1183,
            [('const char*', a_1182), ('const char*', a_1181)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1184)
            ,
              kill('char*', a_1183)
            ,
              kill('char*', a_1182)
            ,
              kill('char*', a_1181)
            ) in
          pure(a_1221)
    ) in
  pure(Unit) ;
  {-# <null3.c:29:4, null3.c:29:74> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <null3.c:29:4, null3.c:29:73> #-} let strong ((a_1223: loaded pointer,
      (a_1224: ctype, a_1225: [ctype], a_1226: boolean, a_1227: boolean)),
      a_1232: loaded pointer, a_1234: loaded pointer, a_1238: loaded pointer,
      a_1251: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_1222: loaded pointer =
            {-# <null3.c:29:4, null3.c:29:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_1222, cfunction(a_1222)))
        ,
          {-# <null3.c:29:12, null3.c:29:20> #-} let weak a_1233: pointer =
            {-# <null3.c:29:12, null3.c:29:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_1233)
        ,
          {-# <null3.c:29:21, null3.c:29:44> #-} let weak a_1236: pointer =
            {-# <null3.c:29:21, null3.c:29:44> #-} pure(a_1235) in
          {-# §6.3.2.1#3 #-}
          let weak a_1237: pointer =
            memop(PtrArrayShift, a_1236, 'char', 0) in
          pure(Specified(a_1237))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <null3.c:29:46, null3.c:29:59> #-} let strong ((a_1240: loaded pointer,
          (a_1241: ctype, a_1242: [ctype], a_1243: boolean, a_1244: boolean)),
          a_1246: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_1239: loaded pointer =
                {-# <null3.c:29:46, null3.c:29:55> #-} pure(
                  Specified(Cfunction(null_sptr))
                ) in
              pure((a_1239, cfunction(a_1239)))
            ,
              {-# <null3.c:29:56, null3.c:29:58> #-} let weak a_1247: pointer =
                {-# <null3.c:29:56, null3.c:29:58> #-} pure(p1) in
              load('void*', a_1247)
            ) in
          if not(params_length(a_1242) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_1243 \/ not(are_compatible ('const char*', a_1241)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1245: pointer =
                let a_1248: ctype = params_nth(a_1242, 0) in
                if not(are_compatible ('void*', a_1248)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_1249: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_1249, a_1246) in
                  pure(a_1249) in
              let strong a_1250: loaded pointer =
                ccall('const char* (*) (void*)', a_1240, a_1245) in
              kill('void*', a_1245) ;
              pure(a_1250)
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <null3.c:29:61, null3.c:29:72> #-} let strong ((a_1253: loaded pointer,
          (a_1254: ctype, a_1255: [ctype], a_1256: boolean, a_1257: boolean)),
          a_1259: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_1252: loaded pointer =
                {-# <null3.c:29:61, null3.c:29:68> #-} pure(
                  Specified(Cfunction(isnulls))
                ) in
              pure((a_1252, cfunction(a_1252)))
            ,
              {-# <null3.c:29:69, null3.c:29:71> #-} let weak a_1260: pointer =
                {-# <null3.c:29:69, null3.c:29:71> #-} pure(p1) in
              load('void*', a_1260)
            ) in
          if not(params_length(a_1255) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_1256 \/ not(are_compatible ('const char*', a_1254)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1258: pointer =
                let a_1261: ctype = params_nth(a_1255, 0) in
                if not(are_compatible ('void*', a_1261)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_1262: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_1262, a_1259) in
                  pure(a_1262) in
              let strong a_1263: loaded pointer =
                ccall('const char* (*) (void*)', a_1253, a_1258) in
              kill('void*', a_1258) ;
              pure(a_1263)
        ) in
      if not(params_length(a_1225) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1226) \/ not(are_compatible ('signed int', a_1224)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1231: pointer =
            let a_1264: ctype = params_nth(a_1225, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1264)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1265: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1265, a_1232) in
              pure(a_1265) in
          let strong a_1230: pointer =
            let a_1266: ctype = params_nth(a_1225, 1) in
            if not(are_compatible ('const char*', a_1266)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1267: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1267, a_1234) in
              pure(a_1267) in
          let strong a_1229: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_1238) in
          let strong a_1228: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_1251) in
          let strong a_1268: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1223, a_1231, a_1230,
            [('const char*', a_1229), ('const char*', a_1228)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1231)
            ,
              kill('char*', a_1230)
            ,
              kill('char*', a_1229)
            ,
              kill('char*', a_1228)
            ) in
          pure(a_1268)
    ) in
  pure(Unit) ;
  kill('unsigned ichar[16]', nullrepr0) ;
  kill('unsigned ichar[16]', nullrepr1) ;
  kill('void*', p0) ;
  kill('void*', p1) ;
  pure(Unit) ;
  {-# <null3.c:9:0, null3.c:30:1> null3.c:9:4 - null3.c:9:8 #-} save ret_914: loaded integer (a_1269: loaded integer:= Specified(0)) in
    pure(a_1269)

