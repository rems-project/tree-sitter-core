-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_677 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_681 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

-- Globals
glob a_931: pointer [ail_ctype = 'char[19]'] :=
  create_readonly(Ivalignof('char[19]'), 'char[19]', Specified(Array(Specified(conv_int('char',
  105)), Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 41)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_962: pointer [ail_ctype = 'char[1]'] :=
  create_readonly(Ivalignof('char[1]'), 'char[1]', Specified(Array(Specified(0))))

glob a_965: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  32)), Specified(conv_int('char', 110)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 116)), Specified(0))))

glob a_988: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  110)), Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0))))

glob a_992: pointer [ail_ctype = 'char[9]'] :=
  create_readonly(Ivalignof('char[9]'), 'char[9]', Specified(Array(Specified(conv_int('char',
  110)), Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0))))

glob a_1017: pointer [ail_ctype = 'char[4]'] :=
  create_readonly(Ivalignof('char[4]'), 'char[4]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(0))))

glob a_1058: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 48)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 120)), Specified(0))))

glob a_1105: pointer [ail_ctype = 'char[2]'] :=
  create_readonly(Ivalignof('char[2]'), 'char[2]', Specified(Array(Specified(conv_int('char',
  10)), Specified(0))))

glob a_1179: pointer [ail_ctype = 'char[26]'] :=
  create_readonly(Ivalignof('char[26]'), 'char[26]', Specified(Array(Specified(conv_int('char',
  109)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 96)),
  Specified(0))))

glob a_1194: pointer [ail_ctype = 'char[4]'] :=
  create_readonly(Ivalignof('char[4]'), 'char[4]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 35)), Specified(conv_int('char', 112)),
  Specified(0))))

glob a_1234: pointer [ail_ctype = 'char[31]'] :=
  create_readonly(Ivalignof('char[31]'), 'char[31]', Specified(Array(Specified(conv_int('char',
  109)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 96)), Specified(0))))

glob a_1249: pointer [ail_ctype = 'char[27]'] :=
  create_readonly(Ivalignof('char[27]'), 'char[27]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 91)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 80)), Specified(conv_int('char', 44)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 35)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 98)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 93)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 63)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 65)), Specified(0))))

glob a_1290: pointer [ail_ctype = 'char[15]'] :=
  create_readonly(Ivalignof('char[15]'), 'char[15]', Specified(Array(Specified(conv_int('char',
  115)), Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  {-# <./cheri/null1.c:6:0, ./cheri/null1.c:13:1> #-} let strong ip: pointer =
    create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  {-# §6.2.4#6 #-}
  {-# <./cheri/null1.c:7:4, ./cheri/null1.c:7:16> #-} store('intptr_t', ip,
  Unspecified('intptr_t')) ;
  {-# <./cheri/null1.c:9:4, ./cheri/null1.c:9:11> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <./cheri/null1.c:9:4, ./cheri/null1.c:9:10> ./cheri/null1.c:9:7 #-} let weak (a_909: pointer,
      a_913: loaded integer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# <./cheri/null1.c:9:4, ./cheri/null1.c:9:6> #-} pure(ip)
        ,
          {-# §6.5.4 #-}
          {-# <./cheri/null1.c:9:4, ./cheri/null1.c:9:10> ./cheri/null1.c:9:7 #-} let weak a_910: loaded integer =
            {-# <./cheri/null1.c:9:9, ./cheri/null1.c:9:10> #-} pure(
              Specified(0)
            ) in
          pure(
            case a_910 of
              | Specified(a_911: integer) =>
                  Specified(memop(CapAssignValue, CivNULLcap(signed)(),
                  conv_int('intptr_t', a_911)))
              | Unspecified(_: ctype) =>
                  undef(<<DUMMY(integer to [u]intptr_t cast)>>)
            end
          )
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('intptr_t', a_909, a_913)) in
      pure(a_913)
    ) in
  pure(Unit) ;
  {-# <./cheri/null1.c:10:4, ./cheri/null1.c:10:22> #-} let strong a_914: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.4 #-}
      {-# <./cheri/null1.c:10:13, ./cheri/null1.c:10:21> ./cheri/null1.c:10:13 #-} let weak a_915: loaded integer =
        {-# <./cheri/null1.c:10:19, ./cheri/null1.c:10:21> #-} let weak a_917: pointer =
          {-# <./cheri/null1.c:10:19, ./cheri/null1.c:10:21> #-} pure(ip) in
        load('intptr_t', a_917) in
      case a_915 of
        | Specified(a_916: integer) =>
            let weak a_918: pointer =
              memop(PtrFromInt, 'intptr_t', 'signed int', a_916) in
            pure(Specified(a_918))
        | Unspecified(_: ctype) =>
            pure(Unspecified('signed int*'))
      end
    ) in
  store('signed int*', p, a_914) ;
  {-# <./cheri/null1.c:12:4, ./cheri/null1.c:12:95> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./cheri/null1.c:12:4, ./cheri/null1.c:12:94> #-} let strong ((a_919: loaded pointer,
      (a_920: ctype, a_921: [ctype], a_922: boolean, a_923: boolean)),
      a_928: loaded pointer, a_930: loaded pointer, a_934: loaded pointer,
      a_950: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_908: loaded pointer =
            {-# <./cheri/null1.c:12:4, ./cheri/null1.c:12:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_908, cfunction(a_908)))
        ,
          {-# <./cheri/null1.c:12:12, ./cheri/null1.c:12:20> #-} let weak a_929: pointer =
            {-# <./cheri/null1.c:12:12, ./cheri/null1.c:12:20> #-} pure(
              __stderr
            ) in
          load('struct _IO_FILE*', a_929)
        ,
          {-# <./cheri/null1.c:12:21, ./cheri/null1.c:12:48> #-} let weak a_932: pointer =
            {-# <./cheri/null1.c:12:21, ./cheri/null1.c:12:48> #-} pure(a_931) in
          {-# §6.3.2.1#3 #-}
          let weak a_933: pointer = memop(PtrArrayShift, a_932, 'char', 0) in
          pure(Specified(a_933))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <./cheri/null1.c:12:49, ./cheri/null1.c:12:63> #-} let strong ((a_936: loaded pointer,
          (a_937: ctype, a_938: [ctype], a_939: boolean, a_940: boolean)),
          a_942: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_935: loaded pointer =
                {-# <./cheri/null1.c:12:49, ./cheri/null1.c:12:53> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_935, cfunction(a_935)))
            ,
              {-# §6.5.4 #-}
              {-# <./cheri/null1.c:12:54, ./cheri/null1.c:12:62> ./cheri/null1.c:12:54 #-} let weak a_945: pointer =
                {-# <./cheri/null1.c:12:61, ./cheri/null1.c:12:62> #-} pure(p) in
              load('signed int*', a_945)
            ) in
          if not(params_length(a_938) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_939 \/ not(are_compatible ('const char*', a_937)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_941: pointer =
                let a_947: ctype = params_nth(a_938, 0) in
                if not(are_compatible ('void*', a_947)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_948: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_948, a_942) in
                  pure(a_948) in
              let strong a_949: loaded pointer =
                ccall('const char* (*) (void*)', a_936, a_941) in
              kill('void*', a_941) ;
              pure(a_949)
        ,
          {-# §6.5.15#4, sentence 1 #-}
          {-# <./cheri/null1.c:12:64, ./cheri/null1.c:12:93> ./cheri/null1.c:12:83 #-} let strong a_960: loaded integer =
            {-# <./cheri/null1.c:12:64, ./cheri/null1.c:12:83> #-} let weak (a_951: loaded integer,
            a_952: loaded integer) =
              unseq(
                {-# <./cheri/null1.c:12:64, ./cheri/null1.c:12:83> #-} let weak a_957: loaded pointer =
                  {-# <./cheri/null1.c:12:65, ./cheri/null1.c:12:66> #-} let weak a_956: pointer =
                    {-# <./cheri/null1.c:12:65, ./cheri/null1.c:12:66> #-} pure(
                      p
                    ) in
                  load('signed int*', a_956) in
                case a_957 of
                  | Specified(a_958: pointer) =>
                      let weak a_959: boolean = memop(PtrEq, a_958, NULL) in
                      {-# §6.5.9#3 #-}
                      pure(if a_959 then Specified(1) else Specified(0))
                  | _: loaded pointer =>
                      pure(
                        undef(<<UB_CERB004_unspecified__equality_ptr_vs_NULL>>)
                      )
                end
              ,
                {-# <./cheri/null1.c:12:64, ./cheri/null1.c:12:83> #-} pure(
                  Specified(0)
                )
              ) in
            pure(
              case (a_951, a_952) of
                | (Specified(a_953: integer), Specified(a_954: integer)) =>
                    if conv_int('signed int', a_953) =
                    conv_int('signed int', a_954) then
                      Specified(1)
                    else
                      Specified(0)
                | _: (loaded integer,loaded integer) =>
                    Unspecified('signed int')
              end
            ) in
          case a_960 of
            | Specified(a_961: integer) =>
                {-# §6.5.15#4, sentence 2 #-}
                if a_961 = 0 then
                  {-# <./cheri/null1.c:12:84, ./cheri/null1.c:12:86> #-} let weak a_963: pointer =
                    {-# <./cheri/null1.c:12:84, ./cheri/null1.c:12:86> #-} pure(
                      a_962
                    ) in
                  {-# §6.3.2.1#3 #-}
                  let weak a_964: pointer =
                    memop(PtrArrayShift, a_963, 'char', 0) in
                  pure(Specified(a_964))
                else
                  {-# <./cheri/null1.c:12:87, ./cheri/null1.c:12:93> #-} let weak a_966: pointer =
                    {-# <./cheri/null1.c:12:87, ./cheri/null1.c:12:93> #-} pure(
                      a_965
                    ) in
                  {-# §6.3.2.1#3 #-}
                  let weak a_967: pointer =
                    memop(PtrArrayShift, a_966, 'char', 0) in
                  pure(Specified(a_967))
            | Unspecified(_: ctype) =>
                pure(undef(<<UB_CERB004_unspecified__conditional>>))
          end
        ) in
      if not(params_length(a_921) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_922) \/ not(are_compatible ('signed int', a_920)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_927: pointer =
            let a_968: ctype = params_nth(a_921, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_968)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_969: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_969, a_928) in
              pure(a_969) in
          let strong a_926: pointer =
            let a_970: ctype = params_nth(a_921, 1) in
            if not(are_compatible ('const char*', a_970)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_971: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_971, a_930) in
              pure(a_971) in
          let strong a_925: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_934) in
          let strong a_924: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'char*', a_950) in
          let strong a_972: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_919, a_927, a_926, [('const char*', a_925), ('char*', a_924)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_927)
            ,
              kill('char*', a_926)
            ,
              kill('char*', a_925)
            ,
              kill('char*', a_924)
            ) in
          pure(a_972)
    ) in
  pure(Unit) ;
  kill('intptr_t', ip) ;
  kill('signed int*', p) ;
  pure(Unit) ;
  {-# <./cheri/null1.c:5:0, ./cheri/null1.c:13:1> ./cheri/null1.c:5:4 - ./cheri/null1.c:5:8 #-} save ret_907: loaded integer (a_973: loaded integer:= Specified(0)) in
    pure(a_973)

