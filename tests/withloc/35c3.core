-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob x: pointer [ail_ctype = 'signed int'] :=
  {-# <unknown location> #-} let strong a_690: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong a_691: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <./de_facto_memory_model/35c3.c:2:6, ./de_facto_memory_model/35c3.c:2:7> #-} pure(
        Specified(1)
      )
    ) in
  store('signed int', a_690, conv_loaded_int('signed int', a_691)) ;
  pure(a_690)

glob secret_key: pointer [ail_ctype = 'signed int'] :=
  {-# <unknown location> #-} let strong a_688: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong a_689: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <./de_facto_memory_model/35c3.c:3:17, ./de_facto_memory_model/35c3.c:3:21> #-} pure(
        Specified(4091)
      )
    ) in
  store('signed int', a_688, conv_loaded_int('signed int', a_689)) ;
  pure(a_688)

glob a_679: pointer [ail_ctype = 'char[10]'] :=
  create_readonly(Ivalignof('char[10]'), 'char[10]', Specified(Array(Specified(conv_int('char',
  108)), Specified(conv_int('char', 101)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 107)), Specified(conv_int('char', 58)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  {-# <./de_facto_memory_model/35c3.c:4:11, ./de_facto_memory_model/35c3.c:9:1> #-} let strong p: pointer =
    create(Ivalignof('signed int*'), 'signed int*') in
  {-# <./de_facto_memory_model/35c3.c:5:2, ./de_facto_memory_model/35c3.c:5:14> #-} let strong a_656: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.3.2#3, sentence 5 #-}
      {-# <./de_facto_memory_model/35c3.c:5:11, ./de_facto_memory_model/35c3.c:5:13> ./de_facto_memory_model/35c3.c:5:11 #-} let weak a_657: pointer =
        {-# <./de_facto_memory_model/35c3.c:5:12, ./de_facto_memory_model/35c3.c:5:13> #-} pure(
          x
        ) in
      pure(Specified(a_657))
    ) in
  store('signed int*', p, a_656) ;
  {-# <./de_facto_memory_model/35c3.c:6:2, ./de_facto_memory_model/35c3.c:6:10> #-} let strong _: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <./de_facto_memory_model/35c3.c:6:2, ./de_facto_memory_model/35c3.c:6:9> ./de_facto_memory_model/35c3.c:6:4 #-} let weak (a_655: pointer,
      a_664: loaded pointer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# <./de_facto_memory_model/35c3.c:6:2, ./de_facto_memory_model/35c3.c:6:3> #-} pure(
            p
          )
        ,
          {-# §6.5.6 #-}
          {-# <./de_facto_memory_model/35c3.c:6:6, ./de_facto_memory_model/35c3.c:6:9> ./de_facto_memory_model/35c3.c:6:7 #-} let weak (a_658: loaded pointer,
          a_660: loaded integer) =
            unseq(
              {-# <./de_facto_memory_model/35c3.c:6:6, ./de_facto_memory_model/35c3.c:6:7> #-} let weak a_663: pointer =
                {-# <./de_facto_memory_model/35c3.c:6:6, ./de_facto_memory_model/35c3.c:6:7> #-} pure(
                  p
                ) in
              load('signed int*', a_663)
            ,
              {-# <./de_facto_memory_model/35c3.c:6:8, ./de_facto_memory_model/35c3.c:6:9> #-} pure(
                Specified(1)
              )
            ) in
          let (Specified(a_659: pointer), Specified(a_661: integer)) =
            (a_658, a_660) in
          let weak a_662: pointer =
            memop(PtrArrayShift, a_659, 'signed int', a_661) in
          pure(Specified(a_662))
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('signed int*', a_655, a_664)) in
      pure(a_664)
    ) in
  pure(Unit) ;
  {-# <./de_facto_memory_model/35c3.c:6:11, ./de_facto_memory_model/35c3.c:8:30> #-} let strong leak: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  {-# <./de_facto_memory_model/35c3.c:7:2, ./de_facto_memory_model/35c3.c:7:16> #-} let strong a_665: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <./de_facto_memory_model/35c3.c:7:13, ./de_facto_memory_model/35c3.c:7:15> ./de_facto_memory_model/35c3.c:7:13 #-} let weak a_670: pointer =
        {-# §6.5.3.2 #-}
        {-# <./de_facto_memory_model/35c3.c:7:13, ./de_facto_memory_model/35c3.c:7:15> ./de_facto_memory_model/35c3.c:7:13 #-} let weak a_666: loaded pointer =
          {-# <./de_facto_memory_model/35c3.c:7:14, ./de_facto_memory_model/35c3.c:7:15> #-} let weak a_669: pointer =
            {-# <./de_facto_memory_model/35c3.c:7:14, ./de_facto_memory_model/35c3.c:7:15> #-} pure(
              p
            ) in
          load('signed int*', a_669) in
        let Specified(a_667: pointer) = a_666 in
        let weak a_668: boolean =
          memop(PtrValidForDeref, 'signed int', a_667) in
        pure(
          if a_668 then a_667 else undef(<<UB043_indirection_invalid_value>>)
        ) in
      load('signed int', a_670)
    ) in
  store('signed int', leak, conv_loaded_int('signed int', a_665)) ;
  {-# <./de_facto_memory_model/35c3.c:8:2, ./de_facto_memory_model/35c3.c:8:28> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./de_facto_memory_model/35c3.c:8:2, ./de_facto_memory_model/35c3.c:8:27> #-} let strong ((a_671: loaded pointer,
      (a_672: ctype, a_673: [ctype], a_674: boolean, a_675: boolean)),
      a_678: loaded pointer, a_682: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_654: loaded pointer =
            {-# <./de_facto_memory_model/35c3.c:8:2, ./de_facto_memory_model/35c3.c:8:8> #-} pure(
              Specified(Cfunction(printf_proxy))
            ) in
          pure((a_654, cfunction(a_654)))
        ,
          {-# <./de_facto_memory_model/35c3.c:8:9, ./de_facto_memory_model/35c3.c:8:21> #-} let weak a_680: pointer =
            {-# <./de_facto_memory_model/35c3.c:8:9, ./de_facto_memory_model/35c3.c:8:21> #-} pure(
              a_679
            ) in
          {-# §6.3.2.1#3 #-}
          let weak a_681: pointer = memop(PtrArrayShift, a_680, 'char', 0) in
          pure(Specified(a_681))
        ,
          {-# <./de_facto_memory_model/35c3.c:8:22, ./de_facto_memory_model/35c3.c:8:26> #-} let weak a_683: pointer =
            {-# <./de_facto_memory_model/35c3.c:8:22, ./de_facto_memory_model/35c3.c:8:26> #-} pure(
              leak
            ) in
          load('signed int', a_683)
        ) in
      if not(params_length(a_673) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_674) \/ not(are_compatible ('signed int', a_672)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_677: pointer =
            let a_684: ctype = params_nth(a_673, 0) in
            if not(are_compatible ('const char*', a_684)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_685: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_685, a_678) in
              pure(a_685) in
          let strong a_676: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_682)) in
          let strong a_686: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_671, a_677,
            [('signed int', a_676)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_677), kill('signed int', a_676)) in
          pure(a_686)
    ) in
  pure(Unit) ;
  kill('signed int', leak) ;
  pure(Unit) ;
  kill('signed int*', p) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/35c3.c:4:0, ./de_facto_memory_model/35c3.c:9:1> ./de_facto_memory_model/35c3.c:4:4 - ./de_facto_memory_model/35c3.c:4:8 #-} save ret_653: loaded integer (a_687: loaded integer:= Specified(0)) in
    pure(a_687)

