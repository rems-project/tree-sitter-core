-- Aggregates










-- Globals
glob a_922: pointer [ail_ctype = 'char[13]'] :=
  let strong a_1534: pointer = create(Ivalignof('char[13]'), 'char[13]') in
  store_lock('char[13]', a_1534,
  Specified(Array(Specified(conv_int('char', 79)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 103)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1535: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1534,
    18446744073701163007) in
  case a_1535 of
    | Specified(a_1534: pointer) =>
        pure(a_1534)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_970: pointer [ail_ctype = 'char[11]'] :=
  let strong a_1536: pointer = create(Ivalignof('char[11]'), 'char[11]') in
  store_lock('char[11]', a_1536,
  Specified(Array(Specified(conv_int('char', 77)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1537: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1536,
    18446744073701163007) in
  case a_1537 of
    | Specified(a_1536: pointer) =>
        pure(a_1536)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1049: pointer [ail_ctype = 'char[12]'] :=
  let strong a_1538: pointer = create(Ivalignof('char[12]'), 'char[12]') in
  store_lock('char[12]', a_1538,
  Specified(Array(Specified(conv_int('char', 82)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_1539: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1538,
    18446744073701163007) in
  case a_1539 of
    | Specified(a_1538: pointer) =>
        pure(a_1538)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1085: pointer [ail_ctype = 'char[9]'] :=
  let strong a_1540: pointer = create(Ivalignof('char[9]'), 'char[9]') in
  store_lock('char[9]', a_1540,
  Specified(Array(Specified(conv_int('char', 67)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1541: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1540,
    18446744073701163007) in
  case a_1541 of
    | Specified(a_1540: pointer) =>
        pure(a_1540)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1125: pointer [ail_ctype = 'char[17]'] :=
  let strong a_1542: pointer = create(Ivalignof('char[17]'), 'char[17]') in
  store_lock('char[17]', a_1542,
  Specified(Array(Specified(conv_int('char', 80)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1543: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1542,
    18446744073701163007) in
  case a_1543 of
    | Specified(a_1542: pointer) =>
        pure(a_1542)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1152: pointer [ail_ctype = 'char[14]'] :=
  let strong a_1544: pointer = create(Ivalignof('char[14]'), 'char[14]') in
  store_lock('char[14]', a_1544,
  Specified(Array(Specified(conv_int('char', 101)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(0)))) ;
  let strong a_1545: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1544,
    18446744073701163007) in
  case a_1545 of
    | Specified(a_1544: pointer) =>
        pure(a_1544)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1155: pointer [ail_ctype = 'char[10]'] :=
  let strong a_1546: pointer = create(Ivalignof('char[10]'), 'char[10]') in
  store_lock('char[10]', a_1546,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(0)))) ;
  let strong a_1547: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1546,
    18446744073701163007) in
  case a_1547 of
    | Specified(a_1546: pointer) =>
        pure(a_1546)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1175: pointer [ail_ctype = 'char[11]'] :=
  let strong a_1548: pointer = create(Ivalignof('char[11]'), 'char[11]') in
  store_lock('char[11]', a_1548,
  Specified(Array(Specified(conv_int('char', 86)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1549: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1548,
    18446744073701163007) in
  case a_1549 of
    | Specified(a_1548: pointer) =>
        pure(a_1548)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1208: pointer [ail_ctype = 'char[5]'] :=
  let strong a_1550: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_1550,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0)))) ;
  let strong a_1551: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1550,
    18446744073701163007) in
  case a_1551 of
    | Specified(a_1550: pointer) =>
        pure(a_1550)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1212: pointer [ail_ctype = 'char[9]'] :=
  let strong a_1552: pointer = create(Ivalignof('char[9]'), 'char[9]') in
  store_lock('char[9]', a_1552,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0)))) ;
  let strong a_1553: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1552,
    18446744073701163007) in
  case a_1553 of
    | Specified(a_1552: pointer) =>
        pure(a_1552)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1236: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1554: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1554,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(0)))) ;
  let strong a_1555: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1554,
    18446744073701163007) in
  case a_1555 of
    | Specified(a_1554: pointer) =>
        pure(a_1554)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1277: pointer [ail_ctype = 'char[5]'] :=
  let strong a_1556: pointer = create(Ivalignof('char[5]'), 'char[5]') in
  store_lock('char[5]', a_1556,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 48)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 120)), Specified(0)))) ;
  let strong a_1557: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1556,
    18446744073701163007) in
  case a_1557 of
    | Specified(a_1556: pointer) =>
        pure(a_1556)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1325: pointer [ail_ctype = 'char[2]'] :=
  let strong a_1558: pointer = create(Ivalignof('char[2]'), 'char[2]') in
  store_lock('char[2]', a_1558,
  Specified(Array(Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1559: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1558,
    18446744073701163007) in
  case a_1559 of
    | Specified(a_1558: pointer) =>
        pure(a_1558)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1398: pointer [ail_ctype = 'char[26]'] :=
  let strong a_1560: pointer = create(Ivalignof('char[26]'), 'char[26]') in
  store_lock('char[26]', a_1560,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 96)),
  Specified(0)))) ;
  let strong a_1561: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1560,
    18446744073701163007) in
  case a_1561 of
    | Specified(a_1560: pointer) =>
        pure(a_1560)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1414: pointer [ail_ctype = 'char[4]'] :=
  let strong a_1562: pointer = create(Ivalignof('char[4]'), 'char[4]') in
  store_lock('char[4]', a_1562,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 112)),
  Specified(0)))) ;
  let strong a_1563: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1562,
    18446744073701163007) in
  case a_1563 of
    | Specified(a_1562: pointer) =>
        pure(a_1562)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1454: pointer [ail_ctype = 'char[31]'] :=
  let strong a_1564: pointer = create(Ivalignof('char[31]'), 'char[31]') in
  store_lock('char[31]', a_1564,
  Specified(Array(Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 96)), Specified(0)))) ;
  let strong a_1565: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1564,
    18446744073701163007) in
  case a_1565 of
    | Specified(a_1564: pointer) =>
        pure(a_1564)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1469: pointer [ail_ctype = 'char[27]'] :=
  let strong a_1566: pointer = create(Ivalignof('char[27]'), 'char[27]') in
  store_lock('char[27]', a_1566,
  Specified(Array(Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 91)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 80)), Specified(conv_int('char', 44)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 35)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 98)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 93)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 63)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 65)), Specified(0)))) ;
  let strong a_1567: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1566,
    18446744073701163007) in
  case a_1567 of
    | Specified(a_1566: pointer) =>
        pure(a_1566)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_1509: pointer [ail_ctype = 'char[15]'] :=
  let strong a_1568: pointer = create(Ivalignof('char[15]'), 'char[15]') in
  store_lock('char[15]', a_1568,
  Specified(Array(Specified(conv_int('char', 115)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_1569: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_1568,
    18446744073701163007) in
  case a_1569 of
    | Specified(a_1568: pointer) =>
        pure(a_1568)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

-- Fun map
proc main (): eff loaded integer :=
  {-# <realloc1.c:8:0, realloc1.c:24:1> #-} let strong x: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong p0: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong p1: pointer =
    create(Ivalignof('signed int**'), 'signed int**') in
  {-# <realloc1.c:9:4, realloc1.c:9:13> #-} let strong a_907: loaded integer =
    {-# §6.5#2 #-}
    bound({-# <realloc1.c:9:10, realloc1.c:9:12> #-} pure(Specified(42))) in
  store('signed int', x, conv_loaded_int('signed int', a_907)) ;
  {-# <realloc1.c:10:4, realloc1.c:10:17> #-} let strong a_908: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.3.2#3, sentence 5 #-}
      {-# <realloc1.c:10:14, realloc1.c:10:16> realloc1.c:10:14 #-} let weak a_909: pointer =
        {-# <realloc1.c:10:15, realloc1.c:10:16> #-} pure(x) in
      pure(Specified(a_909))
    ) in
  store('signed int*', p0, a_908) ;
  {-# <realloc1.c:11:4, realloc1.c:11:61> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <realloc1.c:11:4, realloc1.c:11:60> #-} let strong ((a_911: loaded pointer,
      (a_912: ctype, a_913: [ctype], a_914: boolean, a_915: boolean)),
      a_919: loaded pointer, a_921: loaded pointer, a_925: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_910: loaded pointer =
            {-# <realloc1.c:11:4, realloc1.c:11:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_910, cfunction(a_910)))
        ,
          {-# <realloc1.c:11:12, realloc1.c:11:20> #-} let weak a_920: pointer =
            {-# <realloc1.c:11:12, realloc1.c:11:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_920)
        ,
          {-# <realloc1.c:11:21, realloc1.c:11:42> #-} let weak a_923: pointer =
            {-# <realloc1.c:11:21, realloc1.c:11:42> #-} pure(a_922) in
          {-# §6.3.2.1#3 #-}
          let weak a_924: pointer = memop(PtrArrayShift, a_923, 'char', 0) in
          pure(Specified(a_924))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <realloc1.c:11:44, realloc1.c:11:59> #-} let strong ((a_927: loaded pointer,
          (a_928: ctype, a_929: [ctype], a_930: boolean, a_931: boolean)),
          a_933: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_926: loaded pointer =
                {-# <realloc1.c:11:44, realloc1.c:11:48> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_926, cfunction(a_926)))
            ,
              {-# §6.5.4 #-}
              {-# <realloc1.c:11:49, realloc1.c:11:58> realloc1.c:11:49 #-} let weak a_936: pointer =
                {-# <realloc1.c:11:56, realloc1.c:11:58> #-} pure(p0) in
              load('signed int*', a_936)
            ) in
          if not(params_length(a_929) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_930 \/ not(are_compatible ('const char*', a_928)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_932: pointer =
                let a_938: ctype = params_nth(a_929, 0) in
                if not(are_compatible ('void*', a_938)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_939: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_939, a_933) in
                  pure(a_939) in
              let strong a_940: loaded pointer =
                ccall('const char* (*) (void*)', a_927, a_932) in
              kill('void*', a_932) ;
              pure(a_940)
        ) in
      if not(params_length(a_913) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_914) \/ not(are_compatible ('signed int', a_912)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_918: pointer =
            let a_941: ctype = params_nth(a_913, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_941)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_942: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_942, a_919) in
              pure(a_942) in
          let strong a_917: pointer =
            let a_943: ctype = params_nth(a_913, 1) in
            if not(are_compatible ('const char*', a_943)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_944: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_944, a_921) in
              pure(a_944) in
          let strong a_916: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_925) in
          let strong a_945: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_911, a_918, a_917, [('const char*', a_916)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_918)
            ,
              kill('char*', a_917)
            ,
              kill('char*', a_916)
            ) in
          pure(a_945)
    ) in
  pure(Unit) ;
  {-# <realloc1.c:12:4, realloc1.c:12:36> #-} let strong a_946: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <realloc1.c:12:15, realloc1.c:12:35> #-} let strong ((a_948: loaded pointer,
      (a_949: ctype, a_950: [ctype], a_951: boolean, a_952: boolean)),
      a_954: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_947: loaded pointer =
            {-# <realloc1.c:12:15, realloc1.c:12:21> #-} pure(
              Specified(Cfunction(malloc_proxy))
            ) in
          pure((a_947, cfunction(a_947)))
        ,
          {-# <realloc1.c:12:22, realloc1.c:12:34> realloc1.c:12:22 #-} pure(
            Specified(Ivsizeof('signed int*'))
          )
        ) in
      if not(params_length(a_950) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_951 \/ not(are_compatible ('void*', a_949)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_953: pointer =
            let a_955: ctype = params_nth(a_950, 0) in
            if not(are_compatible ('size_t', a_955)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_956: pointer =
                create(Ivalignof('size_t'), 'size_t') in
              let weak _: unit =
                store('size_t', a_956, conv_loaded_int('size_t', a_954)) in
              pure(a_956) in
          let strong a_957: loaded pointer =
            ccall('void* (*) (size_t)', a_948, a_953) in
          kill('size_t', a_953) ;
          pure(a_957)
    ) in
  store('signed int**', p1, a_946) ;
  {-# <realloc1.c:13:4, realloc1.c:13:59> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <realloc1.c:13:4, realloc1.c:13:58> #-} let strong ((a_959: loaded pointer,
      (a_960: ctype, a_961: [ctype], a_962: boolean, a_963: boolean)),
      a_967: loaded pointer, a_969: loaded pointer, a_973: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_958: loaded pointer =
            {-# <realloc1.c:13:4, realloc1.c:13:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_958, cfunction(a_958)))
        ,
          {-# <realloc1.c:13:12, realloc1.c:13:20> #-} let weak a_968: pointer =
            {-# <realloc1.c:13:12, realloc1.c:13:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_968)
        ,
          {-# <realloc1.c:13:21, realloc1.c:13:40> #-} let weak a_971: pointer =
            {-# <realloc1.c:13:21, realloc1.c:13:40> #-} pure(a_970) in
          {-# §6.3.2.1#3 #-}
          let weak a_972: pointer = memop(PtrArrayShift, a_971, 'char', 0) in
          pure(Specified(a_972))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <realloc1.c:13:42, realloc1.c:13:57> #-} let strong ((a_975: loaded pointer,
          (a_976: ctype, a_977: [ctype], a_978: boolean, a_979: boolean)),
          a_981: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_974: loaded pointer =
                {-# <realloc1.c:13:42, realloc1.c:13:46> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_974, cfunction(a_974)))
            ,
              {-# §6.5.4 #-}
              {-# <realloc1.c:13:47, realloc1.c:13:56> realloc1.c:13:47 #-} let weak a_984: pointer =
                {-# <realloc1.c:13:54, realloc1.c:13:56> #-} pure(p1) in
              load('signed int**', a_984)
            ) in
          if not(params_length(a_977) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_978 \/ not(are_compatible ('const char*', a_976)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_980: pointer =
                let a_986: ctype = params_nth(a_977, 0) in
                if not(are_compatible ('void*', a_986)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_987: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_987, a_981) in
                  pure(a_987) in
              let strong a_988: loaded pointer =
                ccall('const char* (*) (void*)', a_975, a_980) in
              kill('void*', a_980) ;
              pure(a_988)
        ) in
      if not(params_length(a_961) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_962) \/ not(are_compatible ('signed int', a_960)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_966: pointer =
            let a_989: ctype = params_nth(a_961, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_989)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_990: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_990, a_967) in
              pure(a_990) in
          let strong a_965: pointer =
            let a_991: ctype = params_nth(a_961, 1) in
            if not(are_compatible ('const char*', a_991)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_992: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_992, a_969) in
              pure(a_992) in
          let strong a_964: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_973) in
          let strong a_993: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_959, a_966, a_965, [('const char*', a_964)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_966)
            ,
              kill('char*', a_965)
            ,
              kill('char*', a_964)
            ) in
          pure(a_993)
    ) in
  pure(Unit) ;
  {-# <realloc1.c:14:4, realloc1.c:14:32> #-} let strong _: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <realloc1.c:14:4, realloc1.c:14:31> #-} let strong ((a_995: loaded pointer,
      (a_996: ctype, a_997: [ctype], a_998: boolean, a_999: boolean)),
      a_1003: loaded pointer, a_1005: loaded pointer, a_1007: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_994: loaded pointer =
            {-# <realloc1.c:14:4, realloc1.c:14:10> #-} pure(
              Specified(Cfunction(memcpy_proxy))
            ) in
          pure((a_994, cfunction(a_994)))
        ,
          {-# <realloc1.c:14:11, realloc1.c:14:13> #-} let weak a_1004: pointer =
            {-# <realloc1.c:14:11, realloc1.c:14:13> #-} pure(p1) in
          load('signed int**', a_1004)
        ,
          {-# §6.5.3.2#3, sentence 5 #-}
          {-# <realloc1.c:14:14, realloc1.c:14:17> realloc1.c:14:14 #-} let weak a_1006: pointer =
            {-# <realloc1.c:14:15, realloc1.c:14:17> #-} pure(p0) in
          pure(Specified(a_1006))
        ,
          {-# <realloc1.c:14:18, realloc1.c:14:30> realloc1.c:14:18 #-} pure(
            Specified(Ivsizeof('signed int*'))
          )
        ) in
      if not(params_length(a_997) = 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_998 \/ not(are_compatible ('void*', a_996)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1002: pointer =
            let a_1008: ctype = params_nth(a_997, 0) in
            if not(are_compatible ('void*', a_1008)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1009: pointer =
                create(Ivalignof('void*'), 'void*') in
              let weak _: unit = store('void*', a_1009, a_1003) in
              pure(a_1009) in
          let strong a_1001: pointer =
            let a_1010: ctype = params_nth(a_997, 1) in
            if not(are_compatible ('const void*', a_1010)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1011: pointer =
                create(Ivalignof('const void*'), 'const void*') in
              let weak _: unit = store('const void*', a_1011, a_1005) in
              pure(a_1011) in
          let strong a_1000: pointer =
            let a_1012: ctype = params_nth(a_997, 2) in
            if not(are_compatible ('size_t', a_1012)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1013: pointer =
                create(Ivalignof('size_t'), 'size_t') in
              let weak _: unit =
                store('size_t', a_1013, conv_loaded_int('size_t', a_1007)) in
              pure(a_1013) in
          let strong a_1014: loaded pointer =
            ccall('void* (*) (void*restrict , const void*restrict , size_t)',
            a_995, a_1002, a_1001, a_1000) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('void*', a_1002)
            ,
              kill('void*', a_1001)
            ,
              kill('size_t', a_1000)
            ) in
          pure(a_1014)
    ) in
  pure(Unit) ;
  {-# <realloc1.c:15:4, realloc1.c:15:37> #-} let strong _: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <realloc1.c:15:4, realloc1.c:15:36> realloc1.c:15:7 #-} let weak (a_906: pointer,
      a_1036: loaded pointer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# <realloc1.c:15:4, realloc1.c:15:6> #-} pure(p1)
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <realloc1.c:15:9, realloc1.c:15:36> #-} let strong ((a_1016: loaded pointer,
          (a_1017: ctype, a_1018: [ctype], a_1019: boolean, a_1020: boolean)),
          a_1023: loaded pointer, a_1025: loaded integer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_1015: loaded pointer =
                {-# <realloc1.c:15:9, realloc1.c:15:16> #-} pure(
                  Specified(Cfunction(realloc_proxy))
                ) in
              pure((a_1015, cfunction(a_1015)))
            ,
              {-# <realloc1.c:15:17, realloc1.c:15:19> #-} let weak a_1024: pointer =
                {-# <realloc1.c:15:17, realloc1.c:15:19> #-} pure(p1) in
              load('signed int**', a_1024)
            ,
              {-# §6.5.5 #-}
              {-# <realloc1.c:15:21, realloc1.c:15:35> realloc1.c:15:22 #-} let weak (a_1026: loaded integer,
              a_1027: loaded integer) =
                unseq(
                  {-# <realloc1.c:15:21, realloc1.c:15:22> #-} pure(
                    Specified(2)
                  )
                ,
                  {-# <realloc1.c:15:23, realloc1.c:15:35> realloc1.c:15:23 #-} pure(
                    Specified(Ivsizeof('signed int*'))
                  )
                ) in
              pure(
                case (a_1026, a_1027) of
                  | (Specified(a_1028: integer), Specified(a_1029: integer)) =>
                      Specified(wrapI_mul('size_t', if all_values_representable_in('size_t',
                      'signed int') then
                        conv_int('signed int', a_1028)
                      else
                        conv_int('unsigned int', a_1028), if all_values_representable_in('size_t',
                      'signed int') then
                        conv_int('signed int', a_1029)
                      else
                        conv_int('unsigned int', a_1029)))
                  | _: (loaded integer,loaded integer) =>
                      Unspecified('size_t')
                end
              )
            ) in
          if not(params_length(a_1018) = 2) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_1019 \/ not(are_compatible ('void*', a_1017)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1022: pointer =
                let a_1031: ctype = params_nth(a_1018, 0) in
                if not(are_compatible ('void*', a_1031)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_1032: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_1032, a_1023) in
                  pure(a_1032) in
              let strong a_1021: pointer =
                let a_1033: ctype = params_nth(a_1018, 1) in
                if not(are_compatible ('size_t', a_1033)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_1034: pointer =
                    create(Ivalignof('size_t'), 'size_t') in
                  let weak _: unit =
                    store('size_t', a_1034, conv_loaded_int('size_t', a_1025)) in
                  pure(a_1034) in
              let strong a_1035: loaded pointer =
                ccall('void* (*) (void*, size_t)', a_1016, a_1022, a_1021) in
              let strong _: (unit,unit) =
                unseq(kill('void*', a_1022), kill('size_t', a_1021)) in
              pure(a_1035)
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('signed int**', a_906, a_1036)) in
      pure(a_1036)
    ) in
  pure(Unit) ;
  {-# <realloc1.c:17:4, realloc1.c:17:60> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <realloc1.c:17:4, realloc1.c:17:59> #-} let strong ((a_1038: loaded pointer,
      (a_1039: ctype, a_1040: [ctype], a_1041: boolean, a_1042: boolean)),
      a_1046: loaded pointer, a_1048: loaded pointer, a_1052: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_1037: loaded pointer =
            {-# <realloc1.c:17:4, realloc1.c:17:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_1037, cfunction(a_1037)))
        ,
          {-# <realloc1.c:17:12, realloc1.c:17:20> #-} let weak a_1047: pointer =
            {-# <realloc1.c:17:12, realloc1.c:17:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_1047)
        ,
          {-# <realloc1.c:17:21, realloc1.c:17:41> #-} let weak a_1050: pointer =
            {-# <realloc1.c:17:21, realloc1.c:17:41> #-} pure(a_1049) in
          {-# §6.3.2.1#3 #-}
          let weak a_1051: pointer =
            memop(PtrArrayShift, a_1050, 'char', 0) in
          pure(Specified(a_1051))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <realloc1.c:17:43, realloc1.c:17:58> #-} let strong ((a_1054: loaded pointer,
          (a_1055: ctype, a_1056: [ctype], a_1057: boolean, a_1058: boolean)),
          a_1060: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_1053: loaded pointer =
                {-# <realloc1.c:17:43, realloc1.c:17:47> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_1053, cfunction(a_1053)))
            ,
              {-# §6.5.4 #-}
              {-# <realloc1.c:17:48, realloc1.c:17:57> realloc1.c:17:48 #-} let weak a_1063: pointer =
                {-# <realloc1.c:17:55, realloc1.c:17:57> #-} pure(p1) in
              load('signed int**', a_1063)
            ) in
          if not(params_length(a_1056) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_1057 \/ not(are_compatible ('const char*', a_1055)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1059: pointer =
                let a_1065: ctype = params_nth(a_1056, 0) in
                if not(are_compatible ('void*', a_1065)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_1066: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_1066, a_1060) in
                  pure(a_1066) in
              let strong a_1067: loaded pointer =
                ccall('const char* (*) (void*)', a_1054, a_1059) in
              kill('void*', a_1059) ;
              pure(a_1067)
        ) in
      if not(params_length(a_1040) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1041) \/ not(are_compatible ('signed int', a_1039)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1045: pointer =
            let a_1068: ctype = params_nth(a_1040, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1068)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1069: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1069, a_1046) in
              pure(a_1069) in
          let strong a_1044: pointer =
            let a_1070: ctype = params_nth(a_1040, 1) in
            if not(are_compatible ('const char*', a_1070)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1071: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1071, a_1048) in
              pure(a_1071) in
          let strong a_1043: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_1052) in
          let strong a_1072: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1038, a_1045, a_1044, [('const char*', a_1043)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1045)
            ,
              kill('char*', a_1044)
            ,
              kill('char*', a_1043)
            ) in
          pure(a_1072)
    ) in
  pure(Unit) ;
  {-# <realloc1.c:18:4, realloc1.c:18:58> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <realloc1.c:18:4, realloc1.c:18:57> #-} let strong ((a_1074: loaded pointer,
      (a_1075: ctype, a_1076: [ctype], a_1077: boolean, a_1078: boolean)),
      a_1082: loaded pointer, a_1084: loaded pointer, a_1088: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_1073: loaded pointer =
            {-# <realloc1.c:18:4, realloc1.c:18:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_1073, cfunction(a_1073)))
        ,
          {-# <realloc1.c:18:12, realloc1.c:18:20> #-} let weak a_1083: pointer =
            {-# <realloc1.c:18:12, realloc1.c:18:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_1083)
        ,
          {-# <realloc1.c:18:21, realloc1.c:18:38> #-} let weak a_1086: pointer =
            {-# <realloc1.c:18:21, realloc1.c:18:38> #-} pure(a_1085) in
          {-# §6.3.2.1#3 #-}
          let weak a_1087: pointer =
            memop(PtrArrayShift, a_1086, 'char', 0) in
          pure(Specified(a_1087))
        ,
          {-# §6.5.2.2#10, sentence 1 #-}
          {-# <realloc1.c:18:40, realloc1.c:18:56> #-} let strong ((a_1090: loaded pointer,
          (a_1091: ctype, a_1092: [ctype], a_1093: boolean, a_1094: boolean)),
          a_1096: loaded pointer) =
            {-# §6.5.2.2#4, sentence 2 #-}
            unseq(
              let strong a_1089: loaded pointer =
                {-# <realloc1.c:18:40, realloc1.c:18:44> #-} pure(
                  Specified(Cfunction(sptr))
                ) in
              pure((a_1089, cfunction(a_1089)))
            ,
              {-# §6.5.4 #-}
              {-# <realloc1.c:18:45, realloc1.c:18:55> realloc1.c:18:45 #-} let weak a_1103: pointer =
                {-# §6.5.3.2 #-}
                {-# <realloc1.c:18:52, realloc1.c:18:55> realloc1.c:18:52 #-} let weak a_1099: loaded pointer =
                  {-# <realloc1.c:18:53, realloc1.c:18:55> #-} let weak a_1102: pointer =
                    {-# <realloc1.c:18:53, realloc1.c:18:55> #-} pure(p1) in
                  load('signed int**', a_1102) in
                case a_1099 of
                  | Specified(a_1100: pointer) =>
                      let weak a_1101: boolean =
                        memop(PtrValidForDeref, 'signed int*', a_1100) in
                      pure(
                        if a_1101 then
                          a_1100
                        else
                          undef(<<UB043_indirection_invalid_value>>)
                      )
                  | Unspecified(_: ctype) =>
                      pure(undef(<<UB043_indirection_invalid_value>>))
                end in
              load('signed int*', a_1103)
            ) in
          if not(params_length(a_1092) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_1093 \/ not(are_compatible ('const char*', a_1091)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1095: pointer =
                let a_1105: ctype = params_nth(a_1092, 0) in
                if not(are_compatible ('void*', a_1105)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {-# §6.5.2.2#7, sentence 1 #-}
                  let weak a_1106: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_1106, a_1096) in
                  pure(a_1106) in
              let strong a_1107: loaded pointer =
                ccall('const char* (*) (void*)', a_1090, a_1095) in
              kill('void*', a_1095) ;
              pure(a_1107)
        ) in
      if not(params_length(a_1076) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1077) \/ not(are_compatible ('signed int', a_1075)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1081: pointer =
            let a_1108: ctype = params_nth(a_1076, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1108)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1109: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1109, a_1082) in
              pure(a_1109) in
          let strong a_1080: pointer =
            let a_1110: ctype = params_nth(a_1076, 1) in
            if not(are_compatible ('const char*', a_1110)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1111: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1111, a_1084) in
              pure(a_1111) in
          let strong a_1079: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'const char*', a_1088) in
          let strong a_1112: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1074, a_1081, a_1080, [('const char*', a_1079)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1081)
            ,
              kill('char*', a_1080)
            ,
              kill('char*', a_1079)
            ) in
          pure(a_1112)
    ) in
  pure(Unit) ;
  {-# <realloc1.c:20:4, realloc1.c:21:80> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <realloc1.c:20:4, realloc1.c:21:79> #-} let strong ((a_1114: loaded pointer,
      (a_1115: ctype, a_1116: [ctype], a_1117: boolean, a_1118: boolean)),
      a_1122: loaded pointer, a_1124: loaded pointer, a_1128: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_1113: loaded pointer =
            {-# <realloc1.c:20:4, realloc1.c:20:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_1113, cfunction(a_1113)))
        ,
          {-# <realloc1.c:20:12, realloc1.c:20:20> #-} let weak a_1123: pointer =
            {-# <realloc1.c:20:12, realloc1.c:20:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_1123)
        ,
          {-# <realloc1.c:20:21, realloc1.c:20:40> #-} let weak a_1126: pointer =
            {-# <realloc1.c:20:21, realloc1.c:20:40> #-} pure(a_1125) in
          {-# §6.3.2.1#3 #-}
          let weak a_1127: pointer =
            memop(PtrArrayShift, a_1126, 'char', 0) in
          pure(Specified(a_1127))
        ,
          {-# §6.5.15#4, sentence 1 #-}
          {-# <realloc1.c:21:12, realloc1.c:21:78> realloc1.c:21:50 #-} let strong a_1150: loaded integer =
            {-# <realloc1.c:21:12, realloc1.c:21:50> #-} let weak (a_1129: loaded integer,
            a_1130: loaded integer) =
              unseq(
                {-# <realloc1.c:21:12, realloc1.c:21:50> #-} let strong a_1147: (loaded pointer,loaded pointer) =
                  unseq(
                    {-# §6.5.4 #-}
                    {-# <realloc1.c:21:43, realloc1.c:21:45> #-} let weak a_1135: loaded pointer =
                      {-# <realloc1.c:21:43, realloc1.c:21:45> #-} let weak a_1137: pointer =
                        {-# <realloc1.c:21:43, realloc1.c:21:45> #-} pure(p0) in
                      load('signed int*', a_1137) in
                    case a_1135 of
                      | Specified(a_1136: pointer) =>
                          let weak a_1138: boolean =
                            memop(PtrWellAligned, 'signed int', a_1136) in
                          pure(
                            Specified(if a_1138 then
                              a_1136
                            else
                              undef(<<UB025_misaligned_pointer_conversion>>))
                          )
                      | Unspecified(_: ctype) =>
                          pure(
                            undef(<<UB025_misaligned_pointer_conversion>>)
                          )
                    end
                  ,
                    {-# §6.5.4 #-}
                    {-# <realloc1.c:21:46, realloc1.c:21:49> realloc1.c:21:46 #-} let weak a_1134: loaded pointer =
                      {-# <realloc1.c:21:46, realloc1.c:21:49> realloc1.c:21:46 #-} let weak a_1144: pointer =
                        {-# §6.5.3.2 #-}
                        {-# <realloc1.c:21:46, realloc1.c:21:49> realloc1.c:21:46 #-} let weak a_1140: loaded pointer =
                          {-# <realloc1.c:21:47, realloc1.c:21:49> #-} let weak a_1143: pointer =
                            {-# <realloc1.c:21:47, realloc1.c:21:49> #-} pure(
                              p1
                            ) in
                          load('signed int**', a_1143) in
                        case a_1140 of
                          | Specified(a_1141: pointer) =>
                              let weak a_1142: boolean =
                                memop(PtrValidForDeref, 'signed int*', a_1141) in
                              pure(
                                if a_1142 then
                                  a_1141
                                else
                                  undef(<<UB043_indirection_invalid_value>>)
                              )
                          | Unspecified(_: ctype) =>
                              pure(
                                undef(<<UB043_indirection_invalid_value>>)
                              )
                        end in
                      load('signed int*', a_1144) in
                    case a_1134 of
                      | Specified(a_1139: pointer) =>
                          let weak a_1145: boolean =
                            memop(PtrWellAligned, 'signed int', a_1139) in
                          pure(
                            Specified(if a_1145 then
                              a_1139
                            else
                              undef(<<UB025_misaligned_pointer_conversion>>))
                          )
                      | Unspecified(_: ctype) =>
                          pure(
                            undef(<<UB025_misaligned_pointer_conversion>>)
                          )
                    end
                  ) in
                case a_1147 of
                  | (Specified(a_1148: pointer), Specified(a_1149: pointer)) =>
                      memop(cheri_cheri_is_equal_exact['_Bool (signed int*, signed int*)'], a_1148,
                      a_1149)
                  | _: (loaded pointer,loaded pointer) =>
                      pure(undef(<<DUMMY(Elab, CHERI intrinsics (unspec))>>))
                end
              ,
                {-# <realloc1.c:21:12, realloc1.c:21:50> #-} pure(
                  Specified(0)
                )
              ) in
            pure(
              case (a_1129, a_1130) of
                | (Specified(a_1131: integer), Specified(a_1132: integer)) =>
                    if conv_int('signed int', a_1131) =
                    conv_int('signed int', a_1132) then
                      Specified(1)
                    else
                      Specified(0)
                | _: (loaded integer,loaded integer) =>
                    Unspecified('signed int')
              end
            ) in
          case a_1150 of
            | Specified(a_1151: integer) =>
                {-# §6.5.15#4, sentence 2 #-}
                if a_1151 = 0 then
                  {-# <realloc1.c:21:51, realloc1.c:21:66> #-} let weak a_1153: pointer =
                    {-# <realloc1.c:21:51, realloc1.c:21:66> #-} pure(a_1152) in
                  {-# §6.3.2.1#3 #-}
                  let weak a_1154: pointer =
                    memop(PtrArrayShift, a_1153, 'char', 0) in
                  pure(Specified(a_1154))
                else
                  {-# <realloc1.c:21:67, realloc1.c:21:78> #-} let weak a_1156: pointer =
                    {-# <realloc1.c:21:67, realloc1.c:21:78> #-} pure(a_1155) in
                  {-# §6.3.2.1#3 #-}
                  let weak a_1157: pointer =
                    memop(PtrArrayShift, a_1156, 'char', 0) in
                  pure(Specified(a_1157))
            | Unspecified(_: ctype) =>
                pure(undef(<<UB_CERB004_unspecified__conditional>>))
          end
        ) in
      if not(params_length(a_1116) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1117) \/ not(are_compatible ('signed int', a_1115)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1121: pointer =
            let a_1158: ctype = params_nth(a_1116, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1158)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1159: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1159, a_1122) in
              pure(a_1159) in
          let strong a_1120: pointer =
            let a_1160: ctype = params_nth(a_1116, 1) in
            if not(are_compatible ('const char*', a_1160)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1161: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1161, a_1124) in
              pure(a_1161) in
          let strong a_1119: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'char*', a_1128) in
          let strong a_1162: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1114, a_1121, a_1120, [('char*', a_1119)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1121)
            ,
              kill('char*', a_1120)
            ,
              kill('char*', a_1119)
            ) in
          pure(a_1162)
    ) in
  pure(Unit) ;
  {-# <realloc1.c:23:4, realloc1.c:23:41> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <realloc1.c:23:4, realloc1.c:23:40> #-} let strong ((a_1164: loaded pointer,
      (a_1165: ctype, a_1166: [ctype], a_1167: boolean, a_1168: boolean)),
      a_1172: loaded pointer, a_1174: loaded pointer, a_1178: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_1163: loaded pointer =
            {-# <realloc1.c:23:4, realloc1.c:23:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_1163, cfunction(a_1163)))
        ,
          {-# <realloc1.c:23:12, realloc1.c:23:20> #-} let weak a_1173: pointer =
            {-# <realloc1.c:23:12, realloc1.c:23:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_1173)
        ,
          {-# <realloc1.c:23:21, realloc1.c:23:34> #-} let weak a_1176: pointer =
            {-# <realloc1.c:23:21, realloc1.c:23:34> #-} pure(a_1175) in
          {-# §6.3.2.1#3 #-}
          let weak a_1177: pointer =
            memop(PtrArrayShift, a_1176, 'char', 0) in
          pure(Specified(a_1177))
        ,
          {-# <realloc1.c:23:35, realloc1.c:23:39> realloc1.c:23:35 #-} let weak a_1187: pointer =
            {-# §6.5.3.2 #-}
            {-# <realloc1.c:23:35, realloc1.c:23:39> realloc1.c:23:35 #-} let weak a_1179: loaded pointer =
              {-# <realloc1.c:23:36, realloc1.c:23:39> realloc1.c:23:36 #-} let weak a_1186: pointer =
                {-# §6.5.3.2 #-}
                {-# <realloc1.c:23:36, realloc1.c:23:39> realloc1.c:23:36 #-} let weak a_1182: loaded pointer =
                  {-# <realloc1.c:23:37, realloc1.c:23:39> #-} let weak a_1185: pointer =
                    {-# <realloc1.c:23:37, realloc1.c:23:39> #-} pure(p1) in
                  load('signed int**', a_1185) in
                case a_1182 of
                  | Specified(a_1183: pointer) =>
                      let weak a_1184: boolean =
                        memop(PtrValidForDeref, 'signed int*', a_1183) in
                      pure(
                        if a_1184 then
                          a_1183
                        else
                          undef(<<UB043_indirection_invalid_value>>)
                      )
                  | Unspecified(_: ctype) =>
                      pure(undef(<<UB043_indirection_invalid_value>>))
                end in
              load('signed int*', a_1186) in
            case a_1179 of
              | Specified(a_1180: pointer) =>
                  let weak a_1181: boolean =
                    memop(PtrValidForDeref, 'signed int', a_1180) in
                  pure(
                    if a_1181 then
                      a_1180
                    else
                      undef(<<UB043_indirection_invalid_value>>)
                  )
              | Unspecified(_: ctype) =>
                  pure(undef(<<UB043_indirection_invalid_value>>))
            end in
          load('signed int', a_1187)
        ) in
      if not(params_length(a_1166) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1167) \/ not(are_compatible ('signed int', a_1165)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1171: pointer =
            let a_1188: ctype = params_nth(a_1166, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1188)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1189: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1189, a_1172) in
              pure(a_1189) in
          let strong a_1170: pointer =
            let a_1190: ctype = params_nth(a_1166, 1) in
            if not(are_compatible ('const char*', a_1190)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_1191: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1191, a_1174) in
              pure(a_1191) in
          let strong a_1169: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_1178)) in
          let strong a_1192: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1164, a_1171, a_1170, [('signed int', a_1169)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1171)
            ,
              kill('char*', a_1170)
            ,
              kill('signed int', a_1169)
            ) in
          pure(a_1192)
    ) in
  pure(Unit) ;
  kill('signed int', x) ;
  kill('signed int*', p0) ;
  kill('signed int**', p1) ;
  pure(Unit) ;
  {-# <realloc1.c:7:0, realloc1.c:24:1> realloc1.c:7:4 - realloc1.c:7:8 #-} save ret_905: loaded integer (a_1193: loaded integer:= Specified(0)) in
    pure(a_1193)

