-- Globals
glob a_683: pointer [ail_ctype = 'char[17]'] :=
  let strong a_763: pointer = create(Ivalignof('char[17]'), 'char[17]') in
  store_lock('char[17]', a_763,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 45)), Specified(conv_int('char', 122)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_764: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_763,
    18446744073701163007) in
  case a_764 of
    | Specified(a_763: pointer) =>
        pure(a_763)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_726: pointer [ail_ctype = 'char[34]'] :=
  let strong a_765: pointer = create(Ivalignof('char[34]'), 'char[34]') in
  store_lock('char[34]', a_765,
  Specified(Array(Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 58)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 122)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 118)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 122)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_766: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_765,
    18446744073701163007) in
  case a_766 of
    | Specified(a_765: pointer) =>
        pure(a_765)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_751: pointer [ail_ctype = 'char[22]'] :=
  let strong a_767: pointer = create(Ivalignof('char[22]'), 'char[22]') in
  store_lock('char[22]', a_767,
  Specified(Array(Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 119)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_768: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_767,
    18446744073701163007) in
  case a_768 of
    | Specified(a_767: pointer) =>
        pure(a_767)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

-- Fun map
proc main (): eff loaded integer :=
  {-# <stack0a.c:7:0, stack0a.c:23:1> #-} let strong buff: pointer =
    create(Ivalignof('char[16777215]'), 'char[16777215]') in
  let strong l: pointer = create(Ivalignof('size_t'), 'size_t') in
  {-# §6.2.4#6 #-}
  {-# <stack0a.c:8:4, stack0a.c:8:24> #-} store('char[16777215]', buff,
  Unspecified('char[16777215]')) ;
  {-# <stack0a.c:10:4, stack0a.c:14:5> #-} let strong a_653: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <stack0a.c:10:7, stack0a.c:10:45> stack0a.c:10:41 #-} let weak (a_655: loaded integer,
      a_656: loaded integer) =
        unseq(
          {-# <stack0a.c:10:7, stack0a.c:10:45> stack0a.c:10:41 #-} let weak (a_660: loaded integer,
          a_661: loaded integer) =
            unseq(
              {-# <stack0a.c:10:7, stack0a.c:10:40> #-} let strong a_670: loaded pointer =
                {-# §6.5.4 #-}
                {-# <stack0a.c:10:34, stack0a.c:10:39> stack0a.c:10:34 #-} let weak a_665: loaded pointer =
                  {-# §6.5.3.2#3, sentence 5 #-}
                  {-# <stack0a.c:10:34, stack0a.c:10:39> stack0a.c:10:34 #-} let weak a_667: pointer =
                    {-# <stack0a.c:10:35, stack0a.c:10:39> #-} pure(buff) in
                  pure(Specified(a_667)) in
                case a_665 of
                  | Specified(a_666: pointer) =>
                      let weak a_668: boolean =
                        memop(PtrWellAligned, 'char[16777215]', a_666) in
                      pure(
                        Specified(if a_668 then
                          a_666
                        else
                          undef(<<UB025_misaligned_pointer_conversion>>))
                      )
                  | Unspecified(_: ctype) =>
                      pure(undef(<<UB025_misaligned_pointer_conversion>>))
                end in
              case a_670 of
                | Specified(a_671: pointer) =>
                    memop(cheri_cheri_offset_get['size_t (char[16777215]*)'], a_671)
                | _: loaded pointer =>
                    pure(undef(<<DUMMY(Elab, CHERI intrinsics (unspec))>>))
              end
            ,
              {-# <stack0a.c:10:44, stack0a.c:10:45> #-} pure(Specified(0))
            ) in
          pure(
            case (a_660, a_661) of
              | (Specified(a_662: integer), Specified(a_663: integer)) =>
                  if not(if all_values_representable_in('size_t',
                  'signed int') then
                    conv_int('signed int', a_662)
                  else
                    conv_int('unsigned int', a_662) =
                  if all_values_representable_in('size_t', 'signed int') then
                    conv_int('signed int', a_663)
                  else
                    conv_int('unsigned int', a_663)) then
                    Specified(1)
                  else
                    Specified(0)
              | _: (loaded integer,loaded integer) =>
                  Unspecified('signed int')
            end
          )
        ,
          {-# <stack0a.c:10:7, stack0a.c:10:45> stack0a.c:10:41 #-} pure(
            Specified(0)
          )
        ) in
      pure(
        case (a_655, a_656) of
          | (Specified(a_657: integer), Specified(a_658: integer)) =>
              if conv_int('signed int', a_657) =
              conv_int('signed int', a_658) then
                Specified(1)
              else
                Specified(0)
          | _: (loaded integer,loaded integer) =>
              Unspecified('signed int')
        end
      )
    ) in
  let strong a_652: boolean =
    case a_653 of
      | Specified(a_654: integer) =>
          pure(if not(a_654 = 1) then True else False)
      | Unspecified(_: ctype) =>
          nd(pure(True), pure(False))
    end in
  if a_652 then
    {-# <stack0a.c:11:4, stack0a.c:14:5> #-} {-# <stack0a.c:12:8, stack0a.c:12:46> #-} let strong _: loaded integer =
      {-# §6.5#2 #-}
      bound(
        {-# §6.5.2.2#10, sentence 1 #-}
        {-# <stack0a.c:12:8, stack0a.c:12:45> #-} let strong ((a_673: loaded pointer,
        (a_674: ctype, a_675: [ctype], a_676: boolean, a_677: boolean)),
        a_680: loaded pointer, a_682: loaded pointer) =
          {-# §6.5.2.2#4, sentence 2 #-}
          unseq(
            let strong a_672: loaded pointer =
              {-# <stack0a.c:12:8, stack0a.c:12:15> #-} pure(
                Specified(Cfunction(fprintf))
              ) in
            pure((a_672, cfunction(a_672)))
          ,
            {-# <stack0a.c:12:16, stack0a.c:12:24> #-} let weak a_681: pointer =
              {-# <stack0a.c:12:16, stack0a.c:12:24> #-} pure(__stderr) in
            load('struct _IO_FILE*', a_681)
          ,
            {-# <stack0a.c:12:25, stack0a.c:12:44> #-} let weak a_684: pointer =
              {-# <stack0a.c:12:25, stack0a.c:12:44> #-} pure(a_683) in
            {-# §6.3.2.1#3 #-}
            let weak a_685: pointer =
              memop(PtrArrayShift, a_684, 'char', 0) in
            pure(Specified(a_685))
          ) in
        if not(params_length(a_675) <= 2) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_676) \/ not(are_compatible ('signed int', a_674)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_679: pointer =
              let a_686: ctype = params_nth(a_675, 0) in
              if not(are_compatible ('struct _IO_FILE*', a_686)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# §6.5.2.2#7, sentence 1 #-}
                let weak a_687: pointer =
                  create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                let weak _: unit = store('struct _IO_FILE*', a_687, a_680) in
                pure(a_687) in
            let strong a_678: pointer =
              let a_688: ctype = params_nth(a_675, 1) in
              if not(are_compatible ('const char*', a_688)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# §6.5.2.2#7, sentence 1 #-}
                let weak a_689: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_689, a_682) in
                pure(a_689) in
            let strong a_690: loaded integer =
              ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
              a_673, a_679, a_678, []: (ctype,pointer)) in
            let strong _: (unit,unit) =
              unseq(kill('struct _IO_FILE*', a_679), kill('char*', a_678)) in
            pure(a_690)
      ) in
    pure(Unit) ;
    {-# <stack0a.c:13:8, stack0a.c:13:19> #-} let strong a_691: loaded integer =
      {-# §6.5#2 #-}
      bound({-# <stack0a.c:13:14, stack0a.c:13:18> #-} pure(Specified(10))) in
    kill('char[16777215]', buff) ;
    kill('size_t', l) ;
    run ret_650(conv_loaded_int('signed int', a_691)) ;
    pure(Unit)
  else
    {-# <stack0a.c:10:4, stack0a.c:14:5> #-} pure(Unit) ;
  {-# <stack0a.c:15:4, stack0a.c:15:49> #-} let strong a_692: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <stack0a.c:15:15, stack0a.c:15:48> #-} let strong a_698: loaded pointer =
        {-# §6.5.4 #-}
        {-# <stack0a.c:15:42, stack0a.c:15:47> stack0a.c:15:42 #-} let weak a_693: loaded pointer =
          {-# §6.5.3.2#3, sentence 5 #-}
          {-# <stack0a.c:15:42, stack0a.c:15:47> stack0a.c:15:42 #-} let weak a_695: pointer =
            {-# <stack0a.c:15:43, stack0a.c:15:47> #-} pure(buff) in
          pure(Specified(a_695)) in
        case a_693 of
          | Specified(a_694: pointer) =>
              let weak a_696: boolean =
                memop(PtrWellAligned, 'char[16777215]', a_694) in
              pure(
                Specified(if a_696 then
                  a_694
                else
                  undef(<<UB025_misaligned_pointer_conversion>>))
              )
          | Unspecified(_: ctype) =>
              pure(undef(<<UB025_misaligned_pointer_conversion>>))
        end in
      case a_698 of
        | Specified(a_699: pointer) =>
            memop(cheri_cheri_length_get['size_t (char[16777215]*)'], a_699)
        | _: loaded pointer =>
            pure(undef(<<DUMMY(Elab, CHERI intrinsics (unspec))>>))
      end
    ) in
  store('size_t', l, conv_loaded_int('size_t', a_692)) ;
  {-# <stack0a.c:16:4, stack0a.c:22:51> #-} let strong a_700: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <stack0a.c:16:7, stack0a.c:16:20> stack0a.c:16:9 #-} let weak (a_702: loaded integer,
      a_703: loaded integer) =
        unseq(
          {-# <stack0a.c:16:7, stack0a.c:16:20> stack0a.c:16:9 #-} let weak (a_707: loaded integer,
          a_708: loaded integer) =
            unseq(
              {-# <stack0a.c:16:7, stack0a.c:16:8> #-} let weak a_712: pointer =
                {-# <stack0a.c:16:7, stack0a.c:16:8> #-} pure(l) in
              load('size_t', a_712)
            ,
              {-# <stack0a.c:16:12, stack0a.c:16:20> #-} pure(
                Specified(16777215)
              )
            ) in
          pure(
            case (a_707, a_708) of
              | (Specified(a_709: integer), Specified(a_710: integer)) =>
                  if not(if all_values_representable_in('size_t',
                  'signed int') then
                    conv_int('signed int', a_709)
                  else
                    conv_int('unsigned int', a_709) =
                  if all_values_representable_in('size_t', 'signed int') then
                    conv_int('signed int', a_710)
                  else
                    conv_int('unsigned int', a_710)) then
                    Specified(1)
                  else
                    Specified(0)
              | _: (loaded integer,loaded integer) =>
                  Unspecified('signed int')
            end
          )
        ,
          {-# <stack0a.c:16:7, stack0a.c:16:20> stack0a.c:16:9 #-} pure(
            Specified(0)
          )
        ) in
      pure(
        case (a_702, a_703) of
          | (Specified(a_704: integer), Specified(a_705: integer)) =>
              if conv_int('signed int', a_704) =
              conv_int('signed int', a_705) then
                Specified(1)
              else
                Specified(0)
          | _: (loaded integer,loaded integer) =>
              Unspecified('signed int')
        end
      )
    ) in
  let strong a_651: boolean =
    case a_700 of
      | Specified(a_701: integer) =>
          pure(if not(a_701 = 1) then True else False)
      | Unspecified(_: ctype) =>
          nd(pure(True), pure(False))
    end in
  if a_651 then
    {-# <stack0a.c:17:4, stack0a.c:21:5> #-} {-# <stack0a.c:18:8, stack0a.c:20:10> #-} let strong _: loaded integer =
      {-# §6.5#2 #-}
      bound(
        {-# §6.5.2.2#10, sentence 1 #-}
        {-# <stack0a.c:18:8, stack0a.c:20:9> #-} let strong ((a_714: loaded pointer,
        (a_715: ctype, a_716: [ctype], a_717: boolean, a_718: boolean)),
        a_723: loaded pointer, a_725: loaded pointer, a_729: loaded integer,
        a_731: loaded integer) =
          {-# §6.5.2.2#4, sentence 2 #-}
          unseq(
            let strong a_713: loaded pointer =
              {-# <stack0a.c:18:8, stack0a.c:18:15> #-} pure(
                Specified(Cfunction(fprintf))
              ) in
            pure((a_713, cfunction(a_713)))
          ,
            {-# <stack0a.c:18:16, stack0a.c:18:24> #-} let weak a_724: pointer =
              {-# <stack0a.c:18:16, stack0a.c:18:24> #-} pure(__stderr) in
            load('struct _IO_FILE*', a_724)
          ,
            {-# <stack0a.c:18:25, stack0a.c:18:61> #-} let weak a_727: pointer =
              {-# <stack0a.c:18:25, stack0a.c:18:61> #-} pure(a_726) in
            {-# §6.3.2.1#3 #-}
            let weak a_728: pointer =
              memop(PtrArrayShift, a_727, 'char', 0) in
            pure(Specified(a_728))
          ,
            {-# <stack0a.c:19:16, stack0a.c:19:17> #-} let weak a_730: pointer =
              {-# <stack0a.c:19:16, stack0a.c:19:17> #-} pure(l) in
            load('size_t', a_730)
          ,
            {-# §6.5.4 #-}
            {-# <stack0a.c:19:19, stack0a.c:19:35> stack0a.c:19:19 #-} let weak a_732: loaded integer =
              {-# <stack0a.c:19:27, stack0a.c:19:35> #-} pure(
                Specified(16777215)
              ) in
            pure(conv_loaded_int('size_t', a_732))
          ) in
        if not(params_length(a_716) <= 4) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_717) \/ not(are_compatible ('signed int', a_715)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_722: pointer =
              let a_735: ctype = params_nth(a_716, 0) in
              if not(are_compatible ('struct _IO_FILE*', a_735)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# §6.5.2.2#7, sentence 1 #-}
                let weak a_736: pointer =
                  create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                let weak _: unit = store('struct _IO_FILE*', a_736, a_723) in
                pure(a_736) in
            let strong a_721: pointer =
              let a_737: ctype = params_nth(a_716, 1) in
              if not(are_compatible ('const char*', a_737)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# §6.5.2.2#7, sentence 1 #-}
                let weak a_738: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_738, a_725) in
                pure(a_738) in
            let strong a_720: pointer =
              {-# §6.5.2.2#7, sentences 2 and 3 #-}
              pcall(create_and_store, 'size_t',
              conv_loaded_int('size_t', a_729)) in
            let strong a_719: pointer =
              {-# §6.5.2.2#7, sentences 2 and 3 #-}
              pcall(create_and_store, 'size_t',
              conv_loaded_int('size_t', a_731)) in
            let strong a_739: loaded integer =
              ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
              a_714, a_722, a_721, [('size_t', a_720), ('size_t', a_719)]) in
            let strong _: (unit,unit,unit,unit) =
              unseq(
                kill('struct _IO_FILE*', a_722)
              ,
                kill('char*', a_721)
              ,
                kill('size_t', a_720)
              ,
                kill('size_t', a_719)
              ) in
            pure(a_739)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    {-# <stack0a.c:22:8, stack0a.c:22:51> #-} let strong _: loaded integer =
      {-# §6.5#2 #-}
      bound(
        {-# §6.5.2.2#10, sentence 1 #-}
        {-# <stack0a.c:22:8, stack0a.c:22:50> #-} let strong ((a_741: loaded pointer,
        (a_742: ctype, a_743: [ctype], a_744: boolean, a_745: boolean)),
        a_748: loaded pointer, a_750: loaded pointer) =
          {-# §6.5.2.2#4, sentence 2 #-}
          unseq(
            let strong a_740: loaded pointer =
              {-# <stack0a.c:22:8, stack0a.c:22:15> #-} pure(
                Specified(Cfunction(fprintf))
              ) in
            pure((a_740, cfunction(a_740)))
          ,
            {-# <stack0a.c:22:16, stack0a.c:22:24> #-} let weak a_749: pointer =
              {-# <stack0a.c:22:16, stack0a.c:22:24> #-} pure(__stderr) in
            load('struct _IO_FILE*', a_749)
          ,
            {-# <stack0a.c:22:25, stack0a.c:22:49> #-} let weak a_752: pointer =
              {-# <stack0a.c:22:25, stack0a.c:22:49> #-} pure(a_751) in
            {-# §6.3.2.1#3 #-}
            let weak a_753: pointer =
              memop(PtrArrayShift, a_752, 'char', 0) in
            pure(Specified(a_753))
          ) in
        if not(params_length(a_743) <= 2) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_744) \/ not(are_compatible ('signed int', a_742)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_747: pointer =
              let a_754: ctype = params_nth(a_743, 0) in
              if not(are_compatible ('struct _IO_FILE*', a_754)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# §6.5.2.2#7, sentence 1 #-}
                let weak a_755: pointer =
                  create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                let weak _: unit = store('struct _IO_FILE*', a_755, a_748) in
                pure(a_755) in
            let strong a_746: pointer =
              let a_756: ctype = params_nth(a_743, 1) in
              if not(are_compatible ('const char*', a_756)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# §6.5.2.2#7, sentence 1 #-}
                let weak a_757: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_757, a_750) in
                pure(a_757) in
            let strong a_758: loaded integer =
              ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
              a_741, a_747, a_746, []: (ctype,pointer)) in
            let strong _: (unit,unit) =
              unseq(kill('struct _IO_FILE*', a_747), kill('char*', a_746)) in
            pure(a_758)
      ) in
    pure(Unit) ;
  kill('char[16777215]', buff) ;
  kill('size_t', l) ;
  pure(Unit) ;
  {-# <stack0a.c:6:0, stack0a.c:23:1> stack0a.c:6:4 - stack0a.c:6:8 #-} save ret_650: loaded integer (a_759: loaded integer:= Specified(0)) in
    pure(a_759)

