-- Globals
glob a_680: pointer [ail_ctype = 'char[17]'] :=
  let strong a_751: pointer = create(Ivalignof('char[17]'), 'char[17]') in
  store_lock('char[17]', a_751,
  Specified(Array(Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 45)), Specified(conv_int('char', 122)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 10)), Specified(0)))) ;
  let strong a_752: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_751,
    18446744073701163007) in
  case a_752 of
    | Specified(a_751: pointer) =>
        pure(a_751)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_719: pointer [ail_ctype = 'char[22]'] :=
  let strong a_753: pointer = create(Ivalignof('char[22]'), 'char[22]') in
  store_lock('char[22]', a_753,
  Specified(Array(Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 109)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_754: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_753,
    18446744073701163007) in
  case a_754 of
    | Specified(a_753: pointer) =>
        pure(a_753)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

glob a_739: pointer [ail_ctype = 'char[22]'] :=
  let strong a_755: pointer = create(Ivalignof('char[22]'), 'char[22]') in
  store_lock('char[22]', a_755,
  Specified(Array(Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 119)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 10)),
  Specified(0)))) ;
  let strong a_756: loaded pointer =
    memop(cheri_cheri_perms_and['char* (char*, size_t)'], a_755,
    18446744073701163007) in
  case a_756 of
    | Specified(a_755: pointer) =>
        pure(a_755)
    | Unspecified(_: ctype) =>
        pure(undef(<<DUMMY(Unspecified cheri_perms_and())>>))
  end

-- Fun map
proc main (): eff loaded integer :=
  {-# <stack1.c:5:0, stack1.c:19:1> #-} let strong i: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  {-# §6.2.4#6 #-}
  {-# <stack1.c:6:4, stack1.c:6:10> #-} store('signed int', i,
  Unspecified('signed int')) ;
  {-# <stack1.c:8:4, stack1.c:12:5> #-} let strong a_650: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <stack1.c:8:7, stack1.c:8:42> stack1.c:8:38 #-} let weak (a_652: loaded integer,
      a_653: loaded integer) =
        unseq(
          {-# <stack1.c:8:7, stack1.c:8:42> stack1.c:8:38 #-} let weak (a_657: loaded integer,
          a_658: loaded integer) =
            unseq(
              {-# <stack1.c:8:7, stack1.c:8:37> #-} let strong a_667: loaded pointer =
                {-# §6.5.4 #-}
                {-# <stack1.c:8:34, stack1.c:8:36> stack1.c:8:34 #-} let weak a_662: loaded pointer =
                  {-# §6.5.3.2#3, sentence 5 #-}
                  {-# <stack1.c:8:34, stack1.c:8:36> stack1.c:8:34 #-} let weak a_664: pointer =
                    {-# <stack1.c:8:35, stack1.c:8:36> #-} pure(i) in
                  pure(Specified(a_664)) in
                case a_662 of
                  | Specified(a_663: pointer) =>
                      let weak a_665: boolean =
                        memop(PtrWellAligned, 'signed int', a_663) in
                      pure(
                        Specified(if a_665 then
                          a_663
                        else
                          undef(<<UB025_misaligned_pointer_conversion>>))
                      )
                  | Unspecified(_: ctype) =>
                      pure(undef(<<UB025_misaligned_pointer_conversion>>))
                end in
              case a_667 of
                | Specified(a_668: pointer) =>
                    memop(cheri_cheri_offset_get['size_t (signed int*)'], a_668)
                | _: loaded pointer =>
                    pure(undef(<<DUMMY(Elab, CHERI intrinsics (unspec))>>))
              end
            ,
              {-# <stack1.c:8:41, stack1.c:8:42> #-} pure(Specified(0))
            ) in
          pure(
            case (a_657, a_658) of
              | (Specified(a_659: integer), Specified(a_660: integer)) =>
                  if not(if all_values_representable_in('size_t',
                  'signed int') then
                    conv_int('signed int', a_659)
                  else
                    conv_int('unsigned int', a_659) =
                  if all_values_representable_in('size_t', 'signed int') then
                    conv_int('signed int', a_660)
                  else
                    conv_int('unsigned int', a_660)) then
                    Specified(1)
                  else
                    Specified(0)
              | _: (loaded integer,loaded integer) =>
                  Unspecified('signed int')
            end
          )
        ,
          {-# <stack1.c:8:7, stack1.c:8:42> stack1.c:8:38 #-} pure(
            Specified(0)
          )
        ) in
      pure(
        case (a_652, a_653) of
          | (Specified(a_654: integer), Specified(a_655: integer)) =>
              if conv_int('signed int', a_654) =
              conv_int('signed int', a_655) then
                Specified(1)
              else
                Specified(0)
          | _: (loaded integer,loaded integer) =>
              Unspecified('signed int')
        end
      )
    ) in
  let strong a_649: boolean =
    case a_650 of
      | Specified(a_651: integer) =>
          pure(if not(a_651 = 1) then True else False)
      | Unspecified(_: ctype) =>
          nd(pure(True), pure(False))
    end in
  if a_649 then
    {-# <stack1.c:9:4, stack1.c:12:5> #-} {-# <stack1.c:10:8, stack1.c:10:46> #-} let strong _: loaded integer =
      {-# §6.5#2 #-}
      bound(
        {-# §6.5.2.2#10, sentence 1 #-}
        {-# <stack1.c:10:8, stack1.c:10:45> #-} let strong ((a_670: loaded pointer,
        (a_671: ctype, a_672: [ctype], a_673: boolean, a_674: boolean)),
        a_677: loaded pointer, a_679: loaded pointer) =
          {-# §6.5.2.2#4, sentence 2 #-}
          unseq(
            let strong a_669: loaded pointer =
              {-# <stack1.c:10:8, stack1.c:10:15> #-} pure(
                Specified(Cfunction(fprintf))
              ) in
            pure((a_669, cfunction(a_669)))
          ,
            {-# <stack1.c:10:16, stack1.c:10:24> #-} let weak a_678: pointer =
              {-# <stack1.c:10:16, stack1.c:10:24> #-} pure(__stderr) in
            load('struct _IO_FILE*', a_678)
          ,
            {-# <stack1.c:10:25, stack1.c:10:44> #-} let weak a_681: pointer =
              {-# <stack1.c:10:25, stack1.c:10:44> #-} pure(a_680) in
            {-# §6.3.2.1#3 #-}
            let weak a_682: pointer =
              memop(PtrArrayShift, a_681, 'char', 0) in
            pure(Specified(a_682))
          ) in
        if not(params_length(a_672) <= 2) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_673) \/ not(are_compatible ('signed int', a_671)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_676: pointer =
              let a_683: ctype = params_nth(a_672, 0) in
              if not(are_compatible ('struct _IO_FILE*', a_683)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# §6.5.2.2#7, sentence 1 #-}
                let weak a_684: pointer =
                  create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                let weak _: unit = store('struct _IO_FILE*', a_684, a_677) in
                pure(a_684) in
            let strong a_675: pointer =
              let a_685: ctype = params_nth(a_672, 1) in
              if not(are_compatible ('const char*', a_685)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# §6.5.2.2#7, sentence 1 #-}
                let weak a_686: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_686, a_679) in
                pure(a_686) in
            let strong a_687: loaded integer =
              ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
              a_670, a_676, a_675, []: (ctype,pointer)) in
            let strong _: (unit,unit) =
              unseq(kill('struct _IO_FILE*', a_676), kill('char*', a_675)) in
            pure(a_687)
      ) in
    pure(Unit) ;
    {-# <stack1.c:11:8, stack1.c:11:19> #-} let strong a_688: loaded integer =
      {-# §6.5#2 #-}
      bound({-# <stack1.c:11:14, stack1.c:11:18> #-} pure(Specified(10))) in
    kill('signed int', i) ;
    run ret_647(conv_loaded_int('signed int', a_688)) ;
    pure(Unit)
  else
    {-# <stack1.c:8:4, stack1.c:12:5> #-} pure(Unit) ;
  {-# <stack1.c:13:4, stack1.c:17:5> #-} let strong a_689: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <stack1.c:13:7, stack1.c:13:52> stack1.c:13:38 #-} let weak (a_691: loaded integer,
      a_692: loaded integer) =
        unseq(
          {-# <stack1.c:13:7, stack1.c:13:52> stack1.c:13:38 #-} let weak (a_696: loaded integer,
          a_697: loaded integer) =
            unseq(
              {-# <stack1.c:13:7, stack1.c:13:37> #-} let strong a_706: loaded pointer =
                {-# §6.5.4 #-}
                {-# <stack1.c:13:34, stack1.c:13:36> stack1.c:13:34 #-} let weak a_701: loaded pointer =
                  {-# §6.5.3.2#3, sentence 5 #-}
                  {-# <stack1.c:13:34, stack1.c:13:36> stack1.c:13:34 #-} let weak a_703: pointer =
                    {-# <stack1.c:13:35, stack1.c:13:36> #-} pure(i) in
                  pure(Specified(a_703)) in
                case a_701 of
                  | Specified(a_702: pointer) =>
                      let weak a_704: boolean =
                        memop(PtrWellAligned, 'signed int', a_702) in
                      pure(
                        Specified(if a_704 then
                          a_702
                        else
                          undef(<<UB025_misaligned_pointer_conversion>>))
                      )
                  | Unspecified(_: ctype) =>
                      pure(undef(<<UB025_misaligned_pointer_conversion>>))
                end in
              case a_706 of
                | Specified(a_707: pointer) =>
                    memop(cheri_cheri_length_get['size_t (signed int*)'], a_707)
                | _: loaded pointer =>
                    pure(undef(<<DUMMY(Elab, CHERI intrinsics (unspec))>>))
              end
            ,
              {-# <stack1.c:13:41, stack1.c:13:52> stack1.c:13:41 #-} pure(
                Specified(Ivsizeof('signed int'))
              )
            ) in
          pure(
            case (a_696, a_697) of
              | (Specified(a_698: integer), Specified(a_699: integer)) =>
                  if not(conv_int('size_t', a_698) =
                  conv_int('size_t', a_699)) then
                    Specified(1)
                  else
                    Specified(0)
              | _: (loaded integer,loaded integer) =>
                  Unspecified('signed int')
            end
          )
        ,
          {-# <stack1.c:13:7, stack1.c:13:52> stack1.c:13:38 #-} pure(
            Specified(0)
          )
        ) in
      pure(
        case (a_691, a_692) of
          | (Specified(a_693: integer), Specified(a_694: integer)) =>
              if conv_int('signed int', a_693) =
              conv_int('signed int', a_694) then
                Specified(1)
              else
                Specified(0)
          | _: (loaded integer,loaded integer) =>
              Unspecified('signed int')
        end
      )
    ) in
  let strong a_648: boolean =
    case a_689 of
      | Specified(a_690: integer) =>
          pure(if not(a_690 = 1) then True else False)
      | Unspecified(_: ctype) =>
          nd(pure(True), pure(False))
    end in
  if a_648 then
    {-# <stack1.c:14:4, stack1.c:17:5> #-} {-# <stack1.c:15:8, stack1.c:15:51> #-} let strong _: loaded integer =
      {-# §6.5#2 #-}
      bound(
        {-# §6.5.2.2#10, sentence 1 #-}
        {-# <stack1.c:15:8, stack1.c:15:50> #-} let strong ((a_709: loaded pointer,
        (a_710: ctype, a_711: [ctype], a_712: boolean, a_713: boolean)),
        a_716: loaded pointer, a_718: loaded pointer) =
          {-# §6.5.2.2#4, sentence 2 #-}
          unseq(
            let strong a_708: loaded pointer =
              {-# <stack1.c:15:8, stack1.c:15:15> #-} pure(
                Specified(Cfunction(fprintf))
              ) in
            pure((a_708, cfunction(a_708)))
          ,
            {-# <stack1.c:15:16, stack1.c:15:24> #-} let weak a_717: pointer =
              {-# <stack1.c:15:16, stack1.c:15:24> #-} pure(__stderr) in
            load('struct _IO_FILE*', a_717)
          ,
            {-# <stack1.c:15:25, stack1.c:15:49> #-} let weak a_720: pointer =
              {-# <stack1.c:15:25, stack1.c:15:49> #-} pure(a_719) in
            {-# §6.3.2.1#3 #-}
            let weak a_721: pointer =
              memop(PtrArrayShift, a_720, 'char', 0) in
            pure(Specified(a_721))
          ) in
        if not(params_length(a_711) <= 2) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_712) \/ not(are_compatible ('signed int', a_710)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_715: pointer =
              let a_722: ctype = params_nth(a_711, 0) in
              if not(are_compatible ('struct _IO_FILE*', a_722)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# §6.5.2.2#7, sentence 1 #-}
                let weak a_723: pointer =
                  create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
                let weak _: unit = store('struct _IO_FILE*', a_723, a_716) in
                pure(a_723) in
            let strong a_714: pointer =
              let a_724: ctype = params_nth(a_711, 1) in
              if not(are_compatible ('const char*', a_724)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# §6.5.2.2#7, sentence 1 #-}
                let weak a_725: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_725, a_718) in
                pure(a_725) in
            let strong a_726: loaded integer =
              ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
              a_709, a_715, a_714, []: (ctype,pointer)) in
            let strong _: (unit,unit) =
              unseq(kill('struct _IO_FILE*', a_715), kill('char*', a_714)) in
            pure(a_726)
      ) in
    pure(Unit) ;
    {-# <stack1.c:16:8, stack1.c:16:19> #-} let strong a_727: loaded integer =
      {-# §6.5#2 #-}
      bound({-# <stack1.c:16:14, stack1.c:16:18> #-} pure(Specified(20))) in
    kill('signed int', i) ;
    run ret_647(conv_loaded_int('signed int', a_727)) ;
    pure(Unit)
  else
    {-# <stack1.c:13:4, stack1.c:17:5> #-} pure(Unit) ;
  {-# <stack1.c:18:4, stack1.c:18:47> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <stack1.c:18:4, stack1.c:18:46> #-} let strong ((a_729: loaded pointer,
      (a_730: ctype, a_731: [ctype], a_732: boolean, a_733: boolean)),
      a_736: loaded pointer, a_738: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_728: loaded pointer =
            {-# <stack1.c:18:4, stack1.c:18:11> #-} pure(
              Specified(Cfunction(fprintf))
            ) in
          pure((a_728, cfunction(a_728)))
        ,
          {-# <stack1.c:18:12, stack1.c:18:20> #-} let weak a_737: pointer =
            {-# <stack1.c:18:12, stack1.c:18:20> #-} pure(__stderr) in
          load('struct _IO_FILE*', a_737)
        ,
          {-# <stack1.c:18:21, stack1.c:18:45> #-} let weak a_740: pointer =
            {-# <stack1.c:18:21, stack1.c:18:45> #-} pure(a_739) in
          {-# §6.3.2.1#3 #-}
          let weak a_741: pointer = memop(PtrArrayShift, a_740, 'char', 0) in
          pure(Specified(a_741))
        ) in
      if not(params_length(a_731) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_732) \/ not(are_compatible ('signed int', a_730)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_735: pointer =
            let a_742: ctype = params_nth(a_731, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_742)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_743: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_743, a_736) in
              pure(a_743) in
          let strong a_734: pointer =
            let a_744: ctype = params_nth(a_731, 1) in
            if not(are_compatible ('const char*', a_744)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_745: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_745, a_738) in
              pure(a_745) in
          let strong a_746: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_729, a_735, a_734, []: (ctype,pointer)) in
          let strong _: (unit,unit) =
            unseq(kill('struct _IO_FILE*', a_735), kill('char*', a_734)) in
          pure(a_746)
    ) in
  pure(Unit) ;
  kill('signed int', i) ;
  pure(Unit) ;
  {-# <stack1.c:4:0, stack1.c:19:1> stack1.c:4:4 - stack1.c:4:8 #-} save ret_647: loaded integer (a_747: loaded integer:= Specified(0)) in
    pure(a_747)

