-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_669: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  {-# <./de_facto_memory_model/read_via_invalid_1.c:2:11, ./de_facto_memory_model/read_via_invalid_1.c:7:1> #-} let strong x: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  {-# §6.2.4#6 #-}
  {-# <./de_facto_memory_model/read_via_invalid_1.c:3:2, ./de_facto_memory_model/read_via_invalid_1.c:3:8> #-} store('signed int',
  x, Unspecified('signed int')) ;
  {-# <./de_facto_memory_model/read_via_invalid_1.c:5:2, ./de_facto_memory_model/read_via_invalid_1.c:5:22> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.16#3, sentence 4 #-}
      {-# <./de_facto_memory_model/read_via_invalid_1.c:5:2, ./de_facto_memory_model/read_via_invalid_1.c:5:21> ./de_facto_memory_model/read_via_invalid_1.c:5:4 #-} let weak (a_652: pointer,
      a_660: loaded integer) =
        {-# §6.5.16#3, sentence 5 #-}
        unseq(
          {-# <./de_facto_memory_model/read_via_invalid_1.c:5:2, ./de_facto_memory_model/read_via_invalid_1.c:5:3> #-} pure(
            x
          )
        ,
          {-# <./de_facto_memory_model/read_via_invalid_1.c:5:6, ./de_facto_memory_model/read_via_invalid_1.c:5:21> ./de_facto_memory_model/read_via_invalid_1.c:5:6 #-} let weak a_659: pointer =
            {-# §6.5.3.2 #-}
            {-# <./de_facto_memory_model/read_via_invalid_1.c:5:6, ./de_facto_memory_model/read_via_invalid_1.c:5:21> ./de_facto_memory_model/read_via_invalid_1.c:5:6 #-} let weak a_653: loaded pointer =
              {-# §6.5.4 #-}
              {-# <./de_facto_memory_model/read_via_invalid_1.c:5:7, ./de_facto_memory_model/read_via_invalid_1.c:5:21> ./de_facto_memory_model/read_via_invalid_1.c:5:7 #-} let weak a_656: loaded integer =
                {-# <./de_facto_memory_model/read_via_invalid_1.c:5:13, ./de_facto_memory_model/read_via_invalid_1.c:5:21> #-} pure(
                  Specified(6636321)
                ) in
              let Specified(a_657: integer) = a_656 in
              let weak a_658: pointer =
                memop(PtrFromInt, 'signed int', 'signed int', a_657) in
              pure(Specified(a_658)) in
            let Specified(a_654: pointer) = a_653 in
            let weak a_655: boolean =
              memop(PtrValidForDeref, 'signed int', a_654) in
            pure(
              if a_655 then
                a_654
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_659)
        ) in
      let weak _: unit =
        {-# §6.5.16.1#2, store #-}
        neg(store('signed int', a_652, conv_loaded_int('signed int', a_660))) in
      pure(conv_loaded_int('signed int', a_660))
    ) in
  pure(Unit) ;
  {-# <./de_facto_memory_model/read_via_invalid_1.c:6:2, ./de_facto_memory_model/read_via_invalid_1.c:6:21> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./de_facto_memory_model/read_via_invalid_1.c:6:2, ./de_facto_memory_model/read_via_invalid_1.c:6:20> #-} let strong ((a_661: loaded pointer,
      (a_662: ctype, a_663: [ctype], a_664: boolean, a_665: boolean)),
      a_668: loaded pointer, a_672: loaded integer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_651: loaded pointer =
            {-# <./de_facto_memory_model/read_via_invalid_1.c:6:2, ./de_facto_memory_model/read_via_invalid_1.c:6:8> #-} pure(
              Specified(Cfunction(printf_proxy))
            ) in
          pure((a_651, cfunction(a_651)))
        ,
          {-# <./de_facto_memory_model/read_via_invalid_1.c:6:9, ./de_facto_memory_model/read_via_invalid_1.c:6:17> #-} let weak a_670: pointer =
            {-# <./de_facto_memory_model/read_via_invalid_1.c:6:9, ./de_facto_memory_model/read_via_invalid_1.c:6:17> #-} pure(
              a_669
            ) in
          {-# §6.3.2.1#3 #-}
          let weak a_671: pointer = memop(PtrArrayShift, a_670, 'char', 0) in
          pure(Specified(a_671))
        ,
          {-# <./de_facto_memory_model/read_via_invalid_1.c:6:18, ./de_facto_memory_model/read_via_invalid_1.c:6:19> #-} let weak a_673: pointer =
            {-# <./de_facto_memory_model/read_via_invalid_1.c:6:18, ./de_facto_memory_model/read_via_invalid_1.c:6:19> #-} pure(
              x
            ) in
          load('signed int', a_673)
        ) in
      if not(params_length(a_663) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_664) \/ not(are_compatible ('signed int', a_662)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_667: pointer =
            let a_674: ctype = params_nth(a_663, 0) in
            if not(are_compatible ('const char*', a_674)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_675: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_675, a_668) in
              pure(a_675) in
          let strong a_666: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_672)) in
          let strong a_676: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_661, a_667,
            [('signed int', a_666)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_667), kill('signed int', a_666)) in
          pure(a_676)
    ) in
  pure(Unit) ;
  kill('signed int', x) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/read_via_invalid_1.c:2:0, ./de_facto_memory_model/read_via_invalid_1.c:7:1> ./de_facto_memory_model/read_via_invalid_1.c:2:4 - ./de_facto_memory_model/read_via_invalid_1.c:2:8 #-} save ret_650: loaded integer (a_677: loaded integer:= Specified(0)) in
    pure(a_677)

