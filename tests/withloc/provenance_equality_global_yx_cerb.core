-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob y: pointer [ail_ctype = 'signed int'] :=
  {-# <unknown location> #-} let strong a_843: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong a_844: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:3:6, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:3:7> #-} pure(
        Specified(2)
      )
    ) in
  store('signed int', a_843, conv_loaded_int('signed int', a_844)) ;
  pure(a_843)

glob x: pointer [ail_ctype = 'signed int'] :=
  {-# <unknown location> #-} let strong a_841: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong a_842: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:3:11, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:3:12> #-} pure(
        Specified(1)
      )
    ) in
  store('signed int', a_841, conv_loaded_int('signed int', a_842)) ;
  pure(a_841)

glob a_753: pointer [ail_ctype = 'char[22]'] :=
  create_readonly(Ivalignof('char[22]'), 'char[22]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_819: pointer [ail_ctype = 'char[13]'] :=
  create_readonly(Ivalignof('char[13]'), 'char[13]', Specified(Array(Specified(conv_int('char',
  40)), Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_831: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_834: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:4:11, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:13:1> #-} let strong p: pointer =
    create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:5:2, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:5:18> #-} let strong a_735: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.6 #-}
      {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:5:11, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:5:17> ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:5:14 #-} let weak (a_736: loaded pointer,
      a_738: loaded integer) =
        unseq(
          {-# §6.5.3.2#3, sentence 5 #-}
          {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:5:11, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:5:13> ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:5:11 #-} let weak a_741: pointer =
            {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:5:12, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:5:13> #-} pure(
              x
            ) in
          pure(Specified(a_741))
        ,
          {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:5:16, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:5:17> #-} pure(
            Specified(1)
          )
        ) in
      let (Specified(a_737: pointer), Specified(a_739: integer)) =
        (a_736, a_738) in
      let weak a_740: pointer =
        memop(PtrArrayShift, a_737, 'signed int', a_739) in
      pure(Specified(a_740))
    ) in
  store('signed int*', p, a_735) ;
  {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:6:2, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:6:14> #-} let strong a_742: loaded pointer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.3.2#3, sentence 5 #-}
      {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:6:11, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:6:13> ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:6:11 #-} let weak a_743: pointer =
        {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:6:12, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:6:13> #-} pure(
          y
        ) in
      pure(Specified(a_743))
    ) in
  store('signed int*', q, a_742) ;
  {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:7:2, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:7:53> #-} let strong _: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# §6.5.2.2#10, sentence 1 #-}
      {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:7:2, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:7:52> #-} let strong ((a_744: loaded pointer,
      (a_745: ctype, a_746: [ctype], a_747: boolean, a_748: boolean)),
      a_752: loaded pointer, a_756: loaded pointer, a_761: loaded pointer) =
        {-# §6.5.2.2#4, sentence 2 #-}
        unseq(
          let strong a_734: loaded pointer =
            {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:7:2, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:7:8> #-} pure(
              Specified(Cfunction(printf_proxy))
            ) in
          pure((a_734, cfunction(a_734)))
        ,
          {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:7:9, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:7:33> #-} let weak a_754: pointer =
            {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:7:9, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:7:33> #-} pure(
              a_753
            ) in
          {-# §6.3.2.1#3 #-}
          let weak a_755: pointer = memop(PtrArrayShift, a_754, 'char', 0) in
          pure(Specified(a_755))
        ,
          {-# §6.5.4 #-}
          {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:7:34, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:7:42> ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:7:34 #-} let weak a_759: pointer =
            {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:7:41, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:7:42> #-} pure(
              p
            ) in
          load('signed int*', a_759)
        ,
          {-# §6.5.4 #-}
          {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:7:43, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:7:51> ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:7:43 #-} let weak a_764: pointer =
            {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:7:50, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:7:51> #-} pure(
              q
            ) in
          load('signed int*', a_764)
        ) in
      if not(params_length(a_746) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_747) \/ not(are_compatible ('signed int', a_745)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_751: pointer =
            let a_766: ctype = params_nth(a_746, 0) in
            if not(are_compatible ('const char*', a_766)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {-# §6.5.2.2#7, sentence 1 #-}
              let weak a_767: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_767, a_752) in
              pure(a_767) in
          let strong a_750: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'void*', a_756) in
          let strong a_749: pointer =
            {-# §6.5.2.2#7, sentences 2 and 3 #-}
            pcall(create_and_store, 'void*', a_761) in
          let strong a_768: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_744, a_751,
            [('void*', a_750), ('void*', a_749)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_751)
            ,
              kill('void*', a_750)
            ,
              kill('void*', a_749)
            ) in
          pure(a_768)
    ) in
  pure(Unit) ;
  {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:2, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:12:1> #-} let strong a_769: loaded integer =
    {-# §6.5#2 #-}
    bound(
      {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:7, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:37> ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:33 #-} let weak (a_771: loaded integer,
      a_772: loaded integer) =
        unseq(
          {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:7, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:37> ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:33 #-} let weak (a_776: loaded integer,
          a_777: loaded integer) =
            unseq(
              {-# §6.5.2.2#10, sentence 1 #-}
              {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:7, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:32> #-} let strong ((a_782: loaded pointer,
              (a_783: ctype, a_784: [ctype], a_785: boolean, a_786: boolean)),
              a_790: loaded pointer, a_792: loaded pointer,
              a_794: loaded integer) =
                {-# §6.5.2.2#4, sentence 2 #-}
                unseq(
                  let strong a_781: loaded pointer =
                    {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:7, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:13> #-} pure(
                      Specified(Cfunction(memcmp_proxy))
                    ) in
                  pure((a_781, cfunction(a_781)))
                ,
                  {-# §6.5.3.2#3, sentence 5 #-}
                  {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:14, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:16> ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:14 #-} let weak a_791: pointer =
                    {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:15, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:16> #-} pure(
                      p
                    ) in
                  pure(Specified(a_791))
                ,
                  {-# §6.5.3.2#3, sentence 5 #-}
                  {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:18, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:20> ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:18 #-} let weak a_793: pointer =
                    {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:19, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:20> #-} pure(
                      q
                    ) in
                  pure(Specified(a_793))
                ,
                  {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:22, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:31> ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:22 #-} pure(
                    Specified(Ivsizeof('signed int*'))
                  )
                ) in
              if not(params_length(a_784) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_785 \/ not(are_compatible ('signed int', a_783)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_789: pointer =
                    let a_795: ctype = params_nth(a_784, 0) in
                    if not(are_compatible ('const void*', a_795)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {-# §6.5.2.2#7, sentence 1 #-}
                      let weak a_796: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit = store('const void*', a_796, a_790) in
                      pure(a_796) in
                  let strong a_788: pointer =
                    let a_797: ctype = params_nth(a_784, 1) in
                    if not(are_compatible ('const void*', a_797)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {-# §6.5.2.2#7, sentence 1 #-}
                      let weak a_798: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit = store('const void*', a_798, a_792) in
                      pure(a_798) in
                  let strong a_787: pointer =
                    let a_799: ctype = params_nth(a_784, 2) in
                    if not(are_compatible ('size_t', a_799)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {-# §6.5.2.2#7, sentence 1 #-}
                      let weak a_800: pointer =
                        create(Ivalignof('size_t'), 'size_t') in
                      let weak _: unit =
                        store('size_t', a_800,
                        conv_loaded_int('size_t', a_794)) in
                      pure(a_800) in
                  let strong a_801: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_782, a_789, a_788, a_787) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_789)
                    ,
                      kill('void*', a_788)
                    ,
                      kill('size_t', a_787)
                    ) in
                  pure(a_801)
            ,
              {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:36, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:37> #-} pure(
                Specified(0)
              )
            ) in
          pure(
            let (Specified(a_778: integer), Specified(a_779: integer)) =
              (a_776, a_777) in
            if conv_int('signed int', a_778) = conv_int('signed int', a_779) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:7, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:37> ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:33 #-} pure(
            Specified(0)
          )
        ) in
      pure(
        let (Specified(a_773: integer), Specified(a_774: integer)) =
          (a_771, a_772) in
        if conv_int('signed int', a_773) = conv_int('signed int', a_774) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_733: boolean =
    let Specified(a_770: integer) = a_769 in
    pure(if not(a_770 = 1) then True else False) in
  if a_733 then
    {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:40, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:12:1> #-} let strong b: pointer =
      create(Ivalignof('_Bool'), '_Bool') in
    {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:9:4, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:9:21> #-} let strong a_803: loaded integer =
      {-# §6.5#2 #-}
      bound(
        {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:9:14, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:9:20> #-} let weak (a_804: loaded pointer,
        a_805: loaded pointer) =
          unseq(
            {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:9:15, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:9:16> #-} let weak a_809: pointer =
              {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:9:15, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:9:16> #-} pure(
                p
              ) in
            load('signed int*', a_809)
          ,
            {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:9:18, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:9:19> #-} let weak a_810: pointer =
              {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:9:18, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:9:19> #-} pure(
                q
              ) in
            load('signed int*', a_810)
          ) in
        let (Specified(a_806: pointer), Specified(a_807: pointer)) =
          (a_804, a_805) in
        let weak a_808: boolean = memop(PtrEq, a_806, a_807) in
        pure(if a_808 then Specified(1) else Specified(0))
      ) in
    store('_Bool', b, conv_loaded_int('_Bool', a_803)) ;
    {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:4, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:46> #-} let strong _: loaded integer =
      {-# §6.5#2 #-}
      bound(
        {-# §6.5.2.2#10, sentence 1 #-}
        {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:4, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:45> #-} let strong ((a_811: loaded pointer,
        (a_812: ctype, a_813: [ctype], a_814: boolean, a_815: boolean)),
        a_818: loaded pointer, a_822: loaded pointer) =
          {-# §6.5.2.2#4, sentence 2 #-}
          unseq(
            let strong a_802: loaded pointer =
              {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:4, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:10> #-} pure(
                Specified(Cfunction(printf_proxy))
              ) in
            pure((a_802, cfunction(a_802)))
          ,
            {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:11, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:26> #-} let weak a_820: pointer =
              {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:11, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:26> #-} pure(
                a_819
              ) in
            {-# §6.3.2.1#3 #-}
            let weak a_821: pointer =
              memop(PtrArrayShift, a_820, 'char', 0) in
            pure(Specified(a_821))
          ,
            {-# §6.5.15#4, sentence 1 #-}
            {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:28, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:44> ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:29 #-} let strong a_829: loaded integer =
              {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:28, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:29> #-} let weak (a_823: loaded integer,
              a_824: loaded integer) =
                unseq(
                  {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:28, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:29> #-} let weak a_828: pointer =
                    {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:28, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:29> #-} pure(
                      b
                    ) in
                  load('_Bool', a_828)
                ,
                  {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:28, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:29> #-} pure(
                    Specified(0)
                  )
                ) in
              pure(
                let (Specified(a_825: integer), Specified(a_826: integer)) =
                  (a_823, a_824) in
                if conv_int('signed int', a_825) =
                conv_int('signed int', a_826) then
                  Specified(1)
                else
                  Specified(0)
              ) in
            let Specified(a_830: integer) = a_829 in
            {-# §6.5.15#4, sentence 2 #-}
            if a_830 = 0 then
              {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:30, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:36> #-} let weak a_832: pointer =
                {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:30, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:36> #-} pure(
                  a_831
                ) in
              {-# §6.3.2.1#3 #-}
              let weak a_833: pointer =
                memop(PtrArrayShift, a_832, 'char', 0) in
              pure(Specified(a_833))
            else
              {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:37, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:44> #-} let weak a_835: pointer =
                {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:37, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:11:44> #-} pure(
                  a_834
                ) in
              {-# §6.3.2.1#3 #-}
              let weak a_836: pointer =
                memop(PtrArrayShift, a_835, 'char', 0) in
              pure(Specified(a_836))
          ) in
        if not(params_length(a_813) <= 2) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_814) \/ not(are_compatible ('signed int', a_812)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_817: pointer =
              let a_837: ctype = params_nth(a_813, 0) in
              if not(are_compatible ('const char*', a_837)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {-# §6.5.2.2#7, sentence 1 #-}
                let weak a_838: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_838, a_818) in
                pure(a_838) in
            let strong a_816: pointer =
              {-# §6.5.2.2#7, sentences 2 and 3 #-}
              pcall(create_and_store, 'char*', a_822) in
            let strong a_839: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_811, a_817,
              [('char*', a_816)]) in
            let strong _: (unit,unit) =
              unseq(kill('char*', a_817), kill('char*', a_816)) in
            pure(a_839)
      ) in
    pure(Unit) ;
    kill('_Bool', b) ;
    pure(Unit)
  else
    {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:8:2, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:12:1> #-} pure(
      Unit
    ) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  {-# <./de_facto_memory_model/provenance_equality_global_yx_cerb.c:4:0, ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:13:1> ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:4:4 - ./de_facto_memory_model/provenance_equality_global_yx_cerb.c:4:8 #-} save ret_732: loaded integer (a_840: loaded integer:= Specified(0)) in
    pure(a_840)

