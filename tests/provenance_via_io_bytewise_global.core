-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

def struct __cerbty_unnamed_tag_824 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_856 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_1161: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong a_1162: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_1161, conv_loaded_int('signed int', a_1162)) ;
  pure(a_1161)

glob a_904: pointer [ail_ctype = 'char[38]'] :=
  create_readonly(Ivalignof('char[38]'), 'char[38]', Specified(Array(Specified(conv_int('char',
  112)), Specified(conv_int('char', 114)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 118)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 118)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 95)), Specified(conv_int('char', 98)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 119)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 103)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 98)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 46)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 109)), Specified(conv_int('char', 112)),
  Specified(0))))

glob a_908: pointer [ail_ctype = 'char[4]'] :=
  create_readonly(Ivalignof('char[4]'), 'char[4]', Specified(Array(Specified(conv_int('char',
  119)), Specified(conv_int('char', 43)), Specified(conv_int('char', 98)),
  Specified(0))))

glob a_924: pointer [ail_ctype = 'char[17]'] :=
  create_readonly(Ivalignof('char[17]'), 'char[17]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_1054: pointer [ail_ctype = 'char[17]'] :=
  create_readonly(Ivalignof('char[17]'), 'char[17]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_1116: pointer [ail_ctype = 'char[24]'] :=
  create_readonly(Ivalignof('char[24]'), 'char[24]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 98)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 98)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_1136: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_1139: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

glob a_1151: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_1154: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong f: pointer =
    create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
  let strong nw: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong r: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong nr: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong b1: pointer = create(Ivalignof('_Bool'), '_Bool') in
  let strong b2: pointer = create(Ivalignof('_Bool'), '_Bool') in
  let strong a_892: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_893: pointer = pure(x) in
      pure(Specified(a_893))
    ) in
  store('signed int*', p, a_892) ;
  let strong a_894: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_896: loaded pointer,
      (a_897: ctype, a_898: [ctype], a_899: boolean, a_900: boolean)),
      a_903: loaded pointer, a_907: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_895: loaded pointer =
            pure(Specified(Cfunction(fopen))) in
          pure((a_895, cfunction(a_895)))
        ,
          let weak a_905: pointer = pure(a_904) in
          {- §6.3.2.1#3 -}
          let weak a_906: pointer = memop(PtrArrayShift, a_905, 'char', 0) in
          pure(Specified(a_906))
        ,
          let weak a_909: pointer = pure(a_908) in
          {- §6.3.2.1#3 -}
          let weak a_910: pointer = memop(PtrArrayShift, a_909, 'char', 0) in
          pure(Specified(a_910))
        ) in
      if not(params_length(a_898) = 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_899 \/ not(are_compatible ('struct _IO_FILE*', a_897)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_902: pointer =
            let a_911: ctype = params_nth(a_898, 0) in
            if not(are_compatible ('const char*', a_911)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_912: pointer = create(Ivalignof(a_911), a_911) in
              let weak _: unit = store(a_911, a_912, a_903) in
              pure(a_912) in
          let strong a_901: pointer =
            let a_913: ctype = params_nth(a_898, 1) in
            if not(are_compatible ('const char*', a_913)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_914: pointer = create(Ivalignof(a_913), a_913) in
              let weak _: unit = store(a_913, a_914, a_907) in
              pure(a_914) in
          let strong a_915: loaded pointer =
            ccall('struct _IO_FILE* (*) (const char*restrict , const char*restrict )',
            a_896, a_902, a_901) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_902), kill('char*', a_901)) in
          pure(a_915)
    ) in
  store('struct _IO_FILE*', f, a_894) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_916: loaded pointer,
      (a_917: ctype, a_918: [ctype], a_919: boolean, a_920: boolean)),
      a_923: loaded pointer, a_927: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_891: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_891, cfunction(a_891)))
        ,
          let weak a_925: pointer = pure(a_924) in
          {- §6.3.2.1#3 -}
          let weak a_926: pointer = memop(PtrArrayShift, a_925, 'char', 0) in
          pure(Specified(a_926))
        ,
          {- §6.5.4 -}
          let weak a_930: pointer = pure(p) in
          load('signed int*', a_930)
        ) in
      if not(params_length(a_918) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_919) \/ not(are_compatible ('signed int', a_917)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_922: pointer =
            let a_932: ctype = params_nth(a_918, 0) in
            if not(are_compatible ('const char*', a_932)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_933: pointer = create(Ivalignof(a_932), a_932) in
              let weak _: unit = store(a_932, a_933, a_923) in
              pure(a_933) in
          let strong a_921: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_927) in
          let strong a_934: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_916, a_922,
            [('void*', a_921)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_922), kill('void*', a_921)) in
          pure(a_934)
    ) in
  pure(Unit) ;
  let strong a_935: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_937: loaded pointer,
      (a_938: ctype, a_939: [ctype], a_940: boolean, a_941: boolean)),
      a_946: loaded pointer, a_948: loaded integer, a_949: loaded integer,
      a_950: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_936: loaded pointer =
            pure(Specified(Cfunction(fwrite))) in
          pure((a_936, cfunction(a_936)))
        ,
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_947: pointer = pure(p) in
          pure(Specified(a_947))
        ,
          pure(Specified(1))
        ,
          pure(Specified(Ivsizeof('signed int*')))
        ,
          let weak a_951: pointer = pure(f) in
          load('struct _IO_FILE*', a_951)
        ) in
      if not(params_length(a_939) = 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_940 \/ not(are_compatible ('size_t', a_938)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_945: pointer =
            let a_952: ctype = params_nth(a_939, 0) in
            if not(are_compatible ('const void*', a_952)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_953: pointer = create(Ivalignof(a_952), a_952) in
              let weak _: unit = store(a_952, a_953, a_946) in
              pure(a_953) in
          let strong a_944: pointer =
            let a_954: ctype = params_nth(a_939, 1) in
            if not(are_compatible ('size_t', a_954)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_955: pointer = create(Ivalignof(a_954), a_954) in
              let weak _: unit =
                store(a_954, a_955, conv_loaded_int(a_954, a_948)) in
              pure(a_955) in
          let strong a_943: pointer =
            let a_956: ctype = params_nth(a_939, 2) in
            if not(are_compatible ('size_t', a_956)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_957: pointer = create(Ivalignof(a_956), a_956) in
              let weak _: unit =
                store(a_956, a_957, conv_loaded_int(a_956, a_949)) in
              pure(a_957) in
          let strong a_942: pointer =
            let a_958: ctype = params_nth(a_939, 3) in
            if not(are_compatible ('struct _IO_FILE*', a_958)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_959: pointer = create(Ivalignof(a_958), a_958) in
              let weak _: unit = store(a_958, a_959, a_950) in
              pure(a_959) in
          let strong a_960: loaded integer =
            ccall('size_t (*) (const void*restrict , size_t, size_t, struct _IO_FILE*restrict )',
            a_937, a_945, a_944, a_943, a_942) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('void*', a_945)
            ,
              kill('size_t', a_944)
            ,
              kill('size_t', a_943)
            ,
              kill('struct _IO_FILE*', a_942)
            ) in
          pure(a_960)
    ) in
  store('signed int', nw, conv_loaded_int('signed int', a_935)) ;
  let strong a_961: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_963: loaded integer, a_964: loaded integer) =
        unseq(
          let weak (a_968: loaded integer, a_969: loaded integer) =
            unseq(
              let weak a_973: pointer = pure(nw) in
              load('signed int', a_973)
            ,
              pure(Specified(Ivsizeof('signed int*')))
            ) in
          pure(
            let (Specified(a_970: integer), Specified(a_971: integer)) =
              (a_968, a_969) in
            if not(if all_values_representable_in('size_t', 'signed int') then
              conv_int('signed int', a_970)
            else
              conv_int('unsigned int', a_970) =
            if all_values_representable_in('size_t', 'signed int') then
              conv_int('signed int', a_971)
            else
              conv_int('unsigned int', a_971)) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_965: integer), Specified(a_966: integer)) =
          (a_963, a_964) in
        if conv_int('signed int', a_965) = conv_int('signed int', a_966) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_890: boolean =
    let Specified(a_962: integer) = a_961 in
    pure(if not(a_962 = 1) then True else False) in
  if a_890 then
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_975: loaded pointer,
      (a_976: ctype, a_977: [ctype], a_978: boolean, a_979: boolean)),
      a_981: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_974: loaded pointer =
            pure(Specified(Cfunction(exit))) in
          pure((a_974, cfunction(a_974)))
        ,
          pure(Specified(1))
        ) in
      if not(params_length(a_977) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_978 \/ not(are_compatible ('void', a_976)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_980: pointer =
            let a_982: ctype = params_nth(a_977, 0) in
            if not(are_compatible ('signed int', a_982)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_983: pointer = create(Ivalignof(a_982), a_982) in
              let weak _: unit =
                store(a_982, a_983, conv_loaded_int(a_982, a_981)) in
              pure(a_983) in
          let strong a_984: unit =
            ccall('void (*) (signed int)', a_975, a_980) in
          kill('signed int', a_980) ;
          pure(a_984)
    ) ;
    pure(Unit)
  else
    pure(Unit) ;
  {- §6.5#2 -}
  bound(
    {- §6.5.2.2#10, sentence 1 -}
    let strong ((a_985: loaded pointer,
    (a_986: ctype, a_987: [ctype], a_988: boolean, a_989: boolean)),
    a_991: loaded pointer) =
      {- §6.5.2.2#4, sentence 2 -}
      unseq(
        let strong a_889: loaded pointer =
          pure(Specified(Cfunction(rewind))) in
        pure((a_889, cfunction(a_889)))
      ,
        let weak a_992: pointer = pure(f) in
        load('struct _IO_FILE*', a_992)
      ) in
    if not(params_length(a_987) = 1) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_988 \/ not(are_compatible ('void', a_986)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_990: pointer =
          let a_993: ctype = params_nth(a_987, 0) in
          if not(are_compatible ('struct _IO_FILE*', a_993)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_994: pointer = create(Ivalignof(a_993), a_993) in
            let weak _: unit = store(a_993, a_994, a_991) in
            pure(a_994) in
        let strong a_995: unit =
          ccall('void (*) (struct _IO_FILE*)', a_985, a_990) in
        kill('struct _IO_FILE*', a_990) ;
        pure(a_995)
  ) ;
  pure(Unit) ;
  {- §6.2.4#6 -}
  store('signed int*', r, Unspecified('signed int*')) ;
  let strong a_996: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_998: loaded pointer,
      (a_999: ctype, a_1000: [ctype], a_1001: boolean, a_1002: boolean)),
      a_1007: loaded pointer, a_1009: loaded integer, a_1010: loaded integer,
      a_1011: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_997: loaded pointer =
            pure(Specified(Cfunction(fread))) in
          pure((a_997, cfunction(a_997)))
        ,
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_1008: pointer = pure(r) in
          pure(Specified(a_1008))
        ,
          pure(Specified(1))
        ,
          pure(Specified(Ivsizeof('signed int*')))
        ,
          let weak a_1012: pointer = pure(f) in
          load('struct _IO_FILE*', a_1012)
        ) in
      if not(params_length(a_1000) = 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_1001 \/ not(are_compatible ('size_t', a_999)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1006: pointer =
            let a_1013: ctype = params_nth(a_1000, 0) in
            if not(are_compatible ('void*', a_1013)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_1014: pointer = create(Ivalignof(a_1013), a_1013) in
              let weak _: unit = store(a_1013, a_1014, a_1007) in
              pure(a_1014) in
          let strong a_1005: pointer =
            let a_1015: ctype = params_nth(a_1000, 1) in
            if not(are_compatible ('size_t', a_1015)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_1016: pointer = create(Ivalignof(a_1015), a_1015) in
              let weak _: unit =
                store(a_1015, a_1016, conv_loaded_int(a_1015, a_1009)) in
              pure(a_1016) in
          let strong a_1004: pointer =
            let a_1017: ctype = params_nth(a_1000, 2) in
            if not(are_compatible ('size_t', a_1017)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_1018: pointer = create(Ivalignof(a_1017), a_1017) in
              let weak _: unit =
                store(a_1017, a_1018, conv_loaded_int(a_1017, a_1010)) in
              pure(a_1018) in
          let strong a_1003: pointer =
            let a_1019: ctype = params_nth(a_1000, 3) in
            if not(are_compatible ('struct _IO_FILE*', a_1019)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_1020: pointer = create(Ivalignof(a_1019), a_1019) in
              let weak _: unit = store(a_1019, a_1020, a_1011) in
              pure(a_1020) in
          let strong a_1021: loaded integer =
            ccall('size_t (*) (void*restrict , size_t, size_t, struct _IO_FILE*restrict )',
            a_998, a_1006, a_1005, a_1004, a_1003) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('void*', a_1006)
            ,
              kill('size_t', a_1005)
            ,
              kill('size_t', a_1004)
            ,
              kill('struct _IO_FILE*', a_1003)
            ) in
          pure(a_1021)
    ) in
  store('signed int', nr, conv_loaded_int('signed int', a_996)) ;
  let strong a_1022: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_1024: loaded integer, a_1025: loaded integer) =
        unseq(
          let weak (a_1029: loaded integer, a_1030: loaded integer) =
            unseq(
              let weak a_1034: pointer = pure(nr) in
              load('signed int', a_1034)
            ,
              pure(Specified(Ivsizeof('signed int*')))
            ) in
          pure(
            let (Specified(a_1031: integer), Specified(a_1032: integer)) =
              (a_1029, a_1030) in
            if not(if all_values_representable_in('size_t', 'signed int') then
              conv_int('signed int', a_1031)
            else
              conv_int('unsigned int', a_1031) =
            if all_values_representable_in('size_t', 'signed int') then
              conv_int('signed int', a_1032)
            else
              conv_int('unsigned int', a_1032)) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_1026: integer), Specified(a_1027: integer)) =
          (a_1024, a_1025) in
        if conv_int('signed int', a_1026) = conv_int('signed int', a_1027) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_888: boolean =
    let Specified(a_1023: integer) = a_1022 in
    pure(if not(a_1023 = 1) then True else False) in
  if a_888 then
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_1036: loaded pointer,
      (a_1037: ctype, a_1038: [ctype], a_1039: boolean, a_1040: boolean)),
      a_1042: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_1035: loaded pointer =
            pure(Specified(Cfunction(exit))) in
          pure((a_1035, cfunction(a_1035)))
        ,
          pure(Specified(1))
        ) in
      if not(params_length(a_1038) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_1039 \/ not(are_compatible ('void', a_1037)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1041: pointer =
            let a_1043: ctype = params_nth(a_1038, 0) in
            if not(are_compatible ('signed int', a_1043)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_1044: pointer = create(Ivalignof(a_1043), a_1043) in
              let weak _: unit =
                store(a_1043, a_1044, conv_loaded_int(a_1043, a_1042)) in
              pure(a_1044) in
          let strong a_1045: unit =
            ccall('void (*) (signed int)', a_1036, a_1041) in
          kill('signed int', a_1041) ;
          pure(a_1045)
    ) ;
    pure(Unit)
  else
    pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_1046: loaded pointer,
      (a_1047: ctype, a_1048: [ctype], a_1049: boolean, a_1050: boolean)),
      a_1053: loaded pointer, a_1057: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_887: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_887, cfunction(a_887)))
        ,
          let weak a_1055: pointer = pure(a_1054) in
          {- §6.3.2.1#3 -}
          let weak a_1056: pointer =
            memop(PtrArrayShift, a_1055, 'char', 0) in
          pure(Specified(a_1056))
        ,
          {- §6.5.4 -}
          let weak a_1060: pointer = pure(r) in
          load('signed int*', a_1060)
        ) in
      if not(params_length(a_1048) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1049) \/ not(are_compatible ('signed int', a_1047)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1052: pointer =
            let a_1062: ctype = params_nth(a_1048, 0) in
            if not(are_compatible ('const char*', a_1062)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_1063: pointer = create(Ivalignof(a_1062), a_1062) in
              let weak _: unit = store(a_1062, a_1063, a_1053) in
              pure(a_1063) in
          let strong a_1051: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_1057) in
          let strong a_1064: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_1046, a_1052,
            [('void*', a_1051)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_1052), kill('void*', a_1051)) in
          pure(a_1064)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_886: pointer, a_1069: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_1065: loaded pointer =
            let weak a_1068: pointer = pure(r) in
            load('signed int*', a_1068) in
          let Specified(a_1066: pointer) = a_1065 in
          let weak a_1067: boolean =
            memop(PtrValidForDeref, 'signed int', a_1066) in
          pure(
            if a_1067 then
              a_1066
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(12))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_886, conv_loaded_int('signed int', a_1069))) in
      pure(conv_loaded_int('signed int', a_1069))
    ) in
  pure(Unit) ;
  let strong a_1070: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_1071: loaded pointer, a_1072: loaded pointer) =
        unseq(
          let weak a_1076: pointer = pure(r) in
          load('signed int*', a_1076)
        ,
          let weak a_1077: pointer = pure(p) in
          load('signed int*', a_1077)
        ) in
      let (Specified(a_1073: pointer), Specified(a_1074: pointer)) =
        (a_1071, a_1072) in
      let weak a_1075: boolean = memop(PtrEq, a_1073, a_1074) in
      pure(if a_1075 then Specified(1) else Specified(0))
    ) in
  store('_Bool', b1, conv_loaded_int('_Bool', a_1070)) ;
  let strong a_1078: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_1079: loaded integer, a_1080: loaded integer) =
        unseq(
          pure(Specified(0))
        ,
          {- §6.5.2.2#10, sentence 1 -}
          let strong ((a_1085: loaded pointer,
          (a_1086: ctype, a_1087: [ctype], a_1088: boolean, a_1089: boolean)),
          a_1093: loaded pointer, a_1095: loaded pointer,
          a_1097: loaded integer) =
            {- §6.5.2.2#4, sentence 2 -}
            unseq(
              let strong a_1084: loaded pointer =
                pure(Specified(Cfunction(memcmp_proxy))) in
              pure((a_1084, cfunction(a_1084)))
            ,
              {- §6.5.3.2#3, sentence 5 -}
              let weak a_1094: pointer = pure(r) in
              pure(Specified(a_1094))
            ,
              {- §6.5.3.2#3, sentence 5 -}
              let weak a_1096: pointer = pure(p) in
              pure(Specified(a_1096))
            ,
              pure(Specified(Ivsizeof('signed int*')))
            ) in
          if not(params_length(a_1087) = 3) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_1088 \/ not(are_compatible ('signed int', a_1086)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_1092: pointer =
                let a_1098: ctype = params_nth(a_1087, 0) in
                if not(are_compatible ('const void*', a_1098)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {- §6.5.2.2#7, sentence 1 -}
                  let weak a_1099: pointer =
                    create(Ivalignof(a_1098), a_1098) in
                  let weak _: unit = store(a_1098, a_1099, a_1093) in
                  pure(a_1099) in
              let strong a_1091: pointer =
                let a_1100: ctype = params_nth(a_1087, 1) in
                if not(are_compatible ('const void*', a_1100)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {- §6.5.2.2#7, sentence 1 -}
                  let weak a_1101: pointer =
                    create(Ivalignof(a_1100), a_1100) in
                  let weak _: unit = store(a_1100, a_1101, a_1095) in
                  pure(a_1101) in
              let strong a_1090: pointer =
                let a_1102: ctype = params_nth(a_1087, 2) in
                if not(are_compatible ('size_t', a_1102)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {- §6.5.2.2#7, sentence 1 -}
                  let weak a_1103: pointer =
                    create(Ivalignof(a_1102), a_1102) in
                  let weak _: unit =
                    store(a_1102, a_1103, conv_loaded_int(a_1102, a_1097)) in
                  pure(a_1103) in
              let strong a_1104: loaded integer =
                ccall('signed int (*) (const void*, const void*, size_t)',
                a_1085, a_1092, a_1091, a_1090) in
              let strong _: (unit,unit,unit) =
                unseq(
                  kill('void*', a_1092)
                ,
                  kill('void*', a_1091)
                ,
                  kill('size_t', a_1090)
                ) in
              pure(a_1104)
        ) in
      pure(
        let (Specified(a_1081: integer), Specified(a_1082: integer)) =
          (a_1079, a_1080) in
        if conv_int('signed int', a_1081) = conv_int('signed int', a_1082) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  store('_Bool', b2, conv_loaded_int('_Bool', a_1078)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_1105: loaded pointer,
      (a_1106: ctype, a_1107: [ctype], a_1108: boolean, a_1109: boolean)),
      a_1115: loaded pointer, a_1119: loaded integer, a_1121: loaded integer,
      a_1127: loaded pointer, a_1142: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_885: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_885, cfunction(a_885)))
        ,
          let weak a_1117: pointer = pure(a_1116) in
          {- §6.3.2.1#3 -}
          let weak a_1118: pointer =
            memop(PtrArrayShift, a_1117, 'char', 0) in
          pure(Specified(a_1118))
        ,
          let weak a_1120: pointer = pure(x) in
          load('signed int', a_1120)
        ,
          let weak a_1126: pointer =
            {- §6.5.3.2 -}
            let weak a_1122: loaded pointer =
              let weak a_1125: pointer = pure(r) in
              load('signed int*', a_1125) in
            let Specified(a_1123: pointer) = a_1122 in
            let weak a_1124: boolean =
              memop(PtrValidForDeref, 'signed int', a_1123) in
            pure(
              if a_1124 then
                a_1123
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_1126)
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_1134: loaded integer =
            let weak (a_1128: loaded integer, a_1129: loaded integer) =
              unseq(
                let weak a_1133: pointer = pure(b1) in
                load('_Bool', a_1133)
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_1130: integer), Specified(a_1131: integer)) =
                (a_1128, a_1129) in
              if conv_int('signed int', a_1130) =
              conv_int('signed int', a_1131) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_1135: integer) = a_1134 in
          {- §6.5.15#4, sentence 2 -}
          if a_1135 = 0 then
            let weak a_1137: pointer = pure(a_1136) in
            {- §6.3.2.1#3 -}
            let weak a_1138: pointer =
              memop(PtrArrayShift, a_1137, 'char', 0) in
            pure(Specified(a_1138))
          else
            let weak a_1140: pointer = pure(a_1139) in
            {- §6.3.2.1#3 -}
            let weak a_1141: pointer =
              memop(PtrArrayShift, a_1140, 'char', 0) in
            pure(Specified(a_1141))
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_1149: loaded integer =
            let weak (a_1143: loaded integer, a_1144: loaded integer) =
              unseq(
                let weak a_1148: pointer = pure(b2) in
                load('_Bool', a_1148)
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_1145: integer), Specified(a_1146: integer)) =
                (a_1143, a_1144) in
              if conv_int('signed int', a_1145) =
              conv_int('signed int', a_1146) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_1150: integer) = a_1149 in
          {- §6.5.15#4, sentence 2 -}
          if a_1150 = 0 then
            let weak a_1152: pointer = pure(a_1151) in
            {- §6.3.2.1#3 -}
            let weak a_1153: pointer =
              memop(PtrArrayShift, a_1152, 'char', 0) in
            pure(Specified(a_1153))
          else
            let weak a_1155: pointer = pure(a_1154) in
            {- §6.3.2.1#3 -}
            let weak a_1156: pointer =
              memop(PtrArrayShift, a_1155, 'char', 0) in
            pure(Specified(a_1156))
        ) in
      if not(params_length(a_1107) <= 5) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1108) \/ not(are_compatible ('signed int', a_1106)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1114: pointer =
            let a_1157: ctype = params_nth(a_1107, 0) in
            if not(are_compatible ('const char*', a_1157)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_1158: pointer = create(Ivalignof(a_1157), a_1157) in
              let weak _: unit = store(a_1157, a_1158, a_1115) in
              pure(a_1158) in
          let strong a_1113: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_1119)) in
          let strong a_1112: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_1121)) in
          let strong a_1111: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_1127) in
          let strong a_1110: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_1142) in
          let strong a_1159: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_1105, a_1114,
            [('signed int', a_1113), ('signed int', a_1112), ('char*', a_1111),
            ('char*', a_1110)]) in
          let strong _: (unit,unit,unit,unit,unit) =
            unseq(
              kill('char*', a_1114)
            ,
              kill('signed int', a_1113)
            ,
              kill('signed int', a_1112)
            ,
              kill('char*', a_1111)
            ,
              kill('char*', a_1110)
            ) in
          pure(a_1159)
    ) in
  pure(Unit) ;
  kill('signed int*', p) ;
  kill('struct _IO_FILE*', f) ;
  kill('signed int', nw) ;
  kill('signed int*', r) ;
  kill('signed int', nr) ;
  kill('_Bool', b1) ;
  kill('_Bool', b2) ;
  pure(Unit) ;
  save ret_884: loaded integer (a_1160: loaded integer:= Specified(0)) in
    pure(a_1160)

