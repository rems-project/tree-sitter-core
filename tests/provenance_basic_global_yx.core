-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_843: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_844: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', a_843, conv_loaded_int('signed int', a_844)) ;
  pure(a_843)

glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_841: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_842: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_841, conv_loaded_int('signed int', a_842)) ;
  pure(a_841)

glob a_751: pointer [ail_ctype = 'char[22]'] :=
  create_readonly(Ivalignof('char[22]'), 'char[22]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_818: pointer [ail_ctype = 'char[23]'] :=
  create_readonly(Ivalignof('char[23]'), 'char[23]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_733: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_734: loaded pointer, a_736: loaded integer) =
        unseq(
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_739: pointer = pure(x) in
          pure(Specified(a_739))
        ,
          pure(Specified(1))
        ) in
      let (Specified(a_735: pointer), Specified(a_737: integer)) =
        (a_734, a_736) in
      let weak a_738: pointer =
        memop(PtrArrayShift, a_735, 'signed int', a_737) in
      pure(Specified(a_738))
    ) in
  store('signed int*', p, a_733) ;
  let strong a_740: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_741: pointer = pure(y) in
      pure(Specified(a_741))
    ) in
  store('signed int*', q, a_740) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_742: loaded pointer,
      (a_743: ctype, a_744: [ctype], a_745: boolean, a_746: boolean)),
      a_750: loaded pointer, a_754: loaded pointer, a_759: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_732: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_732, cfunction(a_732)))
        ,
          let weak a_752: pointer = pure(a_751) in
          {- §6.3.2.1#3 -}
          let weak a_753: pointer = memop(PtrArrayShift, a_752, 'char', 0) in
          pure(Specified(a_753))
        ,
          {- §6.5.4 -}
          let weak a_757: pointer = pure(p) in
          load('signed int*', a_757)
        ,
          {- §6.5.4 -}
          let weak a_762: pointer = pure(q) in
          load('signed int*', a_762)
        ) in
      if not(params_length(a_744) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_745) \/ not(are_compatible ('signed int', a_743)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_749: pointer =
            let a_764: ctype = params_nth(a_744, 0) in
            if not(are_compatible ('const char*', a_764)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_765: pointer = create(Ivalignof(a_764), a_764) in
              let weak _: unit = store(a_764, a_765, a_750) in
              pure(a_765) in
          let strong a_748: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_754) in
          let strong a_747: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_759) in
          let strong a_766: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_742, a_749,
            [('void*', a_748), ('void*', a_747)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_749)
            ,
              kill('void*', a_748)
            ,
              kill('void*', a_747)
            ) in
          pure(a_766)
    ) in
  pure(Unit) ;
  let strong a_767: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_769: loaded integer, a_770: loaded integer) =
        unseq(
          let weak (a_774: loaded integer, a_775: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_780: loaded pointer,
              (a_781: ctype, a_782: [ctype], a_783: boolean, a_784: boolean)),
              a_788: loaded pointer, a_790: loaded pointer,
              a_792: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_779: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_779, cfunction(a_779)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_789: pointer = pure(p) in
                  pure(Specified(a_789))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_791: pointer = pure(q) in
                  pure(Specified(a_791))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_782) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_783 \/ not(are_compatible ('signed int', a_781)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_787: pointer =
                    let a_793: ctype = params_nth(a_782, 0) in
                    if not(are_compatible ('const void*', a_793)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_794: pointer =
                        create(Ivalignof(a_793), a_793) in
                      let weak _: unit = store(a_793, a_794, a_788) in
                      pure(a_794) in
                  let strong a_786: pointer =
                    let a_795: ctype = params_nth(a_782, 1) in
                    if not(are_compatible ('const void*', a_795)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_796: pointer =
                        create(Ivalignof(a_795), a_795) in
                      let weak _: unit = store(a_795, a_796, a_790) in
                      pure(a_796) in
                  let strong a_785: pointer =
                    let a_797: ctype = params_nth(a_782, 2) in
                    if not(are_compatible ('size_t', a_797)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_798: pointer =
                        create(Ivalignof(a_797), a_797) in
                      let weak _: unit =
                        store(a_797, a_798, conv_loaded_int(a_797, a_792)) in
                      pure(a_798) in
                  let strong a_799: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_780, a_787, a_786, a_785) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_787)
                    ,
                      kill('void*', a_786)
                    ,
                      kill('size_t', a_785)
                    ) in
                  pure(a_799)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_776: integer), Specified(a_777: integer)) =
              (a_774, a_775) in
            if conv_int('signed int', a_776) = conv_int('signed int', a_777) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_771: integer), Specified(a_772: integer)) =
          (a_769, a_770) in
        if conv_int('signed int', a_771) = conv_int('signed int', a_772) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_731: boolean =
    let Specified(a_768: integer) = a_767 in
    pure(if not(a_768 = 1) then True else False) in
  if a_731 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_801: pointer, a_806: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_802: loaded pointer =
              let weak a_805: pointer = pure(p) in
              load('signed int*', a_805) in
            let Specified(a_803: pointer) = a_802 in
            let weak a_804: boolean =
              memop(PtrValidForDeref, 'signed int', a_803) in
            pure(
              if a_804 then
                a_803
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_801, conv_loaded_int('signed int', a_806))) in
        pure(conv_loaded_int('signed int', a_806))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_807: loaded pointer,
        (a_808: ctype, a_809: [ctype], a_810: boolean, a_811: boolean)),
        a_817: loaded pointer, a_821: loaded integer, a_823: loaded integer,
        a_825: loaded integer, a_831: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_800: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_800, cfunction(a_800)))
          ,
            let weak a_819: pointer = pure(a_818) in
            {- §6.3.2.1#3 -}
            let weak a_820: pointer =
              memop(PtrArrayShift, a_819, 'char', 0) in
            pure(Specified(a_820))
          ,
            let weak a_822: pointer = pure(x) in
            load('signed int', a_822)
          ,
            let weak a_824: pointer = pure(y) in
            load('signed int', a_824)
          ,
            let weak a_830: pointer =
              {- §6.5.3.2 -}
              let weak a_826: loaded pointer =
                let weak a_829: pointer = pure(p) in
                load('signed int*', a_829) in
              let Specified(a_827: pointer) = a_826 in
              let weak a_828: boolean =
                memop(PtrValidForDeref, 'signed int', a_827) in
              pure(
                if a_828 then
                  a_827
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_830)
          ,
            let weak a_836: pointer =
              {- §6.5.3.2 -}
              let weak a_832: loaded pointer =
                let weak a_835: pointer = pure(q) in
                load('signed int*', a_835) in
              let Specified(a_833: pointer) = a_832 in
              let weak a_834: boolean =
                memop(PtrValidForDeref, 'signed int', a_833) in
              pure(
                if a_834 then
                  a_833
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_836)
          ) in
        if not(params_length(a_809) <= 5) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_810) \/ not(are_compatible ('signed int', a_808)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_816: pointer =
              let a_837: ctype = params_nth(a_809, 0) in
              if not(are_compatible ('const char*', a_837)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_838: pointer = create(Ivalignof(a_837), a_837) in
                let weak _: unit = store(a_837, a_838, a_817) in
                pure(a_838) in
            let strong a_815: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_821)) in
            let strong a_814: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_823)) in
            let strong a_813: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_825)) in
            let strong a_812: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_831)) in
            let strong a_839: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_807, a_816,
              [('signed int', a_815), ('signed int', a_814),
              ('signed int', a_813), ('signed int', a_812)]) in
            let strong _: (unit,unit,unit,unit,unit) =
              unseq(
                kill('char*', a_816)
              ,
                kill('signed int', a_815)
              ,
                kill('signed int', a_814)
              ,
                kill('signed int', a_813)
              ,
                kill('signed int', a_812)
              ) in
            pure(a_839)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_730: loaded integer (a_840: loaded integer:= Specified(0)) in
    pure(a_840)

