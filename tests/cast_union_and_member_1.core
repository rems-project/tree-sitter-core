-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def union __cerbty_unnamed_tag_646 :=
  i: 'signed int'
  f: 'float'

-- Globals
glob a_681: pointer [ail_ctype = 'char[17]'] :=
  create_readonly(Ivalignof('char[17]'), 'char[17]', Specified(Array(Specified(conv_int('char',
  117)), Specified(conv_int('char', 46)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 45)), Specified(conv_int('char', 62)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong u: pointer =
    create(Ivalignof('union __cerbty_unnamed_tag_646'), 'union __cerbty_unnamed_tag_646') in
  let strong pi: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong p: pointer =
    create(Ivalignof('union __cerbty_unnamed_tag_646*'), 'union __cerbty_unnamed_tag_646*') in
  let strong a_656: loaded union a_646 =
    {- §6.5#2 -}
    bound(
      let weak a_657: loaded integer = pure(Specified(1)) in
      pure(
        Specified((union __cerbty_unnamed_tag_646){.i= conv_loaded_int('signed int',
        a_657)})
      )
    ) in
  store('union __cerbty_unnamed_tag_646', u, a_656) ;
  let strong a_658: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_659: pointer =
        {- §6.5.2.3#3, sentence 2 -}
        let strong a_660: pointer = pure(u) in
        memop(PtrArrayShift[__cerbty_unnamed_tag_646, i], a_660) in
      pure(Specified(a_659))
    ) in
  store('signed int*', pi, a_658) ;
  let strong a_661: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_662: loaded pointer =
        let weak a_664: pointer = pure(pi) in
        load('signed int*', a_664) in
      let Specified(a_663: pointer) = a_662 in
      let weak a_665: boolean =
        memop(PtrWellAligned, 'union __cerbty_unnamed_tag_646', a_663) in
      pure(
        Specified(if a_665 then
          a_663
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('union __cerbty_unnamed_tag_646*', p, a_661) ;
  let strong _: loaded floating =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_655: pointer, a_671: loaded floating) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.2.3#4, sentence 2 -}
          let strong a_666: loaded pointer =
            let weak a_670: pointer = pure(p) in
            load('union __cerbty_unnamed_tag_646*', a_670) in
          let Specified(a_667: pointer) = a_666 in
          let weak a_668: boolean =
            memop(PtrValidForDeref, 'union __cerbty_unnamed_tag_646', a_667) in
          pure(
            if a_668 then
              member_shift(a_667, __cerbty_unnamed_tag_646, .f)
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(2.))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('float', a_655, a_671)) in
      pure(a_671)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_672: loaded pointer,
      (a_673: ctype, a_674: [ctype], a_675: boolean, a_676: boolean)),
      a_680: loaded pointer, a_684: loaded floating, a_687: loaded floating) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_654: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_654, cfunction(a_654)))
        ,
          let weak a_682: pointer = pure(a_681) in
          {- §6.3.2.1#3 -}
          let weak a_683: pointer = memop(PtrArrayShift, a_682, 'char', 0) in
          pure(Specified(a_683))
        ,
          let weak a_686: pointer =
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_685: pointer = pure(u) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_646, f], a_685) in
          load('float', a_686)
        ,
          let weak a_693: pointer =
            {- §6.5.2.3#4, sentence 2 -}
            let strong a_688: loaded pointer =
              let weak a_692: pointer = pure(p) in
              load('union __cerbty_unnamed_tag_646*', a_692) in
            let Specified(a_689: pointer) = a_688 in
            let weak a_690: boolean =
              memop(PtrValidForDeref, 'union __cerbty_unnamed_tag_646', a_689) in
            pure(
              if a_690 then
                member_shift(a_689, __cerbty_unnamed_tag_646, .f)
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('float', a_693)
        ) in
      if not(params_length(a_674) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_675) \/ not(are_compatible ('signed int', a_673)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_679: pointer =
            let a_694: ctype = params_nth(a_674, 0) in
            if not(are_compatible ('const char*', a_694)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_695: pointer = create(Ivalignof(a_694), a_694) in
              let weak _: unit = store(a_694, a_695, a_680) in
              pure(a_695) in
          let strong a_678: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'double', a_684) in
          let strong a_677: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'double', a_687) in
          let strong a_696: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_672, a_679,
            [('double', a_678), ('double', a_677)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_679)
            ,
              kill('double', a_678)
            ,
              kill('double', a_677)
            ) in
          pure(a_696)
    ) in
  pure(Unit) ;
  kill('union __cerbty_unnamed_tag_646', u) ;
  kill('signed int*', pi) ;
  kill('union __cerbty_unnamed_tag_646*', p) ;
  pure(Unit) ;
  save ret_653: loaded integer (a_697: loaded integer:= Specified(0)) in
    pure(a_697)

