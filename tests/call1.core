-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_672: pointer [ail_ctype = 'char[10]'] :=
  create_readonly(Ivalignof('char[10]'), 'char[10]', Specified(Array(Specified(conv_int('char',
  86)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc f (a: pointer, b: pointer, c: pointer): eff loaded integer :=
  let strong a_716: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_703: loaded integer, a_704: loaded integer) =
        unseq(
          {- §6.5.6 -}
          let weak (a_708: loaded integer, a_709: loaded integer) =
            unseq(
              let weak a_713: pointer = pure(a) in
              load('signed int', a_713)
            ,
              let weak a_714: pointer = pure(b) in
              load('signed int', a_714)
            ) in
          pure(
            let (Specified(a_710: integer), Specified(a_711: integer)) =
              (a_708, a_709) in
            Specified(catch_exceptional_condition('signed int',
            conv_int('signed int', a_710) + conv_int('signed int', a_711)))
          )
        ,
          let weak a_715: pointer = pure(c) in
          load('signed int', a_715)
        ) in
      pure(
        let (Specified(a_705: integer), Specified(a_706: integer)) =
          (a_703, a_704) in
        Specified(catch_exceptional_condition('signed int',
        conv_int('signed int', a_705) + conv_int('signed int', a_706)))
      )
    ) in
  run ret_702(conv_loaded_int('signed int', a_716)) ;
  pure(Unit) ;
  save ret_702: loaded integer (a_717: loaded integer:= undef(<<UB088_reached_end_of_function>>)) in
    pure(a_717)

proc main (): eff loaded integer :=
  let strong g: pointer =
    create(Ivalignof('signed int (*) (signed int, ...)'), 'signed int (*) (signed int, ...)') in
  let strong a_657: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      pure(Specified(Cfunction(f)))
    ) in
  store('signed int (*) (signed int, ...)', g, a_657) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_661: loaded pointer,
      (a_662: ctype, a_663: [ctype], a_664: boolean, a_665: boolean)),
      a_669: loaded pointer, a_671: loaded pointer, a_675: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_656: loaded pointer =
            pure(Specified(Cfunction(fprintf))) in
          pure((a_656, cfunction(a_656)))
        ,
          let weak a_670: pointer = pure(__stderr) in
          load('struct _IO_FILE*', a_670)
        ,
          let weak a_673: pointer = pure(a_672) in
          {- §6.3.2.1#3 -}
          let weak a_674: pointer = memop(PtrArrayShift, a_673, 'char', 0) in
          pure(Specified(a_674))
        ,
          {- §6.5.2.2#10, sentence 1 -}
          let strong ((a_677: loaded pointer,
          (a_678: ctype, a_679: [ctype], a_680: boolean, a_681: boolean)),
          a_687: loaded integer, a_688: loaded integer, a_689: loaded integer) =
            {- §6.5.2.2#4, sentence 2 -}
            unseq(
              let strong a_676: loaded pointer =
                let strong a_682: loaded pointer =
                  let weak a_683: pointer = pure(g) in
                  load('signed int (*) (signed int, ...)', a_683) in
                pure(a_682) in
              pure((a_676, cfunction(a_676)))
            ,
              pure(Specified(1))
            ,
              pure(Specified(10))
            ,
              pure(Specified(100))
            ) in
          if not(params_length(a_679) <= 3) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if not(a_680) \/ not(are_compatible ('signed int', a_678)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_686: pointer =
                let a_690: ctype = params_nth(a_679, 0) in
                if not(are_compatible ('signed int', a_690)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {- §6.5.2.2#7, sentence 1 -}
                  let weak a_691: pointer = create(Ivalignof(a_690), a_690) in
                  let weak _: unit =
                    store(a_690, a_691, conv_loaded_int(a_690, a_687)) in
                  pure(a_691) in
              let strong a_685: pointer =
                {- §6.5.2.2#7, sentences 2 and 3 -}
                pcall(create_and_store, 'signed int',
                conv_loaded_int('signed int', a_688)) in
              let strong a_684: pointer =
                {- §6.5.2.2#7, sentences 2 and 3 -}
                pcall(create_and_store, 'signed int',
                conv_loaded_int('signed int', a_689)) in
              let strong a_692: loaded integer =
                ccall('signed int (*) (signed int, ...)', a_677, a_686,
                [('signed int', a_685), ('signed int', a_684)]) in
              let strong _: (unit,unit,unit) =
                unseq(
                  kill('signed int', a_686)
                ,
                  kill('signed int', a_685)
                ,
                  kill('signed int', a_684)
                ) in
              pure(a_692)
        ) in
      if not(params_length(a_663) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_664) \/ not(are_compatible ('signed int', a_662)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_668: pointer =
            let a_693: ctype = params_nth(a_663, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_693)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_694: pointer = create(Ivalignof(a_693), a_693) in
              let weak _: unit = store(a_693, a_694, a_669) in
              pure(a_694) in
          let strong a_667: pointer =
            let a_695: ctype = params_nth(a_663, 1) in
            if not(are_compatible ('const char*', a_695)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_696: pointer = create(Ivalignof(a_695), a_695) in
              let weak _: unit = store(a_695, a_696, a_671) in
              pure(a_696) in
          let strong a_666: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_675)) in
          let strong a_697: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_661, a_668, a_667, [('signed int', a_666)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_668)
            ,
              kill('char*', a_667)
            ,
              kill('signed int', a_666)
            ) in
          pure(a_697)
    ) in
  pure(Unit) ;
  kill('signed int (signed int, ...)*', g) ;
  pure(Unit) ;
  save ret_655: loaded integer (a_698: loaded integer:= Specified(0)) in
    pure(a_698)

