-- Aggregates
def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
-- Fun map
proc bar (pointer)

proc foo (): eff loaded integer :=
  let strong a: pointer = create(Ivalignof('void*'), 'void*') in
  let strong b: pointer = create(Ivalignof('void*'), 'void*') in
  let strong a_752: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_754: loaded pointer,
      (a_755: ctype, a_756: [ctype], a_757: boolean, a_758: boolean)),
      a_760: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_753: loaded pointer =
            pure(Specified(Cfunction(malloc_proxy))) in
          pure((a_753, cfunction(a_753)))
        ,
          pure(Specified(1))
        ) in
      if not(params_length(a_756) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_757 \/ not(are_compatible ('void*', a_755)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_759: pointer =
            let a_761: ctype = params_nth(a_756, 0) in
            if not(are_compatible ('size_t', a_761)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_762: pointer = create(Ivalignof(a_761), a_761) in
              let weak _: unit =
                store(a_761, a_762, conv_loaded_int(a_761, a_760)) in
              pure(a_762) in
          let strong a_763: loaded pointer =
            ccall('void* (*) (size_t)', a_754, a_759) in
          kill('size_t', a_759) ;
          pure(a_763)
    ) in
  store('void*', a, a_752) ;
  {- §6.5#2 -}
  bound(
    {- §6.5.2.2#10, sentence 1 -}
    let strong ((a_764: loaded pointer,
    (a_765: ctype, a_766: [ctype], a_767: boolean, a_768: boolean)),
    a_770: loaded pointer) =
      {- §6.5.2.2#4, sentence 2 -}
      unseq(
        let strong a_751: loaded pointer = pure(Specified(Cfunction(bar))) in
        pure((a_751, cfunction(a_751)))
      ,
        let weak a_771: pointer = pure(a) in
        load('void*', a_771)
      ) in
    if not(params_length(a_766) = 1) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_767 \/ not(are_compatible ('void', a_765)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_769: pointer =
          let a_772: ctype = params_nth(a_766, 0) in
          if not(are_compatible ('void*', a_772)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_773: pointer = create(Ivalignof(a_772), a_772) in
            let weak _: unit = store(a_772, a_773, a_770) in
            pure(a_773) in
        let strong a_774: unit = ccall('void (*) (void*)', a_764, a_769) in
        kill('void*', a_769) ;
        pure(a_774)
  ) ;
  pure(Unit) ;
  let strong a_775: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_777: loaded pointer,
      (a_778: ctype, a_779: [ctype], a_780: boolean, a_781: boolean)),
      a_783: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_776: loaded pointer =
            pure(Specified(Cfunction(malloc_proxy))) in
          pure((a_776, cfunction(a_776)))
        ,
          pure(Specified(1))
        ) in
      if not(params_length(a_779) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_780 \/ not(are_compatible ('void*', a_778)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_782: pointer =
            let a_784: ctype = params_nth(a_779, 0) in
            if not(are_compatible ('size_t', a_784)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_785: pointer = create(Ivalignof(a_784), a_784) in
              let weak _: unit =
                store(a_784, a_785, conv_loaded_int(a_784, a_783)) in
              pure(a_785) in
          let strong a_786: loaded pointer =
            ccall('void* (*) (size_t)', a_777, a_782) in
          kill('size_t', a_782) ;
          pure(a_786)
    ) in
  store('void*', b, a_775) ;
  let strong a_803: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.15#4, sentence 1 -}
      let strong a_799: loaded integer =
        let weak (a_787: loaded integer, a_788: loaded integer) =
          unseq(
            let weak (a_792: loaded pointer, a_793: loaded pointer) =
              unseq(
                let weak a_797: pointer = pure(a) in
                load('void*', a_797)
              ,
                let weak a_798: pointer = pure(b) in
                load('void*', a_798)
              ) in
            let (Specified(a_794: pointer), Specified(a_795: pointer)) =
              (a_792, a_793) in
            let weak a_796: boolean = memop(PtrEq, a_794, a_795) in
            pure(if a_796 then Specified(1) else Specified(0))
          ,
            pure(Specified(0))
          ) in
        pure(
          let (Specified(a_789: integer), Specified(a_790: integer)) =
            (a_787, a_788) in
          if conv_int('signed int', a_789) = conv_int('signed int', a_790) then
            Specified(1)
          else
            Specified(0)
        ) in
      let Specified(a_800: integer) = a_799 in
      {- §6.5.15#4, sentence 2 -}
      if a_800 = 0 then
        let strong a_801: loaded integer = pure(Specified(1)) in
        pure(conv_loaded_int('signed int', a_801))
      else
        let strong a_802: loaded integer = pure(Specified(0)) in
        pure(conv_loaded_int('signed int', a_802))
    ) in
  kill('void*', a) ;
  kill('void*', b) ;
  run ret_750(conv_loaded_int('signed int', a_803)) ;
  kill('void*', a) ;
  kill('void*', b) ;
  pure(Unit) ;
  save ret_750: loaded integer (a_804: loaded integer:= undef(<<UB088_reached_end_of_function>>)) in
    pure(a_804)

