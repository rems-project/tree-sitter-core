-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_735: pointer [ail_ctype = 'char[28]'] :=
  create_readonly(Ivalignof('char[28]'), 'char[28]', Specified(Array(Specified(conv_int('char',
  38)), Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 48)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(0))))

glob a_763: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_766: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

glob a_780: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  121)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc f (ix: pointer): eff unit :=
  let strong y: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong iy: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong py: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_707: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  store('signed int', y, conv_loaded_int('signed int', a_707)) ;
  {- §6.2.4#6 -}
  store('uintptr_t', iy, Unspecified('uintptr_t')) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_706: pointer, a_714: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          pure(iy)
        ,
          {- §6.5.6 -}
          let weak (a_709: loaded integer, a_710: loaded integer) =
            unseq(
              let weak a_708: pointer = pure(ix) in
              load('uintptr_t', a_708)
            ,
              pure(Specified(48))
            ) in
          pure(
            let (Specified(a_711: integer), Specified(a_712: integer)) =
              (a_709, a_710) in
            Specified(wrapI('uintptr_t',
            conv_int('uintptr_t', a_711) - conv_int('uintptr_t', a_712)))
          )
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('uintptr_t', a_706, conv_loaded_int('uintptr_t', a_714))) in
      pure(conv_loaded_int('uintptr_t', a_714))
    ) in
  pure(Unit) ;
  let strong a_715: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_716: loaded integer =
        let weak a_718: pointer = pure(iy) in
        load('uintptr_t', a_718) in
      let Specified(a_717: integer) = a_716 in
      let weak a_719: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_717) in
      pure(Specified(a_719))
    ) in
  store('signed int*', py, a_715) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_705: pointer, a_724: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_720: loaded pointer =
            let weak a_723: pointer = pure(py) in
            load('signed int*', a_723) in
          let Specified(a_721: pointer) = a_720 in
          let weak a_722: boolean =
            memop(PtrValidForDeref, 'signed int', a_721) in
          pure(
            if a_722 then
              a_721
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(1))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_705, conv_loaded_int('signed int', a_724))) in
      pure(conv_loaded_int('signed int', a_724))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_725: loaded pointer,
      (a_726: ctype, a_727: [ctype], a_728: boolean, a_729: boolean)),
      a_734: loaded pointer, a_738: loaded pointer, a_743: loaded integer,
      a_745: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_704: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_704, cfunction(a_704)))
        ,
          let weak a_736: pointer = pure(a_735) in
          {- §6.3.2.1#3 -}
          let weak a_737: pointer = memop(PtrArrayShift, a_736, 'char', 0) in
          pure(Specified(a_737))
        ,
          {- §6.5.3.2#3, sentence 5 -}
          {- §6.5.4 -}
          let weak a_741: pointer = pure(y) in
          pure(Specified(a_741))
        ,
          let weak a_744: pointer = pure(iy) in
          load('uintptr_t', a_744)
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_761: loaded integer =
            let weak (a_746: loaded integer, a_747: loaded integer) =
              unseq(
                let weak (a_751: loaded integer, a_752: loaded integer) =
                  unseq(
                    {- §6.5.4 -}
                    let weak a_756: loaded pointer =
                      {- §6.5.3.2#3, sentence 5 -}
                      let weak a_758: pointer = pure(y) in
                      pure(Specified(a_758)) in
                    let Specified(a_757: pointer) = a_756 in
                    let weak a_759: integer =
                      memop(IntFromPtr, 'signed int', 'uintptr_t', a_757) in
                    pure(Specified(a_759))
                  ,
                    let weak a_760: pointer = pure(iy) in
                    load('uintptr_t', a_760)
                  ) in
                pure(
                  let (Specified(a_753: integer), Specified(a_754: integer)) =
                    (a_751, a_752) in
                  if conv_int('uintptr_t', a_753) =
                  conv_int('uintptr_t', a_754) then
                    Specified(1)
                  else
                    Specified(0)
                )
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_748: integer), Specified(a_749: integer)) =
                (a_746, a_747) in
              if conv_int('signed int', a_748) = conv_int('signed int', a_749) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_762: integer) = a_761 in
          {- §6.5.15#4, sentence 2 -}
          if a_762 = 0 then
            let weak a_764: pointer = pure(a_763) in
            {- §6.3.2.1#3 -}
            let weak a_765: pointer =
              memop(PtrArrayShift, a_764, 'char', 0) in
            pure(Specified(a_765))
          else
            let weak a_767: pointer = pure(a_766) in
            {- §6.3.2.1#3 -}
            let weak a_768: pointer =
              memop(PtrArrayShift, a_767, 'char', 0) in
            pure(Specified(a_768))
        ) in
      if not(params_length(a_727) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_728) \/ not(are_compatible ('signed int', a_726)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_733: pointer =
            let a_769: ctype = params_nth(a_727, 0) in
            if not(are_compatible ('const char*', a_769)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_770: pointer = create(Ivalignof(a_769), a_769) in
              let weak _: unit = store(a_769, a_770, a_734) in
              pure(a_770) in
          let strong a_732: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_738) in
          let strong a_731: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'uintptr_t',
            conv_loaded_int('uintptr_t', a_743)) in
          let strong a_730: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_745) in
          let strong a_771: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_725, a_733,
            [('void*', a_732), ('uintptr_t', a_731), ('char*', a_730)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_733)
            ,
              kill('void*', a_732)
            ,
              kill('uintptr_t', a_731)
            ,
              kill('char*', a_730)
            ) in
          pure(a_771)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_772: loaded pointer,
      (a_773: ctype, a_774: [ctype], a_775: boolean, a_776: boolean)),
      a_779: loaded pointer, a_783: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_703: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_703, cfunction(a_703)))
        ,
          let weak a_781: pointer = pure(a_780) in
          {- §6.3.2.1#3 -}
          let weak a_782: pointer = memop(PtrArrayShift, a_781, 'char', 0) in
          pure(Specified(a_782))
        ,
          let weak a_784: pointer = pure(y) in
          load('signed int', a_784)
        ) in
      if not(params_length(a_774) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_775) \/ not(are_compatible ('signed int', a_773)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_778: pointer =
            let a_785: ctype = params_nth(a_774, 0) in
            if not(are_compatible ('const char*', a_785)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_786: pointer = create(Ivalignof(a_785), a_785) in
              let weak _: unit = store(a_785, a_786, a_779) in
              pure(a_786) in
          let strong a_777: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_783)) in
          let strong a_787: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_772, a_778,
            [('signed int', a_777)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_778), kill('signed int', a_777)) in
          pure(a_787)
    ) in
  pure(Unit) ;
  kill('signed int', y) ;
  kill('uintptr_t', iy) ;
  kill('signed int*', py) ;
  pure(Unit) ;
  save ret_702: unit (a_788: unit:= Unit) in  pure(a_788)

proc main (): eff loaded integer :=
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_685: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  store('signed int', x, conv_loaded_int('signed int', a_685)) ;
  {- §6.5#2 -}
  bound(
    {- §6.5.2.2#10, sentence 1 -}
    let strong ((a_686: loaded pointer,
    (a_687: ctype, a_688: [ctype], a_689: boolean, a_690: boolean)),
    a_692: loaded integer) =
      {- §6.5.2.2#4, sentence 2 -}
      unseq(
        let strong a_684: loaded pointer = pure(Specified(Cfunction(f))) in
        pure((a_684, cfunction(a_684)))
      ,
        {- §6.5.4 -}
        let weak a_693: loaded pointer =
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_695: pointer = pure(x) in
          pure(Specified(a_695)) in
        let Specified(a_694: pointer) = a_693 in
        let weak a_696: integer =
          memop(IntFromPtr, 'signed int', 'uintptr_t', a_694) in
        pure(Specified(a_696))
      ) in
    if not(params_length(a_688) = 1) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_689 \/ not(are_compatible ('void', a_687)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_691: pointer =
          let a_697: ctype = params_nth(a_688, 0) in
          if not(are_compatible ('uintptr_t', a_697)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_698: pointer = create(Ivalignof(a_697), a_697) in
            let weak _: unit =
              store(a_697, a_698, conv_loaded_int(a_697, a_692)) in
            pure(a_698) in
        let strong a_699: unit =
          ccall('void (*) (uintptr_t)', a_686, a_691) in
        kill('uintptr_t', a_691) ;
        pure(a_699)
  ) ;
  pure(Unit) ;
  kill('signed int', x) ;
  pure(Unit) ;
  save ret_683: loaded integer (a_700: loaded integer:= Specified(0)) in
    pure(a_700)

