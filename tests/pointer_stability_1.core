-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_648 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_680 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob a_733: pointer [ail_ctype = 'char[11]'] :=
  create_readonly(Ivalignof('char[11]'), 'char[11]', Specified(Array(Specified(conv_int('char',
  40)), Specified(conv_int('char', 105)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 106)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_745: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_748: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong i: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong j: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong b: pointer = create(Ivalignof('_Bool'), '_Bool') in
  let strong a_706: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', x, conv_loaded_int('signed int', a_706)) ;
  let strong a_707: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_708: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_710: pointer = pure(x) in
        pure(Specified(a_710)) in
      let Specified(a_709: pointer) = a_708 in
      let weak a_711: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_709) in
      pure(Specified(a_711))
    ) in
  store('uintptr_t', i, conv_loaded_int('uintptr_t', a_707)) ;
  let strong a_712: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_713: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_715: pointer = pure(x) in
        pure(Specified(a_715)) in
      let Specified(a_714: pointer) = a_713 in
      let weak a_716: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_714) in
      pure(Specified(a_716))
    ) in
  store('uintptr_t', j, conv_loaded_int('uintptr_t', a_712)) ;
  let strong a_717: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_718: loaded integer, a_719: loaded integer) =
        unseq(
          let weak a_723: pointer = pure(i) in
          load('uintptr_t', a_723)
        ,
          let weak a_724: pointer = pure(j) in
          load('uintptr_t', a_724)
        ) in
      pure(
        let (Specified(a_720: integer), Specified(a_721: integer)) =
          (a_718, a_719) in
        if conv_int('uintptr_t', a_720) = conv_int('uintptr_t', a_721) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  store('_Bool', b, conv_loaded_int('_Bool', a_717)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_725: loaded pointer,
      (a_726: ctype, a_727: [ctype], a_728: boolean, a_729: boolean)),
      a_732: loaded pointer, a_736: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_705: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_705, cfunction(a_705)))
        ,
          let weak a_734: pointer = pure(a_733) in
          {- §6.3.2.1#3 -}
          let weak a_735: pointer = memop(PtrArrayShift, a_734, 'char', 0) in
          pure(Specified(a_735))
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_743: loaded integer =
            let weak (a_737: loaded integer, a_738: loaded integer) =
              unseq(
                let weak a_742: pointer = pure(b) in
                load('_Bool', a_742)
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_739: integer), Specified(a_740: integer)) =
                (a_737, a_738) in
              if conv_int('signed int', a_739) = conv_int('signed int', a_740) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_744: integer) = a_743 in
          {- §6.5.15#4, sentence 2 -}
          if a_744 = 0 then
            let weak a_746: pointer = pure(a_745) in
            {- §6.3.2.1#3 -}
            let weak a_747: pointer =
              memop(PtrArrayShift, a_746, 'char', 0) in
            pure(Specified(a_747))
          else
            let weak a_749: pointer = pure(a_748) in
            {- §6.3.2.1#3 -}
            let weak a_750: pointer =
              memop(PtrArrayShift, a_749, 'char', 0) in
            pure(Specified(a_750))
        ) in
      if not(params_length(a_727) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_728) \/ not(are_compatible ('signed int', a_726)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_731: pointer =
            let a_751: ctype = params_nth(a_727, 0) in
            if not(are_compatible ('const char*', a_751)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_752: pointer = create(Ivalignof(a_751), a_751) in
              let weak _: unit = store(a_751, a_752, a_732) in
              pure(a_752) in
          let strong a_730: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_736) in
          let strong a_753: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_725, a_731,
            [('char*', a_730)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_731), kill('char*', a_730)) in
          pure(a_753)
    ) in
  pure(Unit) ;
  let strong a_754: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  kill('signed int', x) ;
  kill('uintptr_t', i) ;
  kill('uintptr_t', j) ;
  kill('_Bool', b) ;
  run ret_704(conv_loaded_int('signed int', a_754)) ;
  kill('signed int', x) ;
  kill('uintptr_t', i) ;
  kill('uintptr_t', j) ;
  kill('_Bool', b) ;
  pure(Unit) ;
  save ret_704: loaded integer (a_755: loaded integer:= Specified(0)) in
    pure(a_755)

