-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_814: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_815: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_814, conv_loaded_int('signed int', a_815)) ;
  pure(a_814)

glob a_784: pointer [ail_ctype = 'char[22]'] :=
  create_readonly(Ivalignof('char[22]'), 'char[22]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 40)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 41)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_804: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_807: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong i: pointer =
    create(Ivalignof('unsigned char'), 'unsigned char') in
  let strong b: pointer = create(Ivalignof('_Bool'), '_Bool') in
  let strong a_689: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_690: pointer = pure(x) in
      pure(Specified(a_690))
    ) in
  store('signed int*', p, a_689) ;
  let strong a_691: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_692: pointer = pure(x) in
      pure(Specified(a_692))
    ) in
  store('signed int*', q, a_691) ;
  let strong a_693: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak a_701: pointer =
        {- §6.5.3.2 -}
        let weak a_694: loaded pointer =
          {- §6.5.4 -}
          let weak a_697: loaded pointer =
            {- §6.5.3.2#3, sentence 5 -}
            let weak a_699: pointer = pure(p) in
            pure(Specified(a_699)) in
          let Specified(a_698: pointer) = a_697 in
          let weak a_700: boolean =
            memop(PtrWellAligned, 'unsigned char', a_698) in
          pure(
            Specified(if a_700 then
              a_698
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          ) in
        let Specified(a_695: pointer) = a_694 in
        let weak a_696: boolean =
          memop(PtrValidForDeref, 'unsigned char', a_695) in
        pure(
          if a_696 then a_695 else undef(<<UB043_indirection_invalid_value>>)
        ) in
      load('unsigned char', a_701)
    ) in
  store('unsigned char', i, conv_loaded_int('unsigned char', a_693)) ;
  {- §6.5#2 -}
  bound(
    let strong a_688: loaded integer =
      {- §6.5.8 -}
      let weak (a_704: loaded integer, a_705: loaded integer) =
        unseq(pure(Specified(Ivalignof('signed int'))), pure(Specified(4))) in
      let (Specified(a_706: integer), Specified(a_707: integer)) =
        (a_704, a_705) in
      {- §6.5.8#6 -}
      pure(
        if if all_values_representable_in('size_t', 'signed int') then
          conv_int('signed int', a_706)
        else
          conv_int('unsigned int', a_706) >=
        if all_values_representable_in('size_t', 'signed int') then
          conv_int('signed int', a_707)
        else
          conv_int('unsigned int', a_707) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_702: integer) = a_688 in
      if a_702 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  {- §6.5#2 -}
  bound(
    let strong a_687: loaded integer =
      let weak (a_711: loaded integer, a_712: loaded integer) =
        unseq(
          {- §6.5.10 -}
          let weak (a_716: loaded integer, a_717: loaded integer) =
            unseq(
              let weak a_720: pointer = pure(i) in
              load('unsigned char', a_720)
            ,
              pure(Specified(3))
            ) in
          pure(
            let (Specified(a_718: integer), Specified(a_719: integer)) =
              (a_716, a_717) in
            Specified(IvAND('unsigned int', conv_int('unsigned int', a_718),
            conv_int('unsigned int', a_719)))
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_713: integer), Specified(a_714: integer)) =
          (a_711, a_712) in
        if conv_int('unsigned int', a_713) = conv_int('unsigned int', a_714) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_709: integer) = a_687 in
      if a_709 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_686: pointer, a_726: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          pure(i)
        ,
          {- §6.5.12 -}
          let weak (a_721: loaded integer, a_722: loaded integer) =
            unseq(
              let weak a_725: pointer = pure(i) in
              load('unsigned char', a_725)
            ,
              pure(Specified(1))
            ) in
          pure(
            let (Specified(a_723: integer), Specified(a_724: integer)) =
              (a_721, a_722) in
            Specified(IvOR('unsigned int', conv_int('unsigned int', a_723),
            conv_int('unsigned int', a_724)))
          )
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('unsigned char', a_686,
        conv_loaded_int('unsigned char', a_726))) in
      pure(conv_loaded_int('unsigned char', a_726))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_685: pointer, a_735: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_727: loaded pointer =
            {- §6.5.4 -}
            let weak a_730: loaded pointer =
              {- §6.5.3.2#3, sentence 5 -}
              let weak a_732: pointer = pure(p) in
              pure(Specified(a_732)) in
            let Specified(a_731: pointer) = a_730 in
            let weak a_733: boolean =
              memop(PtrWellAligned, 'unsigned char', a_731) in
            pure(
              Specified(if a_733 then
                a_731
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            ) in
          let Specified(a_728: pointer) = a_727 in
          let weak a_729: boolean =
            memop(PtrValidForDeref, 'unsigned char', a_728) in
          pure(
            if a_729 then
              a_728
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          let weak a_734: pointer = pure(i) in
          load('unsigned char', a_734)
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('unsigned char', a_685,
        conv_loaded_int('unsigned char', a_735))) in
      pure(conv_loaded_int('unsigned char', a_735))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_684: pointer, a_760: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_736: loaded pointer =
            {- §6.5.4 -}
            let weak a_739: loaded pointer =
              {- §6.5.3.2#3, sentence 5 -}
              let weak a_741: pointer = pure(p) in
              pure(Specified(a_741)) in
            let Specified(a_740: pointer) = a_739 in
            let weak a_742: boolean =
              memop(PtrWellAligned, 'unsigned char', a_740) in
            pure(
              Specified(if a_742 then
                a_740
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            ) in
          let Specified(a_737: pointer) = a_736 in
          let weak a_738: boolean =
            memop(PtrValidForDeref, 'unsigned char', a_737) in
          pure(
            if a_738 then
              a_737
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          {- §6.5.10 -}
          let weak (a_743: loaded integer, a_744: loaded integer) =
            unseq(
              let weak a_754: pointer =
                {- §6.5.3.2 -}
                let weak a_747: loaded pointer =
                  {- §6.5.4 -}
                  let weak a_750: loaded pointer =
                    {- §6.5.3.2#3, sentence 5 -}
                    let weak a_752: pointer = pure(p) in
                    pure(Specified(a_752)) in
                  let Specified(a_751: pointer) = a_750 in
                  let weak a_753: boolean =
                    memop(PtrWellAligned, 'unsigned char', a_751) in
                  pure(
                    Specified(if a_753 then
                      a_751
                    else
                      undef(<<UB025_misaligned_pointer_conversion>>))
                  ) in
                let Specified(a_748: pointer) = a_747 in
                let weak a_749: boolean =
                  memop(PtrValidForDeref, 'unsigned char', a_748) in
                pure(
                  if a_749 then
                    a_748
                  else
                    undef(<<UB043_indirection_invalid_value>>)
                ) in
              load('unsigned char', a_754)
            ,
              {- §6.5.3.3#4 -}
              let weak a_755: loaded integer =
                {- §6.5.4 -}
                let weak a_757: loaded integer = pure(Specified(3)) in
                pure(conv_loaded_int('unsigned char', a_757)) in
              pure(
                let Specified(a_756: integer) = a_755 in
                Specified(IvCOMPL('signed int', conv_int('signed int', a_756)))
              )
            ) in
          pure(
            let (Specified(a_745: integer), Specified(a_746: integer)) =
              (a_743, a_744) in
            Specified(IvAND('signed int', conv_int('signed int', a_745),
            conv_int('signed int', a_746)))
          )
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('unsigned char', a_684,
        conv_loaded_int('unsigned char', a_760))) in
      pure(conv_loaded_int('unsigned char', a_760))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_683: pointer, a_765: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_761: loaded pointer =
            let weak a_764: pointer = pure(p) in
            load('signed int*', a_764) in
          let Specified(a_762: pointer) = a_761 in
          let weak a_763: boolean =
            memop(PtrValidForDeref, 'signed int', a_762) in
          pure(
            if a_763 then
              a_762
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(11))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_683, conv_loaded_int('signed int', a_765))) in
      pure(conv_loaded_int('signed int', a_765))
    ) in
  pure(Unit) ;
  let strong a_766: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_767: loaded pointer, a_768: loaded pointer) =
        unseq(
          let weak a_772: pointer = pure(p) in
          load('signed int*', a_772)
        ,
          let weak a_773: pointer = pure(q) in
          load('signed int*', a_773)
        ) in
      let (Specified(a_769: pointer), Specified(a_770: pointer)) =
        (a_767, a_768) in
      let weak a_771: boolean = memop(PtrEq, a_769, a_770) in
      pure(if a_771 then Specified(1) else Specified(0))
    ) in
  store('_Bool', b, conv_loaded_int('_Bool', a_766)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_774: loaded pointer,
      (a_775: ctype, a_776: [ctype], a_777: boolean, a_778: boolean)),
      a_783: loaded pointer, a_787: loaded integer, a_789: loaded integer,
      a_795: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_682: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_682, cfunction(a_682)))
        ,
          let weak a_785: pointer = pure(a_784) in
          {- §6.3.2.1#3 -}
          let weak a_786: pointer = memop(PtrArrayShift, a_785, 'char', 0) in
          pure(Specified(a_786))
        ,
          let weak a_788: pointer = pure(x) in
          load('signed int', a_788)
        ,
          let weak a_794: pointer =
            {- §6.5.3.2 -}
            let weak a_790: loaded pointer =
              let weak a_793: pointer = pure(p) in
              load('signed int*', a_793) in
            let Specified(a_791: pointer) = a_790 in
            let weak a_792: boolean =
              memop(PtrValidForDeref, 'signed int', a_791) in
            pure(
              if a_792 then
                a_791
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_794)
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_802: loaded integer =
            let weak (a_796: loaded integer, a_797: loaded integer) =
              unseq(
                let weak a_801: pointer = pure(b) in
                load('_Bool', a_801)
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_798: integer), Specified(a_799: integer)) =
                (a_796, a_797) in
              if conv_int('signed int', a_798) = conv_int('signed int', a_799) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_803: integer) = a_802 in
          {- §6.5.15#4, sentence 2 -}
          if a_803 = 0 then
            let weak a_805: pointer = pure(a_804) in
            {- §6.3.2.1#3 -}
            let weak a_806: pointer =
              memop(PtrArrayShift, a_805, 'char', 0) in
            pure(Specified(a_806))
          else
            let weak a_808: pointer = pure(a_807) in
            {- §6.3.2.1#3 -}
            let weak a_809: pointer =
              memop(PtrArrayShift, a_808, 'char', 0) in
            pure(Specified(a_809))
        ) in
      if not(params_length(a_776) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_777) \/ not(are_compatible ('signed int', a_775)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_782: pointer =
            let a_810: ctype = params_nth(a_776, 0) in
            if not(are_compatible ('const char*', a_810)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_811: pointer = create(Ivalignof(a_810), a_810) in
              let weak _: unit = store(a_810, a_811, a_783) in
              pure(a_811) in
          let strong a_781: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_787)) in
          let strong a_780: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_789)) in
          let strong a_779: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_795) in
          let strong a_812: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_774, a_782,
            [('signed int', a_781), ('signed int', a_780), ('char*', a_779)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_782)
            ,
              kill('signed int', a_781)
            ,
              kill('signed int', a_780)
            ,
              kill('char*', a_779)
            ) in
          pure(a_812)
    ) in
  pure(Unit) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  kill('unsigned ichar', i) ;
  kill('_Bool', b) ;
  pure(Unit) ;
  save ret_681: loaded integer (a_813: loaded integer:= Specified(0)) in
    pure(a_813)

