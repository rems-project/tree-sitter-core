-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

def struct __cerbty_unnamed_tag_746 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_750 :=
  c1: 'char'
  f1: 'float'

def struct __cerbty_unnamed_tag_752 :=
  c2: 'char'
  f2: 'float'

-- Globals
glob a_835: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('void*'), 'void*') in
  let strong s1: pointer =
    create(Ivalignof('struct __cerbty_unnamed_tag_750'), 'struct __cerbty_unnamed_tag_750') in
  let strong f: pointer = create(Ivalignof('float'), 'float') in
  {- §6.5#2 -}
  bound(
    let strong a_765: loaded integer =
      let weak (a_768: loaded integer, a_769: loaded integer) =
        unseq(
          pure(Specified(Ivsizeof('struct __cerbty_unnamed_tag_750')))
        ,
          pure(Specified(Ivsizeof('struct __cerbty_unnamed_tag_752')))
        ) in
      pure(
        let (Specified(a_770: integer), Specified(a_771: integer)) =
          (a_768, a_769) in
        if conv_int('size_t', a_770) = conv_int('size_t', a_771) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_766: integer) = a_765 in
      if a_766 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  {- §6.5#2 -}
  bound(
    let strong a_764: loaded integer =
      let weak (a_775: loaded integer, a_776: loaded integer) =
        unseq(pure(Specified(0)), pure(Specified(0))) in
      pure(
        let (Specified(a_777: integer), Specified(a_778: integer)) =
          (a_775, a_776) in
        if conv_int('size_t', a_777) = conv_int('size_t', a_778) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_773: integer) = a_764 in
      if a_773 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  {- §6.5#2 -}
  bound(
    let strong a_763: loaded integer =
      let weak (a_782: loaded integer, a_783: loaded integer) =
        unseq(pure(Specified(8)), pure(Specified(8))) in
      pure(
        let (Specified(a_784: integer), Specified(a_785: integer)) =
          (a_782, a_783) in
        if conv_int('size_t', a_784) = conv_int('size_t', a_785) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_780: integer) = a_763 in
      if a_780 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  let strong a_787: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_789: loaded pointer,
      (a_790: ctype, a_791: [ctype], a_792: boolean, a_793: boolean)),
      a_795: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_788: loaded pointer =
            pure(Specified(Cfunction(malloc_proxy))) in
          pure((a_788, cfunction(a_788)))
        ,
          pure(Specified(Ivsizeof('struct __cerbty_unnamed_tag_750')))
        ) in
      if not(params_length(a_791) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_792 \/ not(are_compatible ('void*', a_790)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_794: pointer =
            let a_796: ctype = params_nth(a_791, 0) in
            if not(are_compatible ('size_t', a_796)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_797: pointer = create(Ivalignof(a_796), a_796) in
              let weak _: unit =
                store(a_796, a_797, conv_loaded_int(a_796, a_795)) in
              pure(a_797) in
          let strong a_798: loaded pointer =
            ccall('void* (*) (size_t)', a_789, a_794) in
          kill('size_t', a_794) ;
          pure(a_798)
    ) in
  store('void*', p, a_787) ;
  {- §6.5#2 -}
  bound(
    let strong a_762: loaded integer =
      let weak a_802: loaded pointer =
        let weak a_801: pointer = pure(p) in
        load('void*', a_801) in
      let Specified(a_803: pointer) = a_802 in
      let weak a_804: boolean = memop(PtrNe, a_803, NULL(void*)) in
      {- §6.5.9#3 -}
      pure(if a_804 then Specified(1) else Specified(0)) in
    pure(
      let Specified(a_799: integer) = a_762 in
      if a_799 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  let strong a_805: loaded struct a_750 =
    {- §6.5#2 -}
    bound(
      let weak (a_807: loaded floating, a_806: loaded integer) =
        {- §6.7.9#23 -}
        unseq(pure(Specified(1.)), pure(Specified(65))) in
      pure(
        Specified((struct __cerbty_unnamed_tag_750){.c1= conv_loaded_int('char',
        a_806), .f1= a_807})
      )
    ) in
  store('struct __cerbty_unnamed_tag_750', s1, a_805) ;
  let strong _: loaded struct a_750 =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_761: pointer, a_816: loaded struct a_750) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_808: loaded pointer =
            {- §6.5.4 -}
            let weak a_811: loaded pointer =
              let weak a_813: pointer = pure(p) in
              load('void*', a_813) in
            let Specified(a_812: pointer) = a_811 in
            let weak a_814: boolean =
              memop(PtrWellAligned, 'struct __cerbty_unnamed_tag_750', a_812) in
            pure(
              Specified(if a_814 then
                a_812
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            ) in
          let Specified(a_809: pointer) = a_808 in
          let weak a_810: boolean =
            memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_750', a_809) in
          pure(
            if a_810 then
              a_809
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          let weak a_815: pointer = pure(s1) in
          load('struct __cerbty_unnamed_tag_750', a_815)
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('struct __cerbty_unnamed_tag_750', a_761, a_816)) in
      pure(a_816)
    ) in
  pure(Unit) ;
  let strong a_817: loaded floating =
    {- §6.5#2 -}
    bound(
      let weak a_826: pointer =
        {- §6.5.2.3#4, sentence 2 -}
        let strong a_818: loaded pointer =
          {- §6.5.4 -}
          let weak a_822: loaded pointer =
            let weak a_824: pointer = pure(p) in
            load('void*', a_824) in
          let Specified(a_823: pointer) = a_822 in
          let weak a_825: boolean =
            memop(PtrWellAligned, 'struct __cerbty_unnamed_tag_752', a_823) in
          pure(
            Specified(if a_825 then
              a_823
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          ) in
        let Specified(a_819: pointer) = a_818 in
        let weak a_820: boolean =
          memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_752', a_819) in
        pure(
          if a_820 then
            member_shift(a_819, __cerbty_unnamed_tag_752, .f2)
          else
            undef(<<UB043_indirection_invalid_value>>)
        ) in
      load('float', a_826)
    ) in
  store('float', f, a_817) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_827: loaded pointer,
      (a_828: ctype, a_829: [ctype], a_830: boolean, a_831: boolean)),
      a_834: loaded pointer, a_838: loaded floating) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_760: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_760, cfunction(a_760)))
        ,
          let weak a_836: pointer = pure(a_835) in
          {- §6.3.2.1#3 -}
          let weak a_837: pointer = memop(PtrArrayShift, a_836, 'char', 0) in
          pure(Specified(a_837))
        ,
          let weak a_839: pointer = pure(f) in
          load('float', a_839)
        ) in
      if not(params_length(a_829) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_830) \/ not(are_compatible ('signed int', a_828)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_833: pointer =
            let a_840: ctype = params_nth(a_829, 0) in
            if not(are_compatible ('const char*', a_840)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_841: pointer = create(Ivalignof(a_840), a_840) in
              let weak _: unit = store(a_840, a_841, a_834) in
              pure(a_841) in
          let strong a_832: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'double', a_838) in
          let strong a_842: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_827, a_833,
            [('double', a_832)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_833), kill('double', a_832)) in
          pure(a_842)
    ) in
  pure(Unit) ;
  kill('void*', p) ;
  kill('struct __cerbty_unnamed_tag_750', s1) ;
  kill('float', f) ;
  pure(Unit) ;
  save ret_759: loaded integer (a_843: loaded integer:= Specified(0)) in
    pure(a_843)

