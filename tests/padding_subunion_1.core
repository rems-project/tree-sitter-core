-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

def struct __cerbty_unnamed_tag_745 :=
  c1: 'char'

def struct __cerbty_unnamed_tag_747 :=
  f2: 'float'

def union __cerbty_unnamed_tag_749 :=
  s1: 'struct __cerbty_unnamed_tag_745'
  s2: 'struct __cerbty_unnamed_tag_747'

-- Globals
glob a_787: pointer [ail_ctype = 'char[15]'] :=
  create_readonly(Ivalignof('char[15]'), 'char[15]', Specified(Array(Specified(conv_int('char',
  117)), Specified(conv_int('char', 45)), Specified(conv_int('char', 62)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 46)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 49)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 48)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong u: pointer =
    create(Ivalignof('union __cerbty_unnamed_tag_749*'), 'union __cerbty_unnamed_tag_749*') in
  let strong a_757: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_758: loaded pointer =
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_761: loaded pointer,
        (a_762: ctype, a_763: [ctype], a_764: boolean, a_765: boolean)),
        a_767: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_760: loaded pointer =
              pure(Specified(Cfunction(malloc_proxy))) in
            pure((a_760, cfunction(a_760)))
          ,
            pure(Specified(Ivsizeof('struct __cerbty_unnamed_tag_745')))
          ) in
        if not(params_length(a_763) = 1) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if a_764 \/ not(are_compatible ('void*', a_762)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_766: pointer =
              let a_768: ctype = params_nth(a_763, 0) in
              if not(are_compatible ('size_t', a_768)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_769: pointer = create(Ivalignof(a_768), a_768) in
                let weak _: unit =
                  store(a_768, a_769, conv_loaded_int(a_768, a_767)) in
                pure(a_769) in
            let strong a_770: loaded pointer =
              ccall('void* (*) (size_t)', a_761, a_766) in
            kill('size_t', a_766) ;
            pure(a_770) in
      let Specified(a_759: pointer) = a_758 in
      let weak a_771: boolean =
        memop(PtrWellAligned, 'union __cerbty_unnamed_tag_749', a_759) in
      pure(
        Specified(if a_771 then
          a_759
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('union __cerbty_unnamed_tag_749*', u, a_757) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_756: pointer, a_778: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.2.3#3, sentence 2 -}
          let strong a_772: pointer =
            {- §6.5.2.3#4, sentence 2 -}
            let strong a_773: loaded pointer =
              let weak a_777: pointer = pure(u) in
              load('union __cerbty_unnamed_tag_749*', a_777) in
            let Specified(a_774: pointer) = a_773 in
            let weak a_775: boolean =
              memop(PtrValidForDeref, 'union __cerbty_unnamed_tag_749', a_774) in
            pure(
              if a_775 then
                member_shift(a_774, __cerbty_unnamed_tag_749, .s1)
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          memop(PtrArrayShift[__cerbty_unnamed_tag_745, c1], a_772)
        ,
          pure(Specified(97))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('char', a_756, conv_loaded_int('char', a_778))) in
      pure(conv_loaded_int('char', a_778))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_779: loaded pointer,
      (a_780: ctype, a_781: [ctype], a_782: boolean, a_783: boolean)),
      a_786: loaded pointer, a_790: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_755: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_755, cfunction(a_755)))
        ,
          let weak a_788: pointer = pure(a_787) in
          {- §6.3.2.1#3 -}
          let weak a_789: pointer = memop(PtrArrayShift, a_788, 'char', 0) in
          pure(Specified(a_789))
        ,
          {- §6.5.4 -}
          let weak a_791: loaded integer =
            let weak a_799: pointer =
              {- §6.5.2.3#3, sentence 2 -}
              let strong a_793: pointer =
                {- §6.5.2.3#4, sentence 2 -}
                let strong a_794: loaded pointer =
                  let weak a_798: pointer = pure(u) in
                  load('union __cerbty_unnamed_tag_749*', a_798) in
                let Specified(a_795: pointer) = a_794 in
                let weak a_796: boolean =
                  memop(PtrValidForDeref, 'union __cerbty_unnamed_tag_749',
                  a_795) in
                pure(
                  if a_796 then
                    member_shift(a_795, __cerbty_unnamed_tag_749, .s1)
                  else
                    undef(<<UB043_indirection_invalid_value>>)
                ) in
              memop(PtrArrayShift[__cerbty_unnamed_tag_745, c1], a_793) in
            load('char', a_799) in
          pure(conv_loaded_int('signed int', a_791))
        ) in
      if not(params_length(a_781) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_782) \/ not(are_compatible ('signed int', a_780)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_785: pointer =
            let a_801: ctype = params_nth(a_781, 0) in
            if not(are_compatible ('const char*', a_801)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_802: pointer = create(Ivalignof(a_801), a_801) in
              let weak _: unit = store(a_801, a_802, a_786) in
              pure(a_802) in
          let strong a_784: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_790)) in
          let strong a_803: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_779, a_785,
            [('signed int', a_784)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_785), kill('signed int', a_784)) in
          pure(a_803)
    ) in
  pure(Unit) ;
  kill('union __cerbty_unnamed_tag_749*', u) ;
  pure(Unit) ;
  save ret_754: loaded integer (a_804: loaded integer:= Specified(0)) in
    pure(a_804)

