-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

def struct __cerbty_unnamed_tag_852 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_856 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob a_975: pointer [ail_ctype = 'char[35]'] :=
  create_readonly(Ivalignof('char[35]'), 'char[35]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_1044: pointer [ail_ctype = 'char[27]'] :=
  create_readonly(Ivalignof('char[27]'), 'char[27]', Specified(Array(Specified(conv_int('char',
  42)), Specified(conv_int('char', 120)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong xp: pointer = create(Ivalignof('void*'), 'void*') in
  let strong yp: pointer = create(Ivalignof('void*'), 'void*') in
  let strong offset: pointer = create(Ivalignof('ptrdiff_t'), 'ptrdiff_t') in
  let strong p1: pointer =
    create(Ivalignof('unsigned char*'), 'unsigned char*') in
  let strong p2: pointer =
    create(Ivalignof('unsigned char*'), 'unsigned char*') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_888: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_890: loaded pointer,
      (a_891: ctype, a_892: [ctype], a_893: boolean, a_894: boolean)),
      a_896: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_889: loaded pointer =
            pure(Specified(Cfunction(malloc_proxy))) in
          pure((a_889, cfunction(a_889)))
        ,
          pure(Specified(Ivsizeof('signed int')))
        ) in
      if not(params_length(a_892) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_893 \/ not(are_compatible ('void*', a_891)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_895: pointer =
            let a_897: ctype = params_nth(a_892, 0) in
            if not(are_compatible ('size_t', a_897)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_898: pointer = create(Ivalignof(a_897), a_897) in
              let weak _: unit =
                store(a_897, a_898, conv_loaded_int(a_897, a_896)) in
              pure(a_898) in
          let strong a_899: loaded pointer =
            ccall('void* (*) (size_t)', a_890, a_895) in
          kill('size_t', a_895) ;
          pure(a_899)
    ) in
  store('void*', xp, a_888) ;
  let strong a_900: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_902: loaded pointer,
      (a_903: ctype, a_904: [ctype], a_905: boolean, a_906: boolean)),
      a_908: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_901: loaded pointer =
            pure(Specified(Cfunction(malloc_proxy))) in
          pure((a_901, cfunction(a_901)))
        ,
          pure(Specified(Ivsizeof('signed int')))
        ) in
      if not(params_length(a_904) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_905 \/ not(are_compatible ('void*', a_903)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_907: pointer =
            let a_909: ctype = params_nth(a_904, 0) in
            if not(are_compatible ('size_t', a_909)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_910: pointer = create(Ivalignof(a_909), a_909) in
              let weak _: unit =
                store(a_909, a_910, conv_loaded_int(a_909, a_908)) in
              pure(a_910) in
          let strong a_911: loaded pointer =
            ccall('void* (*) (size_t)', a_902, a_907) in
          kill('size_t', a_907) ;
          pure(a_911)
    ) in
  store('void*', yp, a_900) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_887: pointer, a_919: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_912: loaded pointer =
            {- §6.5.4 -}
            let weak a_915: loaded pointer =
              let weak a_917: pointer = pure(xp) in
              load('void*', a_917) in
            let Specified(a_916: pointer) = a_915 in
            let weak a_918: boolean =
              memop(PtrWellAligned, 'signed int', a_916) in
            pure(
              Specified(if a_918 then
                a_916
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            ) in
          let Specified(a_913: pointer) = a_912 in
          let weak a_914: boolean =
            memop(PtrValidForDeref, 'signed int', a_913) in
          pure(
            if a_914 then
              a_913
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(1))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_887, conv_loaded_int('signed int', a_919))) in
      pure(conv_loaded_int('signed int', a_919))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_886: pointer, a_927: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_920: loaded pointer =
            {- §6.5.4 -}
            let weak a_923: loaded pointer =
              let weak a_925: pointer = pure(yp) in
              load('void*', a_925) in
            let Specified(a_924: pointer) = a_923 in
            let weak a_926: boolean =
              memop(PtrWellAligned, 'signed int', a_924) in
            pure(
              Specified(if a_926 then
                a_924
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            ) in
          let Specified(a_921: pointer) = a_920 in
          let weak a_922: boolean =
            memop(PtrValidForDeref, 'signed int', a_921) in
          pure(
            if a_922 then
              a_921
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(2))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_886, conv_loaded_int('signed int', a_927))) in
      pure(conv_loaded_int('signed int', a_927))
    ) in
  pure(Unit) ;
  let strong a_928: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_937: loaded pointer, a_938: loaded pointer) =
        unseq(
          {- §6.5.4 -}
          let weak a_929: loaded pointer =
            let weak a_931: pointer = pure(yp) in
            load('void*', a_931) in
          let Specified(a_930: pointer) = a_929 in
          let weak a_932: boolean =
            memop(PtrWellAligned, 'unsigned char', a_930) in
          pure(
            Specified(if a_932 then
              a_930
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          )
        ,
          {- §6.5.4 -}
          let weak a_933: loaded pointer =
            let weak a_935: pointer = pure(xp) in
            load('void*', a_935) in
          let Specified(a_934: pointer) = a_933 in
          let weak a_936: boolean =
            memop(PtrWellAligned, 'unsigned char', a_934) in
          pure(
            Specified(if a_936 then
              a_934
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          )
        ) in
      let (Specified(a_939: pointer), Specified(a_940: pointer)) =
        (a_937, a_938) in
      let weak a_941: integer =
        memop(Ptrdiff, 'unsigned char', a_939, a_940) in
      pure(
        if is_representable_integer(a_941, 'ptrdiff_t') then
          Specified(a_941)
        else
          undef(<<UB050_pointers_subtraction_not_representable>>)
      )
    ) in
  store('ptrdiff_t', offset, conv_loaded_int('ptrdiff_t', a_928)) ;
  let strong a_942: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_943: loaded pointer =
        let weak a_945: pointer = pure(xp) in
        load('void*', a_945) in
      let Specified(a_944: pointer) = a_943 in
      let weak a_946: boolean =
        memop(PtrWellAligned, 'unsigned char', a_944) in
      pure(
        Specified(if a_946 then
          a_944
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('unsigned char*', p1, a_942) ;
  let strong a_947: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_948: loaded pointer, a_950: loaded integer) =
        unseq(
          let weak a_953: pointer = pure(p1) in
          load('unsigned char*', a_953)
        ,
          let weak a_954: pointer = pure(offset) in
          load('ptrdiff_t', a_954)
        ) in
      let (Specified(a_949: pointer), Specified(a_951: integer)) =
        (a_948, a_950) in
      let weak a_952: pointer =
        memop(PtrArrayShift, a_949, 'unsigned char', a_951) in
      pure(Specified(a_952))
    ) in
  store('unsigned char*', p2, a_947) ;
  let strong a_955: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_956: loaded pointer =
        let weak a_958: pointer = pure(p2) in
        load('unsigned char*', a_958) in
      let Specified(a_957: pointer) = a_956 in
      let weak a_959: boolean = memop(PtrWellAligned, 'signed int', a_957) in
      pure(
        Specified(if a_959 then
          a_957
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('signed int*', p, a_955) ;
  let strong a_960: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_961: loaded pointer =
        let weak a_963: pointer = pure(yp) in
        load('void*', a_963) in
      let Specified(a_962: pointer) = a_961 in
      let weak a_964: boolean = memop(PtrWellAligned, 'signed int', a_962) in
      pure(
        Specified(if a_964 then
          a_962
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('signed int*', q, a_960) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_965: loaded pointer,
      (a_966: ctype, a_967: [ctype], a_968: boolean, a_969: boolean)),
      a_974: loaded pointer, a_978: loaded pointer, a_983: loaded pointer,
      a_988: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_885: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_885, cfunction(a_885)))
        ,
          let weak a_976: pointer = pure(a_975) in
          {- §6.3.2.1#3 -}
          let weak a_977: pointer = memop(PtrArrayShift, a_976, 'char', 0) in
          pure(Specified(a_977))
        ,
          {- §6.5.4 -}
          let weak a_981: pointer = pure(p) in
          load('signed int*', a_981)
        ,
          {- §6.5.4 -}
          let weak a_986: pointer = pure(q) in
          load('signed int*', a_986)
        ,
          let weak a_989: pointer = pure(offset) in
          load('ptrdiff_t', a_989)
        ) in
      if not(params_length(a_967) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_968) \/ not(are_compatible ('signed int', a_966)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_973: pointer =
            let a_990: ctype = params_nth(a_967, 0) in
            if not(are_compatible ('const char*', a_990)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_991: pointer = create(Ivalignof(a_990), a_990) in
              let weak _: unit = store(a_990, a_991, a_974) in
              pure(a_991) in
          let strong a_972: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_978) in
          let strong a_971: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_983) in
          let strong a_970: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'ptrdiff_t',
            conv_loaded_int('ptrdiff_t', a_988)) in
          let strong a_992: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_965, a_973,
            [('void*', a_972), ('void*', a_971), ('ptrdiff_t', a_970)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_973)
            ,
              kill('void*', a_972)
            ,
              kill('void*', a_971)
            ,
              kill('ptrdiff_t', a_970)
            ) in
          pure(a_992)
    ) in
  pure(Unit) ;
  let strong a_993: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_995: loaded integer, a_996: loaded integer) =
        unseq(
          let weak (a_1000: loaded integer, a_1001: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_1006: loaded pointer,
              (a_1007: ctype, a_1008: [ctype], a_1009: boolean,
              a_1010: boolean)), a_1014: loaded pointer,
              a_1016: loaded pointer, a_1018: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_1005: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_1005, cfunction(a_1005)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_1015: pointer = pure(p) in
                  pure(Specified(a_1015))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_1017: pointer = pure(q) in
                  pure(Specified(a_1017))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_1008) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_1009 \/ not(are_compatible ('signed int', a_1007)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_1013: pointer =
                    let a_1019: ctype = params_nth(a_1008, 0) in
                    if not(are_compatible ('const void*', a_1019)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_1020: pointer =
                        create(Ivalignof(a_1019), a_1019) in
                      let weak _: unit = store(a_1019, a_1020, a_1014) in
                      pure(a_1020) in
                  let strong a_1012: pointer =
                    let a_1021: ctype = params_nth(a_1008, 1) in
                    if not(are_compatible ('const void*', a_1021)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_1022: pointer =
                        create(Ivalignof(a_1021), a_1021) in
                      let weak _: unit = store(a_1021, a_1022, a_1016) in
                      pure(a_1022) in
                  let strong a_1011: pointer =
                    let a_1023: ctype = params_nth(a_1008, 2) in
                    if not(are_compatible ('size_t', a_1023)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_1024: pointer =
                        create(Ivalignof(a_1023), a_1023) in
                      let weak _: unit =
                        store(a_1023, a_1024, conv_loaded_int(a_1023, a_1018)) in
                      pure(a_1024) in
                  let strong a_1025: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_1006, a_1013, a_1012, a_1011) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_1013)
                    ,
                      kill('void*', a_1012)
                    ,
                      kill('size_t', a_1011)
                    ) in
                  pure(a_1025)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_1002: integer), Specified(a_1003: integer)) =
              (a_1000, a_1001) in
            if conv_int('signed int', a_1002) = conv_int('signed int', a_1003) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_997: integer), Specified(a_998: integer)) =
          (a_995, a_996) in
        if conv_int('signed int', a_997) = conv_int('signed int', a_998) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_884: boolean =
    let Specified(a_994: integer) = a_993 in
    pure(if not(a_994 = 1) then True else False) in
  if a_884 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_1027: pointer, a_1032: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_1028: loaded pointer =
              let weak a_1031: pointer = pure(p) in
              load('signed int*', a_1031) in
            let Specified(a_1029: pointer) = a_1028 in
            let weak a_1030: boolean =
              memop(PtrValidForDeref, 'signed int', a_1029) in
            pure(
              if a_1030 then
                a_1029
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_1027,
          conv_loaded_int('signed int', a_1032))) in
        pure(conv_loaded_int('signed int', a_1032))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_1033: loaded pointer,
        (a_1034: ctype, a_1035: [ctype], a_1036: boolean, a_1037: boolean)),
        a_1043: loaded pointer, a_1047: loaded integer, a_1056: loaded integer,
        a_1065: loaded integer, a_1074: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_1026: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_1026, cfunction(a_1026)))
          ,
            let weak a_1045: pointer = pure(a_1044) in
            {- §6.3.2.1#3 -}
            let weak a_1046: pointer =
              memop(PtrArrayShift, a_1045, 'char', 0) in
            pure(Specified(a_1046))
          ,
            let weak a_1055: pointer =
              {- §6.5.3.2 -}
              let weak a_1048: loaded pointer =
                {- §6.5.4 -}
                let weak a_1051: loaded pointer =
                  let weak a_1053: pointer = pure(xp) in
                  load('void*', a_1053) in
                let Specified(a_1052: pointer) = a_1051 in
                let weak a_1054: boolean =
                  memop(PtrWellAligned, 'signed int', a_1052) in
                pure(
                  Specified(if a_1054 then
                    a_1052
                  else
                    undef(<<UB025_misaligned_pointer_conversion>>))
                ) in
              let Specified(a_1049: pointer) = a_1048 in
              let weak a_1050: boolean =
                memop(PtrValidForDeref, 'signed int', a_1049) in
              pure(
                if a_1050 then
                  a_1049
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_1055)
          ,
            let weak a_1064: pointer =
              {- §6.5.3.2 -}
              let weak a_1057: loaded pointer =
                {- §6.5.4 -}
                let weak a_1060: loaded pointer =
                  let weak a_1062: pointer = pure(yp) in
                  load('void*', a_1062) in
                let Specified(a_1061: pointer) = a_1060 in
                let weak a_1063: boolean =
                  memop(PtrWellAligned, 'signed int', a_1061) in
                pure(
                  Specified(if a_1063 then
                    a_1061
                  else
                    undef(<<UB025_misaligned_pointer_conversion>>))
                ) in
              let Specified(a_1058: pointer) = a_1057 in
              let weak a_1059: boolean =
                memop(PtrValidForDeref, 'signed int', a_1058) in
              pure(
                if a_1059 then
                  a_1058
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_1064)
          ,
            let weak a_1073: pointer =
              {- §6.5.3.2 -}
              let weak a_1066: loaded pointer =
                {- §6.5.4 -}
                let weak a_1069: loaded pointer =
                  let weak a_1071: pointer = pure(p) in
                  load('signed int*', a_1071) in
                let Specified(a_1070: pointer) = a_1069 in
                let weak a_1072: boolean =
                  memop(PtrWellAligned, 'signed int', a_1070) in
                pure(
                  Specified(if a_1072 then
                    a_1070
                  else
                    undef(<<UB025_misaligned_pointer_conversion>>))
                ) in
              let Specified(a_1067: pointer) = a_1066 in
              let weak a_1068: boolean =
                memop(PtrValidForDeref, 'signed int', a_1067) in
              pure(
                if a_1068 then
                  a_1067
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_1073)
          ,
            let weak a_1082: pointer =
              {- §6.5.3.2 -}
              let weak a_1075: loaded pointer =
                {- §6.5.4 -}
                let weak a_1078: loaded pointer =
                  let weak a_1080: pointer = pure(q) in
                  load('signed int*', a_1080) in
                let Specified(a_1079: pointer) = a_1078 in
                let weak a_1081: boolean =
                  memop(PtrWellAligned, 'signed int', a_1079) in
                pure(
                  Specified(if a_1081 then
                    a_1079
                  else
                    undef(<<UB025_misaligned_pointer_conversion>>))
                ) in
              let Specified(a_1076: pointer) = a_1075 in
              let weak a_1077: boolean =
                memop(PtrValidForDeref, 'signed int', a_1076) in
              pure(
                if a_1077 then
                  a_1076
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_1082)
          ) in
        if not(params_length(a_1035) <= 5) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_1036) \/ not(are_compatible ('signed int', a_1034)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_1042: pointer =
              let a_1083: ctype = params_nth(a_1035, 0) in
              if not(are_compatible ('const char*', a_1083)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_1084: pointer =
                  create(Ivalignof(a_1083), a_1083) in
                let weak _: unit = store(a_1083, a_1084, a_1043) in
                pure(a_1084) in
            let strong a_1041: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1047)) in
            let strong a_1040: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1056)) in
            let strong a_1039: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1065)) in
            let strong a_1038: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1074)) in
            let strong a_1085: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_1033,
              a_1042,
              [('signed int', a_1041), ('signed int', a_1040),
              ('signed int', a_1039), ('signed int', a_1038)]) in
            let strong _: (unit,unit,unit,unit,unit) =
              unseq(
                kill('char*', a_1042)
              ,
                kill('signed int', a_1041)
              ,
                kill('signed int', a_1040)
              ,
                kill('signed int', a_1039)
              ,
                kill('signed int', a_1038)
              ) in
            pure(a_1085)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  let strong a_1086: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  kill('void*', xp) ;
  kill('void*', yp) ;
  kill('ptrdiff_t', offset) ;
  kill('unsigned ichar*', p1) ;
  kill('unsigned ichar*', p2) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  run ret_883(conv_loaded_int('signed int', a_1086)) ;
  kill('void*', xp) ;
  kill('void*', yp) ;
  kill('ptrdiff_t', offset) ;
  kill('unsigned ichar*', p1) ;
  kill('unsigned ichar*', p2) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_883: loaded integer (a_1087: loaded integer:= Specified(0)) in
    pure(a_1087)

