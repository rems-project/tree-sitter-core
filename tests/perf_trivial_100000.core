-- Globals
glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_545: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_546: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  store('signed int', a_545, conv_loaded_int('signed int', a_546)) ;
  pure(a_545)

-- Fun map
proc main (): eff loaded integer :=
  let strong i: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_516: pointer, a_517: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(pure(x), pure(Specified(0))) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_516, conv_loaded_int('signed int', a_517))) in
      pure(conv_loaded_int('signed int', a_517))
    ) in
  pure(Unit) ;
  {- §6.2.4#6 -}
  store('signed int', i, Unspecified('signed int')) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_515: pointer, a_518: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(pure(i), pure(Specified(0))) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_515, conv_loaded_int('signed int', a_518))) in
      pure(conv_loaded_int('signed int', a_518))
    ) in
  pure(Unit) ;
  save while_512: unit (i: pointer:= i) in
    let strong a_519: loaded integer =
      {- §6.5#2 -}
      bound(
        let weak (a_521: loaded integer, a_522: loaded integer) =
          unseq(
            {- §6.5.8 -}
            let weak (a_527: loaded integer, a_528: loaded integer) =
              unseq(
                let weak a_526: pointer = pure(i) in
                load('signed int', a_526)
              ,
                pure(Specified(100000))
              ) in
            let (Specified(a_529: integer), Specified(a_530: integer)) =
              (a_527, a_528) in
            {- §6.5.8#6 -}
            pure(
              if conv_int('signed int', a_529) < conv_int('signed int', a_530) then
                Specified(1)
              else
                Specified(0)
            )
          ,
            pure(Specified(0))
          ) in
        pure(
          let (Specified(a_523: integer), Specified(a_524: integer)) =
            (a_521, a_522) in
          if conv_int('signed int', a_523) = conv_int('signed int', a_524) then
            Specified(1)
          else
            Specified(0)
        )
      ) in
    let strong a_514: boolean =
      let Specified(a_520: integer) = a_519 in
      pure(if not(a_520 = 1) then True else False) in
    if a_514 then
      save while_body_513: unit (i: pointer:= i) in
        let strong _: loaded integer =
          {- §6.5#2 -}
          bound(
            {- §6.5.16#3, sentence 4 -}
            let weak (a_532: pointer, a_540: loaded integer) =
              {- §6.5.16#3, sentence 5 -}
              unseq(
                pure(x)
              ,
                {- §6.5.6 -}
                let weak (a_533: loaded integer, a_534: loaded integer) =
                  unseq(
                    let weak a_538: pointer = pure(x) in
                    load('signed int', a_538)
                  ,
                    let weak a_539: pointer = pure(i) in
                    load('signed int', a_539)
                  ) in
                pure(
                  let (Specified(a_535: integer), Specified(a_536: integer)) =
                    (a_533, a_534) in
                  Specified(catch_exceptional_condition('signed int',
                  conv_int('signed int', a_535) +
                  conv_int('signed int', a_536)))
                )
              ) in
            let weak _: unit =
              {- §6.5.16.1#2, store -}
              neg(store('signed int', a_532,
              conv_loaded_int('signed int', a_540))) in
            pure(conv_loaded_int('signed int', a_540))
          ) in
        pure(Unit) ;
        save __cerb_continue0: unit (i: pointer:= i) in
          let strong _: loaded integer =
            {- §6.5#2 -}
            bound(
              {- §6.5.2.4#2, sentence 3 -}
              {- §6.5.2.4#2, sentence 1 -}
              {- §6.5.2.4 -}
              let weak a_541: pointer = pure(i) in
              seq_rmw('signed int', a_541, a_542 => let Specified(a_543: integer) =
                a_542 in
              Specified(conv_int('signed int',
              catch_exceptional_condition('signed int', a_543 + 1))))
            ) in
          pure(Unit) ;
        pure(Unit) ;
        save continue_510: unit (i: pointer:= i) in  pure(Unit) ;
        pure(Unit) ;
        run while_512(i)
    else
      pure(Unit) ;
  save break_511: unit (i: pointer:= i) in  pure(Unit) ;
  pure(Unit) ;
  kill('signed int', i) ;
  pure(Unit) ;
  save ret_509: loaded integer (a_544: loaded integer:= Specified(0)) in
    pure(a_544)

