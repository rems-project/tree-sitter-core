-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_646 :=
  i1: 'signed int'

def struct __cerbty_unnamed_tag_648 :=
  i2: 'signed int'

-- Globals
glob a_698: pointer [ail_ctype = 'char[33]'] :=
  create_readonly(Ivalignof('char[33]'), 'char[33]', Specified(Array(Specified(conv_int('char',
  115)), Specified(conv_int('char', 46)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 49)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 62)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 49)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 62)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 50)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_748: pointer [ail_ctype = 'char[17]'] :=
  create_readonly(Ivalignof('char[17]'), 'char[17]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 62)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 49)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc f (s1p: pointer, s2p: pointer): eff unit :=
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_727: pointer, a_733: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.2.3#4, sentence 2 -}
          let strong a_728: loaded pointer =
            let weak a_732: pointer = pure(s1p) in
            load('struct __cerbty_unnamed_tag_646*', a_732) in
          let Specified(a_729: pointer) = a_728 in
          let weak a_730: boolean =
            memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_646', a_729) in
          pure(
            if a_730 then
              member_shift(a_729, __cerbty_unnamed_tag_646, .i1)
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(2))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_727, conv_loaded_int('signed int', a_733))) in
      pure(conv_loaded_int('signed int', a_733))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_726: pointer, a_739: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.2.3#4, sentence 2 -}
          let strong a_734: loaded pointer =
            let weak a_738: pointer = pure(s2p) in
            load('struct __cerbty_unnamed_tag_648*', a_738) in
          let Specified(a_735: pointer) = a_734 in
          let weak a_736: boolean =
            memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_648', a_735) in
          pure(
            if a_736 then
              member_shift(a_735, __cerbty_unnamed_tag_648, .i2)
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(3))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_726, conv_loaded_int('signed int', a_739))) in
      pure(conv_loaded_int('signed int', a_739))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_740: loaded pointer,
      (a_741: ctype, a_742: [ctype], a_743: boolean, a_744: boolean)),
      a_747: loaded pointer, a_751: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_725: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_725, cfunction(a_725)))
        ,
          let weak a_749: pointer = pure(a_748) in
          {- §6.3.2.1#3 -}
          let weak a_750: pointer = memop(PtrArrayShift, a_749, 'char', 0) in
          pure(Specified(a_750))
        ,
          let weak a_757: pointer =
            {- §6.5.2.3#4, sentence 2 -}
            let strong a_752: loaded pointer =
              let weak a_756: pointer = pure(s1p) in
              load('struct __cerbty_unnamed_tag_646*', a_756) in
            let Specified(a_753: pointer) = a_752 in
            let weak a_754: boolean =
              memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_646', a_753) in
            pure(
              if a_754 then
                member_shift(a_753, __cerbty_unnamed_tag_646, .i1)
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_757)
        ) in
      if not(params_length(a_742) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_743) \/ not(are_compatible ('signed int', a_741)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_746: pointer =
            let a_758: ctype = params_nth(a_742, 0) in
            if not(are_compatible ('const char*', a_758)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_759: pointer = create(Ivalignof(a_758), a_758) in
              let weak _: unit = store(a_758, a_759, a_747) in
              pure(a_759) in
          let strong a_745: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_751)) in
          let strong a_760: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_740, a_746,
            [('signed int', a_745)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_746), kill('signed int', a_745)) in
          pure(a_760)
    ) in
  pure(Unit) ;
  pure(Unit) ;
  save ret_724: unit (a_761: unit:= Unit) in  pure(a_761)

proc main (): eff loaded integer :=
  let strong s: pointer =
    create(Ivalignof('struct __cerbty_unnamed_tag_646'), 'struct __cerbty_unnamed_tag_646') in
  let strong s1p: pointer =
    create(Ivalignof('struct __cerbty_unnamed_tag_646*'), 'struct __cerbty_unnamed_tag_646*') in
  let strong s2p: pointer =
    create(Ivalignof('struct __cerbty_unnamed_tag_648*'), 'struct __cerbty_unnamed_tag_648*') in
  let strong a_663: loaded struct a_646 =
    {- §6.5#2 -}
    bound(
      let weak a_664: loaded integer = pure(Specified(1)) in
      pure(
        Specified((struct __cerbty_unnamed_tag_646){.i1= conv_loaded_int('signed int',
        a_664)})
      )
    ) in
  store('struct __cerbty_unnamed_tag_646', s, a_663) ;
  let strong a_665: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_666: pointer = pure(s) in
      pure(Specified(a_666))
    ) in
  store('struct __cerbty_unnamed_tag_646*', s1p, a_665) ;
  {- §6.2.4#6 -}
  store('struct __cerbty_unnamed_tag_648*', s2p,
  Unspecified('struct __cerbty_unnamed_tag_648*')) ;
  let strong _: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_662: pointer, a_671: loaded pointer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          pure(s2p)
        ,
          {- §6.5.4 -}
          let weak a_667: loaded pointer =
            let weak a_669: pointer = pure(s1p) in
            load('struct __cerbty_unnamed_tag_646*', a_669) in
          let Specified(a_668: pointer) = a_667 in
          let weak a_670: boolean =
            memop(PtrWellAligned, 'struct __cerbty_unnamed_tag_648', a_668) in
          pure(
            Specified(if a_670 then
              a_668
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          )
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('struct __cerbty_unnamed_tag_648*', a_662, a_671)) in
      pure(a_671)
    ) in
  pure(Unit) ;
  {- §6.5#2 -}
  bound(
    {- §6.5.2.2#10, sentence 1 -}
    let strong ((a_672: loaded pointer,
    (a_673: ctype, a_674: [ctype], a_675: boolean, a_676: boolean)),
    a_679: loaded pointer, a_681: loaded pointer) =
      {- §6.5.2.2#4, sentence 2 -}
      unseq(
        let strong a_661: loaded pointer = pure(Specified(Cfunction(f))) in
        pure((a_661, cfunction(a_661)))
      ,
        let weak a_680: pointer = pure(s1p) in
        load('struct __cerbty_unnamed_tag_646*', a_680)
      ,
        let weak a_682: pointer = pure(s2p) in
        load('struct __cerbty_unnamed_tag_648*', a_682)
      ) in
    if not(params_length(a_674) = 2) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_675 \/ not(are_compatible ('void', a_673)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_678: pointer =
          let a_683: ctype = params_nth(a_674, 0) in
          if not(are_compatible ('struct __cerbty_unnamed_tag_646*', a_683)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_684: pointer = create(Ivalignof(a_683), a_683) in
            let weak _: unit = store(a_683, a_684, a_679) in
            pure(a_684) in
        let strong a_677: pointer =
          let a_685: ctype = params_nth(a_674, 1) in
          if not(are_compatible ('struct __cerbty_unnamed_tag_648*', a_685)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_686: pointer = create(Ivalignof(a_685), a_685) in
            let weak _: unit = store(a_685, a_686, a_681) in
            pure(a_686) in
        let strong a_687: unit =
          ccall('void (*) (struct __cerbty_unnamed_tag_646*, struct __cerbty_unnamed_tag_648*)',
          a_672, a_678, a_677) in
        let strong _: (unit,unit) =
          unseq(
            kill('struct __cerbty_unnamed_tag_646*', a_678)
          ,
            kill('struct __cerbty_unnamed_tag_648*', a_677)
          ) in
        pure(a_687)
  ) ;
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_688: loaded pointer,
      (a_689: ctype, a_690: [ctype], a_691: boolean, a_692: boolean)),
      a_697: loaded pointer, a_701: loaded integer, a_704: loaded integer,
      a_711: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_660: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_660, cfunction(a_660)))
        ,
          let weak a_699: pointer = pure(a_698) in
          {- §6.3.2.1#3 -}
          let weak a_700: pointer = memop(PtrArrayShift, a_699, 'char', 0) in
          pure(Specified(a_700))
        ,
          let weak a_703: pointer =
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_702: pointer = pure(s) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_646, i1], a_702) in
          load('signed int', a_703)
        ,
          let weak a_710: pointer =
            {- §6.5.2.3#4, sentence 2 -}
            let strong a_705: loaded pointer =
              let weak a_709: pointer = pure(s1p) in
              load('struct __cerbty_unnamed_tag_646*', a_709) in
            let Specified(a_706: pointer) = a_705 in
            let weak a_707: boolean =
              memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_646', a_706) in
            pure(
              if a_707 then
                member_shift(a_706, __cerbty_unnamed_tag_646, .i1)
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_710)
        ,
          let weak a_717: pointer =
            {- §6.5.2.3#4, sentence 2 -}
            let strong a_712: loaded pointer =
              let weak a_716: pointer = pure(s2p) in
              load('struct __cerbty_unnamed_tag_648*', a_716) in
            let Specified(a_713: pointer) = a_712 in
            let weak a_714: boolean =
              memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_648', a_713) in
            pure(
              if a_714 then
                member_shift(a_713, __cerbty_unnamed_tag_648, .i2)
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_717)
        ) in
      if not(params_length(a_690) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_691) \/ not(are_compatible ('signed int', a_689)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_696: pointer =
            let a_718: ctype = params_nth(a_690, 0) in
            if not(are_compatible ('const char*', a_718)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_719: pointer = create(Ivalignof(a_718), a_718) in
              let weak _: unit = store(a_718, a_719, a_697) in
              pure(a_719) in
          let strong a_695: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_701)) in
          let strong a_694: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_704)) in
          let strong a_693: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_711)) in
          let strong a_720: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_688, a_696,
            [('signed int', a_695), ('signed int', a_694),
            ('signed int', a_693)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_696)
            ,
              kill('signed int', a_695)
            ,
              kill('signed int', a_694)
            ,
              kill('signed int', a_693)
            ) in
          pure(a_720)
    ) in
  pure(Unit) ;
  kill('struct __cerbty_unnamed_tag_646', s) ;
  kill('struct __cerbty_unnamed_tag_646*', s1p) ;
  kill('struct __cerbty_unnamed_tag_648*', s2p) ;
  pure(Unit) ;
  save ret_659: loaded integer (a_721: loaded integer:= Specified(0)) in
    pure(a_721)

