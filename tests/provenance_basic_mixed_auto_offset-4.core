-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_754 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_758 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_921: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_922: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', a_921, conv_loaded_int('signed int', a_922)) ;
  pure(a_921)

glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_919: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_920: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_919, conv_loaded_int('signed int', a_920)) ;
  pure(a_919)

glob a_810: pointer [ail_ctype = 'char[26]'] :=
  create_readonly(Ivalignof('char[26]'), 'char[26]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 38)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_896: pointer [ail_ctype = 'char[26]'] :=
  create_readonly(Ivalignof('char[26]'), 'char[26]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong ux: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong uy: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong offset: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_788: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_789: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_791: pointer = pure(x) in
        pure(Specified(a_791)) in
      let Specified(a_790: pointer) = a_789 in
      let weak a_792: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_790) in
      pure(Specified(a_792))
    ) in
  store('intptr_t', ux, conv_loaded_int('intptr_t', a_788)) ;
  let strong a_793: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_794: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_796: pointer = pure(y) in
        pure(Specified(a_796)) in
      let Specified(a_795: pointer) = a_794 in
      let weak a_797: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_795) in
      pure(Specified(a_797))
    ) in
  store('intptr_t', uy, conv_loaded_int('intptr_t', a_793)) ;
  let strong a_798: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.3#3 -}
      let weak a_800: loaded integer = pure(Specified(4)) in
      pure(
        let Specified(a_799: integer) = a_800 in
        Specified(catch_exceptional_condition('signed int',
        0 - conv_int('signed int', a_799)))
      )
    ) in
  store('intptr_t', offset, conv_loaded_int('intptr_t', a_798)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_801: loaded pointer,
      (a_802: ctype, a_803: [ctype], a_804: boolean, a_805: boolean)),
      a_809: loaded pointer, a_813: loaded integer, a_815: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_787: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_787, cfunction(a_787)))
        ,
          let weak a_811: pointer = pure(a_810) in
          {- §6.3.2.1#3 -}
          let weak a_812: pointer = memop(PtrArrayShift, a_811, 'char', 0) in
          pure(Specified(a_812))
        ,
          let weak a_814: pointer = pure(ux) in
          load('intptr_t', a_814)
        ,
          let weak a_816: pointer = pure(uy) in
          load('intptr_t', a_816)
        ) in
      if not(params_length(a_803) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_804) \/ not(are_compatible ('signed int', a_802)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_808: pointer =
            let a_817: ctype = params_nth(a_803, 0) in
            if not(are_compatible ('const char*', a_817)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_818: pointer = create(Ivalignof(a_817), a_817) in
              let weak _: unit = store(a_817, a_818, a_809) in
              pure(a_818) in
          let strong a_807: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_813)) in
          let strong a_806: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_815)) in
          let strong a_819: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_801, a_808,
            [('intptr_t', a_807), ('intptr_t', a_806)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_808)
            ,
              kill('intptr_t', a_807)
            ,
              kill('intptr_t', a_806)
            ) in
          pure(a_819)
    ) in
  pure(Unit) ;
  let strong a_820: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_821: pointer = pure(y) in
      pure(Specified(a_821))
    ) in
  store('signed int*', q, a_820) ;
  let strong a_822: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_824: loaded integer, a_825: loaded integer) =
        unseq(
          let weak a_830: loaded pointer =
            let weak a_829: pointer = pure(q) in
            load('signed int*', a_829) in
          let Specified(a_831: pointer) = a_830 in
          let weak a_832: boolean = memop(PtrNe, a_831, NULL(signed int*)) in
          {- §6.5.9#3 -}
          pure(if a_832 then Specified(1) else Specified(0))
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_826: integer), Specified(a_827: integer)) =
          (a_824, a_825) in
        if conv_int('signed int', a_826) = conv_int('signed int', a_827) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_786: boolean =
    let Specified(a_823: integer) = a_822 in
    pure(if not(a_823 = 1) then True else False) in
  if a_786 then
    let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
    let strong a_834: loaded pointer =
      {- §6.5#2 -}
      bound(
        {- §6.5.4 -}
        let weak a_835: loaded integer =
          {- §6.5.6 -}
          let weak (a_837: loaded integer, a_838: loaded integer) =
            unseq(
              let weak a_842: pointer = pure(ux) in
              load('intptr_t', a_842)
            ,
              let weak a_843: pointer = pure(offset) in
              load('intptr_t', a_843)
            ) in
          pure(
            let (Specified(a_839: integer), Specified(a_840: integer)) =
              (a_837, a_838) in
            Specified(catch_exceptional_condition('intptr_t',
            conv_int('intptr_t', a_839) + conv_int('intptr_t', a_840)))
          ) in
        let Specified(a_836: integer) = a_835 in
        let weak a_844: pointer =
          memop(PtrFromInt, 'intptr_t', 'signed int', a_836) in
        pure(Specified(a_844))
      ) in
    store('signed int*', p, a_834) ;
    let strong a_845: loaded integer =
      {- §6.5#2 -}
      bound(
        let weak (a_847: loaded integer, a_848: loaded integer) =
          unseq(
            let weak (a_852: loaded integer, a_853: loaded integer) =
              unseq(
                {- §6.5.2.2#10, sentence 1 -}
                let strong ((a_858: loaded pointer,
                (a_859: ctype, a_860: [ctype], a_861: boolean, a_862: boolean)),
                a_866: loaded pointer, a_868: loaded pointer,
                a_870: loaded integer) =
                  {- §6.5.2.2#4, sentence 2 -}
                  unseq(
                    let strong a_857: loaded pointer =
                      pure(Specified(Cfunction(memcmp_proxy))) in
                    pure((a_857, cfunction(a_857)))
                  ,
                    {- §6.5.3.2#3, sentence 5 -}
                    let weak a_867: pointer = pure(p) in
                    pure(Specified(a_867))
                  ,
                    {- §6.5.3.2#3, sentence 5 -}
                    let weak a_869: pointer = pure(q) in
                    pure(Specified(a_869))
                  ,
                    pure(Specified(Ivsizeof('signed int*')))
                  ) in
                if not(params_length(a_860) = 3) then
                  pure(undef(<<UB038_number_of_args>>))
                else
                  if a_861 \/ not(are_compatible ('signed int', a_859)) then
                    pure(undef(<<UB041_function_not_compatible>>))
                  else
                    let strong a_865: pointer =
                      let a_871: ctype = params_nth(a_860, 0) in
                      if not(are_compatible ('const void*', a_871)) then
                        pure(undef(<<UB041_function_not_compatible>>))
                      else
                        {- §6.5.2.2#7, sentence 1 -}
                        let weak a_872: pointer =
                          create(Ivalignof(a_871), a_871) in
                        let weak _: unit = store(a_871, a_872, a_866) in
                        pure(a_872) in
                    let strong a_864: pointer =
                      let a_873: ctype = params_nth(a_860, 1) in
                      if not(are_compatible ('const void*', a_873)) then
                        pure(undef(<<UB041_function_not_compatible>>))
                      else
                        {- §6.5.2.2#7, sentence 1 -}
                        let weak a_874: pointer =
                          create(Ivalignof(a_873), a_873) in
                        let weak _: unit = store(a_873, a_874, a_868) in
                        pure(a_874) in
                    let strong a_863: pointer =
                      let a_875: ctype = params_nth(a_860, 2) in
                      if not(are_compatible ('size_t', a_875)) then
                        pure(undef(<<UB041_function_not_compatible>>))
                      else
                        {- §6.5.2.2#7, sentence 1 -}
                        let weak a_876: pointer =
                          create(Ivalignof(a_875), a_875) in
                        let weak _: unit =
                          store(a_875, a_876, conv_loaded_int(a_875, a_870)) in
                        pure(a_876) in
                    let strong a_877: loaded integer =
                      ccall('signed int (*) (const void*, const void*, size_t)',
                      a_858, a_865, a_864, a_863) in
                    let strong _: (unit,unit,unit) =
                      unseq(
                        kill('void*', a_865)
                      ,
                        kill('void*', a_864)
                      ,
                        kill('size_t', a_863)
                      ) in
                    pure(a_877)
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_854: integer), Specified(a_855: integer)) =
                (a_852, a_853) in
              if conv_int('signed int', a_854) = conv_int('signed int', a_855) then
                Specified(1)
              else
                Specified(0)
            )
          ,
            pure(Specified(0))
          ) in
        pure(
          let (Specified(a_849: integer), Specified(a_850: integer)) =
            (a_847, a_848) in
          if conv_int('signed int', a_849) = conv_int('signed int', a_850) then
            Specified(1)
          else
            Specified(0)
        )
      ) in
    let strong a_833: boolean =
      let Specified(a_846: integer) = a_845 in
      pure(if not(a_846 = 1) then True else False) in
    if a_833 then
      let strong _: loaded integer =
        {- §6.5#2 -}
        bound(
          {- §6.5.16#3, sentence 4 -}
          let weak (a_879: pointer, a_884: loaded integer) =
            {- §6.5.16#3, sentence 5 -}
            unseq(
              {- §6.5.3.2 -}
              let weak a_880: loaded pointer =
                let weak a_883: pointer = pure(p) in
                load('signed int*', a_883) in
              let Specified(a_881: pointer) = a_880 in
              let weak a_882: boolean =
                memop(PtrValidForDeref, 'signed int', a_881) in
              pure(
                if a_882 then
                  a_881
                else
                  undef(<<UB043_indirection_invalid_value>>)
              )
            ,
              pure(Specified(11))
            ) in
          let weak _: unit =
            {- §6.5.16.1#2, store -}
            neg(store('signed int', a_879,
            conv_loaded_int('signed int', a_884))) in
          pure(conv_loaded_int('signed int', a_884))
        ) in
      pure(Unit) ;
      let strong _: loaded integer =
        {- §6.5#2 -}
        bound(
          {- §6.5.2.2#10, sentence 1 -}
          let strong ((a_885: loaded pointer,
          (a_886: ctype, a_887: [ctype], a_888: boolean, a_889: boolean)),
          a_895: loaded pointer, a_899: loaded integer, a_901: loaded integer,
          a_903: loaded integer, a_909: loaded integer) =
            {- §6.5.2.2#4, sentence 2 -}
            unseq(
              let strong a_878: loaded pointer =
                pure(Specified(Cfunction(printf_proxy))) in
              pure((a_878, cfunction(a_878)))
            ,
              let weak a_897: pointer = pure(a_896) in
              {- §6.3.2.1#3 -}
              let weak a_898: pointer =
                memop(PtrArrayShift, a_897, 'char', 0) in
              pure(Specified(a_898))
            ,
              let weak a_900: pointer = pure(x) in
              load('signed int', a_900)
            ,
              let weak a_902: pointer = pure(y) in
              load('signed int', a_902)
            ,
              let weak a_908: pointer =
                {- §6.5.3.2 -}
                let weak a_904: loaded pointer =
                  let weak a_907: pointer = pure(p) in
                  load('signed int*', a_907) in
                let Specified(a_905: pointer) = a_904 in
                let weak a_906: boolean =
                  memop(PtrValidForDeref, 'signed int', a_905) in
                pure(
                  if a_906 then
                    a_905
                  else
                    undef(<<UB043_indirection_invalid_value>>)
                ) in
              load('signed int', a_908)
            ,
              let weak a_914: pointer =
                {- §6.5.3.2 -}
                let weak a_910: loaded pointer =
                  let weak a_913: pointer = pure(q) in
                  load('signed int*', a_913) in
                let Specified(a_911: pointer) = a_910 in
                let weak a_912: boolean =
                  memop(PtrValidForDeref, 'signed int', a_911) in
                pure(
                  if a_912 then
                    a_911
                  else
                    undef(<<UB043_indirection_invalid_value>>)
                ) in
              load('signed int', a_914)
            ) in
          if not(params_length(a_887) <= 5) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if not(a_888) \/ not(are_compatible ('signed int', a_886)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_894: pointer =
                let a_915: ctype = params_nth(a_887, 0) in
                if not(are_compatible ('const char*', a_915)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  {- §6.5.2.2#7, sentence 1 -}
                  let weak a_916: pointer = create(Ivalignof(a_915), a_915) in
                  let weak _: unit = store(a_915, a_916, a_895) in
                  pure(a_916) in
              let strong a_893: pointer =
                {- §6.5.2.2#7, sentences 2 and 3 -}
                pcall(create_and_store, 'signed int',
                conv_loaded_int('signed int', a_899)) in
              let strong a_892: pointer =
                {- §6.5.2.2#7, sentences 2 and 3 -}
                pcall(create_and_store, 'signed int',
                conv_loaded_int('signed int', a_901)) in
              let strong a_891: pointer =
                {- §6.5.2.2#7, sentences 2 and 3 -}
                pcall(create_and_store, 'signed int',
                conv_loaded_int('signed int', a_903)) in
              let strong a_890: pointer =
                {- §6.5.2.2#7, sentences 2 and 3 -}
                pcall(create_and_store, 'signed int',
                conv_loaded_int('signed int', a_909)) in
              let strong a_917: loaded integer =
                ccall('signed int (*) (const char*restrict , ...)', a_885,
                a_894,
                [('signed int', a_893), ('signed int', a_892),
                ('signed int', a_891), ('signed int', a_890)]) in
              let strong _: (unit,unit,unit,unit,unit) =
                unseq(
                  kill('char*', a_894)
                ,
                  kill('signed int', a_893)
                ,
                  kill('signed int', a_892)
                ,
                  kill('signed int', a_891)
                ,
                  kill('signed int', a_890)
                ) in
              pure(a_917)
        ) in
      pure(Unit) ;
      pure(Unit)
    else
      pure(Unit) ;
    kill('signed int*', p) ;
    pure(Unit)
  else
    pure(Unit) ;
  kill('intptr_t', ux) ;
  kill('intptr_t', uy) ;
  kill('intptr_t', offset) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_785: loaded integer (a_918: loaded integer:= Specified(0)) in
    pure(a_918)

