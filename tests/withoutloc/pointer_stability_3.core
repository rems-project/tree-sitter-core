-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_726 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_758 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob a_825: pointer [ail_ctype = 'char[11]'] :=
  create_readonly(Ivalignof('char[11]'), 'char[11]', Specified(Array(Specified(conv_int('char',
  40)), Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_837: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_840: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong b: pointer = create(Ivalignof('_Bool'), '_Bool') in
  let strong a_785: loaded integer = bound(pure(Specified(1))) in
  store('signed int', x, conv_loaded_int('signed int', a_785)) ;
  let strong a_786: loaded pointer =
    bound(
      let weak a_787: pointer = pure(x) in
      pure(Specified(a_787))
    ) in
  store('signed int*', p, a_786) ;
  let strong a_788: loaded pointer =
    bound(
      let weak a_789: pointer = pure(x) in
      pure(Specified(a_789))
    ) in
  store('signed int*', q, a_788) ;
  let strong a_790: loaded integer =
    bound(
      let weak (a_791: loaded integer, a_792: loaded integer) =
        unseq(
          pure(Specified(0))
        ,
          let strong ((a_797: loaded pointer,
          (a_798: ctype, a_799: [ctype], a_800: boolean, a_801: boolean)),
          a_805: loaded pointer, a_807: loaded pointer, a_809: loaded integer) =
            unseq(
              let strong a_796: loaded pointer =
                pure(Specified(Cfunction(memcmp_proxy))) in
              pure((a_796, cfunction(a_796)))
            ,
              let weak a_806: pointer = pure(p) in
              pure(Specified(a_806))
            ,
              let weak a_808: pointer = pure(q) in
              pure(Specified(a_808))
            ,
              pure(Specified(Ivsizeof('signed int*')))
            ) in
          if not(params_length(a_799) = 3) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_800 \/ not(are_compatible ('signed int', a_798)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_804: pointer =
                let a_810: ctype = params_nth(a_799, 0) in
                if not(are_compatible ('const void*', a_810)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let weak a_811: pointer =
                    create(Ivalignof('const void*'), 'const void*') in
                  let weak _: unit = store('const void*', a_811, a_805) in
                  pure(a_811) in
              let strong a_803: pointer =
                let a_812: ctype = params_nth(a_799, 1) in
                if not(are_compatible ('const void*', a_812)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let weak a_813: pointer =
                    create(Ivalignof('const void*'), 'const void*') in
                  let weak _: unit = store('const void*', a_813, a_807) in
                  pure(a_813) in
              let strong a_802: pointer =
                let a_814: ctype = params_nth(a_799, 2) in
                if not(are_compatible ('size_t', a_814)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let weak a_815: pointer =
                    create(Ivalignof('size_t'), 'size_t') in
                  let weak _: unit =
                    store('size_t', a_815, conv_loaded_int('size_t', a_809)) in
                  pure(a_815) in
              let strong a_816: loaded integer =
                ccall('signed int (*) (const void*, const void*, size_t)',
                a_797, a_804, a_803, a_802) in
              let strong _: (unit,unit,unit) =
                unseq(
                  kill('void*', a_804)
                ,
                  kill('void*', a_803)
                ,
                  kill('size_t', a_802)
                ) in
              pure(a_816)
        ) in
      pure(
        let (Specified(a_793: integer), Specified(a_794: integer)) =
          (a_791, a_792) in
        if conv_int('signed int', a_793) = conv_int('signed int', a_794) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  store('_Bool', b, conv_loaded_int('_Bool', a_790)) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_817: loaded pointer,
      (a_818: ctype, a_819: [ctype], a_820: boolean, a_821: boolean)),
      a_824: loaded pointer, a_828: loaded pointer) =
        unseq(
          let strong a_784: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_784, cfunction(a_784)))
        ,
          let weak a_826: pointer = pure(a_825) in
          let weak a_827: pointer = memop(PtrArrayShift, a_826, 'char', 0) in
          pure(Specified(a_827))
        ,
          let strong a_835: loaded integer =
            let weak (a_829: loaded integer, a_830: loaded integer) =
              unseq(
                let weak a_834: pointer = pure(b) in
                load('_Bool', a_834)
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_831: integer), Specified(a_832: integer)) =
                (a_829, a_830) in
              if conv_int('signed int', a_831) = conv_int('signed int', a_832) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_836: integer) = a_835 in
          if a_836 = 0 then
            let weak a_838: pointer = pure(a_837) in
            let weak a_839: pointer =
              memop(PtrArrayShift, a_838, 'char', 0) in
            pure(Specified(a_839))
          else
            let weak a_841: pointer = pure(a_840) in
            let weak a_842: pointer =
              memop(PtrArrayShift, a_841, 'char', 0) in
            pure(Specified(a_842))
        ) in
      if not(params_length(a_819) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_820) \/ not(are_compatible ('signed int', a_818)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_823: pointer =
            let a_843: ctype = params_nth(a_819, 0) in
            if not(are_compatible ('const char*', a_843)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_844: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_844, a_824) in
              pure(a_844) in
          let strong a_822: pointer =
            pcall(create_and_store, 'char*', a_828) in
          let strong a_845: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_817, a_823,
            [('char*', a_822)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_823), kill('char*', a_822)) in
          pure(a_845)
    ) in
  pure(Unit) ;
  let strong a_846: loaded integer = bound(pure(Specified(0))) in
  kill('signed int', x) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  kill('_Bool', b) ;
  run ret_783(conv_loaded_int('signed int', a_846)) ;
  kill('signed int', x) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  kill('_Bool', b) ;
  pure(Unit) ;
  save ret_783: loaded integer (a_847: loaded integer:= Specified(0)) in
    pure(a_847)

