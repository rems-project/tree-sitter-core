-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_648 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_680 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob a_749: pointer [ail_ctype = 'char[9]'] :=
  create_readonly(Ivalignof('char[9]'), 'char[9]', Specified(Array(Specified(conv_int('char',
  97)), Specified(conv_int('char', 91)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 93)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong a: pointer =
    create(Ivalignof('signed int[2]'), 'signed int[2]') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong i: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong j: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  store('signed int[2]', a, Unspecified('signed int[2]')) ;
  let strong a_711: loaded pointer =
    bound(
      let weak (a_712: loaded pointer, a_714: loaded integer) =
        unseq(
          let weak a_717: pointer = pure(a) in
          let weak a_718: pointer =
            memop(PtrArrayShift, a_717, 'signed int', 0) in
          pure(Specified(a_718))
        ,
          pure(Specified(0))
        ) in
      let (Specified(a_713: pointer), Specified(a_715: integer)) =
        (a_712, a_714) in
      let weak a_716: pointer =
        memop(PtrArrayShift, a_713, 'signed int', a_715) in
      pure(Specified(a_716))
    ) in
  store('signed int*', p, a_711) ;
  let strong a_719: loaded integer =
    bound(
      let weak a_720: loaded pointer =
        let weak a_722: pointer = pure(p) in
        load('signed int*', a_722) in
      let Specified(a_721: pointer) = a_720 in
      let weak a_723: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_721) in
      pure(Specified(a_723))
    ) in
  store('uintptr_t', i, conv_loaded_int('uintptr_t', a_719)) ;
  let strong a_724: loaded integer =
    bound(
      let weak (a_725: loaded integer, a_726: loaded integer) =
        unseq(
          let weak a_730: pointer = pure(i) in
          load('uintptr_t', a_730)
        ,
          pure(Specified(Ivsizeof('signed int')))
        ) in
      pure(
        let (Specified(a_727: integer), Specified(a_728: integer)) =
          (a_725, a_726) in
        Specified(wrapI_add('size_t', __conv_int__('uintptr_t', a_727), __conv_int__('uintptr_t', a_728)))
      )
    ) in
  store('uintptr_t', j, conv_loaded_int('uintptr_t', a_724)) ;
  let strong a_731: loaded pointer =
    bound(
      let weak a_732: loaded integer =
        let weak a_734: pointer = pure(j) in
        load('uintptr_t', a_734) in
      let Specified(a_733: integer) = a_732 in
      let weak a_735: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_733) in
      pure(Specified(a_735))
    ) in
  store('signed int*', q, a_731) ;
  let strong _: loaded integer =
    bound(
      let weak (a_710: pointer, a_740: loaded integer) =
        unseq(
          let weak a_736: loaded pointer =
            let weak a_739: pointer = pure(q) in
            load('signed int*', a_739) in
          let Specified(a_737: pointer) = a_736 in
          let weak a_738: boolean =
            memop(PtrValidForDeref, 'signed int', a_737) in
          pure(
            if a_738 then
              a_737
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(11))
        ) in
      let weak _: unit =
        neg(store('signed int', a_710, conv_loaded_int('signed int', a_740))) in
      pure(conv_loaded_int('signed int', a_740))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_741: loaded pointer,
      (a_742: ctype, a_743: [ctype], a_744: boolean, a_745: boolean)),
      a_748: loaded pointer, a_752: loaded integer) =
        unseq(
          let strong a_709: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_709, cfunction(a_709)))
        ,
          let weak a_750: pointer = pure(a_749) in
          let weak a_751: pointer = memop(PtrArrayShift, a_750, 'char', 0) in
          pure(Specified(a_751))
        ,
          let weak a_763: pointer =
            let weak a_753: loaded pointer =
              let weak (a_756: loaded pointer, a_758: loaded integer) =
                unseq(
                  let weak a_761: pointer = pure(a) in
                  let weak a_762: pointer =
                    memop(PtrArrayShift, a_761, 'signed int', 0) in
                  pure(Specified(a_762))
                ,
                  pure(Specified(1))
                ) in
              let (Specified(a_757: pointer), Specified(a_759: integer)) =
                (a_756, a_758) in
              let weak a_760: pointer =
                memop(PtrArrayShift, a_757, 'signed int', a_759) in
              pure(Specified(a_760)) in
            let Specified(a_754: pointer) = a_753 in
            let weak a_755: boolean =
              memop(PtrValidForDeref, 'signed int', a_754) in
            pure(
              if a_755 then
                a_754
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_763)
        ) in
      if not(params_length(a_743) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_744) \/ not(are_compatible ('signed int', a_742)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_747: pointer =
            let a_764: ctype = params_nth(a_743, 0) in
            if not(are_compatible ('const char*', a_764)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_765: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_765, a_748) in
              pure(a_765) in
          let strong a_746: pointer =
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_752)) in
          let strong a_766: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_741, a_747,
            [('signed int', a_746)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_747), kill('signed int', a_746)) in
          pure(a_766)
    ) in
  pure(Unit) ;
  kill('signed int[2]', a) ;
  kill('signed int*', p) ;
  kill('uintptr_t', i) ;
  kill('uintptr_t', j) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_708: loaded integer (a_767: loaded integer:= Specified(0)) in
    pure(a_767)

