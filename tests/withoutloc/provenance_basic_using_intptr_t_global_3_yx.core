-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_888: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_889: loaded integer = bound(pure(Specified(2))) in
  store('signed int', a_888, conv_loaded_int('signed int', a_889)) ;
  pure(a_888)

glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_886: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_887: loaded integer = bound(pure(Specified(1))) in
  store('signed int', a_886, conv_loaded_int('signed int', a_887)) ;
  pure(a_886)

glob a_795: pointer [ail_ctype = 'char[23]'] :=
  create_readonly(Ivalignof('char[23]'), 'char[23]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_862: pointer [ail_ctype = 'char[24]'] :=
  create_readonly(Ivalignof('char[24]'), 'char[24]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong i: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong pi: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_765: loaded pointer =
    bound(
      let weak a_766: pointer = pure(x) in
      pure(Specified(a_766))
    ) in
  store('signed int*', p, a_765) ;
  let strong a_767: loaded integer =
    bound(
      let weak a_768: loaded pointer =
        let weak a_770: pointer = pure(p) in
        load('signed int*', a_770) in
      let Specified(a_769: pointer) = a_768 in
      let weak a_771: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_769) in
      pure(Specified(a_771))
    ) in
  store('intptr_t', i, conv_loaded_int('intptr_t', a_767)) ;
  let strong _: loaded integer =
    bound(
      let weak (a_764: pointer, a_778: loaded integer) =
        unseq(
          pure(i)
        ,
          let weak (a_772: loaded integer, a_773: loaded integer) =
            unseq(
              let weak a_777: pointer = pure(i) in
              load('intptr_t', a_777)
            ,
              pure(Specified(Ivsizeof('signed int')))
            ) in
          pure(
            let (Specified(a_774: integer), Specified(a_775: integer)) =
              (a_772, a_773) in
            Specified(wrapI_add('size_t', if all_values_representable_in('size_t',
            'intptr_t') then
              __conv_int__('intptr_t', a_774)
            else
              __conv_int__('uintptr_t', a_774), if all_values_representable_in('size_t',
            'intptr_t') then
              __conv_int__('intptr_t', a_775)
            else
              __conv_int__('uintptr_t', a_775)))
          )
        ) in
      let weak _: unit =
        neg(store('intptr_t', a_764, conv_loaded_int('intptr_t', a_778))) in
      pure(conv_loaded_int('intptr_t', a_778))
    ) in
  pure(Unit) ;
  let strong a_779: loaded pointer =
    bound(
      let weak a_780: loaded integer =
        let weak a_782: pointer = pure(i) in
        load('intptr_t', a_782) in
      let Specified(a_781: integer) = a_780 in
      let weak a_783: pointer =
        memop(PtrFromInt, 'intptr_t', 'signed int', a_781) in
      pure(Specified(a_783))
    ) in
  store('signed int*', pi, a_779) ;
  let strong a_784: loaded pointer =
    bound(
      let weak a_785: pointer = pure(y) in
      pure(Specified(a_785))
    ) in
  store('signed int*', q, a_784) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_786: loaded pointer,
      (a_787: ctype, a_788: [ctype], a_789: boolean, a_790: boolean)),
      a_794: loaded pointer, a_798: loaded pointer, a_803: loaded pointer) =
        unseq(
          let strong a_763: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_763, cfunction(a_763)))
        ,
          let weak a_796: pointer = pure(a_795) in
          let weak a_797: pointer = memop(PtrArrayShift, a_796, 'char', 0) in
          pure(Specified(a_797))
        ,
          let weak a_801: pointer = pure(pi) in
          load('signed int*', a_801)
        ,
          let weak a_806: pointer = pure(q) in
          load('signed int*', a_806)
        ) in
      if not(params_length(a_788) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_789) \/ not(are_compatible ('signed int', a_787)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_793: pointer =
            let a_808: ctype = params_nth(a_788, 0) in
            if not(are_compatible ('const char*', a_808)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_809: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_809, a_794) in
              pure(a_809) in
          let strong a_792: pointer =
            pcall(create_and_store, 'void*', a_798) in
          let strong a_791: pointer =
            pcall(create_and_store, 'void*', a_803) in
          let strong a_810: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_786, a_793,
            [('void*', a_792), ('void*', a_791)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_793)
            ,
              kill('void*', a_792)
            ,
              kill('void*', a_791)
            ) in
          pure(a_810)
    ) in
  pure(Unit) ;
  let strong a_811: loaded integer =
    bound(
      let weak (a_813: loaded integer, a_814: loaded integer) =
        unseq(
          let weak (a_818: loaded integer, a_819: loaded integer) =
            unseq(
              let strong ((a_824: loaded pointer,
              (a_825: ctype, a_826: [ctype], a_827: boolean, a_828: boolean)),
              a_832: loaded pointer, a_834: loaded pointer,
              a_836: loaded integer) =
                unseq(
                  let strong a_823: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_823, cfunction(a_823)))
                ,
                  let weak a_833: pointer = pure(pi) in
                  pure(Specified(a_833))
                ,
                  let weak a_835: pointer = pure(q) in
                  pure(Specified(a_835))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_826) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_827 \/ not(are_compatible ('signed int', a_825)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_831: pointer =
                    let a_837: ctype = params_nth(a_826, 0) in
                    if not(are_compatible ('const void*', a_837)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_838: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit = store('const void*', a_838, a_832) in
                      pure(a_838) in
                  let strong a_830: pointer =
                    let a_839: ctype = params_nth(a_826, 1) in
                    if not(are_compatible ('const void*', a_839)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_840: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit = store('const void*', a_840, a_834) in
                      pure(a_840) in
                  let strong a_829: pointer =
                    let a_841: ctype = params_nth(a_826, 2) in
                    if not(are_compatible ('size_t', a_841)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_842: pointer =
                        create(Ivalignof('size_t'), 'size_t') in
                      let weak _: unit =
                        store('size_t', a_842,
                        conv_loaded_int('size_t', a_836)) in
                      pure(a_842) in
                  let strong a_843: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_824, a_831, a_830, a_829) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_831)
                    ,
                      kill('void*', a_830)
                    ,
                      kill('size_t', a_829)
                    ) in
                  pure(a_843)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_820: integer), Specified(a_821: integer)) =
              (a_818, a_819) in
            if conv_int('signed int', a_820) = conv_int('signed int', a_821) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_815: integer), Specified(a_816: integer)) =
          (a_813, a_814) in
        if conv_int('signed int', a_815) = conv_int('signed int', a_816) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_762: boolean =
    let Specified(a_812: integer) = a_811 in
    pure(if not(a_812 = 1) then True else False) in
  if a_762 then
    let strong _: loaded integer =
      bound(
        let weak (a_845: pointer, a_850: loaded integer) =
          unseq(
            let weak a_846: loaded pointer =
              let weak a_849: pointer = pure(pi) in
              load('signed int*', a_849) in
            let Specified(a_847: pointer) = a_846 in
            let weak a_848: boolean =
              memop(PtrValidForDeref, 'signed int', a_847) in
            pure(
              if a_848 then
                a_847
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          neg(store('signed int', a_845, conv_loaded_int('signed int', a_850))) in
        pure(conv_loaded_int('signed int', a_850))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      bound(
        let strong ((a_851: loaded pointer,
        (a_852: ctype, a_853: [ctype], a_854: boolean, a_855: boolean)),
        a_861: loaded pointer, a_865: loaded integer, a_867: loaded integer,
        a_869: loaded integer, a_875: loaded integer) =
          unseq(
            let strong a_844: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_844, cfunction(a_844)))
          ,
            let weak a_863: pointer = pure(a_862) in
            let weak a_864: pointer =
              memop(PtrArrayShift, a_863, 'char', 0) in
            pure(Specified(a_864))
          ,
            let weak a_866: pointer = pure(x) in
            load('signed int', a_866)
          ,
            let weak a_868: pointer = pure(y) in
            load('signed int', a_868)
          ,
            let weak a_874: pointer =
              let weak a_870: loaded pointer =
                let weak a_873: pointer = pure(pi) in
                load('signed int*', a_873) in
              let Specified(a_871: pointer) = a_870 in
              let weak a_872: boolean =
                memop(PtrValidForDeref, 'signed int', a_871) in
              pure(
                if a_872 then
                  a_871
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_874)
          ,
            let weak a_880: pointer =
              let weak a_876: loaded pointer =
                let weak a_879: pointer = pure(q) in
                load('signed int*', a_879) in
              let Specified(a_877: pointer) = a_876 in
              let weak a_878: boolean =
                memop(PtrValidForDeref, 'signed int', a_877) in
              pure(
                if a_878 then
                  a_877
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_880)
          ) in
        if not(params_length(a_853) <= 5) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_854) \/ not(are_compatible ('signed int', a_852)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_860: pointer =
              let a_881: ctype = params_nth(a_853, 0) in
              if not(are_compatible ('const char*', a_881)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                let weak a_882: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_882, a_861) in
                pure(a_882) in
            let strong a_859: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_865)) in
            let strong a_858: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_867)) in
            let strong a_857: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_869)) in
            let strong a_856: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_875)) in
            let strong a_883: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_851, a_860,
              [('signed int', a_859), ('signed int', a_858),
              ('signed int', a_857), ('signed int', a_856)]) in
            let strong _: (unit,unit,unit,unit,unit) =
              unseq(
                kill('char*', a_860)
              ,
                kill('signed int', a_859)
              ,
                kill('signed int', a_858)
              ,
                kill('signed int', a_857)
              ,
                kill('signed int', a_856)
              ) in
            pure(a_883)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  let strong a_884: loaded integer = bound(pure(Specified(0))) in
  kill('signed int*', p) ;
  kill('intptr_t', i) ;
  kill('signed int*', pi) ;
  kill('signed int*', q) ;
  run ret_761(conv_loaded_int('signed int', a_884)) ;
  kill('signed int*', p) ;
  kill('intptr_t', i) ;
  kill('signed int*', pi) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_761: loaded integer (a_885: loaded integer:= Specified(0)) in
    pure(a_885)

