-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_727: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  106)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc f (i: pointer): eff unit :=
  let strong j: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong k: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_703: loaded integer = bound(pure(Specified(5))) in
  store('signed int', j, conv_loaded_int('signed int', a_703)) ;
  let strong a_704: loaded integer =
    bound(
      let weak a_705: loaded pointer =
        let weak a_707: pointer = pure(j) in
        pure(Specified(a_707)) in
      let Specified(a_706: pointer) = a_705 in
      let weak a_708: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_706) in
      pure(Specified(a_708))
    ) in
  store('uintptr_t', k, conv_loaded_int('uintptr_t', a_704)) ;
  let strong a_709: loaded pointer =
    bound(
      let weak a_710: loaded integer =
        let weak a_712: pointer = pure(i) in
        load('uintptr_t', a_712) in
      let Specified(a_711: integer) = a_710 in
      let weak a_713: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_711) in
      pure(Specified(a_713))
    ) in
  store('signed int*', p, a_709) ;
  let strong _: loaded integer =
    bound(
      let weak (a_702: pointer, a_718: loaded integer) =
        unseq(
          let weak a_714: loaded pointer =
            let weak a_717: pointer = pure(p) in
            load('signed int*', a_717) in
          let Specified(a_715: pointer) = a_714 in
          let weak a_716: boolean =
            memop(PtrValidForDeref, 'signed int', a_715) in
          pure(
            if a_716 then
              a_715
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(7))
        ) in
      let weak _: unit =
        neg(store('signed int', a_702, conv_loaded_int('signed int', a_718))) in
      pure(conv_loaded_int('signed int', a_718))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_719: loaded pointer,
      (a_720: ctype, a_721: [ctype], a_722: boolean, a_723: boolean)),
      a_726: loaded pointer, a_730: loaded integer) =
        unseq(
          let strong a_701: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_701, cfunction(a_701)))
        ,
          let weak a_728: pointer = pure(a_727) in
          let weak a_729: pointer = memop(PtrArrayShift, a_728, 'char', 0) in
          pure(Specified(a_729))
        ,
          let weak a_731: pointer = pure(j) in
          load('signed int', a_731)
        ) in
      if not(params_length(a_721) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_722) \/ not(are_compatible ('signed int', a_720)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_725: pointer =
            let a_732: ctype = params_nth(a_721, 0) in
            if not(are_compatible ('const char*', a_732)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_733: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_733, a_726) in
              pure(a_733) in
          let strong a_724: pointer =
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_730)) in
          let strong a_734: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_719, a_725,
            [('signed int', a_724)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_725), kill('signed int', a_724)) in
          pure(a_734)
    ) in
  pure(Unit) ;
  kill('signed int', j) ;
  kill('uintptr_t', k) ;
  kill('signed int*', p) ;
  pure(Unit) ;
  save ret_700: unit (a_735: unit:= Unit) in  pure(a_735)

proc main (): eff loaded integer :=
  let strong j: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong a_686: loaded integer = bound(pure(Specified(4294962676))) in
  store('uintptr_t', j, conv_loaded_int('uintptr_t', a_686)) ;
  bound(
    let strong ((a_687: loaded pointer,
    (a_688: ctype, a_689: [ctype], a_690: boolean, a_691: boolean)),
    a_693: loaded integer) =
      unseq(
        let strong a_685: loaded pointer = pure(Specified(Cfunction(f))) in
        pure((a_685, cfunction(a_685)))
      ,
        let weak a_694: pointer = pure(j) in
        load('uintptr_t', a_694)
      ) in
    if not(params_length(a_689) = 1) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_690 \/ not(are_compatible ('void', a_688)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_692: pointer =
          let a_695: ctype = params_nth(a_689, 0) in
          if not(are_compatible ('uintptr_t', a_695)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let weak a_696: pointer =
              create(Ivalignof('uintptr_t'), 'uintptr_t') in
            let weak _: unit =
              store('uintptr_t', a_696, conv_loaded_int('uintptr_t', a_693)) in
            pure(a_696) in
        let strong a_697: unit =
          ccall('void (*) (uintptr_t)', a_687, a_692) in
        kill('uintptr_t', a_692) ;
        pure(a_697)
  ) ;
  pure(Unit) ;
  kill('uintptr_t', j) ;
  pure(Unit) ;
  save ret_684: loaded integer (a_698: loaded integer:= Specified(0)) in
    pure(a_698)

