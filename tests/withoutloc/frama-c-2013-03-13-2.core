-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_689: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  106)), Specified(conv_int('char', 58)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 32)),
  Specified(0))))

glob a_705: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  99)), Specified(conv_int('char', 58)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (c: pointer, v: pointer): eff loaded integer :=
  let strong j: pointer = create(Ivalignof('unsigned int'), 'unsigned int') in
  store('unsigned int', j, Unspecified('unsigned int')) ;
  let strong a_658: loaded integer =
    bound(
      let weak (a_660: loaded integer, a_661: loaded integer) =
        unseq(
          let weak (a_665: loaded integer, a_666: loaded integer) =
            unseq(
              let weak a_670: pointer = pure(c) in
              load('signed int', a_670)
            ,
              pure(Specified(4))
            ) in
          pure(
            let (Specified(a_667: integer), Specified(a_668: integer)) =
              (a_665, a_666) in
            if conv_int('signed int', a_667) = conv_int('signed int', a_668) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_662: integer), Specified(a_663: integer)) =
          (a_660, a_661) in
        if conv_int('signed int', a_662) = conv_int('signed int', a_663) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_657: boolean =
    let Specified(a_659: integer) = a_658 in
    pure(if not(a_659 = 1) then True else False) in
  if a_657 then
    let strong _: loaded integer =
      bound(
        let weak (a_671: pointer, a_672: loaded integer) =
          unseq(pure(j), pure(Specified(1))) in
        let weak _: unit =
          neg(store('unsigned int', a_671,
          conv_loaded_int('unsigned int', a_672))) in
        pure(conv_loaded_int('unsigned int', a_672))
      ) in
    pure(Unit)
  else
    let strong _: loaded integer =
      bound(
        let weak (a_673: pointer, a_680: loaded integer) =
          unseq(
            pure(j)
          ,
            let weak (a_675: loaded integer, a_676: loaded integer) =
              unseq(
                let weak a_674: pointer = pure(j) in
                load('unsigned int', a_674)
              ,
                pure(Specified(2))
              ) in
            pure(
              let (Specified(a_677: integer), Specified(a_678: integer)) =
                (a_675, a_676) in
              Specified(wrapI_mul('unsigned int', conv_int('unsigned int',
              a_677), conv_int('unsigned int', a_678)))
            )
          ) in
        let weak _: unit =
          neg(store('unsigned int', a_673,
          conv_loaded_int('unsigned int', a_680))) in
        pure(conv_loaded_int('unsigned int', a_680))
      ) in
    pure(Unit) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_681: loaded pointer,
      (a_682: ctype, a_683: [ctype], a_684: boolean, a_685: boolean)),
      a_688: loaded pointer, a_692: loaded integer) =
        unseq(
          let strong a_656: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_656, cfunction(a_656)))
        ,
          let weak a_690: pointer = pure(a_689) in
          let weak a_691: pointer = memop(PtrArrayShift, a_690, 'char', 0) in
          pure(Specified(a_691))
        ,
          let weak a_693: pointer = pure(j) in
          load('unsigned int', a_693)
        ) in
      if not(params_length(a_683) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_684) \/ not(are_compatible ('signed int', a_682)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_687: pointer =
            let a_694: ctype = params_nth(a_683, 0) in
            if not(are_compatible ('const char*', a_694)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_695: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_695, a_688) in
              pure(a_695) in
          let strong a_686: pointer =
            pcall(create_and_store, 'unsigned int',
            conv_loaded_int('unsigned int', a_692)) in
          let strong a_696: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_681, a_687,
            [('unsigned int', a_686)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_687), kill('unsigned int', a_686)) in
          pure(a_696)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_697: loaded pointer,
      (a_698: ctype, a_699: [ctype], a_700: boolean, a_701: boolean)),
      a_704: loaded pointer, a_708: loaded integer) =
        unseq(
          let strong a_655: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_655, cfunction(a_655)))
        ,
          let weak a_706: pointer = pure(a_705) in
          let weak a_707: pointer = memop(PtrArrayShift, a_706, 'char', 0) in
          pure(Specified(a_707))
        ,
          let weak a_709: pointer = pure(c) in
          load('signed int', a_709)
        ) in
      if not(params_length(a_699) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_700) \/ not(are_compatible ('signed int', a_698)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_703: pointer =
            let a_710: ctype = params_nth(a_699, 0) in
            if not(are_compatible ('const char*', a_710)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_711: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_711, a_704) in
              pure(a_711) in
          let strong a_702: pointer =
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_708)) in
          let strong a_712: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_697, a_703,
            [('signed int', a_702)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_703), kill('signed int', a_702)) in
          pure(a_712)
    ) in
  pure(Unit) ;
  kill('unsigned int', j) ;
  pure(Unit) ;
  save ret_654: loaded integer (a_713: loaded integer:= Specified(0)) in
    pure(a_713)

