-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

-- Globals
glob a_772: pointer [ail_ctype = 'char[15]'] :=
  create_readonly(Ivalignof('char[15]'), 'char[15]', Specified(Array(Specified(conv_int('char',
  112)), Specified(conv_int('char', 106)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 106)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_799: pointer [ail_ctype = 'char[9]'] :=
  create_readonly(Ivalignof('char[9]'), 'char[9]', Specified(Array(Specified(conv_int('char',
  112)), Specified(conv_int('char', 107)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_823: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  107)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_840: pointer [ail_ctype = 'char[15]'] :=
  create_readonly(Ivalignof('char[15]'), 'char[15]', Specified(Array(Specified(conv_int('char',
  112)), Specified(conv_int('char', 106)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 106)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong pj: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong pk: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  store('signed int*', pj, Unspecified('signed int*')) ;
  let strong j: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_760: loaded integer = bound(pure(Specified(1))) in
  store('signed int', j, conv_loaded_int('signed int', a_760)) ;
  let strong _: loaded pointer =
    bound(
      let weak (a_759: pointer, a_762: loaded pointer) =
        unseq(
          pure(pj)
        ,
          let weak a_761: pointer = pure(j) in
          pure(Specified(a_761))
        ) in
      let weak _: unit = neg(store('signed int*', a_759, a_762)) in
      pure(a_762)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_763: loaded pointer,
      (a_764: ctype, a_765: [ctype], a_766: boolean, a_767: boolean)),
      a_771: loaded pointer, a_775: loaded pointer, a_780: loaded pointer) =
        unseq(
          let strong a_758: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_758, cfunction(a_758)))
        ,
          let weak a_773: pointer = pure(a_772) in
          let weak a_774: pointer = memop(PtrArrayShift, a_773, 'char', 0) in
          pure(Specified(a_774))
        ,
          let weak a_778: pointer = pure(pj) in
          load('signed int*', a_778)
        ,
          let weak a_783: pointer = pure(pj) in
          pure(Specified(a_783))
        ) in
      if not(params_length(a_765) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_766) \/ not(are_compatible ('signed int', a_764)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_770: pointer =
            let a_785: ctype = params_nth(a_765, 0) in
            if not(are_compatible ('const char*', a_785)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_786: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_786, a_771) in
              pure(a_786) in
          let strong a_769: pointer =
            pcall(create_and_store, 'void*', a_775) in
          let strong a_768: pointer =
            pcall(create_and_store, 'void*', a_780) in
          let strong a_787: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_763, a_770,
            [('void*', a_769), ('void*', a_768)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_770)
            ,
              kill('void*', a_769)
            ,
              kill('void*', a_768)
            ) in
          pure(a_787)
    ) in
  pure(Unit) ;
  kill('signed int', j) ;
  pure(Unit) ;
  store('signed int*', pk, Unspecified('signed int*')) ;
  let strong k: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_788: loaded integer = bound(pure(Specified(2))) in
  store('signed int', k, conv_loaded_int('signed int', a_788)) ;
  let strong _: loaded pointer =
    bound(
      let weak (a_757: pointer, a_790: loaded pointer) =
        unseq(
          pure(pk)
        ,
          let weak a_789: pointer = pure(k) in
          pure(Specified(a_789))
        ) in
      let weak _: unit = neg(store('signed int*', a_757, a_790)) in
      pure(a_790)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_791: loaded pointer,
      (a_792: ctype, a_793: [ctype], a_794: boolean, a_795: boolean)),
      a_798: loaded pointer, a_802: loaded pointer) =
        unseq(
          let strong a_756: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_756, cfunction(a_756)))
        ,
          let weak a_800: pointer = pure(a_799) in
          let weak a_801: pointer = memop(PtrArrayShift, a_800, 'char', 0) in
          pure(Specified(a_801))
        ,
          let weak a_805: pointer = pure(pk) in
          load('signed int*', a_805)
        ) in
      if not(params_length(a_793) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_794) \/ not(are_compatible ('signed int', a_792)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_797: pointer =
            let a_807: ctype = params_nth(a_793, 0) in
            if not(are_compatible ('const char*', a_807)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_808: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_808, a_798) in
              pure(a_808) in
          let strong a_796: pointer =
            pcall(create_and_store, 'void*', a_802) in
          let strong a_809: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_791, a_797,
            [('void*', a_796)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_797), kill('void*', a_796)) in
          pure(a_809)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    bound(
      let weak (a_755: pointer, a_814: loaded integer) =
        unseq(
          let weak a_810: loaded pointer =
            let weak a_813: pointer = pure(pj) in
            load('signed int*', a_813) in
          let Specified(a_811: pointer) = a_810 in
          let weak a_812: boolean =
            memop(PtrValidForDeref, 'signed int', a_811) in
          pure(
            if a_812 then
              a_811
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(3))
        ) in
      let weak _: unit =
        neg(store('signed int', a_755, conv_loaded_int('signed int', a_814))) in
      pure(conv_loaded_int('signed int', a_814))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_815: loaded pointer,
      (a_816: ctype, a_817: [ctype], a_818: boolean, a_819: boolean)),
      a_822: loaded pointer, a_826: loaded integer) =
        unseq(
          let strong a_754: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_754, cfunction(a_754)))
        ,
          let weak a_824: pointer = pure(a_823) in
          let weak a_825: pointer = memop(PtrArrayShift, a_824, 'char', 0) in
          pure(Specified(a_825))
        ,
          let weak a_827: pointer = pure(k) in
          load('signed int', a_827)
        ) in
      if not(params_length(a_817) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_818) \/ not(are_compatible ('signed int', a_816)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_821: pointer =
            let a_828: ctype = params_nth(a_817, 0) in
            if not(are_compatible ('const char*', a_828)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_829: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_829, a_822) in
              pure(a_829) in
          let strong a_820: pointer =
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_826)) in
          let strong a_830: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_815, a_821,
            [('signed int', a_820)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_821), kill('signed int', a_820)) in
          pure(a_830)
    ) in
  pure(Unit) ;
  kill('signed int', k) ;
  pure(Unit) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_831: loaded pointer,
      (a_832: ctype, a_833: [ctype], a_834: boolean, a_835: boolean)),
      a_839: loaded pointer, a_843: loaded pointer, a_848: loaded pointer) =
        unseq(
          let strong a_753: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_753, cfunction(a_753)))
        ,
          let weak a_841: pointer = pure(a_840) in
          let weak a_842: pointer = memop(PtrArrayShift, a_841, 'char', 0) in
          pure(Specified(a_842))
        ,
          let weak a_846: pointer = pure(pj) in
          load('signed int*', a_846)
        ,
          let weak a_851: pointer = pure(pj) in
          pure(Specified(a_851))
        ) in
      if not(params_length(a_833) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_834) \/ not(are_compatible ('signed int', a_832)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_838: pointer =
            let a_853: ctype = params_nth(a_833, 0) in
            if not(are_compatible ('const char*', a_853)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_854: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_854, a_839) in
              pure(a_854) in
          let strong a_837: pointer =
            pcall(create_and_store, 'void*', a_843) in
          let strong a_836: pointer =
            pcall(create_and_store, 'void*', a_848) in
          let strong a_855: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_831, a_838,
            [('void*', a_837), ('void*', a_836)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_838)
            ,
              kill('void*', a_837)
            ,
              kill('void*', a_836)
            ) in
          pure(a_855)
    ) in
  pure(Unit) ;
  let strong a_856: loaded integer = bound(pure(Specified(0))) in
  kill('signed int*', pj) ;
  kill('signed int*', pk) ;
  run ret_752(conv_loaded_int('signed int', a_856)) ;
  kill('signed int*', pj) ;
  kill('signed int*', pk) ;
  pure(Unit) ;
  save ret_752: loaded integer (a_857: loaded integer:= Specified(0)) in
    pure(a_857)

