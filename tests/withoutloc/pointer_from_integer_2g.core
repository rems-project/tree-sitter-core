-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_714: pointer [ail_ctype = 'char[12]'] :=
  create_readonly(Ivalignof('char[12]'), 'char[12]', Specified(Array(Specified(conv_int('char',
  106)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 106)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc f (): eff unit :=
  let strong i: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_730: loaded integer = bound(pure(Specified(4294962680))) in
  store('uintptr_t', i, conv_loaded_int('uintptr_t', a_730)) ;
  let strong a_731: loaded pointer =
    bound(
      let weak a_732: loaded integer =
        let weak a_734: pointer = pure(i) in
        load('uintptr_t', a_734) in
      let Specified(a_733: integer) = a_732 in
      let weak a_735: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_733) in
      pure(Specified(a_735))
    ) in
  store('signed int*', p, a_731) ;
  let strong _: loaded integer =
    bound(
      let weak (a_729: pointer, a_740: loaded integer) =
        unseq(
          let weak a_736: loaded pointer =
            let weak a_739: pointer = pure(p) in
            load('signed int*', a_739) in
          let Specified(a_737: pointer) = a_736 in
          let weak a_738: boolean =
            memop(PtrValidForDeref, 'signed int', a_737) in
          pure(
            if a_738 then
              a_737
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(7))
        ) in
      let weak _: unit =
        neg(store('signed int', a_729, conv_loaded_int('signed int', a_740))) in
      pure(conv_loaded_int('signed int', a_740))
    ) in
  pure(Unit) ;
  kill('uintptr_t', i) ;
  kill('signed int*', p) ;
  pure(Unit) ;
  save ret_728: unit (a_741: unit:= Unit) in  pure(a_741)

proc main (): eff loaded integer :=
  let strong j: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_685: loaded integer = bound(pure(Specified(5))) in
  store('signed int', j, conv_loaded_int('signed int', a_685)) ;
  let strong a_686: loaded integer =
    bound(
      let weak (a_688: loaded integer, a_689: loaded integer) =
        unseq(
          let weak (a_693: loaded integer, a_694: loaded integer) =
            unseq(
              let weak a_698: loaded pointer =
                let weak a_700: pointer = pure(j) in
                pure(Specified(a_700)) in
              let Specified(a_699: pointer) = a_698 in
              let weak a_701: integer =
                memop(IntFromPtr, 'signed int', 'uintptr_t', a_699) in
              pure(Specified(a_701))
            ,
              pure(Specified(4294962680))
            ) in
          pure(
            let (Specified(a_695: integer), Specified(a_696: integer)) =
              (a_693, a_694) in
            if conv_int('uintptr_t', a_695) = conv_int('uintptr_t', a_696) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_690: integer), Specified(a_691: integer)) =
          (a_688, a_689) in
        if conv_int('signed int', a_690) = conv_int('signed int', a_691) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_684: boolean =
    let Specified(a_687: integer) = a_686 in
    pure(if not(a_687 = 1) then True else False) in
  if a_684 then
    bound(
      let strong a_702: loaded pointer = pure(Specified(Cfunction(f))) in
      let (a_703: ctype, a_704: [ctype], _: boolean, _: boolean) =
        cfunction(a_702) in
      if params_length(a_704) = 0 then
        if are_compatible ('void', a_703) then
          ccall('void (*) (void)', a_702)
        else
          pure(undef(<<UB041_function_not_compatible>>))
      else
        pure(undef(<<UB038_number_of_args>>))
    ) ;
    pure(Unit)
  else
    pure(Unit) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_705: loaded pointer,
      (a_706: ctype, a_707: [ctype], a_708: boolean, a_709: boolean)),
      a_713: loaded pointer, a_717: loaded integer, a_719: loaded pointer) =
        unseq(
          let strong a_683: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_683, cfunction(a_683)))
        ,
          let weak a_715: pointer = pure(a_714) in
          let weak a_716: pointer = memop(PtrArrayShift, a_715, 'char', 0) in
          pure(Specified(a_716))
        ,
          let weak a_718: pointer = pure(j) in
          load('signed int', a_718)
        ,
          let weak a_722: pointer = pure(j) in
          pure(Specified(a_722))
        ) in
      if not(params_length(a_707) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_708) \/ not(are_compatible ('signed int', a_706)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_712: pointer =
            let a_724: ctype = params_nth(a_707, 0) in
            if not(are_compatible ('const char*', a_724)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_725: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_725, a_713) in
              pure(a_725) in
          let strong a_711: pointer =
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_717)) in
          let strong a_710: pointer =
            pcall(create_and_store, 'void*', a_719) in
          let strong a_726: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_705, a_712,
            [('signed int', a_711), ('void*', a_710)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_712)
            ,
              kill('signed int', a_711)
            ,
              kill('void*', a_710)
            ) in
          pure(a_726)
    ) in
  pure(Unit) ;
  kill('signed int', j) ;
  pure(Unit) ;
  save ret_682: loaded integer (a_727: loaded integer:= Specified(0)) in
    pure(a_727)

