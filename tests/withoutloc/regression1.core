-- Aggregates
def struct T :=
  x: 'signed int'
  y: 'char'
  z: 'char'

-- Globals
glob st: pointer [ail_ctype = 'struct T'] :=
  let strong a_516: pointer = create(Ivalignof('struct T'), 'struct T') in
  let strong a_520: loaded struct T_502 =
    bound(
      let weak (a_519: loaded integer, a_518: loaded integer,
      a_517: loaded integer) =
        unseq(pure(Specified(3)), pure(Specified(2)), pure(Specified(1))) in
      pure(
        Specified((struct T){.x= conv_loaded_int('signed int', a_517),
        .y= conv_loaded_int('char', a_518), .z= conv_loaded_int('char', a_519)})
      )
    ) in
  store('struct T', a_516, a_520) ;
  pure(a_516)

-- Fun map
proc main (): eff loaded integer :=
  let strong _: loaded integer =
    bound(
      let weak a_510: pointer =
        let strong a_509: pointer = pure(st) in
        memop(PtrArrayShift[T, x], a_509) in
      load('signed int', a_510)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    bound(
      let weak a_511: pointer =
        let strong a_508: pointer = pure(st) in
        memop(PtrArrayShift[T, y], a_508) in
      load('char', a_511)
    ) in
  pure(Unit) ;
  let strong a_514: loaded integer =
    bound(
      let weak a_513: pointer =
        let strong a_512: pointer = pure(st) in
        memop(PtrArrayShift[T, z], a_512) in
      load('char', a_513)
    ) in
  run ret_507(conv_loaded_int('signed int', a_514)) ;
  pure(Unit) ;
  save ret_507: loaded integer (a_515: loaded integer:= Specified(0)) in
    pure(a_515)

