-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_754 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_758 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob a_828: pointer [ail_ctype = 'char[30]'] :=
  create_readonly(Ivalignof('char[30]'), 'char[30]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 38)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_900: pointer [ail_ctype = 'char[26]'] :=
  create_readonly(Ivalignof('char[26]'), 'char[26]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong y: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong ux: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong uy: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong offset: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_790: loaded integer = bound(pure(Specified(2))) in
  store('signed int', y, conv_loaded_int('signed int', a_790)) ;
  let strong a_791: loaded integer = bound(pure(Specified(1))) in
  store('signed int', x, conv_loaded_int('signed int', a_791)) ;
  let strong a_792: loaded integer =
    bound(
      let weak a_793: loaded pointer =
        let weak a_795: pointer = pure(x) in
        pure(Specified(a_795)) in
      let Specified(a_794: pointer) = a_793 in
      let weak a_796: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_794) in
      pure(Specified(a_796))
    ) in
  store('uintptr_t', ux, conv_loaded_int('uintptr_t', a_792)) ;
  let strong a_797: loaded integer =
    bound(
      let weak a_798: loaded pointer =
        let weak a_800: pointer = pure(y) in
        pure(Specified(a_800)) in
      let Specified(a_799: pointer) = a_798 in
      let weak a_801: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_799) in
      pure(Specified(a_801))
    ) in
  store('uintptr_t', uy, conv_loaded_int('uintptr_t', a_797)) ;
  let strong a_802: loaded integer = bound(pure(Specified(4))) in
  store('uintptr_t', offset, conv_loaded_int('uintptr_t', a_802)) ;
  let strong _: loaded integer =
    bound(
      let weak (a_789: pointer, a_810: loaded integer) =
        unseq(
          pure(ux)
        ,
          let weak (a_803: loaded integer, a_804: loaded integer) =
            unseq(
              let weak a_808: pointer = pure(ux) in
              load('uintptr_t', a_808)
            ,
              let weak a_809: pointer = pure(offset) in
              load('uintptr_t', a_809)
            ) in
          pure(
            let (Specified(a_805: integer), Specified(a_806: integer)) =
              (a_803, a_804) in
            Specified(wrapI_add('uintptr_t', __conv_int__('uintptr_t', a_805), __conv_int__('uintptr_t', a_806)))
          )
        ) in
      let weak _: unit =
        neg(store('uintptr_t', a_789, conv_loaded_int('uintptr_t', a_810))) in
      pure(conv_loaded_int('uintptr_t', a_810))
    ) in
  pure(Unit) ;
  let strong a_811: loaded pointer =
    bound(
      let weak a_812: loaded integer =
        let weak a_814: pointer = pure(ux) in
        load('uintptr_t', a_814) in
      let Specified(a_813: integer) = a_812 in
      let weak a_815: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_813) in
      pure(Specified(a_815))
    ) in
  store('signed int*', p, a_811) ;
  let strong a_816: loaded pointer =
    bound(
      let weak a_817: pointer = pure(y) in
      pure(Specified(a_817))
    ) in
  store('signed int*', q, a_816) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_818: loaded pointer,
      (a_819: ctype, a_820: [ctype], a_821: boolean, a_822: boolean)),
      a_827: loaded pointer, a_831: loaded pointer, a_836: loaded pointer,
      a_841: loaded integer) =
        unseq(
          let strong a_788: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_788, cfunction(a_788)))
        ,
          let weak a_829: pointer = pure(a_828) in
          let weak a_830: pointer = memop(PtrArrayShift, a_829, 'char', 0) in
          pure(Specified(a_830))
        ,
          let weak a_834: pointer = pure(x) in
          pure(Specified(a_834))
        ,
          let weak a_839: pointer = pure(p) in
          load('signed int*', a_839)
        ,
          let weak a_842: loaded integer =
            let weak a_844: pointer = pure(uy) in
            load('uintptr_t', a_844) in
          pure(conv_loaded_int('unsigned long', a_842))
        ) in
      if not(params_length(a_820) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_821) \/ not(are_compatible ('signed int', a_819)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_826: pointer =
            let a_846: ctype = params_nth(a_820, 0) in
            if not(are_compatible ('const char*', a_846)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_847: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_847, a_827) in
              pure(a_847) in
          let strong a_825: pointer =
            pcall(create_and_store, 'void*', a_831) in
          let strong a_824: pointer =
            pcall(create_and_store, 'void*', a_836) in
          let strong a_823: pointer =
            pcall(create_and_store, 'unsigned long',
            conv_loaded_int('unsigned long', a_841)) in
          let strong a_848: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_818, a_826,
            [('void*', a_825), ('void*', a_824), ('unsigned long', a_823)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_826)
            ,
              kill('void*', a_825)
            ,
              kill('void*', a_824)
            ,
              kill('unsigned long', a_823)
            ) in
          pure(a_848)
    ) in
  pure(Unit) ;
  let strong a_849: loaded integer =
    bound(
      let weak (a_851: loaded integer, a_852: loaded integer) =
        unseq(
          let weak (a_856: loaded integer, a_857: loaded integer) =
            unseq(
              let strong ((a_862: loaded pointer,
              (a_863: ctype, a_864: [ctype], a_865: boolean, a_866: boolean)),
              a_870: loaded pointer, a_872: loaded pointer,
              a_874: loaded integer) =
                unseq(
                  let strong a_861: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_861, cfunction(a_861)))
                ,
                  let weak a_871: pointer = pure(p) in
                  pure(Specified(a_871))
                ,
                  let weak a_873: pointer = pure(q) in
                  pure(Specified(a_873))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_864) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_865 \/ not(are_compatible ('signed int', a_863)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_869: pointer =
                    let a_875: ctype = params_nth(a_864, 0) in
                    if not(are_compatible ('const void*', a_875)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_876: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit = store('const void*', a_876, a_870) in
                      pure(a_876) in
                  let strong a_868: pointer =
                    let a_877: ctype = params_nth(a_864, 1) in
                    if not(are_compatible ('const void*', a_877)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_878: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit = store('const void*', a_878, a_872) in
                      pure(a_878) in
                  let strong a_867: pointer =
                    let a_879: ctype = params_nth(a_864, 2) in
                    if not(are_compatible ('size_t', a_879)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_880: pointer =
                        create(Ivalignof('size_t'), 'size_t') in
                      let weak _: unit =
                        store('size_t', a_880,
                        conv_loaded_int('size_t', a_874)) in
                      pure(a_880) in
                  let strong a_881: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_862, a_869, a_868, a_867) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_869)
                    ,
                      kill('void*', a_868)
                    ,
                      kill('size_t', a_867)
                    ) in
                  pure(a_881)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_858: integer), Specified(a_859: integer)) =
              (a_856, a_857) in
            if conv_int('signed int', a_858) = conv_int('signed int', a_859) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_853: integer), Specified(a_854: integer)) =
          (a_851, a_852) in
        if conv_int('signed int', a_853) = conv_int('signed int', a_854) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_787: boolean =
    let Specified(a_850: integer) = a_849 in
    pure(if not(a_850 = 1) then True else False) in
  if a_787 then
    let strong _: loaded integer =
      bound(
        let weak (a_883: pointer, a_888: loaded integer) =
          unseq(
            let weak a_884: loaded pointer =
              let weak a_887: pointer = pure(p) in
              load('signed int*', a_887) in
            let Specified(a_885: pointer) = a_884 in
            let weak a_886: boolean =
              memop(PtrValidForDeref, 'signed int', a_885) in
            pure(
              if a_886 then
                a_885
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          neg(store('signed int', a_883, conv_loaded_int('signed int', a_888))) in
        pure(conv_loaded_int('signed int', a_888))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      bound(
        let strong ((a_889: loaded pointer,
        (a_890: ctype, a_891: [ctype], a_892: boolean, a_893: boolean)),
        a_899: loaded pointer, a_903: loaded integer, a_905: loaded integer,
        a_907: loaded integer, a_913: loaded integer) =
          unseq(
            let strong a_882: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_882, cfunction(a_882)))
          ,
            let weak a_901: pointer = pure(a_900) in
            let weak a_902: pointer =
              memop(PtrArrayShift, a_901, 'char', 0) in
            pure(Specified(a_902))
          ,
            let weak a_904: pointer = pure(x) in
            load('signed int', a_904)
          ,
            let weak a_906: pointer = pure(y) in
            load('signed int', a_906)
          ,
            let weak a_912: pointer =
              let weak a_908: loaded pointer =
                let weak a_911: pointer = pure(p) in
                load('signed int*', a_911) in
              let Specified(a_909: pointer) = a_908 in
              let weak a_910: boolean =
                memop(PtrValidForDeref, 'signed int', a_909) in
              pure(
                if a_910 then
                  a_909
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_912)
          ,
            let weak a_918: pointer =
              let weak a_914: loaded pointer =
                let weak a_917: pointer = pure(q) in
                load('signed int*', a_917) in
              let Specified(a_915: pointer) = a_914 in
              let weak a_916: boolean =
                memop(PtrValidForDeref, 'signed int', a_915) in
              pure(
                if a_916 then
                  a_915
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_918)
          ) in
        if not(params_length(a_891) <= 5) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_892) \/ not(are_compatible ('signed int', a_890)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_898: pointer =
              let a_919: ctype = params_nth(a_891, 0) in
              if not(are_compatible ('const char*', a_919)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                let weak a_920: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_920, a_899) in
                pure(a_920) in
            let strong a_897: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_903)) in
            let strong a_896: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_905)) in
            let strong a_895: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_907)) in
            let strong a_894: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_913)) in
            let strong a_921: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_889, a_898,
              [('signed int', a_897), ('signed int', a_896),
              ('signed int', a_895), ('signed int', a_894)]) in
            let strong _: (unit,unit,unit,unit,unit) =
              unseq(
                kill('char*', a_898)
              ,
                kill('signed int', a_897)
              ,
                kill('signed int', a_896)
              ,
                kill('signed int', a_895)
              ,
                kill('signed int', a_894)
              ) in
            pure(a_921)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  kill('signed int', y) ;
  kill('signed int', x) ;
  kill('uintptr_t', ux) ;
  kill('uintptr_t', uy) ;
  kill('uintptr_t', offset) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_786: loaded integer (a_922: loaded integer:= Specified(0)) in
    pure(a_922)

