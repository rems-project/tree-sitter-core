-- Globals
glob offset: pointer [ail_ctype = 'uintptr_t'] :=
  let strong a_608: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong a_609: loaded integer = bound(pure(Specified(4))) in
  store('uintptr_t', a_608, conv_loaded_int('uintptr_t', a_609)) ;
  pure(a_608)

-- Fun map
proc f (): eff unit :=
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong y: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong save_y: pointer =
    create(Ivalignof('signed int'), 'signed int') in
  let strong ux: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong uy: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_550: loaded integer = bound(pure(Specified(1))) in
  store('signed int', x, conv_loaded_int('signed int', a_550)) ;
  let strong a_551: loaded integer = bound(pure(Specified(2))) in
  store('signed int', y, conv_loaded_int('signed int', a_551)) ;
  let strong a_552: loaded integer =
    bound(
      let weak a_553: pointer = pure(y) in
      load('signed int', a_553)
    ) in
  store('signed int', save_y, conv_loaded_int('signed int', a_552)) ;
  let strong a_554: loaded integer =
    bound(
      let weak a_555: loaded pointer =
        let weak a_557: pointer = pure(x) in
        pure(Specified(a_557)) in
      let Specified(a_556: pointer) = a_555 in
      let weak a_558: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_556) in
      pure(Specified(a_558))
    ) in
  store('uintptr_t', ux, conv_loaded_int('uintptr_t', a_554)) ;
  let strong a_559: loaded integer =
    bound(
      let weak a_560: loaded pointer =
        let weak a_562: pointer = pure(y) in
        pure(Specified(a_562)) in
      let Specified(a_561: pointer) = a_560 in
      let weak a_563: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_561) in
      pure(Specified(a_563))
    ) in
  store('uintptr_t', uy, conv_loaded_int('uintptr_t', a_559)) ;
  let strong a_564: loaded pointer =
    bound(
      let weak a_565: loaded integer =
        let weak (a_567: loaded integer, a_568: loaded integer) =
          unseq(
            let weak a_572: pointer = pure(ux) in
            load('uintptr_t', a_572)
          ,
            let weak a_573: pointer = pure(offset) in
            load('uintptr_t', a_573)
          ) in
        pure(
          let (Specified(a_569: integer), Specified(a_570: integer)) =
            (a_567, a_568) in
          Specified(wrapI_add('uintptr_t', __conv_int__('uintptr_t', a_569), __conv_int__('uintptr_t', a_570)))
        ) in
      let Specified(a_566: integer) = a_565 in
      let weak a_574: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_566) in
      pure(Specified(a_574))
    ) in
  store('signed int*', p, a_564) ;
  let strong a_575: loaded pointer =
    bound(
      let weak a_576: pointer = pure(y) in
      pure(Specified(a_576))
    ) in
  store('signed int*', q, a_575) ;
  let strong a_577: loaded integer =
    bound(
      let weak (a_579: loaded integer, a_580: loaded integer) =
        unseq(
          let weak (a_584: loaded pointer, a_585: loaded pointer) =
            unseq(
              let weak a_589: pointer = pure(p) in
              load('signed int*', a_589)
            ,
              let weak a_590: pointer = pure(q) in
              load('signed int*', a_590)
            ) in
          let (Specified(a_586: pointer), Specified(a_587: pointer)) =
            (a_584, a_585) in
          let weak a_588: boolean = memop(PtrEq, a_586, a_587) in
          pure(if a_588 then Specified(1) else Specified(0))
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_581: integer), Specified(a_582: integer)) =
          (a_579, a_580) in
        if conv_int('signed int', a_581) = conv_int('signed int', a_582) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_549: boolean =
    let Specified(a_578: integer) = a_577 in
    pure(if not(a_578 = 1) then True else False) in
  if a_549 then
    let strong _: loaded integer =
      bound(
        let weak (a_592: pointer, a_597: loaded integer) =
          unseq(
            let weak a_593: loaded pointer =
              let weak a_596: pointer = pure(p) in
              load('signed int*', a_596) in
            let Specified(a_594: pointer) = a_593 in
            let weak a_595: boolean =
              memop(PtrValidForDeref, 'signed int', a_594) in
            pure(
              if a_595 then
                a_594
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          neg(store('signed int', a_592, conv_loaded_int('signed int', a_597))) in
        pure(conv_loaded_int('signed int', a_597))
      ) in
    pure(Unit) ;
    bound(
      let strong a_591: loaded integer =
        let weak (a_600: loaded integer, a_601: loaded integer) =
          unseq(
            let weak a_605: pointer = pure(y) in
            load('signed int', a_605)
          ,
            let weak a_606: pointer = pure(save_y) in
            load('signed int', a_606)
          ) in
        pure(
          let (Specified(a_602: integer), Specified(a_603: integer)) =
            (a_600, a_601) in
          if conv_int('signed int', a_602) = conv_int('signed int', a_603) then
            Specified(1)
          else
            Specified(0)
        ) in
      pure(
        let Specified(a_598: integer) = a_591 in
        if a_598 = 0 then error("assert() failure", Unit) else Unit
      )
    ) ;
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  kill('signed int', x) ;
  kill('signed int', y) ;
  kill('signed int', save_y) ;
  kill('uintptr_t', ux) ;
  kill('uintptr_t', uy) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_548: unit (a_607: unit:= Unit) in  pure(a_607)

proc main (): eff loaded integer :=
  bound(
    let strong a_544: loaded pointer = pure(Specified(Cfunction(f))) in
    let (a_545: ctype, a_546: [ctype], _: boolean, _: boolean) =
      cfunction(a_544) in
    if params_length(a_546) = 0 then
      if are_compatible ('void', a_545) then
        ccall('void (*) (void)', a_544)
      else
        pure(undef(<<UB041_function_not_compatible>>))
    else
      pure(undef(<<UB038_number_of_args>>))
  ) ;
  pure(Unit) ;
  pure(Unit) ;
  save ret_543: loaded integer (a_547: loaded integer:= Specified(0)) in
    pure(a_547)

