-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_799: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_800: loaded integer = bound(pure(Specified(1))) in
  store('signed int', a_799, conv_loaded_int('signed int', a_800)) ;
  pure(a_799)

glob a_769: pointer [ail_ctype = 'char[22]'] :=
  create_readonly(Ivalignof('char[22]'), 'char[22]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 40)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 41)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_789: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_792: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong i: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong j: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong r: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong b: pointer = create(Ivalignof('_Bool'), '_Bool') in
  let strong a_690: loaded pointer =
    bound(
      let weak a_691: pointer = pure(x) in
      pure(Specified(a_691))
    ) in
  store('signed int*', p, a_690) ;
  let strong a_692: loaded integer =
    bound(
      let weak a_693: loaded pointer =
        let weak a_695: pointer = pure(p) in
        load('signed int*', a_695) in
      let Specified(a_694: pointer) = a_693 in
      let weak a_696: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_694) in
      pure(Specified(a_696))
    ) in
  store('uintptr_t', i, conv_loaded_int('uintptr_t', a_692)) ;
  bound(
    let strong a_689: loaded integer =
      let weak (a_699: loaded integer, a_700: loaded integer) =
        unseq(pure(Specified(Ivalignof('signed int'))), pure(Specified(4))) in
      let (Specified(a_701: integer), Specified(a_702: integer)) =
        (a_699, a_700) in
      pure(
        if if all_values_representable_in('size_t', 'signed int') then
          conv_int('signed int', a_701)
        else
          conv_int('unsigned int', a_701) >=
        if all_values_representable_in('size_t', 'signed int') then
          conv_int('signed int', a_702)
        else
          conv_int('unsigned int', a_702) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_697: integer) = a_689 in
      if a_697 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  bound(
    let strong a_688: loaded integer =
      let weak (a_706: loaded integer, a_707: loaded integer) =
        unseq(
          let weak (a_711: loaded integer, a_712: loaded integer) =
            unseq(
              let weak a_715: pointer = pure(i) in
              load('uintptr_t', a_715)
            ,
              pure(Specified(3))
            ) in
          pure(
            let (Specified(a_713: integer), Specified(a_714: integer)) =
              (a_711, a_712) in
            Specified(IvAND('uintptr_t', conv_int('uintptr_t', a_713),
            conv_int('uintptr_t', a_714)))
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_708: integer), Specified(a_709: integer)) =
          (a_706, a_707) in
        if conv_int('uintptr_t', a_708) = conv_int('uintptr_t', a_709) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_704: integer) = a_688 in
      if a_704 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  let strong _: loaded integer =
    bound(
      let weak (a_687: pointer, a_721: loaded integer) =
        unseq(
          pure(i)
        ,
          let weak (a_716: loaded integer, a_717: loaded integer) =
            unseq(
              let weak a_720: pointer = pure(i) in
              load('uintptr_t', a_720)
            ,
              pure(Specified(1))
            ) in
          pure(
            let (Specified(a_718: integer), Specified(a_719: integer)) =
              (a_716, a_717) in
            Specified(IvOR('uintptr_t', conv_int('uintptr_t', a_718),
            conv_int('uintptr_t', a_719)))
          )
        ) in
      let weak _: unit =
        neg(store('uintptr_t', a_687, conv_loaded_int('uintptr_t', a_721))) in
      pure(conv_loaded_int('uintptr_t', a_721))
    ) in
  pure(Unit) ;
  let strong a_722: loaded pointer =
    bound(
      let weak a_723: loaded integer =
        let weak a_725: pointer = pure(i) in
        load('uintptr_t', a_725) in
      let Specified(a_724: integer) = a_723 in
      let weak a_726: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_724) in
      pure(Specified(a_726))
    ) in
  store('signed int*', q, a_722) ;
  let strong a_727: loaded integer =
    bound(
      let weak (a_728: loaded integer, a_729: loaded integer) =
        unseq(
          let weak a_732: loaded pointer =
            let weak a_734: pointer = pure(q) in
            load('signed int*', a_734) in
          let Specified(a_733: pointer) = a_732 in
          let weak a_735: integer =
            memop(IntFromPtr, 'signed int', 'uintptr_t', a_733) in
          pure(Specified(a_735))
        ,
          let weak a_736: loaded integer =
            let weak a_738: loaded integer = pure(Specified(3)) in
            pure(conv_loaded_int('uintptr_t', a_738)) in
          pure(
            let Specified(a_737: integer) = a_736 in
            Specified(wrapI_sub('uintptr_t', Ivmax('uintptr_t'), conv_int('uintptr_t',
            a_737)))
          )
        ) in
      pure(
        let (Specified(a_730: integer), Specified(a_731: integer)) =
          (a_728, a_729) in
        Specified(IvAND('uintptr_t', conv_int('uintptr_t', a_730),
        conv_int('uintptr_t', a_731)))
      )
    ) in
  store('uintptr_t', j, conv_loaded_int('uintptr_t', a_727)) ;
  let strong a_741: loaded pointer =
    bound(
      let weak a_742: loaded integer =
        let weak a_744: pointer = pure(j) in
        load('uintptr_t', a_744) in
      let Specified(a_743: integer) = a_742 in
      let weak a_745: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_743) in
      pure(Specified(a_745))
    ) in
  store('signed int*', r, a_741) ;
  let strong _: loaded integer =
    bound(
      let weak (a_686: pointer, a_750: loaded integer) =
        unseq(
          let weak a_746: loaded pointer =
            let weak a_749: pointer = pure(r) in
            load('signed int*', a_749) in
          let Specified(a_747: pointer) = a_746 in
          let weak a_748: boolean =
            memop(PtrValidForDeref, 'signed int', a_747) in
          pure(
            if a_748 then
              a_747
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(11))
        ) in
      let weak _: unit =
        neg(store('signed int', a_686, conv_loaded_int('signed int', a_750))) in
      pure(conv_loaded_int('signed int', a_750))
    ) in
  pure(Unit) ;
  let strong a_751: loaded integer =
    bound(
      let weak (a_752: loaded pointer, a_753: loaded pointer) =
        unseq(
          let weak a_757: pointer = pure(r) in
          load('signed int*', a_757)
        ,
          let weak a_758: pointer = pure(p) in
          load('signed int*', a_758)
        ) in
      let (Specified(a_754: pointer), Specified(a_755: pointer)) =
        (a_752, a_753) in
      let weak a_756: boolean = memop(PtrEq, a_754, a_755) in
      pure(if a_756 then Specified(1) else Specified(0))
    ) in
  store('_Bool', b, conv_loaded_int('_Bool', a_751)) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_759: loaded pointer,
      (a_760: ctype, a_761: [ctype], a_762: boolean, a_763: boolean)),
      a_768: loaded pointer, a_772: loaded integer, a_774: loaded integer,
      a_780: loaded pointer) =
        unseq(
          let strong a_685: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_685, cfunction(a_685)))
        ,
          let weak a_770: pointer = pure(a_769) in
          let weak a_771: pointer = memop(PtrArrayShift, a_770, 'char', 0) in
          pure(Specified(a_771))
        ,
          let weak a_773: pointer = pure(x) in
          load('signed int', a_773)
        ,
          let weak a_779: pointer =
            let weak a_775: loaded pointer =
              let weak a_778: pointer = pure(r) in
              load('signed int*', a_778) in
            let Specified(a_776: pointer) = a_775 in
            let weak a_777: boolean =
              memop(PtrValidForDeref, 'signed int', a_776) in
            pure(
              if a_777 then
                a_776
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_779)
        ,
          let strong a_787: loaded integer =
            let weak (a_781: loaded integer, a_782: loaded integer) =
              unseq(
                let weak a_786: pointer = pure(b) in
                load('_Bool', a_786)
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_783: integer), Specified(a_784: integer)) =
                (a_781, a_782) in
              if conv_int('signed int', a_783) = conv_int('signed int', a_784) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_788: integer) = a_787 in
          if a_788 = 0 then
            let weak a_790: pointer = pure(a_789) in
            let weak a_791: pointer =
              memop(PtrArrayShift, a_790, 'char', 0) in
            pure(Specified(a_791))
          else
            let weak a_793: pointer = pure(a_792) in
            let weak a_794: pointer =
              memop(PtrArrayShift, a_793, 'char', 0) in
            pure(Specified(a_794))
        ) in
      if not(params_length(a_761) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_762) \/ not(are_compatible ('signed int', a_760)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_767: pointer =
            let a_795: ctype = params_nth(a_761, 0) in
            if not(are_compatible ('const char*', a_795)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_796: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_796, a_768) in
              pure(a_796) in
          let strong a_766: pointer =
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_772)) in
          let strong a_765: pointer =
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_774)) in
          let strong a_764: pointer =
            pcall(create_and_store, 'char*', a_780) in
          let strong a_797: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_759, a_767,
            [('signed int', a_766), ('signed int', a_765), ('char*', a_764)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_767)
            ,
              kill('signed int', a_766)
            ,
              kill('signed int', a_765)
            ,
              kill('char*', a_764)
            ) in
          pure(a_797)
    ) in
  pure(Unit) ;
  kill('signed int*', p) ;
  kill('uintptr_t', i) ;
  kill('signed int*', q) ;
  kill('uintptr_t', j) ;
  kill('signed int*', r) ;
  kill('_Bool', b) ;
  pure(Unit) ;
  save ret_684: loaded integer (a_798: loaded integer:= Specified(0)) in
    pure(a_798)

