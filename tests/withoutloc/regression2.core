proc main (): eff loaded integer :=
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_507: loaded integer =
    bound(
      let weak a_509: loaded integer = pure(Specified(1)) in
      pure(
        case a_509 of
          | Specified(a_508: integer) =>
              Specified(catch_exceptional_condition_sub('signed int', 0, conv_int('signed int',
              a_508)))
          | Unspecified(_: ctype) =>
              Unspecified('signed int')
        end
      )
    ) in
  store('signed int', x, conv_loaded_int('signed int', a_507)) ;
  let strong a_511: loaded integer =
    bound(
      let weak a_510: pointer = pure(x) in
      load('signed int', a_510)
    ) in
  kill('signed int', x) ;
  run ret_506(conv_loaded_int('signed int', a_511)) ;
  kill('signed int', x) ;
  pure(Unit) ;
  save ret_506: loaded integer (a_512: loaded integer:= Specified(0)) in
    pure(a_512)

