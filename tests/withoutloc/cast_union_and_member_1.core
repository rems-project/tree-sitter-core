-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def union __cerbty_unnamed_tag_646 :=
  i: 'signed int'
  f: 'float'

-- Globals
glob a_682: pointer [ail_ctype = 'char[17]'] :=
  create_readonly(Ivalignof('char[17]'), 'char[17]', Specified(Array(Specified(conv_int('char',
  117)), Specified(conv_int('char', 46)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 45)), Specified(conv_int('char', 62)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong u: pointer =
    create(Ivalignof('union __cerbty_unnamed_tag_646'), 'union __cerbty_unnamed_tag_646') in
  let strong pi: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong p: pointer =
    create(Ivalignof('union __cerbty_unnamed_tag_646*'), 'union __cerbty_unnamed_tag_646*') in
  let strong a_657: loaded union a_646 =
    bound(
      let weak a_658: loaded integer = pure(Specified(1)) in
      pure(
        Specified((union __cerbty_unnamed_tag_646){.i= conv_loaded_int('signed int',
        a_658)})
      )
    ) in
  store('union __cerbty_unnamed_tag_646', u, a_657) ;
  let strong a_659: loaded pointer =
    bound(
      let weak a_660: pointer =
        let strong a_661: pointer = pure(u) in
        memop(PtrArrayShift[__cerbty_unnamed_tag_646, i], a_661) in
      pure(Specified(a_660))
    ) in
  store('signed int*', pi, a_659) ;
  let strong a_662: loaded pointer =
    bound(
      let weak a_663: loaded pointer =
        let weak a_665: pointer = pure(pi) in
        load('signed int*', a_665) in
      let Specified(a_664: pointer) = a_663 in
      let weak a_666: boolean =
        memop(PtrWellAligned, 'union __cerbty_unnamed_tag_646', a_664) in
      pure(
        Specified(if a_666 then
          a_664
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('union __cerbty_unnamed_tag_646*', p, a_662) ;
  let strong _: loaded floating =
    bound(
      let weak (a_656: pointer, a_672: loaded floating) =
        unseq(
          let strong a_667: loaded pointer =
            let weak a_671: pointer = pure(p) in
            load('union __cerbty_unnamed_tag_646*', a_671) in
          let Specified(a_668: pointer) = a_667 in
          let weak a_669: boolean =
            memop(PtrValidForDeref, 'union __cerbty_unnamed_tag_646', a_668) in
          pure(
            if a_669 then
              member_shift(a_668, __cerbty_unnamed_tag_646, .f)
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(2.))
        ) in
      let weak _: unit = neg(store('float', a_656, a_672)) in
      pure(a_672)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_673: loaded pointer,
      (a_674: ctype, a_675: [ctype], a_676: boolean, a_677: boolean)),
      a_681: loaded pointer, a_685: loaded floating, a_688: loaded floating) =
        unseq(
          let strong a_655: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_655, cfunction(a_655)))
        ,
          let weak a_683: pointer = pure(a_682) in
          let weak a_684: pointer = memop(PtrArrayShift, a_683, 'char', 0) in
          pure(Specified(a_684))
        ,
          let weak a_687: pointer =
            let strong a_686: pointer = pure(u) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_646, f], a_686) in
          load('float', a_687)
        ,
          let weak a_694: pointer =
            let strong a_689: loaded pointer =
              let weak a_693: pointer = pure(p) in
              load('union __cerbty_unnamed_tag_646*', a_693) in
            let Specified(a_690: pointer) = a_689 in
            let weak a_691: boolean =
              memop(PtrValidForDeref, 'union __cerbty_unnamed_tag_646', a_690) in
            pure(
              if a_691 then
                member_shift(a_690, __cerbty_unnamed_tag_646, .f)
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('float', a_694)
        ) in
      if not(params_length(a_675) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_676) \/ not(are_compatible ('signed int', a_674)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_680: pointer =
            let a_695: ctype = params_nth(a_675, 0) in
            if not(are_compatible ('const char*', a_695)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_696: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_696, a_681) in
              pure(a_696) in
          let strong a_679: pointer =
            pcall(create_and_store, 'double', a_685) in
          let strong a_678: pointer =
            pcall(create_and_store, 'double', a_688) in
          let strong a_697: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_673, a_680,
            [('double', a_679), ('double', a_678)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_680)
            ,
              kill('double', a_679)
            ,
              kill('double', a_678)
            ) in
          pure(a_697)
    ) in
  pure(Unit) ;
  kill('union __cerbty_unnamed_tag_646', u) ;
  kill('signed int*', pi) ;
  kill('union __cerbty_unnamed_tag_646*', p) ;
  pure(Unit) ;
  save ret_654: loaded integer (a_698: loaded integer:= Specified(0)) in
    pure(a_698)

