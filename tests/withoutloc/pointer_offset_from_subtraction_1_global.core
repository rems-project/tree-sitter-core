-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_754 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_758 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_918: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_919: loaded integer = bound(pure(Specified(2))) in
  store('signed int', a_918, conv_loaded_int('signed int', a_919)) ;
  pure(a_918)

glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_916: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_917: loaded integer = bound(pure(Specified(1))) in
  store('signed int', a_916, conv_loaded_int('signed int', a_917)) ;
  pure(a_916)

glob a_817: pointer [ail_ctype = 'char[38]'] :=
  create_readonly(Ivalignof('char[38]'), 'char[38]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 38)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_893: pointer [ail_ctype = 'char[26]'] :=
  create_readonly(Ivalignof('char[26]'), 'char[26]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong ux: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong uy: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong offset: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_789: loaded integer =
    bound(
      let weak a_790: loaded pointer =
        let weak a_792: pointer = pure(x) in
        pure(Specified(a_792)) in
      let Specified(a_791: pointer) = a_790 in
      let weak a_793: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_791) in
      pure(Specified(a_793))
    ) in
  store('intptr_t', ux, conv_loaded_int('intptr_t', a_789)) ;
  let strong a_794: loaded integer =
    bound(
      let weak a_795: loaded pointer =
        let weak a_797: pointer = pure(y) in
        pure(Specified(a_797)) in
      let Specified(a_796: pointer) = a_795 in
      let weak a_798: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_796) in
      pure(Specified(a_798))
    ) in
  store('intptr_t', uy, conv_loaded_int('intptr_t', a_794)) ;
  let strong a_799: loaded integer =
    bound(
      let weak (a_802: loaded integer, a_803: loaded integer) =
        unseq(
          let weak a_800: pointer = pure(uy) in
          load('intptr_t', a_800)
        ,
          let weak a_801: pointer = pure(ux) in
          load('intptr_t', a_801)
        ) in
      pure(
        let (Specified(a_804: integer), Specified(a_805: integer)) =
          (a_802, a_803) in
        Specified(catch_exceptional_condition_sub('intptr_t', conv_int('intptr_t',
        a_804), conv_int('intptr_t', a_805)))
      )
    ) in
  store('intptr_t', offset, conv_loaded_int('intptr_t', a_799)) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_807: loaded pointer,
      (a_808: ctype, a_809: [ctype], a_810: boolean, a_811: boolean)),
      a_816: loaded pointer, a_820: loaded integer, a_822: loaded integer,
      a_824: loaded integer) =
        unseq(
          let strong a_788: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_788, cfunction(a_788)))
        ,
          let weak a_818: pointer = pure(a_817) in
          let weak a_819: pointer = memop(PtrArrayShift, a_818, 'char', 0) in
          pure(Specified(a_819))
        ,
          let weak a_821: pointer = pure(ux) in
          load('intptr_t', a_821)
        ,
          let weak a_823: pointer = pure(uy) in
          load('intptr_t', a_823)
        ,
          let weak a_825: pointer = pure(offset) in
          load('intptr_t', a_825)
        ) in
      if not(params_length(a_809) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_810) \/ not(are_compatible ('signed int', a_808)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_815: pointer =
            let a_826: ctype = params_nth(a_809, 0) in
            if not(are_compatible ('const char*', a_826)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_827: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_827, a_816) in
              pure(a_827) in
          let strong a_814: pointer =
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_820)) in
          let strong a_813: pointer =
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_822)) in
          let strong a_812: pointer =
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_824)) in
          let strong a_828: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_807, a_815,
            [('intptr_t', a_814), ('intptr_t', a_813), ('intptr_t', a_812)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_815)
            ,
              kill('intptr_t', a_814)
            ,
              kill('intptr_t', a_813)
            ,
              kill('intptr_t', a_812)
            ) in
          pure(a_828)
    ) in
  pure(Unit) ;
  let strong a_829: loaded pointer =
    bound(
      let weak a_830: loaded integer =
        let weak (a_832: loaded integer, a_833: loaded integer) =
          unseq(
            let weak a_837: pointer = pure(ux) in
            load('intptr_t', a_837)
          ,
            let weak a_838: pointer = pure(offset) in
            load('intptr_t', a_838)
          ) in
        pure(
          let (Specified(a_834: integer), Specified(a_835: integer)) =
            (a_832, a_833) in
          Specified(catch_exceptional_condition_add('intptr_t', __conv_int__('intptr_t', a_834), __conv_int__('intptr_t', a_835)))
        ) in
      let Specified(a_831: integer) = a_830 in
      let weak a_839: pointer =
        memop(PtrFromInt, 'intptr_t', 'signed int', a_831) in
      pure(Specified(a_839))
    ) in
  store('signed int*', p, a_829) ;
  let strong a_840: loaded pointer =
    bound(
      let weak a_841: pointer = pure(y) in
      pure(Specified(a_841))
    ) in
  store('signed int*', q, a_840) ;
  let strong a_842: loaded integer =
    bound(
      let weak (a_844: loaded integer, a_845: loaded integer) =
        unseq(
          let weak (a_849: loaded integer, a_850: loaded integer) =
            unseq(
              let strong ((a_855: loaded pointer,
              (a_856: ctype, a_857: [ctype], a_858: boolean, a_859: boolean)),
              a_863: loaded pointer, a_865: loaded pointer,
              a_867: loaded integer) =
                unseq(
                  let strong a_854: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_854, cfunction(a_854)))
                ,
                  let weak a_864: pointer = pure(p) in
                  pure(Specified(a_864))
                ,
                  let weak a_866: pointer = pure(q) in
                  pure(Specified(a_866))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_857) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_858 \/ not(are_compatible ('signed int', a_856)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_862: pointer =
                    let a_868: ctype = params_nth(a_857, 0) in
                    if not(are_compatible ('const void*', a_868)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_869: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit = store('const void*', a_869, a_863) in
                      pure(a_869) in
                  let strong a_861: pointer =
                    let a_870: ctype = params_nth(a_857, 1) in
                    if not(are_compatible ('const void*', a_870)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_871: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit = store('const void*', a_871, a_865) in
                      pure(a_871) in
                  let strong a_860: pointer =
                    let a_872: ctype = params_nth(a_857, 2) in
                    if not(are_compatible ('size_t', a_872)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_873: pointer =
                        create(Ivalignof('size_t'), 'size_t') in
                      let weak _: unit =
                        store('size_t', a_873,
                        conv_loaded_int('size_t', a_867)) in
                      pure(a_873) in
                  let strong a_874: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_855, a_862, a_861, a_860) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_862)
                    ,
                      kill('void*', a_861)
                    ,
                      kill('size_t', a_860)
                    ) in
                  pure(a_874)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_851: integer), Specified(a_852: integer)) =
              (a_849, a_850) in
            if conv_int('signed int', a_851) = conv_int('signed int', a_852) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_846: integer), Specified(a_847: integer)) =
          (a_844, a_845) in
        if conv_int('signed int', a_846) = conv_int('signed int', a_847) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_787: boolean =
    let Specified(a_843: integer) = a_842 in
    pure(if not(a_843 = 1) then True else False) in
  if a_787 then
    let strong _: loaded integer =
      bound(
        let weak (a_876: pointer, a_881: loaded integer) =
          unseq(
            let weak a_877: loaded pointer =
              let weak a_880: pointer = pure(p) in
              load('signed int*', a_880) in
            let Specified(a_878: pointer) = a_877 in
            let weak a_879: boolean =
              memop(PtrValidForDeref, 'signed int', a_878) in
            pure(
              if a_879 then
                a_878
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          neg(store('signed int', a_876, conv_loaded_int('signed int', a_881))) in
        pure(conv_loaded_int('signed int', a_881))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      bound(
        let strong ((a_882: loaded pointer,
        (a_883: ctype, a_884: [ctype], a_885: boolean, a_886: boolean)),
        a_892: loaded pointer, a_896: loaded integer, a_898: loaded integer,
        a_900: loaded integer, a_906: loaded integer) =
          unseq(
            let strong a_875: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_875, cfunction(a_875)))
          ,
            let weak a_894: pointer = pure(a_893) in
            let weak a_895: pointer =
              memop(PtrArrayShift, a_894, 'char', 0) in
            pure(Specified(a_895))
          ,
            let weak a_897: pointer = pure(x) in
            load('signed int', a_897)
          ,
            let weak a_899: pointer = pure(y) in
            load('signed int', a_899)
          ,
            let weak a_905: pointer =
              let weak a_901: loaded pointer =
                let weak a_904: pointer = pure(p) in
                load('signed int*', a_904) in
              let Specified(a_902: pointer) = a_901 in
              let weak a_903: boolean =
                memop(PtrValidForDeref, 'signed int', a_902) in
              pure(
                if a_903 then
                  a_902
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_905)
          ,
            let weak a_911: pointer =
              let weak a_907: loaded pointer =
                let weak a_910: pointer = pure(q) in
                load('signed int*', a_910) in
              let Specified(a_908: pointer) = a_907 in
              let weak a_909: boolean =
                memop(PtrValidForDeref, 'signed int', a_908) in
              pure(
                if a_909 then
                  a_908
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_911)
          ) in
        if not(params_length(a_884) <= 5) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_885) \/ not(are_compatible ('signed int', a_883)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_891: pointer =
              let a_912: ctype = params_nth(a_884, 0) in
              if not(are_compatible ('const char*', a_912)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                let weak a_913: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_913, a_892) in
                pure(a_913) in
            let strong a_890: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_896)) in
            let strong a_889: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_898)) in
            let strong a_888: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_900)) in
            let strong a_887: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_906)) in
            let strong a_914: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_882, a_891,
              [('signed int', a_890), ('signed int', a_889),
              ('signed int', a_888), ('signed int', a_887)]) in
            let strong _: (unit,unit,unit,unit,unit) =
              unseq(
                kill('char*', a_891)
              ,
                kill('signed int', a_890)
              ,
                kill('signed int', a_889)
              ,
                kill('signed int', a_888)
              ,
                kill('signed int', a_887)
              ) in
            pure(a_914)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  kill('intptr_t', ux) ;
  kill('intptr_t', uy) ;
  kill('intptr_t', offset) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_786: loaded integer (a_915: loaded integer:= Specified(0)) in
    pure(a_915)

