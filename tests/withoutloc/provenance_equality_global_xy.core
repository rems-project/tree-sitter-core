-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_810: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_811: loaded integer = bound(pure(Specified(1))) in
  store('signed int', a_810, conv_loaded_int('signed int', a_811)) ;
  pure(a_810)

glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_808: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_809: loaded integer = bound(pure(Specified(2))) in
  store('signed int', a_808, conv_loaded_int('signed int', a_809)) ;
  pure(a_808)

glob a_753: pointer [ail_ctype = 'char[22]'] :=
  create_readonly(Ivalignof('char[22]'), 'char[22]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_785: pointer [ail_ctype = 'char[13]'] :=
  create_readonly(Ivalignof('char[13]'), 'char[13]', Specified(Array(Specified(conv_int('char',
  40)), Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_797: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_800: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong b: pointer = create(Ivalignof('_Bool'), '_Bool') in
  let strong a_735: loaded pointer =
    bound(
      let weak (a_736: loaded pointer, a_738: loaded integer) =
        unseq(
          let weak a_741: pointer = pure(x) in
          pure(Specified(a_741))
        ,
          pure(Specified(1))
        ) in
      let (Specified(a_737: pointer), Specified(a_739: integer)) =
        (a_736, a_738) in
      let weak a_740: pointer =
        memop(PtrArrayShift, a_737, 'signed int', a_739) in
      pure(Specified(a_740))
    ) in
  store('signed int*', p, a_735) ;
  let strong a_742: loaded pointer =
    bound(
      let weak a_743: pointer = pure(y) in
      pure(Specified(a_743))
    ) in
  store('signed int*', q, a_742) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_744: loaded pointer,
      (a_745: ctype, a_746: [ctype], a_747: boolean, a_748: boolean)),
      a_752: loaded pointer, a_756: loaded pointer, a_761: loaded pointer) =
        unseq(
          let strong a_734: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_734, cfunction(a_734)))
        ,
          let weak a_754: pointer = pure(a_753) in
          let weak a_755: pointer = memop(PtrArrayShift, a_754, 'char', 0) in
          pure(Specified(a_755))
        ,
          let weak a_759: pointer = pure(p) in
          load('signed int*', a_759)
        ,
          let weak a_764: pointer = pure(q) in
          load('signed int*', a_764)
        ) in
      if not(params_length(a_746) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_747) \/ not(are_compatible ('signed int', a_745)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_751: pointer =
            let a_766: ctype = params_nth(a_746, 0) in
            if not(are_compatible ('const char*', a_766)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_767: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_767, a_752) in
              pure(a_767) in
          let strong a_750: pointer =
            pcall(create_and_store, 'void*', a_756) in
          let strong a_749: pointer =
            pcall(create_and_store, 'void*', a_761) in
          let strong a_768: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_744, a_751,
            [('void*', a_750), ('void*', a_749)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_751)
            ,
              kill('void*', a_750)
            ,
              kill('void*', a_749)
            ) in
          pure(a_768)
    ) in
  pure(Unit) ;
  let strong a_769: loaded integer =
    bound(
      let weak (a_770: loaded pointer, a_771: loaded pointer) =
        unseq(
          let weak a_775: pointer = pure(p) in
          load('signed int*', a_775)
        ,
          let weak a_776: pointer = pure(q) in
          load('signed int*', a_776)
        ) in
      let (Specified(a_772: pointer), Specified(a_773: pointer)) =
        (a_770, a_771) in
      let weak a_774: boolean = memop(PtrEq, a_772, a_773) in
      pure(if a_774 then Specified(1) else Specified(0))
    ) in
  store('_Bool', b, conv_loaded_int('_Bool', a_769)) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_777: loaded pointer,
      (a_778: ctype, a_779: [ctype], a_780: boolean, a_781: boolean)),
      a_784: loaded pointer, a_788: loaded pointer) =
        unseq(
          let strong a_733: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_733, cfunction(a_733)))
        ,
          let weak a_786: pointer = pure(a_785) in
          let weak a_787: pointer = memop(PtrArrayShift, a_786, 'char', 0) in
          pure(Specified(a_787))
        ,
          let strong a_795: loaded integer =
            let weak (a_789: loaded integer, a_790: loaded integer) =
              unseq(
                let weak a_794: pointer = pure(b) in
                load('_Bool', a_794)
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_791: integer), Specified(a_792: integer)) =
                (a_789, a_790) in
              if conv_int('signed int', a_791) = conv_int('signed int', a_792) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_796: integer) = a_795 in
          if a_796 = 0 then
            let weak a_798: pointer = pure(a_797) in
            let weak a_799: pointer =
              memop(PtrArrayShift, a_798, 'char', 0) in
            pure(Specified(a_799))
          else
            let weak a_801: pointer = pure(a_800) in
            let weak a_802: pointer =
              memop(PtrArrayShift, a_801, 'char', 0) in
            pure(Specified(a_802))
        ) in
      if not(params_length(a_779) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_780) \/ not(are_compatible ('signed int', a_778)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_783: pointer =
            let a_803: ctype = params_nth(a_779, 0) in
            if not(are_compatible ('const char*', a_803)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_804: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_804, a_784) in
              pure(a_804) in
          let strong a_782: pointer =
            pcall(create_and_store, 'char*', a_788) in
          let strong a_805: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_777, a_783,
            [('char*', a_782)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_783), kill('char*', a_782)) in
          pure(a_805)
    ) in
  pure(Unit) ;
  let strong a_806: loaded integer = bound(pure(Specified(0))) in
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  kill('_Bool', b) ;
  run ret_732(conv_loaded_int('signed int', a_806)) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  kill('_Bool', b) ;
  pure(Unit) ;
  save ret_732: loaded integer (a_807: loaded integer:= Specified(0)) in
    pure(a_807)

