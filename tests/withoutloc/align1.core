-- Aggregates
def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_775 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_779 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

def struct my_header :=
  x: 'size_t'

-- Globals
glob a_929: pointer [ail_ctype = 'char[20]'] :=
  create_readonly(Ivalignof('char[20]'), 'char[20]', Specified(Array(Specified(conv_int('char',
  97)), Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 103)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 40)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 41)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 122)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_949: pointer [ail_ctype = 'char[31]'] :=
  create_readonly(Ivalignof('char[31]'), 'char[31]', Specified(Array(Specified(conv_int('char',
  115)), Specified(conv_int('char', 105)), Specified(conv_int('char', 122)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 109)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 104)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 58)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 122)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_982: pointer [ail_ctype = 'char[8]'] :=
  create_readonly(Ivalignof('char[8]'), 'char[8]', Specified(Array(Specified(conv_int('char',
  80)), Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_1023: pointer [ail_ctype = 'char[10]'] :=
  create_readonly(Ivalignof('char[10]'), 'char[10]', Specified(Array(Specified(conv_int('char',
  86)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_1098: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  110)), Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0))))

glob a_1102: pointer [ail_ctype = 'char[9]'] :=
  create_readonly(Ivalignof('char[9]'), 'char[9]', Specified(Array(Specified(conv_int('char',
  110)), Specified(conv_int('char', 111)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(0))))

glob a_1128: pointer [ail_ctype = 'char[4]'] :=
  create_readonly(Ivalignof('char[4]'), 'char[4]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 115)), Specified(conv_int('char', 32)),
  Specified(0))))

glob a_1169: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 48)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 120)), Specified(0))))

glob a_1216: pointer [ail_ctype = 'char[2]'] :=
  create_readonly(Ivalignof('char[2]'), 'char[2]', Specified(Array(Specified(conv_int('char',
  10)), Specified(0))))

glob a_1290: pointer [ail_ctype = 'char[26]'] :=
  create_readonly(Ivalignof('char[26]'), 'char[26]', Specified(Array(Specified(conv_int('char',
  109)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 96)),
  Specified(0))))

glob a_1305: pointer [ail_ctype = 'char[4]'] :=
  create_readonly(Ivalignof('char[4]'), 'char[4]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 35)), Specified(conv_int('char', 112)),
  Specified(0))))

glob a_1345: pointer [ail_ctype = 'char[31]'] :=
  create_readonly(Ivalignof('char[31]'), 'char[31]', Specified(Array(Specified(conv_int('char',
  109)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 111)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 40)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 110)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 96)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 95)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 96)), Specified(0))))

glob a_1360: pointer [ail_ctype = 'char[27]'] :=
  create_readonly(Ivalignof('char[27]'), 'char[27]', Specified(Array(Specified(conv_int('char',
  37)), Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 91)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 80)), Specified(conv_int('char', 44)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 35)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 98)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 45)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 35)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 93)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 63)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 65)), Specified(0))))

glob a_1401: pointer [ail_ctype = 'char[15]'] :=
  create_readonly(Ivalignof('char[15]'), 'char[15]', Specified(Array(Specified(conv_int('char',
  115)), Specified(conv_int('char', 116)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc my_malloc_wrapper (size: pointer): eff loaded pointer :=
  let strong p: pointer = create(Ivalignof('void*'), 'void*') in
  let strong a_1045: loaded pointer =
    bound(
      let strong ((a_1047: loaded pointer,
      (a_1048: ctype, a_1049: [ctype], a_1050: boolean, a_1051: boolean)),
      a_1053: loaded integer) =
        unseq(
          let strong a_1046: loaded pointer =
            pure(Specified(Cfunction(malloc_proxy))) in
          pure((a_1046, cfunction(a_1046)))
        ,
          let weak (a_1054: loaded integer, a_1055: loaded integer) =
            unseq(
              pure(Specified(Ivsizeof('struct my_header')))
            ,
              let weak a_1059: pointer = pure(size) in
              load('size_t', a_1059)
            ) in
          pure(
            case (a_1054, a_1055) of
              | (Specified(a_1056: integer), Specified(a_1057: integer)) =>
                  Specified(wrapI_add('size_t', __conv_int__('size_t', a_1056), __conv_int__('size_t', a_1057)))
              | _: (loaded integer,loaded integer) =>
                  Unspecified('size_t')
            end
          )
        ) in
      if not(params_length(a_1049) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_1050 \/ not(are_compatible ('void*', a_1048)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1052: pointer =
            let a_1060: ctype = params_nth(a_1049, 0) in
            if not(are_compatible ('size_t', a_1060)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_1061: pointer =
                create(Ivalignof('size_t'), 'size_t') in
              let weak _: unit =
                store('size_t', a_1061, conv_loaded_int('size_t', a_1053)) in
              pure(a_1061) in
          let strong a_1062: loaded pointer =
            ccall('void* (*) (size_t)', a_1047, a_1052) in
          kill('size_t', a_1052) ;
          pure(a_1062)
    ) in
  store('void*', p, a_1045) ;
  let strong _: loaded integer =
    bound(
      let weak (a_1044: pointer, a_1072: loaded integer) =
        unseq(
          let strong a_1063: loaded pointer =
            let weak a_1067: loaded pointer =
              let weak a_1069: pointer = pure(p) in
              load('void*', a_1069) in
            case a_1067 of
              | Specified(a_1068: pointer) =>
                  let weak a_1070: boolean =
                    memop(PtrWellAligned, 'struct my_header', a_1068) in
                  pure(
                    Specified(if a_1070 then
                      a_1068
                    else
                      undef(<<UB025_misaligned_pointer_conversion>>))
                  )
              | Unspecified(_: ctype) =>
                  pure(undef(<<UB025_misaligned_pointer_conversion>>))
            end in
          case a_1063 of
            | Unspecified(_: ctype) =>
                pure(undef(<<UB_CERB004_unspecified__memberofptr>>))
            | Specified(a_1064: pointer) =>
                let weak a_1065: boolean =
                  memop(PtrValidForDeref, 'struct my_header', a_1064) in
                if a_1065 then
                  let weak a_1066: pointer =
                    memop(PtrArrayShift[my_header, x], a_1064) in
                  pure(a_1066)
                else
                  pure(undef(<<UB043_indirection_invalid_value>>))
          end
        ,
          let weak a_1071: pointer = pure(size) in
          load('size_t', a_1071)
        ) in
      let weak _: unit =
        neg(store('size_t', a_1044, conv_loaded_int('size_t', a_1072))) in
      pure(conv_loaded_int('size_t', a_1072))
    ) in
  pure(Unit) ;
  let strong a_1082: loaded pointer =
    bound(
      let weak (a_1073: loaded pointer, a_1075: loaded integer) =
        unseq(
          let weak a_1078: loaded pointer =
            let weak a_1080: pointer = pure(p) in
            load('void*', a_1080) in
          case a_1078 of
            | Specified(a_1079: pointer) =>
                let weak a_1081: boolean =
                  memop(PtrWellAligned, 'char', a_1079) in
                pure(
                  Specified(if a_1081 then
                    a_1079
                  else
                    undef(<<UB025_misaligned_pointer_conversion>>))
                )
            | Unspecified(_: ctype) =>
                pure(undef(<<UB025_misaligned_pointer_conversion>>))
          end
        ,
          pure(Specified(Ivsizeof('struct my_header')))
        ) in
      case (a_1073, a_1075) of
        | (Specified(a_1074: pointer), Specified(a_1076: integer)) =>
            let weak a_1077: pointer =
              memop(PtrArrayShift, a_1074, 'char', a_1076) in
            pure(Specified(a_1077))
        | _: (loaded pointer,loaded integer) =>
            pure(undef(<<UB_CERB004_unspecified__pointer_add>>))
      end
    ) in
  kill('void*', p) ;
  run ret_1043(a_1082) ;
  kill('void*', p) ;
  pure(Unit) ;
  save ret_1043: loaded pointer (a_1083: loaded pointer:= undef(<<UB088_reached_end_of_function>>)) in
    pure(a_1083)

proc main (): eff loaded integer :=
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong p: pointer = create(Ivalignof('signed int**'), 'signed int**') in
  let strong _: loaded integer =
    bound(
      let strong ((a_918: loaded pointer,
      (a_919: ctype, a_920: [ctype], a_921: boolean, a_922: boolean)),
      a_926: loaded pointer, a_928: loaded pointer, a_932: loaded integer) =
        unseq(
          let strong a_917: loaded pointer =
            pure(Specified(Cfunction(fprintf))) in
          pure((a_917, cfunction(a_917)))
        ,
          let weak a_927: pointer = pure(__stderr) in
          load('struct _IO_FILE*', a_927)
        ,
          let weak a_930: pointer = pure(a_929) in
          let weak a_931: pointer = memop(PtrArrayShift, a_930, 'char', 0) in
          pure(Specified(a_931))
        ,
          pure(Specified(Ivalignof('signed int*')))
        ) in
      if not(params_length(a_920) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_921) \/ not(are_compatible ('signed int', a_919)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_925: pointer =
            let a_933: ctype = params_nth(a_920, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_933)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_934: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_934, a_926) in
              pure(a_934) in
          let strong a_924: pointer =
            let a_935: ctype = params_nth(a_920, 1) in
            if not(are_compatible ('const char*', a_935)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_936: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_936, a_928) in
              pure(a_936) in
          let strong a_923: pointer =
            pcall(create_and_store, 'size_t', conv_loaded_int('size_t', a_932)) in
          let strong a_937: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_918, a_925, a_924, [('size_t', a_923)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_925)
            ,
              kill('char*', a_924)
            ,
              kill('size_t', a_923)
            ) in
          pure(a_937)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_938: loaded pointer,
      (a_939: ctype, a_940: [ctype], a_941: boolean, a_942: boolean)),
      a_946: loaded pointer, a_948: loaded pointer, a_952: loaded integer) =
        unseq(
          let strong a_916: loaded pointer =
            pure(Specified(Cfunction(fprintf))) in
          pure((a_916, cfunction(a_916)))
        ,
          let weak a_947: pointer = pure(__stderr) in
          load('struct _IO_FILE*', a_947)
        ,
          let weak a_950: pointer = pure(a_949) in
          let weak a_951: pointer = memop(PtrArrayShift, a_950, 'char', 0) in
          pure(Specified(a_951))
        ,
          pure(Specified(Ivsizeof('struct my_header')))
        ) in
      if not(params_length(a_940) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_941) \/ not(are_compatible ('signed int', a_939)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_945: pointer =
            let a_953: ctype = params_nth(a_940, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_953)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_954: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_954, a_946) in
              pure(a_954) in
          let strong a_944: pointer =
            let a_955: ctype = params_nth(a_940, 1) in
            if not(are_compatible ('const char*', a_955)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_956: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_956, a_948) in
              pure(a_956) in
          let strong a_943: pointer =
            pcall(create_and_store, 'size_t', conv_loaded_int('size_t', a_952)) in
          let strong a_957: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_938, a_945, a_944, [('size_t', a_943)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_945)
            ,
              kill('char*', a_944)
            ,
              kill('size_t', a_943)
            ) in
          pure(a_957)
    ) in
  pure(Unit) ;
  let strong a_958: loaded integer = bound(pure(Specified(42))) in
  store('signed int', x, conv_loaded_int('signed int', a_958)) ;
  let strong a_959: loaded pointer =
    bound(
      let strong ((a_961: loaded pointer,
      (a_962: ctype, a_963: [ctype], a_964: boolean, a_965: boolean)),
      a_967: loaded integer) =
        unseq(
          let strong a_960: loaded pointer =
            pure(Specified(Cfunction(my_malloc_wrapper))) in
          pure((a_960, cfunction(a_960)))
        ,
          pure(Specified(Ivsizeof('signed int*')))
        ) in
      if not(params_length(a_963) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_964 \/ not(are_compatible ('void*', a_962)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_966: pointer =
            let a_968: ctype = params_nth(a_963, 0) in
            if not(are_compatible ('size_t', a_968)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_969: pointer =
                create(Ivalignof('size_t'), 'size_t') in
              let weak _: unit =
                store('size_t', a_969, conv_loaded_int('size_t', a_967)) in
              pure(a_969) in
          let strong a_970: loaded pointer =
            ccall('void* (*) (size_t)', a_961, a_966) in
          kill('size_t', a_966) ;
          pure(a_970)
    ) in
  store('signed int**', p, a_959) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_971: loaded pointer,
      (a_972: ctype, a_973: [ctype], a_974: boolean, a_975: boolean)),
      a_979: loaded pointer, a_981: loaded pointer, a_985: loaded pointer) =
        unseq(
          let strong a_915: loaded pointer =
            pure(Specified(Cfunction(fprintf))) in
          pure((a_915, cfunction(a_915)))
        ,
          let weak a_980: pointer = pure(__stderr) in
          load('struct _IO_FILE*', a_980)
        ,
          let weak a_983: pointer = pure(a_982) in
          let weak a_984: pointer = memop(PtrArrayShift, a_983, 'char', 0) in
          pure(Specified(a_984))
        ,
          let strong ((a_987: loaded pointer,
          (a_988: ctype, a_989: [ctype], a_990: boolean, a_991: boolean)),
          a_993: loaded pointer) =
            unseq(
              let strong a_986: loaded pointer =
                pure(Specified(Cfunction(sptr))) in
              pure((a_986, cfunction(a_986)))
            ,
              let weak a_996: pointer = pure(p) in
              load('signed int**', a_996)
            ) in
          if not(params_length(a_989) = 1) then
            pure(undef(<<UB038_number_of_args>>))
          else
            if a_990 \/ not(are_compatible ('const char*', a_988)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let strong a_992: pointer =
                let a_998: ctype = params_nth(a_989, 0) in
                if not(are_compatible ('void*', a_998)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let weak a_999: pointer =
                    create(Ivalignof('void*'), 'void*') in
                  let weak _: unit = store('void*', a_999, a_993) in
                  pure(a_999) in
              let strong a_1000: loaded pointer =
                ccall('const char* (*) (void*)', a_987, a_992) in
              kill('void*', a_992) ;
              pure(a_1000)
        ) in
      if not(params_length(a_973) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_974) \/ not(are_compatible ('signed int', a_972)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_978: pointer =
            let a_1001: ctype = params_nth(a_973, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1001)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_1002: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1002, a_979) in
              pure(a_1002) in
          let strong a_977: pointer =
            let a_1003: ctype = params_nth(a_973, 1) in
            if not(are_compatible ('const char*', a_1003)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_1004: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1004, a_981) in
              pure(a_1004) in
          let strong a_976: pointer =
            pcall(create_and_store, 'const char*', a_985) in
          let strong a_1005: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_971, a_978, a_977, [('const char*', a_976)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_978)
            ,
              kill('char*', a_977)
            ,
              kill('char*', a_976)
            ) in
          pure(a_1005)
    ) in
  pure(Unit) ;
  let strong _: loaded pointer =
    bound(
      let weak (a_914: pointer, a_1011: loaded pointer) =
        unseq(
          let weak a_1006: loaded pointer =
            let weak a_1009: pointer = pure(p) in
            load('signed int**', a_1009) in
          case a_1006 of
            | Specified(a_1007: pointer) =>
                let weak a_1008: boolean =
                  memop(PtrValidForDeref, 'signed int*', a_1007) in
                pure(
                  if a_1008 then
                    a_1007
                  else
                    undef(<<UB043_indirection_invalid_value>>)
                )
            | Unspecified(_: ctype) =>
                pure(undef(<<UB043_indirection_invalid_value>>))
          end
        ,
          let weak a_1010: pointer = pure(x) in
          pure(Specified(a_1010))
        ) in
      let weak _: unit = neg(store('signed int*', a_914, a_1011)) in
      pure(a_1011)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_1012: loaded pointer,
      (a_1013: ctype, a_1014: [ctype], a_1015: boolean, a_1016: boolean)),
      a_1020: loaded pointer, a_1022: loaded pointer, a_1026: loaded integer) =
        unseq(
          let strong a_913: loaded pointer =
            pure(Specified(Cfunction(fprintf))) in
          pure((a_913, cfunction(a_913)))
        ,
          let weak a_1021: pointer = pure(__stderr) in
          load('struct _IO_FILE*', a_1021)
        ,
          let weak a_1024: pointer = pure(a_1023) in
          let weak a_1025: pointer =
            memop(PtrArrayShift, a_1024, 'char', 0) in
          pure(Specified(a_1025))
        ,
          let weak a_1035: pointer =
            let weak a_1027: loaded pointer =
              let weak a_1034: pointer =
                let weak a_1030: loaded pointer =
                  let weak a_1033: pointer = pure(p) in
                  load('signed int**', a_1033) in
                case a_1030 of
                  | Specified(a_1031: pointer) =>
                      let weak a_1032: boolean =
                        memop(PtrValidForDeref, 'signed int*', a_1031) in
                      pure(
                        if a_1032 then
                          a_1031
                        else
                          undef(<<UB043_indirection_invalid_value>>)
                      )
                  | Unspecified(_: ctype) =>
                      pure(undef(<<UB043_indirection_invalid_value>>))
                end in
              load('signed int*', a_1034) in
            case a_1027 of
              | Specified(a_1028: pointer) =>
                  let weak a_1029: boolean =
                    memop(PtrValidForDeref, 'signed int', a_1028) in
                  pure(
                    if a_1029 then
                      a_1028
                    else
                      undef(<<UB043_indirection_invalid_value>>)
                  )
              | Unspecified(_: ctype) =>
                  pure(undef(<<UB043_indirection_invalid_value>>))
            end in
          load('signed int', a_1035)
        ) in
      if not(params_length(a_1014) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_1015) \/ not(are_compatible ('signed int', a_1013)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_1019: pointer =
            let a_1036: ctype = params_nth(a_1014, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_1036)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_1037: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_1037, a_1020) in
              pure(a_1037) in
          let strong a_1018: pointer =
            let a_1038: ctype = params_nth(a_1014, 1) in
            if not(are_compatible ('const char*', a_1038)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_1039: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_1039, a_1022) in
              pure(a_1039) in
          let strong a_1017: pointer =
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_1026)) in
          let strong a_1040: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_1012, a_1019, a_1018, [('signed int', a_1017)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_1019)
            ,
              kill('char*', a_1018)
            ,
              kill('signed int', a_1017)
            ) in
          pure(a_1040)
    ) in
  pure(Unit) ;
  kill('signed int', x) ;
  kill('signed int**', p) ;
  pure(Unit) ;
  save ret_912: loaded integer (a_1041: loaded integer:= Specified(0)) in
    pure(a_1041)

