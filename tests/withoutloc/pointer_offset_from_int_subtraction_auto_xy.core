-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_754 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_758 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob a_819: pointer [ail_ctype = 'char[38]'] :=
  create_readonly(Ivalignof('char[38]'), 'char[38]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 38)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_904: pointer [ail_ctype = 'char[23]'] :=
  create_readonly(Ivalignof('char[23]'), 'char[23]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong y: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong ux: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong uy: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong offset: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_789: loaded integer = bound(pure(Specified(1))) in
  store('signed int', x, conv_loaded_int('signed int', a_789)) ;
  let strong a_790: loaded integer = bound(pure(Specified(2))) in
  store('signed int', y, conv_loaded_int('signed int', a_790)) ;
  let strong a_791: loaded integer =
    bound(
      let weak a_792: loaded pointer =
        let weak a_794: pointer = pure(x) in
        pure(Specified(a_794)) in
      let Specified(a_793: pointer) = a_792 in
      let weak a_795: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_793) in
      pure(Specified(a_795))
    ) in
  store('uintptr_t', ux, conv_loaded_int('uintptr_t', a_791)) ;
  let strong a_796: loaded integer =
    bound(
      let weak a_797: loaded pointer =
        let weak a_799: pointer = pure(y) in
        pure(Specified(a_799)) in
      let Specified(a_798: pointer) = a_797 in
      let weak a_800: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_798) in
      pure(Specified(a_800))
    ) in
  store('uintptr_t', uy, conv_loaded_int('uintptr_t', a_796)) ;
  let strong a_801: loaded integer =
    bound(
      let weak (a_804: loaded integer, a_805: loaded integer) =
        unseq(
          let weak a_802: pointer = pure(uy) in
          load('uintptr_t', a_802)
        ,
          let weak a_803: pointer = pure(ux) in
          load('uintptr_t', a_803)
        ) in
      pure(
        let (Specified(a_806: integer), Specified(a_807: integer)) =
          (a_804, a_805) in
        Specified(wrapI_sub('uintptr_t', conv_int('uintptr_t', a_806), conv_int('uintptr_t',
        a_807)))
      )
    ) in
  store('uintptr_t', offset, conv_loaded_int('uintptr_t', a_801)) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_809: loaded pointer,
      (a_810: ctype, a_811: [ctype], a_812: boolean, a_813: boolean)),
      a_818: loaded pointer, a_822: loaded integer, a_827: loaded integer,
      a_832: loaded integer) =
        unseq(
          let strong a_788: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_788, cfunction(a_788)))
        ,
          let weak a_820: pointer = pure(a_819) in
          let weak a_821: pointer = memop(PtrArrayShift, a_820, 'char', 0) in
          pure(Specified(a_821))
        ,
          let weak a_823: loaded integer =
            let weak a_825: pointer = pure(ux) in
            load('uintptr_t', a_825) in
          pure(conv_loaded_int('unsigned long', a_823))
        ,
          let weak a_828: loaded integer =
            let weak a_830: pointer = pure(uy) in
            load('uintptr_t', a_830) in
          pure(conv_loaded_int('unsigned long', a_828))
        ,
          let weak a_833: loaded integer =
            let weak a_835: pointer = pure(offset) in
            load('uintptr_t', a_835) in
          pure(conv_loaded_int('unsigned long', a_833))
        ) in
      if not(params_length(a_811) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_812) \/ not(are_compatible ('signed int', a_810)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_817: pointer =
            let a_837: ctype = params_nth(a_811, 0) in
            if not(are_compatible ('const char*', a_837)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_838: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_838, a_818) in
              pure(a_838) in
          let strong a_816: pointer =
            pcall(create_and_store, 'unsigned long',
            conv_loaded_int('unsigned long', a_822)) in
          let strong a_815: pointer =
            pcall(create_and_store, 'unsigned long',
            conv_loaded_int('unsigned long', a_827)) in
          let strong a_814: pointer =
            pcall(create_and_store, 'unsigned long',
            conv_loaded_int('unsigned long', a_832)) in
          let strong a_839: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_809, a_817,
            [('unsigned long', a_816), ('unsigned long', a_815),
            ('unsigned long', a_814)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_817)
            ,
              kill('unsigned long', a_816)
            ,
              kill('unsigned long', a_815)
            ,
              kill('unsigned long', a_814)
            ) in
          pure(a_839)
    ) in
  pure(Unit) ;
  let strong a_840: loaded pointer =
    bound(
      let weak a_841: loaded integer =
        let weak (a_843: loaded integer, a_844: loaded integer) =
          unseq(
            let weak a_848: pointer = pure(ux) in
            load('uintptr_t', a_848)
          ,
            let weak a_849: pointer = pure(offset) in
            load('uintptr_t', a_849)
          ) in
        pure(
          let (Specified(a_845: integer), Specified(a_846: integer)) =
            (a_843, a_844) in
          Specified(wrapI_add('uintptr_t', __conv_int__('uintptr_t', a_845), __conv_int__('uintptr_t', a_846)))
        ) in
      let Specified(a_842: integer) = a_841 in
      let weak a_850: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_842) in
      pure(Specified(a_850))
    ) in
  store('signed int*', p, a_840) ;
  let strong a_851: loaded pointer =
    bound(
      let weak a_852: pointer = pure(y) in
      pure(Specified(a_852))
    ) in
  store('signed int*', q, a_851) ;
  let strong a_853: loaded integer =
    bound(
      let weak (a_855: loaded integer, a_856: loaded integer) =
        unseq(
          let weak (a_860: loaded integer, a_861: loaded integer) =
            unseq(
              let strong ((a_866: loaded pointer,
              (a_867: ctype, a_868: [ctype], a_869: boolean, a_870: boolean)),
              a_874: loaded pointer, a_876: loaded pointer,
              a_878: loaded integer) =
                unseq(
                  let strong a_865: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_865, cfunction(a_865)))
                ,
                  let weak a_875: pointer = pure(p) in
                  pure(Specified(a_875))
                ,
                  let weak a_877: pointer = pure(q) in
                  pure(Specified(a_877))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_868) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_869 \/ not(are_compatible ('signed int', a_867)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_873: pointer =
                    let a_879: ctype = params_nth(a_868, 0) in
                    if not(are_compatible ('const void*', a_879)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_880: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit = store('const void*', a_880, a_874) in
                      pure(a_880) in
                  let strong a_872: pointer =
                    let a_881: ctype = params_nth(a_868, 1) in
                    if not(are_compatible ('const void*', a_881)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_882: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit = store('const void*', a_882, a_876) in
                      pure(a_882) in
                  let strong a_871: pointer =
                    let a_883: ctype = params_nth(a_868, 2) in
                    if not(are_compatible ('size_t', a_883)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_884: pointer =
                        create(Ivalignof('size_t'), 'size_t') in
                      let weak _: unit =
                        store('size_t', a_884,
                        conv_loaded_int('size_t', a_878)) in
                      pure(a_884) in
                  let strong a_885: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_866, a_873, a_872, a_871) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_873)
                    ,
                      kill('void*', a_872)
                    ,
                      kill('size_t', a_871)
                    ) in
                  pure(a_885)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_862: integer), Specified(a_863: integer)) =
              (a_860, a_861) in
            if conv_int('signed int', a_862) = conv_int('signed int', a_863) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_857: integer), Specified(a_858: integer)) =
          (a_855, a_856) in
        if conv_int('signed int', a_857) = conv_int('signed int', a_858) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_787: boolean =
    let Specified(a_854: integer) = a_853 in
    pure(if not(a_854 = 1) then True else False) in
  if a_787 then
    let strong _: loaded integer =
      bound(
        let weak (a_887: pointer, a_892: loaded integer) =
          unseq(
            let weak a_888: loaded pointer =
              let weak a_891: pointer = pure(p) in
              load('signed int*', a_891) in
            let Specified(a_889: pointer) = a_888 in
            let weak a_890: boolean =
              memop(PtrValidForDeref, 'signed int', a_889) in
            pure(
              if a_890 then
                a_889
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          neg(store('signed int', a_887, conv_loaded_int('signed int', a_892))) in
        pure(conv_loaded_int('signed int', a_892))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      bound(
        let strong ((a_893: loaded pointer,
        (a_894: ctype, a_895: [ctype], a_896: boolean, a_897: boolean)),
        a_903: loaded pointer, a_907: loaded integer, a_909: loaded integer,
        a_911: loaded integer, a_917: loaded integer) =
          unseq(
            let strong a_886: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_886, cfunction(a_886)))
          ,
            let weak a_905: pointer = pure(a_904) in
            let weak a_906: pointer =
              memop(PtrArrayShift, a_905, 'char', 0) in
            pure(Specified(a_906))
          ,
            let weak a_908: pointer = pure(x) in
            load('signed int', a_908)
          ,
            let weak a_910: pointer = pure(y) in
            load('signed int', a_910)
          ,
            let weak a_916: pointer =
              let weak a_912: loaded pointer =
                let weak a_915: pointer = pure(p) in
                load('signed int*', a_915) in
              let Specified(a_913: pointer) = a_912 in
              let weak a_914: boolean =
                memop(PtrValidForDeref, 'signed int', a_913) in
              pure(
                if a_914 then
                  a_913
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_916)
          ,
            let weak a_922: pointer =
              let weak a_918: loaded pointer =
                let weak a_921: pointer = pure(q) in
                load('signed int*', a_921) in
              let Specified(a_919: pointer) = a_918 in
              let weak a_920: boolean =
                memop(PtrValidForDeref, 'signed int', a_919) in
              pure(
                if a_920 then
                  a_919
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_922)
          ) in
        if not(params_length(a_895) <= 5) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_896) \/ not(are_compatible ('signed int', a_894)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_902: pointer =
              let a_923: ctype = params_nth(a_895, 0) in
              if not(are_compatible ('const char*', a_923)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                let weak a_924: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_924, a_903) in
                pure(a_924) in
            let strong a_901: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_907)) in
            let strong a_900: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_909)) in
            let strong a_899: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_911)) in
            let strong a_898: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_917)) in
            let strong a_925: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_893, a_902,
              [('signed int', a_901), ('signed int', a_900),
              ('signed int', a_899), ('signed int', a_898)]) in
            let strong _: (unit,unit,unit,unit,unit) =
              unseq(
                kill('char*', a_902)
              ,
                kill('signed int', a_901)
              ,
                kill('signed int', a_900)
              ,
                kill('signed int', a_899)
              ,
                kill('signed int', a_898)
              ) in
            pure(a_925)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  kill('signed int', x) ;
  kill('signed int', y) ;
  kill('uintptr_t', ux) ;
  kill('uintptr_t', uy) ;
  kill('uintptr_t', offset) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_786: loaded integer (a_926: loaded integer:= Specified(0)) in
    pure(a_926)

