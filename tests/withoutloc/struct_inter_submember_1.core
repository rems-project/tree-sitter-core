-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_648 :=
  __dummy_max_align_t: 'void*'

def struct S :=
  a: 'signed int[3]'
  b: 'signed int[3]'

-- Globals
glob s: pointer [ail_ctype = 'struct S'] :=
  let strong a_761: pointer = create(Ivalignof('struct S'), 'struct S') in
  let strong a_762: loaded struct S_652 =
    bound(
      pure(
        Specified((struct S){.a= Specified(Array(Specified(0), Specified(0),
        Specified(0))),
        .b= Specified(Array(Specified(0), Specified(0), Specified(0)))})
      )
    ) in
  store('struct S', a_761, a_762) ;
  pure(a_761)

glob a_733: pointer [ail_ctype = 'char[25]'] :=
  create_readonly(Ivalignof('char[25]'), 'char[25]', Specified(Array(Specified(conv_int('char',
  100)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 116)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 46)),
  Specified(conv_int('char', 98)), Specified(conv_int('char', 91)),
  Specified(conv_int('char', 50)), Specified(conv_int('char', 93)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong d: pointer = create(Ivalignof('ptrdiff_t'), 'ptrdiff_t') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong _: loaded integer =
    bound(
      let weak (a_668: pointer, a_680: loaded integer) =
        unseq(
          let weak a_669: loaded pointer =
            let weak (a_672: loaded pointer, a_674: loaded integer) =
              unseq(
                let weak a_678: pointer =
                  let strong a_677: pointer = pure(s) in
                  memop(PtrArrayShift[S, b], a_677) in
                let weak a_679: pointer =
                  memop(PtrArrayShift, a_678, 'signed int', 0) in
                pure(Specified(a_679))
              ,
                pure(Specified(2))
              ) in
            let (Specified(a_673: pointer), Specified(a_675: integer)) =
              (a_672, a_674) in
            let weak a_676: pointer =
              memop(PtrArrayShift, a_673, 'signed int', a_675) in
            pure(Specified(a_676)) in
          let Specified(a_670: pointer) = a_669 in
          let weak a_671: boolean =
            memop(PtrValidForDeref, 'signed int', a_670) in
          pure(
            if a_671 then
              a_670
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(10))
        ) in
      let weak _: unit =
        neg(store('signed int', a_668, conv_loaded_int('signed int', a_680))) in
      pure(conv_loaded_int('signed int', a_680))
    ) in
  pure(Unit) ;
  store('ptrdiff_t', d, Unspecified('ptrdiff_t')) ;
  let strong _: loaded integer =
    bound(
      let weak (a_667: pointer, a_702: loaded integer) =
        unseq(
          pure(d)
        ,
          let weak (a_697: loaded pointer, a_698: loaded pointer) =
            unseq(
              let weak (a_681: loaded pointer, a_683: loaded integer) =
                unseq(
                  let weak a_687: pointer =
                    let strong a_686: pointer = pure(s) in
                    memop(PtrArrayShift[S, b], a_686) in
                  let weak a_688: pointer =
                    memop(PtrArrayShift, a_687, 'signed int', 0) in
                  pure(Specified(a_688))
                ,
                  pure(Specified(2))
                ) in
              let (Specified(a_682: pointer), Specified(a_684: integer)) =
                (a_681, a_683) in
              let weak a_685: pointer =
                memop(PtrArrayShift, a_682, 'signed int', a_684) in
              pure(Specified(a_685))
            ,
              let weak (a_689: loaded pointer, a_691: loaded integer) =
                unseq(
                  let weak a_695: pointer =
                    let strong a_694: pointer = pure(s) in
                    memop(PtrArrayShift[S, a], a_694) in
                  let weak a_696: pointer =
                    memop(PtrArrayShift, a_695, 'signed int', 0) in
                  pure(Specified(a_696))
                ,
                  pure(Specified(0))
                ) in
              let (Specified(a_690: pointer), Specified(a_692: integer)) =
                (a_689, a_691) in
              let weak a_693: pointer =
                memop(PtrArrayShift, a_690, 'signed int', a_692) in
              pure(Specified(a_693))
            ) in
          let (Specified(a_699: pointer), Specified(a_700: pointer)) =
            (a_697, a_698) in
          let weak a_701: integer =
            memop(Ptrdiff, 'signed int', a_699, a_700) in
          pure(
            if is_representable_integer(a_701, 'ptrdiff_t') then
              Specified(a_701)
            else
              undef(<<UB050_pointers_subtraction_not_representable>>)
          )
        ) in
      let weak _: unit =
        neg(store('ptrdiff_t', a_667, conv_loaded_int('ptrdiff_t', a_702))) in
      pure(conv_loaded_int('ptrdiff_t', a_702))
    ) in
  pure(Unit) ;
  store('signed int*', p, Unspecified('signed int*')) ;
  let strong _: loaded pointer =
    bound(
      let weak (a_666: pointer, a_717: loaded pointer) =
        unseq(
          pure(p)
        ,
          let weak (a_703: loaded pointer, a_705: loaded integer) =
            unseq(
              let weak (a_708: loaded pointer, a_710: loaded integer) =
                unseq(
                  let weak a_714: pointer =
                    let strong a_713: pointer = pure(s) in
                    memop(PtrArrayShift[S, a], a_713) in
                  let weak a_715: pointer =
                    memop(PtrArrayShift, a_714, 'signed int', 0) in
                  pure(Specified(a_715))
                ,
                  pure(Specified(0))
                ) in
              let (Specified(a_709: pointer), Specified(a_711: integer)) =
                (a_708, a_710) in
              let weak a_712: pointer =
                memop(PtrArrayShift, a_709, 'signed int', a_711) in
              pure(Specified(a_712))
            ,
              let weak a_716: pointer = pure(d) in
              load('ptrdiff_t', a_716)
            ) in
          let (Specified(a_704: pointer), Specified(a_706: integer)) =
            (a_703, a_705) in
          let weak a_707: pointer =
            memop(PtrArrayShift, a_704, 'signed int', a_706) in
          pure(Specified(a_707))
        ) in
      let weak _: unit = neg(store('signed int*', a_666, a_717)) in
      pure(a_717)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    bound(
      let weak (a_665: pointer, a_722: loaded integer) =
        unseq(
          let weak a_718: loaded pointer =
            let weak a_721: pointer = pure(p) in
            load('signed int*', a_721) in
          let Specified(a_719: pointer) = a_718 in
          let weak a_720: boolean =
            memop(PtrValidForDeref, 'signed int', a_719) in
          pure(
            if a_720 then
              a_719
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(11))
        ) in
      let weak _: unit =
        neg(store('signed int', a_665, conv_loaded_int('signed int', a_722))) in
      pure(conv_loaded_int('signed int', a_722))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_723: loaded pointer,
      (a_724: ctype, a_725: [ctype], a_726: boolean, a_727: boolean)),
      a_732: loaded pointer, a_736: loaded integer, a_738: loaded integer,
      a_751: loaded integer) =
        unseq(
          let strong a_664: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_664, cfunction(a_664)))
        ,
          let weak a_734: pointer = pure(a_733) in
          let weak a_735: pointer = memop(PtrArrayShift, a_734, 'char', 0) in
          pure(Specified(a_735))
        ,
          let weak a_737: pointer = pure(d) in
          load('ptrdiff_t', a_737)
        ,
          let weak a_750: pointer =
            let weak a_739: loaded pointer =
              let weak (a_742: loaded pointer, a_744: loaded integer) =
                unseq(
                  let weak a_748: pointer =
                    let strong a_747: pointer = pure(s) in
                    memop(PtrArrayShift[S, b], a_747) in
                  let weak a_749: pointer =
                    memop(PtrArrayShift, a_748, 'signed int', 0) in
                  pure(Specified(a_749))
                ,
                  pure(Specified(2))
                ) in
              let (Specified(a_743: pointer), Specified(a_745: integer)) =
                (a_742, a_744) in
              let weak a_746: pointer =
                memop(PtrArrayShift, a_743, 'signed int', a_745) in
              pure(Specified(a_746)) in
            let Specified(a_740: pointer) = a_739 in
            let weak a_741: boolean =
              memop(PtrValidForDeref, 'signed int', a_740) in
            pure(
              if a_741 then
                a_740
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_750)
        ,
          let weak a_756: pointer =
            let weak a_752: loaded pointer =
              let weak a_755: pointer = pure(p) in
              load('signed int*', a_755) in
            let Specified(a_753: pointer) = a_752 in
            let weak a_754: boolean =
              memop(PtrValidForDeref, 'signed int', a_753) in
            pure(
              if a_754 then
                a_753
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_756)
        ) in
      if not(params_length(a_725) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_726) \/ not(are_compatible ('signed int', a_724)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_731: pointer =
            let a_757: ctype = params_nth(a_725, 0) in
            if not(are_compatible ('const char*', a_757)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_758: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_758, a_732) in
              pure(a_758) in
          let strong a_730: pointer =
            pcall(create_and_store, 'ptrdiff_t',
            conv_loaded_int('ptrdiff_t', a_736)) in
          let strong a_729: pointer =
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_738)) in
          let strong a_728: pointer =
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_751)) in
          let strong a_759: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_723, a_731,
            [('ptrdiff_t', a_730), ('signed int', a_729),
            ('signed int', a_728)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_731)
            ,
              kill('ptrdiff_t', a_730)
            ,
              kill('signed int', a_729)
            ,
              kill('signed int', a_728)
            ) in
          pure(a_759)
    ) in
  pure(Unit) ;
  kill('ptrdiff_t', d) ;
  kill('signed int*', p) ;
  pure(Unit) ;
  save ret_663: loaded integer (a_760: loaded integer:= Specified(0)) in
    pure(a_760)

