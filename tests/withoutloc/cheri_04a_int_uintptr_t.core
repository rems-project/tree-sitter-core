-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_648 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_680 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob a_736: pointer [ail_ctype = 'char[21]'] :=
  create_readonly(Ivalignof('char[21]'), 'char[21]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong px: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong ql: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_708: loaded integer = bound(pure(Specified(0))) in
  store('signed int', x, conv_loaded_int('signed int', a_708)) ;
  let strong a_709: loaded pointer =
    bound(
      let weak a_710: pointer = pure(x) in
      pure(Specified(a_710))
    ) in
  store('signed int*', px, a_709) ;
  let strong a_711: loaded integer =
    bound(
      let weak a_712: loaded pointer =
        let weak a_714: pointer = pure(px) in
        load('signed int*', a_714) in
      let Specified(a_713: pointer) = a_712 in
      let weak a_715: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_713) in
      pure(Specified(a_715))
    ) in
  store('uintptr_t', ql, conv_loaded_int('uintptr_t', a_711)) ;
  let strong a_716: loaded pointer =
    bound(
      let weak a_717: loaded integer =
        let weak a_719: pointer = pure(ql) in
        load('uintptr_t', a_719) in
      let Specified(a_718: integer) = a_717 in
      let weak a_720: pointer =
        memop(PtrFromInt, 'uintptr_t', 'signed int', a_718) in
      pure(Specified(a_720))
    ) in
  store('signed int*', q, a_716) ;
  let strong _: loaded integer =
    bound(
      let weak (a_707: pointer, a_725: loaded integer) =
        unseq(
          let weak a_721: loaded pointer =
            let weak a_724: pointer = pure(q) in
            load('signed int*', a_724) in
          let Specified(a_722: pointer) = a_721 in
          let weak a_723: boolean =
            memop(PtrValidForDeref, 'signed int', a_722) in
          pure(
            if a_723 then
              a_722
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(1))
        ) in
      let weak _: unit =
        neg(store('signed int', a_707, conv_loaded_int('signed int', a_725))) in
      pure(conv_loaded_int('signed int', a_725))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_726: loaded pointer,
      (a_727: ctype, a_728: [ctype], a_729: boolean, a_730: boolean)),
      a_735: loaded pointer, a_739: loaded integer, a_741: loaded integer,
      a_747: loaded integer) =
        unseq(
          let strong a_706: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_706, cfunction(a_706)))
        ,
          let weak a_737: pointer = pure(a_736) in
          let weak a_738: pointer = memop(PtrArrayShift, a_737, 'char', 0) in
          pure(Specified(a_738))
        ,
          let weak a_740: pointer = pure(x) in
          load('signed int', a_740)
        ,
          let weak a_746: pointer =
            let weak a_742: loaded pointer =
              let weak a_745: pointer = pure(px) in
              load('signed int*', a_745) in
            let Specified(a_743: pointer) = a_742 in
            let weak a_744: boolean =
              memop(PtrValidForDeref, 'signed int', a_743) in
            pure(
              if a_744 then
                a_743
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_746)
        ,
          let weak a_752: pointer =
            let weak a_748: loaded pointer =
              let weak a_751: pointer = pure(q) in
              load('signed int*', a_751) in
            let Specified(a_749: pointer) = a_748 in
            let weak a_750: boolean =
              memop(PtrValidForDeref, 'signed int', a_749) in
            pure(
              if a_750 then
                a_749
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_752)
        ) in
      if not(params_length(a_728) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_729) \/ not(are_compatible ('signed int', a_727)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_734: pointer =
            let a_753: ctype = params_nth(a_728, 0) in
            if not(are_compatible ('const char*', a_753)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_754: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_754, a_735) in
              pure(a_754) in
          let strong a_733: pointer =
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_739)) in
          let strong a_732: pointer =
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_741)) in
          let strong a_731: pointer =
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_747)) in
          let strong a_755: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_726, a_734,
            [('signed int', a_733), ('signed int', a_732),
            ('signed int', a_731)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_734)
            ,
              kill('signed int', a_733)
            ,
              kill('signed int', a_732)
            ,
              kill('signed int', a_731)
            ) in
          pure(a_755)
    ) in
  pure(Unit) ;
  kill('signed int', x) ;
  kill('signed int*', px) ;
  kill('uintptr_t', ql) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_705: loaded integer (a_756: loaded integer:= Specified(0)) in
    pure(a_756)

