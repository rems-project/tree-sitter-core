-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_754 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_758 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob a_846: pointer [ail_ctype = 'char[40]'] :=
  create_readonly(Ivalignof('char[40]'), 'char[40]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 38)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_868: pointer [ail_ctype = 'char[40]'] :=
  create_readonly(Ivalignof('char[40]'), 'char[40]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 122)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 38)),
  Specified(conv_int('char', 119)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 122)), Specified(conv_int('char', 119)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_953: pointer [ail_ctype = 'char[26]'] :=
  create_readonly(Ivalignof('char[26]'), 'char[26]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong w: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong z: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong y: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong ux: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong uy: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong offsetxy: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong uz: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong uw: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong offsetzw: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_796: loaded integer = bound(pure(Specified(4))) in
  store('signed int', w, conv_loaded_int('signed int', a_796)) ;
  let strong a_797: loaded integer = bound(pure(Specified(3))) in
  store('signed int', z, conv_loaded_int('signed int', a_797)) ;
  let strong a_798: loaded integer = bound(pure(Specified(2))) in
  store('signed int', y, conv_loaded_int('signed int', a_798)) ;
  let strong a_799: loaded integer = bound(pure(Specified(1))) in
  store('signed int', x, conv_loaded_int('signed int', a_799)) ;
  let strong a_800: loaded integer =
    bound(
      let weak a_801: loaded pointer =
        let weak a_803: pointer = pure(x) in
        pure(Specified(a_803)) in
      let Specified(a_802: pointer) = a_801 in
      let weak a_804: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_802) in
      pure(Specified(a_804))
    ) in
  store('intptr_t', ux, conv_loaded_int('intptr_t', a_800)) ;
  let strong a_805: loaded integer =
    bound(
      let weak a_806: loaded pointer =
        let weak a_808: pointer = pure(y) in
        pure(Specified(a_808)) in
      let Specified(a_807: pointer) = a_806 in
      let weak a_809: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_807) in
      pure(Specified(a_809))
    ) in
  store('intptr_t', uy, conv_loaded_int('intptr_t', a_805)) ;
  let strong a_810: loaded integer =
    bound(
      let weak (a_813: loaded integer, a_814: loaded integer) =
        unseq(
          let weak a_811: pointer = pure(uy) in
          load('intptr_t', a_811)
        ,
          let weak a_812: pointer = pure(ux) in
          load('intptr_t', a_812)
        ) in
      pure(
        let (Specified(a_815: integer), Specified(a_816: integer)) =
          (a_813, a_814) in
        Specified(catch_exceptional_condition_sub('intptr_t', conv_int('intptr_t',
        a_815), conv_int('intptr_t', a_816)))
      )
    ) in
  store('intptr_t', offsetxy, conv_loaded_int('intptr_t', a_810)) ;
  let strong a_818: loaded integer =
    bound(
      let weak a_819: loaded pointer =
        let weak a_821: pointer = pure(z) in
        pure(Specified(a_821)) in
      let Specified(a_820: pointer) = a_819 in
      let weak a_822: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_820) in
      pure(Specified(a_822))
    ) in
  store('intptr_t', uz, conv_loaded_int('intptr_t', a_818)) ;
  let strong a_823: loaded integer =
    bound(
      let weak a_824: loaded pointer =
        let weak a_826: pointer = pure(w) in
        pure(Specified(a_826)) in
      let Specified(a_825: pointer) = a_824 in
      let weak a_827: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_825) in
      pure(Specified(a_827))
    ) in
  store('intptr_t', uw, conv_loaded_int('intptr_t', a_823)) ;
  let strong a_828: loaded integer =
    bound(
      let weak (a_831: loaded integer, a_832: loaded integer) =
        unseq(
          let weak a_829: pointer = pure(uw) in
          load('intptr_t', a_829)
        ,
          let weak a_830: pointer = pure(uz) in
          load('intptr_t', a_830)
        ) in
      pure(
        let (Specified(a_833: integer), Specified(a_834: integer)) =
          (a_831, a_832) in
        Specified(catch_exceptional_condition_sub('intptr_t', conv_int('intptr_t',
        a_833), conv_int('intptr_t', a_834)))
      )
    ) in
  store('intptr_t', offsetzw, conv_loaded_int('intptr_t', a_828)) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_836: loaded pointer,
      (a_837: ctype, a_838: [ctype], a_839: boolean, a_840: boolean)),
      a_845: loaded pointer, a_849: loaded integer, a_851: loaded integer,
      a_853: loaded integer) =
        unseq(
          let strong a_795: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_795, cfunction(a_795)))
        ,
          let weak a_847: pointer = pure(a_846) in
          let weak a_848: pointer = memop(PtrArrayShift, a_847, 'char', 0) in
          pure(Specified(a_848))
        ,
          let weak a_850: pointer = pure(ux) in
          load('intptr_t', a_850)
        ,
          let weak a_852: pointer = pure(uy) in
          load('intptr_t', a_852)
        ,
          let weak a_854: pointer = pure(offsetxy) in
          load('intptr_t', a_854)
        ) in
      if not(params_length(a_838) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_839) \/ not(are_compatible ('signed int', a_837)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_844: pointer =
            let a_855: ctype = params_nth(a_838, 0) in
            if not(are_compatible ('const char*', a_855)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_856: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_856, a_845) in
              pure(a_856) in
          let strong a_843: pointer =
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_849)) in
          let strong a_842: pointer =
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_851)) in
          let strong a_841: pointer =
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_853)) in
          let strong a_857: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_836, a_844,
            [('intptr_t', a_843), ('intptr_t', a_842), ('intptr_t', a_841)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_844)
            ,
              kill('intptr_t', a_843)
            ,
              kill('intptr_t', a_842)
            ,
              kill('intptr_t', a_841)
            ) in
          pure(a_857)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_858: loaded pointer,
      (a_859: ctype, a_860: [ctype], a_861: boolean, a_862: boolean)),
      a_867: loaded pointer, a_871: loaded integer, a_873: loaded integer,
      a_875: loaded integer) =
        unseq(
          let strong a_794: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_794, cfunction(a_794)))
        ,
          let weak a_869: pointer = pure(a_868) in
          let weak a_870: pointer = memop(PtrArrayShift, a_869, 'char', 0) in
          pure(Specified(a_870))
        ,
          let weak a_872: pointer = pure(uz) in
          load('intptr_t', a_872)
        ,
          let weak a_874: pointer = pure(uw) in
          load('intptr_t', a_874)
        ,
          let weak a_876: pointer = pure(offsetzw) in
          load('intptr_t', a_876)
        ) in
      if not(params_length(a_860) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_861) \/ not(are_compatible ('signed int', a_859)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_866: pointer =
            let a_877: ctype = params_nth(a_860, 0) in
            if not(are_compatible ('const char*', a_877)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_878: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_878, a_867) in
              pure(a_878) in
          let strong a_865: pointer =
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_871)) in
          let strong a_864: pointer =
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_873)) in
          let strong a_863: pointer =
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_875)) in
          let strong a_879: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_858, a_866,
            [('intptr_t', a_865), ('intptr_t', a_864), ('intptr_t', a_863)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_866)
            ,
              kill('intptr_t', a_865)
            ,
              kill('intptr_t', a_864)
            ,
              kill('intptr_t', a_863)
            ) in
          pure(a_879)
    ) in
  pure(Unit) ;
  bound(
    let strong a_793: loaded integer =
      let weak (a_882: loaded integer, a_883: loaded integer) =
        unseq(
          let weak a_887: pointer = pure(offsetzw) in
          load('intptr_t', a_887)
        ,
          let weak a_888: pointer = pure(offsetxy) in
          load('intptr_t', a_888)
        ) in
      pure(
        let (Specified(a_884: integer), Specified(a_885: integer)) =
          (a_882, a_883) in
        if conv_int('intptr_t', a_884) = conv_int('intptr_t', a_885) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_880: integer) = a_793 in
      if a_880 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  let strong a_889: loaded pointer =
    bound(
      let weak a_890: loaded integer =
        let weak (a_892: loaded integer, a_893: loaded integer) =
          unseq(
            let weak a_897: pointer = pure(ux) in
            load('intptr_t', a_897)
          ,
            let weak a_898: pointer = pure(offsetzw) in
            load('intptr_t', a_898)
          ) in
        pure(
          let (Specified(a_894: integer), Specified(a_895: integer)) =
            (a_892, a_893) in
          Specified(catch_exceptional_condition_add('intptr_t', __conv_int__('intptr_t', a_894), __conv_int__('intptr_t', a_895)))
        ) in
      let Specified(a_891: integer) = a_890 in
      let weak a_899: pointer =
        memop(PtrFromInt, 'intptr_t', 'signed int', a_891) in
      pure(Specified(a_899))
    ) in
  store('signed int*', p, a_889) ;
  let strong a_900: loaded pointer =
    bound(
      let weak a_901: pointer = pure(y) in
      pure(Specified(a_901))
    ) in
  store('signed int*', q, a_900) ;
  let strong a_902: loaded integer =
    bound(
      let weak (a_904: loaded integer, a_905: loaded integer) =
        unseq(
          let weak (a_909: loaded integer, a_910: loaded integer) =
            unseq(
              let strong ((a_915: loaded pointer,
              (a_916: ctype, a_917: [ctype], a_918: boolean, a_919: boolean)),
              a_923: loaded pointer, a_925: loaded pointer,
              a_927: loaded integer) =
                unseq(
                  let strong a_914: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_914, cfunction(a_914)))
                ,
                  let weak a_924: pointer = pure(p) in
                  pure(Specified(a_924))
                ,
                  let weak a_926: pointer = pure(q) in
                  pure(Specified(a_926))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_917) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_918 \/ not(are_compatible ('signed int', a_916)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_922: pointer =
                    let a_928: ctype = params_nth(a_917, 0) in
                    if not(are_compatible ('const void*', a_928)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_929: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit = store('const void*', a_929, a_923) in
                      pure(a_929) in
                  let strong a_921: pointer =
                    let a_930: ctype = params_nth(a_917, 1) in
                    if not(are_compatible ('const void*', a_930)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_931: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit = store('const void*', a_931, a_925) in
                      pure(a_931) in
                  let strong a_920: pointer =
                    let a_932: ctype = params_nth(a_917, 2) in
                    if not(are_compatible ('size_t', a_932)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_933: pointer =
                        create(Ivalignof('size_t'), 'size_t') in
                      let weak _: unit =
                        store('size_t', a_933,
                        conv_loaded_int('size_t', a_927)) in
                      pure(a_933) in
                  let strong a_934: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_915, a_922, a_921, a_920) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_922)
                    ,
                      kill('void*', a_921)
                    ,
                      kill('size_t', a_920)
                    ) in
                  pure(a_934)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_911: integer), Specified(a_912: integer)) =
              (a_909, a_910) in
            if conv_int('signed int', a_911) = conv_int('signed int', a_912) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_906: integer), Specified(a_907: integer)) =
          (a_904, a_905) in
        if conv_int('signed int', a_906) = conv_int('signed int', a_907) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_792: boolean =
    let Specified(a_903: integer) = a_902 in
    pure(if not(a_903 = 1) then True else False) in
  if a_792 then
    let strong _: loaded integer =
      bound(
        let weak (a_936: pointer, a_941: loaded integer) =
          unseq(
            let weak a_937: loaded pointer =
              let weak a_940: pointer = pure(p) in
              load('signed int*', a_940) in
            let Specified(a_938: pointer) = a_937 in
            let weak a_939: boolean =
              memop(PtrValidForDeref, 'signed int', a_938) in
            pure(
              if a_939 then
                a_938
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          neg(store('signed int', a_936, conv_loaded_int('signed int', a_941))) in
        pure(conv_loaded_int('signed int', a_941))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      bound(
        let strong ((a_942: loaded pointer,
        (a_943: ctype, a_944: [ctype], a_945: boolean, a_946: boolean)),
        a_952: loaded pointer, a_956: loaded integer, a_958: loaded integer,
        a_960: loaded integer, a_966: loaded integer) =
          unseq(
            let strong a_935: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_935, cfunction(a_935)))
          ,
            let weak a_954: pointer = pure(a_953) in
            let weak a_955: pointer =
              memop(PtrArrayShift, a_954, 'char', 0) in
            pure(Specified(a_955))
          ,
            let weak a_957: pointer = pure(x) in
            load('signed int', a_957)
          ,
            let weak a_959: pointer = pure(y) in
            load('signed int', a_959)
          ,
            let weak a_965: pointer =
              let weak a_961: loaded pointer =
                let weak a_964: pointer = pure(p) in
                load('signed int*', a_964) in
              let Specified(a_962: pointer) = a_961 in
              let weak a_963: boolean =
                memop(PtrValidForDeref, 'signed int', a_962) in
              pure(
                if a_963 then
                  a_962
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_965)
          ,
            let weak a_971: pointer =
              let weak a_967: loaded pointer =
                let weak a_970: pointer = pure(q) in
                load('signed int*', a_970) in
              let Specified(a_968: pointer) = a_967 in
              let weak a_969: boolean =
                memop(PtrValidForDeref, 'signed int', a_968) in
              pure(
                if a_969 then
                  a_968
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_971)
          ) in
        if not(params_length(a_944) <= 5) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_945) \/ not(are_compatible ('signed int', a_943)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_951: pointer =
              let a_972: ctype = params_nth(a_944, 0) in
              if not(are_compatible ('const char*', a_972)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                let weak a_973: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_973, a_952) in
                pure(a_973) in
            let strong a_950: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_956)) in
            let strong a_949: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_958)) in
            let strong a_948: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_960)) in
            let strong a_947: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_966)) in
            let strong a_974: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_942, a_951,
              [('signed int', a_950), ('signed int', a_949),
              ('signed int', a_948), ('signed int', a_947)]) in
            let strong _: (unit,unit,unit,unit,unit) =
              unseq(
                kill('char*', a_951)
              ,
                kill('signed int', a_950)
              ,
                kill('signed int', a_949)
              ,
                kill('signed int', a_948)
              ,
                kill('signed int', a_947)
              ) in
            pure(a_974)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  kill('signed int', w) ;
  kill('signed int', z) ;
  kill('signed int', y) ;
  kill('signed int', x) ;
  kill('intptr_t', ux) ;
  kill('intptr_t', uy) ;
  kill('intptr_t', offsetxy) ;
  kill('intptr_t', uz) ;
  kill('intptr_t', uw) ;
  kill('intptr_t', offsetzw) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_791: loaded integer (a_975: loaded integer:= Specified(0)) in
    pure(a_975)

