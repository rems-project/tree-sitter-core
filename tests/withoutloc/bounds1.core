-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_680: pointer [ail_ctype = 'char[10]'] :=
  create_readonly(Ivalignof('char[10]'), 'char[10]', Specified(Array(Specified(conv_int('char',
  82)), Specified(conv_int('char', 101)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 58)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong y: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong z: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong v: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_655: loaded integer = bound(pure(Specified(42))) in
  store('signed int', y, conv_loaded_int('signed int', a_655)) ;
  let strong a_656: loaded integer = bound(pure(Specified(43))) in
  store('signed int', x, conv_loaded_int('signed int', a_656)) ;
  let strong a_657: loaded integer = bound(pure(Specified(44))) in
  store('signed int', z, conv_loaded_int('signed int', a_657)) ;
  let strong a_658: loaded integer =
    bound(
      let weak a_668: pointer =
        let weak a_659: loaded pointer =
          let weak (a_663: loaded pointer, a_664: loaded integer) =
            unseq(
              let weak a_662: pointer = pure(x) in
              pure(Specified(a_662))
            ,
              pure(Specified(1))
            ) in
          case (a_663, a_664) of
            | (Specified(a_665: pointer), Specified(a_666: integer)) =>
                let weak a_667: pointer =
                  memop(PtrArrayShift, a_665, 'signed int', 0 - a_666) in
                pure(Specified(a_667))
            | _: (loaded pointer,loaded integer) =>
                pure(undef(<<UB_CERB004_unspecified__pointer_sub>>))
          end in
        case a_659 of
          | Specified(a_660: pointer) =>
              let weak a_661: boolean =
                memop(PtrValidForDeref, 'signed int', a_660) in
              pure(
                if a_661 then
                  a_660
                else
                  undef(<<UB043_indirection_invalid_value>>)
              )
          | Unspecified(_: ctype) =>
              pure(undef(<<UB043_indirection_invalid_value>>))
        end in
      load('signed int', a_668)
    ) in
  store('signed int', v, conv_loaded_int('signed int', a_658)) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_669: loaded pointer,
      (a_670: ctype, a_671: [ctype], a_672: boolean, a_673: boolean)),
      a_677: loaded pointer, a_679: loaded pointer, a_683: loaded integer) =
        unseq(
          let strong a_654: loaded pointer =
            pure(Specified(Cfunction(fprintf))) in
          pure((a_654, cfunction(a_654)))
        ,
          let weak a_678: pointer = pure(__stderr) in
          load('struct _IO_FILE*', a_678)
        ,
          let weak a_681: pointer = pure(a_680) in
          let weak a_682: pointer = memop(PtrArrayShift, a_681, 'char', 0) in
          pure(Specified(a_682))
        ,
          let weak a_684: pointer = pure(v) in
          load('signed int', a_684)
        ) in
      if not(params_length(a_671) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_672) \/ not(are_compatible ('signed int', a_670)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_676: pointer =
            let a_685: ctype = params_nth(a_671, 0) in
            if not(are_compatible ('struct _IO_FILE*', a_685)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_686: pointer =
                create(Ivalignof('struct _IO_FILE*'), 'struct _IO_FILE*') in
              let weak _: unit = store('struct _IO_FILE*', a_686, a_677) in
              pure(a_686) in
          let strong a_675: pointer =
            let a_687: ctype = params_nth(a_671, 1) in
            if not(are_compatible ('const char*', a_687)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_688: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_688, a_679) in
              pure(a_688) in
          let strong a_674: pointer =
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_683)) in
          let strong a_689: loaded integer =
            ccall('signed int (*) (struct _IO_FILE*restrict , const char*restrict , ...)',
            a_669, a_676, a_675, [('signed int', a_674)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('struct _IO_FILE*', a_676)
            ,
              kill('char*', a_675)
            ,
              kill('signed int', a_674)
            ) in
          pure(a_689)
    ) in
  pure(Unit) ;
  kill('signed int', y) ;
  kill('signed int', x) ;
  kill('signed int', z) ;
  kill('signed int', v) ;
  pure(Unit) ;
  save ret_653: loaded integer (a_690: loaded integer:= Specified(0)) in
    pure(a_690)

