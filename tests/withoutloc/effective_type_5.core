-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

def struct __cerbty_unnamed_tag_746 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_750 :=
  c1: 'char'
  f1: 'float'

-- Globals
glob a_817: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('void*'), 'void*') in
  let strong s1: pointer =
    create(Ivalignof('struct __cerbty_unnamed_tag_750'), 'struct __cerbty_unnamed_tag_750') in
  let strong pf: pointer = create(Ivalignof('float*'), 'float*') in
  let strong f: pointer = create(Ivalignof('float'), 'float') in
  let strong a_763: loaded pointer =
    bound(
      let strong ((a_765: loaded pointer,
      (a_766: ctype, a_767: [ctype], a_768: boolean, a_769: boolean)),
      a_771: loaded integer) =
        unseq(
          let strong a_764: loaded pointer =
            pure(Specified(Cfunction(malloc_proxy))) in
          pure((a_764, cfunction(a_764)))
        ,
          pure(Specified(Ivsizeof('struct __cerbty_unnamed_tag_750')))
        ) in
      if not(params_length(a_767) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_768 \/ not(are_compatible ('void*', a_766)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_770: pointer =
            let a_772: ctype = params_nth(a_767, 0) in
            if not(are_compatible ('size_t', a_772)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_773: pointer =
                create(Ivalignof('size_t'), 'size_t') in
              let weak _: unit =
                store('size_t', a_773, conv_loaded_int('size_t', a_771)) in
              pure(a_773) in
          let strong a_774: loaded pointer =
            ccall('void* (*) (size_t)', a_765, a_770) in
          kill('size_t', a_770) ;
          pure(a_774)
    ) in
  store('void*', p, a_763) ;
  bound(
    let strong a_762: loaded integer =
      let weak a_778: loaded pointer =
        let weak a_777: pointer = pure(p) in
        load('void*', a_777) in
      let Specified(a_779: pointer) = a_778 in
      let weak a_780: boolean = memop(PtrNe, a_779, NULL(void*)) in
      pure(if a_780 then Specified(1) else Specified(0)) in
    pure(
      let Specified(a_775: integer) = a_762 in
      if a_775 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  let strong a_781: loaded struct a_750 =
    bound(
      let weak (a_783: loaded floating, a_782: loaded integer) =
        unseq(pure(Specified(1.)), pure(Specified(65))) in
      pure(
        Specified((struct __cerbty_unnamed_tag_750){.c1= conv_loaded_int('char',
        a_782), .f1= a_783})
      )
    ) in
  store('struct __cerbty_unnamed_tag_750', s1, a_781) ;
  let strong _: loaded struct a_750 =
    bound(
      let weak (a_761: pointer, a_792: loaded struct a_750) =
        unseq(
          let weak a_784: loaded pointer =
            let weak a_787: loaded pointer =
              let weak a_789: pointer = pure(p) in
              load('void*', a_789) in
            let Specified(a_788: pointer) = a_787 in
            let weak a_790: boolean =
              memop(PtrWellAligned, 'struct __cerbty_unnamed_tag_750', a_788) in
            pure(
              Specified(if a_790 then
                a_788
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            ) in
          let Specified(a_785: pointer) = a_784 in
          let weak a_786: boolean =
            memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_750', a_785) in
          pure(
            if a_786 then
              a_785
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          let weak a_791: pointer = pure(s1) in
          load('struct __cerbty_unnamed_tag_750', a_791)
        ) in
      let weak _: unit =
        neg(store('struct __cerbty_unnamed_tag_750', a_761, a_792)) in
      pure(a_792)
    ) in
  pure(Unit) ;
  let strong a_793: loaded pointer =
    bound(
      let weak a_794: pointer =
        let strong a_795: loaded pointer =
          let weak a_799: loaded pointer =
            let weak a_801: pointer = pure(p) in
            load('void*', a_801) in
          let Specified(a_800: pointer) = a_799 in
          let weak a_802: boolean =
            memop(PtrWellAligned, 'struct __cerbty_unnamed_tag_750', a_800) in
          pure(
            Specified(if a_802 then
              a_800
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          ) in
        let Specified(a_796: pointer) = a_795 in
        let weak a_797: boolean =
          memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_750', a_796) in
        pure(
          if a_797 then
            member_shift(a_796, __cerbty_unnamed_tag_750, .f1)
          else
            undef(<<UB043_indirection_invalid_value>>)
        ) in
      pure(Specified(a_794))
    ) in
  store('float*', pf, a_793) ;
  let strong a_803: loaded floating =
    bound(
      let weak a_808: pointer =
        let weak a_804: loaded pointer =
          let weak a_807: pointer = pure(pf) in
          load('float*', a_807) in
        let Specified(a_805: pointer) = a_804 in
        let weak a_806: boolean = memop(PtrValidForDeref, 'float', a_805) in
        pure(
          if a_806 then a_805 else undef(<<UB043_indirection_invalid_value>>)
        ) in
      load('float', a_808)
    ) in
  store('float', f, a_803) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_809: loaded pointer,
      (a_810: ctype, a_811: [ctype], a_812: boolean, a_813: boolean)),
      a_816: loaded pointer, a_820: loaded floating) =
        unseq(
          let strong a_760: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_760, cfunction(a_760)))
        ,
          let weak a_818: pointer = pure(a_817) in
          let weak a_819: pointer = memop(PtrArrayShift, a_818, 'char', 0) in
          pure(Specified(a_819))
        ,
          let weak a_821: pointer = pure(f) in
          load('float', a_821)
        ) in
      if not(params_length(a_811) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_812) \/ not(are_compatible ('signed int', a_810)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_815: pointer =
            let a_822: ctype = params_nth(a_811, 0) in
            if not(are_compatible ('const char*', a_822)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_823: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_823, a_816) in
              pure(a_823) in
          let strong a_814: pointer =
            pcall(create_and_store, 'double', a_820) in
          let strong a_824: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_809, a_815,
            [('double', a_814)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_815), kill('double', a_814)) in
          pure(a_824)
    ) in
  pure(Unit) ;
  kill('void*', p) ;
  kill('struct __cerbty_unnamed_tag_750', s1) ;
  kill('float*', pf) ;
  kill('float', f) ;
  pure(Unit) ;
  save ret_759: loaded integer (a_825: loaded integer:= Specified(0)) in
    pure(a_825)

