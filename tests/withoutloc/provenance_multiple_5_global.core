-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_857: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_858: loaded integer = bound(pure(Specified(2))) in
  store('signed int', a_857, conv_loaded_int('signed int', a_858)) ;
  pure(a_857)

glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_855: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_856: loaded integer = bound(pure(Specified(1))) in
  store('signed int', a_855, conv_loaded_int('signed int', a_856)) ;
  pure(a_855)

glob a_764: pointer [ail_ctype = 'char[22]'] :=
  create_readonly(Ivalignof('char[22]'), 'char[22]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_831: pointer [ail_ctype = 'char[23]'] :=
  create_readonly(Ivalignof('char[23]'), 'char[23]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_734: loaded pointer =
    bound(
      let weak (a_735: loaded pointer, a_737: loaded integer) =
        unseq(
          let weak (a_740: loaded pointer, a_742: loaded integer) =
            unseq(
              let weak a_745: pointer = pure(x) in
              pure(Specified(a_745))
            ,
              let weak (a_748: loaded pointer, a_749: loaded pointer) =
                unseq(
                  let weak a_746: pointer = pure(y) in
                  pure(Specified(a_746))
                ,
                  let weak a_747: pointer = pure(y) in
                  pure(Specified(a_747))
                ) in
              let (Specified(a_750: pointer), Specified(a_751: pointer)) =
                (a_748, a_749) in
              let weak a_752: integer =
                memop(Ptrdiff, 'signed int', a_750, a_751) in
              pure(
                if is_representable_integer(a_752, 'ptrdiff_t') then
                  Specified(a_752)
                else
                  undef(<<UB050_pointers_subtraction_not_representable>>)
              )
            ) in
          let (Specified(a_741: pointer), Specified(a_743: integer)) =
            (a_740, a_742) in
          let weak a_744: pointer =
            memop(PtrArrayShift, a_741, 'signed int', a_743) in
          pure(Specified(a_744))
        ,
          pure(Specified(1))
        ) in
      let (Specified(a_736: pointer), Specified(a_738: integer)) =
        (a_735, a_737) in
      let weak a_739: pointer =
        memop(PtrArrayShift, a_736, 'signed int', a_738) in
      pure(Specified(a_739))
    ) in
  store('signed int*', p, a_734) ;
  let strong a_753: loaded pointer =
    bound(
      let weak a_754: pointer = pure(y) in
      pure(Specified(a_754))
    ) in
  store('signed int*', q, a_753) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_755: loaded pointer,
      (a_756: ctype, a_757: [ctype], a_758: boolean, a_759: boolean)),
      a_763: loaded pointer, a_767: loaded pointer, a_772: loaded pointer) =
        unseq(
          let strong a_733: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_733, cfunction(a_733)))
        ,
          let weak a_765: pointer = pure(a_764) in
          let weak a_766: pointer = memop(PtrArrayShift, a_765, 'char', 0) in
          pure(Specified(a_766))
        ,
          let weak a_770: pointer = pure(p) in
          load('signed int*', a_770)
        ,
          let weak a_775: pointer = pure(q) in
          load('signed int*', a_775)
        ) in
      if not(params_length(a_757) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_758) \/ not(are_compatible ('signed int', a_756)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_762: pointer =
            let a_777: ctype = params_nth(a_757, 0) in
            if not(are_compatible ('const char*', a_777)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_778: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_778, a_763) in
              pure(a_778) in
          let strong a_761: pointer =
            pcall(create_and_store, 'void*', a_767) in
          let strong a_760: pointer =
            pcall(create_and_store, 'void*', a_772) in
          let strong a_779: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_755, a_762,
            [('void*', a_761), ('void*', a_760)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_762)
            ,
              kill('void*', a_761)
            ,
              kill('void*', a_760)
            ) in
          pure(a_779)
    ) in
  pure(Unit) ;
  let strong a_780: loaded integer =
    bound(
      let weak (a_782: loaded integer, a_783: loaded integer) =
        unseq(
          let weak (a_787: loaded integer, a_788: loaded integer) =
            unseq(
              let strong ((a_793: loaded pointer,
              (a_794: ctype, a_795: [ctype], a_796: boolean, a_797: boolean)),
              a_801: loaded pointer, a_803: loaded pointer,
              a_805: loaded integer) =
                unseq(
                  let strong a_792: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_792, cfunction(a_792)))
                ,
                  let weak a_802: pointer = pure(p) in
                  pure(Specified(a_802))
                ,
                  let weak a_804: pointer = pure(q) in
                  pure(Specified(a_804))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_795) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_796 \/ not(are_compatible ('signed int', a_794)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_800: pointer =
                    let a_806: ctype = params_nth(a_795, 0) in
                    if not(are_compatible ('const void*', a_806)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_807: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit = store('const void*', a_807, a_801) in
                      pure(a_807) in
                  let strong a_799: pointer =
                    let a_808: ctype = params_nth(a_795, 1) in
                    if not(are_compatible ('const void*', a_808)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_809: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit = store('const void*', a_809, a_803) in
                      pure(a_809) in
                  let strong a_798: pointer =
                    let a_810: ctype = params_nth(a_795, 2) in
                    if not(are_compatible ('size_t', a_810)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_811: pointer =
                        create(Ivalignof('size_t'), 'size_t') in
                      let weak _: unit =
                        store('size_t', a_811,
                        conv_loaded_int('size_t', a_805)) in
                      pure(a_811) in
                  let strong a_812: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_793, a_800, a_799, a_798) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_800)
                    ,
                      kill('void*', a_799)
                    ,
                      kill('size_t', a_798)
                    ) in
                  pure(a_812)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_789: integer), Specified(a_790: integer)) =
              (a_787, a_788) in
            if conv_int('signed int', a_789) = conv_int('signed int', a_790) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_784: integer), Specified(a_785: integer)) =
          (a_782, a_783) in
        if conv_int('signed int', a_784) = conv_int('signed int', a_785) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_732: boolean =
    let Specified(a_781: integer) = a_780 in
    pure(if not(a_781 = 1) then True else False) in
  if a_732 then
    let strong _: loaded integer =
      bound(
        let weak (a_814: pointer, a_819: loaded integer) =
          unseq(
            let weak a_815: loaded pointer =
              let weak a_818: pointer = pure(p) in
              load('signed int*', a_818) in
            let Specified(a_816: pointer) = a_815 in
            let weak a_817: boolean =
              memop(PtrValidForDeref, 'signed int', a_816) in
            pure(
              if a_817 then
                a_816
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          neg(store('signed int', a_814, conv_loaded_int('signed int', a_819))) in
        pure(conv_loaded_int('signed int', a_819))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      bound(
        let strong ((a_820: loaded pointer,
        (a_821: ctype, a_822: [ctype], a_823: boolean, a_824: boolean)),
        a_830: loaded pointer, a_834: loaded integer, a_836: loaded integer,
        a_838: loaded integer, a_844: loaded integer) =
          unseq(
            let strong a_813: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_813, cfunction(a_813)))
          ,
            let weak a_832: pointer = pure(a_831) in
            let weak a_833: pointer =
              memop(PtrArrayShift, a_832, 'char', 0) in
            pure(Specified(a_833))
          ,
            let weak a_835: pointer = pure(x) in
            load('signed int', a_835)
          ,
            let weak a_837: pointer = pure(y) in
            load('signed int', a_837)
          ,
            let weak a_843: pointer =
              let weak a_839: loaded pointer =
                let weak a_842: pointer = pure(p) in
                load('signed int*', a_842) in
              let Specified(a_840: pointer) = a_839 in
              let weak a_841: boolean =
                memop(PtrValidForDeref, 'signed int', a_840) in
              pure(
                if a_841 then
                  a_840
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_843)
          ,
            let weak a_849: pointer =
              let weak a_845: loaded pointer =
                let weak a_848: pointer = pure(q) in
                load('signed int*', a_848) in
              let Specified(a_846: pointer) = a_845 in
              let weak a_847: boolean =
                memop(PtrValidForDeref, 'signed int', a_846) in
              pure(
                if a_847 then
                  a_846
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_849)
          ) in
        if not(params_length(a_822) <= 5) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_823) \/ not(are_compatible ('signed int', a_821)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_829: pointer =
              let a_850: ctype = params_nth(a_822, 0) in
              if not(are_compatible ('const char*', a_850)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                let weak a_851: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_851, a_830) in
                pure(a_851) in
            let strong a_828: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_834)) in
            let strong a_827: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_836)) in
            let strong a_826: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_838)) in
            let strong a_825: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_844)) in
            let strong a_852: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_820, a_829,
              [('signed int', a_828), ('signed int', a_827),
              ('signed int', a_826), ('signed int', a_825)]) in
            let strong _: (unit,unit,unit,unit,unit) =
              unseq(
                kill('char*', a_829)
              ,
                kill('signed int', a_828)
              ,
                kill('signed int', a_827)
              ,
                kill('signed int', a_826)
              ,
                kill('signed int', a_825)
              ) in
            pure(a_852)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  let strong a_853: loaded integer = bound(pure(Specified(0))) in
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  run ret_731(conv_loaded_int('signed int', a_853)) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_731: loaded integer (a_854: loaded integer:= Specified(0)) in
    pure(a_854)

