-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

def struct __cerbty_unnamed_tag_824 :=
  __dummy_max_align_t: 'void*'

-- Globals
glob a_957: pointer [ail_ctype = 'char[29]'] :=
  create_readonly(Ivalignof('char[29]'), 'char[29]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 51)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 51)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_1025: pointer [ail_ctype = 'char[23]'] :=
  create_readonly(Ivalignof('char[23]'), 'char[23]', Specified(Array(Specified(conv_int('char',
  42)), Specified(conv_int('char', 112)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 114)),
  Specified(conv_int('char', 49)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 51)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong a: pointer = create(Ivalignof('void*'), 'void*') in
  let strong p1: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong p3: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong offset: pointer = create(Ivalignof('ptrdiff_t'), 'ptrdiff_t') in
  let strong q1: pointer =
    create(Ivalignof('unsigned char*'), 'unsigned char*') in
  let strong q3: pointer =
    create(Ivalignof('unsigned char*'), 'unsigned char*') in
  let strong r1: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong r3: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_844: loaded pointer =
    bound(
      let strong ((a_846: loaded pointer,
      (a_847: ctype, a_848: [ctype], a_849: boolean, a_850: boolean)),
      a_852: loaded integer) =
        unseq(
          let strong a_845: loaded pointer =
            pure(Specified(Cfunction(malloc_proxy))) in
          pure((a_845, cfunction(a_845)))
        ,
          let weak (a_853: loaded integer, a_854: loaded integer) =
            unseq(pure(Specified(4)), pure(Specified(Ivsizeof('signed int')))) in
          pure(
            let (Specified(a_855: integer), Specified(a_856: integer)) =
              (a_853, a_854) in
            Specified(wrapI_mul('size_t', if all_values_representable_in('size_t',
            'signed int') then
              conv_int('signed int', a_855)
            else
              conv_int('unsigned int', a_855), if all_values_representable_in('size_t',
            'signed int') then
              conv_int('signed int', a_856)
            else
              conv_int('unsigned int', a_856)))
          )
        ) in
      if not(params_length(a_848) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_849 \/ not(are_compatible ('void*', a_847)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_851: pointer =
            let a_858: ctype = params_nth(a_848, 0) in
            if not(are_compatible ('size_t', a_858)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_859: pointer =
                create(Ivalignof('size_t'), 'size_t') in
              let weak _: unit =
                store('size_t', a_859, conv_loaded_int('size_t', a_852)) in
              pure(a_859) in
          let strong a_860: loaded pointer =
            ccall('void* (*) (size_t)', a_846, a_851) in
          kill('size_t', a_851) ;
          pure(a_860)
    ) in
  store('void*', a, a_844) ;
  let strong a_861: loaded pointer =
    bound(
      let weak a_862: loaded pointer =
        let weak (a_864: loaded pointer, a_866: loaded integer) =
          unseq(
            let weak a_869: loaded pointer =
              let weak a_871: pointer = pure(a) in
              load('void*', a_871) in
            let Specified(a_870: pointer) = a_869 in
            let weak a_872: boolean =
              memop(PtrWellAligned, 'unsigned char', a_870) in
            pure(
              Specified(if a_872 then
                a_870
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            )
          ,
            let weak (a_873: loaded integer, a_874: loaded integer) =
              unseq(
                pure(Specified(1))
              ,
                pure(Specified(Ivsizeof('signed int')))
              ) in
            pure(
              let (Specified(a_875: integer), Specified(a_876: integer)) =
                (a_873, a_874) in
              Specified(wrapI_mul('size_t', if all_values_representable_in('size_t',
              'signed int') then
                conv_int('signed int', a_875)
              else
                conv_int('unsigned int', a_875), if all_values_representable_in('size_t',
              'signed int') then
                conv_int('signed int', a_876)
              else
                conv_int('unsigned int', a_876)))
            )
          ) in
        let (Specified(a_865: pointer), Specified(a_867: integer)) =
          (a_864, a_866) in
        let weak a_868: pointer =
          memop(PtrArrayShift, a_865, 'unsigned char', a_867) in
        pure(Specified(a_868)) in
      let Specified(a_863: pointer) = a_862 in
      let weak a_878: boolean = memop(PtrWellAligned, 'signed int', a_863) in
      pure(
        Specified(if a_878 then
          a_863
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('signed int*', p1, a_861) ;
  let strong a_879: loaded pointer =
    bound(
      let weak a_880: loaded pointer =
        let weak (a_882: loaded pointer, a_884: loaded integer) =
          unseq(
            let weak a_887: loaded pointer =
              let weak a_889: pointer = pure(a) in
              load('void*', a_889) in
            let Specified(a_888: pointer) = a_887 in
            let weak a_890: boolean =
              memop(PtrWellAligned, 'unsigned char', a_888) in
            pure(
              Specified(if a_890 then
                a_888
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            )
          ,
            let weak (a_891: loaded integer, a_892: loaded integer) =
              unseq(
                pure(Specified(3))
              ,
                pure(Specified(Ivsizeof('signed int')))
              ) in
            pure(
              let (Specified(a_893: integer), Specified(a_894: integer)) =
                (a_891, a_892) in
              Specified(wrapI_mul('size_t', if all_values_representable_in('size_t',
              'signed int') then
                conv_int('signed int', a_893)
              else
                conv_int('unsigned int', a_893), if all_values_representable_in('size_t',
              'signed int') then
                conv_int('signed int', a_894)
              else
                conv_int('unsigned int', a_894)))
            )
          ) in
        let (Specified(a_883: pointer), Specified(a_885: integer)) =
          (a_882, a_884) in
        let weak a_886: pointer =
          memop(PtrArrayShift, a_883, 'unsigned char', a_885) in
        pure(Specified(a_886)) in
      let Specified(a_881: pointer) = a_880 in
      let weak a_896: boolean = memop(PtrWellAligned, 'signed int', a_881) in
      pure(
        Specified(if a_896 then
          a_881
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('signed int*', p3, a_879) ;
  let strong _: loaded integer =
    bound(
      let weak (a_843: pointer, a_901: loaded integer) =
        unseq(
          let weak a_897: loaded pointer =
            let weak a_900: pointer = pure(p1) in
            load('signed int*', a_900) in
          let Specified(a_898: pointer) = a_897 in
          let weak a_899: boolean =
            memop(PtrValidForDeref, 'signed int', a_898) in
          pure(
            if a_899 then
              a_898
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(1))
        ) in
      let weak _: unit =
        neg(store('signed int', a_843, conv_loaded_int('signed int', a_901))) in
      pure(conv_loaded_int('signed int', a_901))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    bound(
      let weak (a_842: pointer, a_906: loaded integer) =
        unseq(
          let weak a_902: loaded pointer =
            let weak a_905: pointer = pure(p3) in
            load('signed int*', a_905) in
          let Specified(a_903: pointer) = a_902 in
          let weak a_904: boolean =
            memop(PtrValidForDeref, 'signed int', a_903) in
          pure(
            if a_904 then
              a_903
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(3))
        ) in
      let weak _: unit =
        neg(store('signed int', a_842, conv_loaded_int('signed int', a_906))) in
      pure(conv_loaded_int('signed int', a_906))
    ) in
  pure(Unit) ;
  let strong a_907: loaded integer =
    bound(
      let weak (a_916: loaded pointer, a_917: loaded pointer) =
        unseq(
          let weak a_908: loaded pointer =
            let weak a_910: pointer = pure(p3) in
            load('signed int*', a_910) in
          let Specified(a_909: pointer) = a_908 in
          let weak a_911: boolean =
            memop(PtrWellAligned, 'unsigned char', a_909) in
          pure(
            Specified(if a_911 then
              a_909
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          )
        ,
          let weak a_912: loaded pointer =
            let weak a_914: pointer = pure(p1) in
            load('signed int*', a_914) in
          let Specified(a_913: pointer) = a_912 in
          let weak a_915: boolean =
            memop(PtrWellAligned, 'unsigned char', a_913) in
          pure(
            Specified(if a_915 then
              a_913
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          )
        ) in
      let (Specified(a_918: pointer), Specified(a_919: pointer)) =
        (a_916, a_917) in
      let weak a_920: integer =
        memop(Ptrdiff, 'unsigned char', a_918, a_919) in
      pure(
        if is_representable_integer(a_920, 'ptrdiff_t') then
          Specified(a_920)
        else
          undef(<<UB050_pointers_subtraction_not_representable>>)
      )
    ) in
  store('ptrdiff_t', offset, conv_loaded_int('ptrdiff_t', a_907)) ;
  let strong a_921: loaded pointer =
    bound(
      let weak a_922: loaded pointer =
        let weak a_924: pointer = pure(p1) in
        load('signed int*', a_924) in
      let Specified(a_923: pointer) = a_922 in
      let weak a_925: boolean =
        memop(PtrWellAligned, 'unsigned char', a_923) in
      pure(
        Specified(if a_925 then
          a_923
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('unsigned char*', q1, a_921) ;
  let strong a_926: loaded pointer =
    bound(
      let weak (a_927: loaded pointer, a_929: loaded integer) =
        unseq(
          let weak a_932: loaded pointer =
            let weak a_934: pointer = pure(p1) in
            load('signed int*', a_934) in
          let Specified(a_933: pointer) = a_932 in
          let weak a_935: boolean =
            memop(PtrWellAligned, 'unsigned char', a_933) in
          pure(
            Specified(if a_935 then
              a_933
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          )
        ,
          let weak a_936: pointer = pure(offset) in
          load('ptrdiff_t', a_936)
        ) in
      let (Specified(a_928: pointer), Specified(a_930: integer)) =
        (a_927, a_929) in
      let weak a_931: pointer =
        memop(PtrArrayShift, a_928, 'unsigned char', a_930) in
      pure(Specified(a_931))
    ) in
  store('unsigned char*', q3, a_926) ;
  let strong a_937: loaded pointer =
    bound(
      let weak a_938: loaded pointer =
        let weak a_940: pointer = pure(q1) in
        load('unsigned char*', a_940) in
      let Specified(a_939: pointer) = a_938 in
      let weak a_941: boolean = memop(PtrWellAligned, 'signed int', a_939) in
      pure(
        Specified(if a_941 then
          a_939
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('signed int*', r1, a_937) ;
  let strong a_942: loaded pointer =
    bound(
      let weak a_943: loaded pointer =
        let weak a_945: pointer = pure(q3) in
        load('unsigned char*', a_945) in
      let Specified(a_944: pointer) = a_943 in
      let weak a_946: boolean = memop(PtrWellAligned, 'signed int', a_944) in
      pure(
        Specified(if a_946 then
          a_944
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('signed int*', r3, a_942) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_947: loaded pointer,
      (a_948: ctype, a_949: [ctype], a_950: boolean, a_951: boolean)),
      a_956: loaded pointer, a_960: loaded pointer, a_962: loaded pointer,
      a_967: loaded pointer) =
        unseq(
          let strong a_841: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_841, cfunction(a_841)))
        ,
          let weak a_958: pointer = pure(a_957) in
          let weak a_959: pointer = memop(PtrArrayShift, a_958, 'char', 0) in
          pure(Specified(a_959))
        ,
          let weak a_961: pointer = pure(a) in
          load('void*', a_961)
        ,
          let weak a_965: pointer = pure(p3) in
          load('signed int*', a_965)
        ,
          let weak a_970: pointer = pure(r3) in
          load('signed int*', a_970)
        ) in
      if not(params_length(a_949) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_950) \/ not(are_compatible ('signed int', a_948)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_955: pointer =
            let a_972: ctype = params_nth(a_949, 0) in
            if not(are_compatible ('const char*', a_972)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_973: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_973, a_956) in
              pure(a_973) in
          let strong a_954: pointer =
            pcall(create_and_store, 'void*', a_960) in
          let strong a_953: pointer =
            pcall(create_and_store, 'void*', a_962) in
          let strong a_952: pointer =
            pcall(create_and_store, 'void*', a_967) in
          let strong a_974: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_947, a_955,
            [('void*', a_954), ('void*', a_953), ('void*', a_952)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_955)
            ,
              kill('void*', a_954)
            ,
              kill('void*', a_953)
            ,
              kill('void*', a_952)
            ) in
          pure(a_974)
    ) in
  pure(Unit) ;
  let strong a_975: loaded integer =
    bound(
      let weak (a_977: loaded integer, a_978: loaded integer) =
        unseq(
          let weak (a_982: loaded integer, a_983: loaded integer) =
            unseq(
              let strong ((a_988: loaded pointer,
              (a_989: ctype, a_990: [ctype], a_991: boolean, a_992: boolean)),
              a_996: loaded pointer, a_998: loaded pointer,
              a_1000: loaded integer) =
                unseq(
                  let strong a_987: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_987, cfunction(a_987)))
                ,
                  let weak a_997: pointer = pure(p3) in
                  pure(Specified(a_997))
                ,
                  let weak a_999: pointer = pure(r3) in
                  pure(Specified(a_999))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_990) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_991 \/ not(are_compatible ('signed int', a_989)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_995: pointer =
                    let a_1001: ctype = params_nth(a_990, 0) in
                    if not(are_compatible ('const void*', a_1001)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_1002: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit =
                        store('const void*', a_1002, a_996) in
                      pure(a_1002) in
                  let strong a_994: pointer =
                    let a_1003: ctype = params_nth(a_990, 1) in
                    if not(are_compatible ('const void*', a_1003)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_1004: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit =
                        store('const void*', a_1004, a_998) in
                      pure(a_1004) in
                  let strong a_993: pointer =
                    let a_1005: ctype = params_nth(a_990, 2) in
                    if not(are_compatible ('size_t', a_1005)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_1006: pointer =
                        create(Ivalignof('size_t'), 'size_t') in
                      let weak _: unit =
                        store('size_t', a_1006,
                        conv_loaded_int('size_t', a_1000)) in
                      pure(a_1006) in
                  let strong a_1007: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_988, a_995, a_994, a_993) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_995)
                    ,
                      kill('void*', a_994)
                    ,
                      kill('size_t', a_993)
                    ) in
                  pure(a_1007)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_984: integer), Specified(a_985: integer)) =
              (a_982, a_983) in
            if conv_int('signed int', a_984) = conv_int('signed int', a_985) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_979: integer), Specified(a_980: integer)) =
          (a_977, a_978) in
        if conv_int('signed int', a_979) = conv_int('signed int', a_980) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_840: boolean =
    let Specified(a_976: integer) = a_975 in
    pure(if not(a_976 = 1) then True else False) in
  if a_840 then
    let strong _: loaded integer =
      bound(
        let weak (a_1009: pointer, a_1014: loaded integer) =
          unseq(
            let weak a_1010: loaded pointer =
              let weak a_1013: pointer = pure(r3) in
              load('signed int*', a_1013) in
            let Specified(a_1011: pointer) = a_1010 in
            let weak a_1012: boolean =
              memop(PtrValidForDeref, 'signed int', a_1011) in
            pure(
              if a_1012 then
                a_1011
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          neg(store('signed int', a_1009,
          conv_loaded_int('signed int', a_1014))) in
        pure(conv_loaded_int('signed int', a_1014))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      bound(
        let strong ((a_1015: loaded pointer,
        (a_1016: ctype, a_1017: [ctype], a_1018: boolean, a_1019: boolean)),
        a_1024: loaded pointer, a_1028: loaded integer, a_1034: loaded integer,
        a_1040: loaded integer) =
          unseq(
            let strong a_1008: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_1008, cfunction(a_1008)))
          ,
            let weak a_1026: pointer = pure(a_1025) in
            let weak a_1027: pointer =
              memop(PtrArrayShift, a_1026, 'char', 0) in
            pure(Specified(a_1027))
          ,
            let weak a_1033: pointer =
              let weak a_1029: loaded pointer =
                let weak a_1032: pointer = pure(p1) in
                load('signed int*', a_1032) in
              let Specified(a_1030: pointer) = a_1029 in
              let weak a_1031: boolean =
                memop(PtrValidForDeref, 'signed int', a_1030) in
              pure(
                if a_1031 then
                  a_1030
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_1033)
          ,
            let weak a_1039: pointer =
              let weak a_1035: loaded pointer =
                let weak a_1038: pointer = pure(r1) in
                load('signed int*', a_1038) in
              let Specified(a_1036: pointer) = a_1035 in
              let weak a_1037: boolean =
                memop(PtrValidForDeref, 'signed int', a_1036) in
              pure(
                if a_1037 then
                  a_1036
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_1039)
          ,
            let weak a_1045: pointer =
              let weak a_1041: loaded pointer =
                let weak a_1044: pointer = pure(r3) in
                load('signed int*', a_1044) in
              let Specified(a_1042: pointer) = a_1041 in
              let weak a_1043: boolean =
                memop(PtrValidForDeref, 'signed int', a_1042) in
              pure(
                if a_1043 then
                  a_1042
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_1045)
          ) in
        if not(params_length(a_1017) <= 4) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_1018) \/ not(are_compatible ('signed int', a_1016)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_1023: pointer =
              let a_1046: ctype = params_nth(a_1017, 0) in
              if not(are_compatible ('const char*', a_1046)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                let weak a_1047: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_1047, a_1024) in
                pure(a_1047) in
            let strong a_1022: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1028)) in
            let strong a_1021: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1034)) in
            let strong a_1020: pointer =
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_1040)) in
            let strong a_1048: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_1015,
              a_1023,
              [('signed int', a_1022), ('signed int', a_1021),
              ('signed int', a_1020)]) in
            let strong _: (unit,unit,unit,unit) =
              unseq(
                kill('char*', a_1023)
              ,
                kill('signed int', a_1022)
              ,
                kill('signed int', a_1021)
              ,
                kill('signed int', a_1020)
              ) in
            pure(a_1048)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  let strong a_1049: loaded integer = bound(pure(Specified(0))) in
  kill('void*', a) ;
  kill('signed int*', p1) ;
  kill('signed int*', p3) ;
  kill('ptrdiff_t', offset) ;
  kill('unsigned ichar*', q1) ;
  kill('unsigned ichar*', q3) ;
  kill('signed int*', r1) ;
  kill('signed int*', r3) ;
  run ret_839(conv_loaded_int('signed int', a_1049)) ;
  kill('void*', a) ;
  kill('signed int*', p1) ;
  kill('signed int*', p3) ;
  kill('ptrdiff_t', offset) ;
  kill('unsigned ichar*', q1) ;
  kill('unsigned ichar*', q3) ;
  kill('signed int*', r1) ;
  kill('signed int*', r3) ;
  pure(Unit) ;
  save ret_839: loaded integer (a_1050: loaded integer:= Specified(0)) in
    pure(a_1050)

