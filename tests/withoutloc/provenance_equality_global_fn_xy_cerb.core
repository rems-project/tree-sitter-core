-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_869: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_870: loaded integer = bound(pure(Specified(1))) in
  store('signed int', a_869, conv_loaded_int('signed int', a_870)) ;
  pure(a_869)

glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_867: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_868: loaded integer = bound(pure(Specified(2))) in
  store('signed int', a_867, conv_loaded_int('signed int', a_868)) ;
  pure(a_867)

glob a_757: pointer [ail_ctype = 'char[22]'] :=
  create_readonly(Ivalignof('char[22]'), 'char[22]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_845: pointer [ail_ctype = 'char[13]'] :=
  create_readonly(Ivalignof('char[13]'), 'char[13]', Specified(Array(Specified(conv_int('char',
  40)), Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_857: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_860: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc f (p: pointer, q: pointer): eff unit :=
  let strong a_795: loaded integer =
    bound(
      let weak (a_797: loaded integer, a_798: loaded integer) =
        unseq(
          let weak (a_802: loaded integer, a_803: loaded integer) =
            unseq(
              let strong ((a_808: loaded pointer,
              (a_809: ctype, a_810: [ctype], a_811: boolean, a_812: boolean)),
              a_816: loaded pointer, a_818: loaded pointer,
              a_820: loaded integer) =
                unseq(
                  let strong a_807: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_807, cfunction(a_807)))
                ,
                  let weak a_817: pointer = pure(p) in
                  pure(Specified(a_817))
                ,
                  let weak a_819: pointer = pure(q) in
                  pure(Specified(a_819))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_810) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_811 \/ not(are_compatible ('signed int', a_809)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_815: pointer =
                    let a_821: ctype = params_nth(a_810, 0) in
                    if not(are_compatible ('const void*', a_821)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_822: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit = store('const void*', a_822, a_816) in
                      pure(a_822) in
                  let strong a_814: pointer =
                    let a_823: ctype = params_nth(a_810, 1) in
                    if not(are_compatible ('const void*', a_823)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_824: pointer =
                        create(Ivalignof('const void*'), 'const void*') in
                      let weak _: unit = store('const void*', a_824, a_818) in
                      pure(a_824) in
                  let strong a_813: pointer =
                    let a_825: ctype = params_nth(a_810, 2) in
                    if not(are_compatible ('size_t', a_825)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      let weak a_826: pointer =
                        create(Ivalignof('size_t'), 'size_t') in
                      let weak _: unit =
                        store('size_t', a_826,
                        conv_loaded_int('size_t', a_820)) in
                      pure(a_826) in
                  let strong a_827: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_808, a_815, a_814, a_813) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_815)
                    ,
                      kill('void*', a_814)
                    ,
                      kill('size_t', a_813)
                    ) in
                  pure(a_827)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_804: integer), Specified(a_805: integer)) =
              (a_802, a_803) in
            if conv_int('signed int', a_804) = conv_int('signed int', a_805) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_799: integer), Specified(a_800: integer)) =
          (a_797, a_798) in
        if conv_int('signed int', a_799) = conv_int('signed int', a_800) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_794: boolean =
    let Specified(a_796: integer) = a_795 in
    pure(if not(a_796 = 1) then True else False) in
  if a_794 then
    let strong b: pointer = create(Ivalignof('_Bool'), '_Bool') in
    let strong a_829: loaded integer =
      bound(
        let weak (a_830: loaded pointer, a_831: loaded pointer) =
          unseq(
            let weak a_835: pointer = pure(p) in
            load('signed int*', a_835)
          ,
            let weak a_836: pointer = pure(q) in
            load('signed int*', a_836)
          ) in
        let (Specified(a_832: pointer), Specified(a_833: pointer)) =
          (a_830, a_831) in
        let weak a_834: boolean = memop(PtrEq, a_832, a_833) in
        pure(if a_834 then Specified(1) else Specified(0))
      ) in
    store('_Bool', b, conv_loaded_int('_Bool', a_829)) ;
    let strong _: loaded integer =
      bound(
        let strong ((a_837: loaded pointer,
        (a_838: ctype, a_839: [ctype], a_840: boolean, a_841: boolean)),
        a_844: loaded pointer, a_848: loaded pointer) =
          unseq(
            let strong a_828: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_828, cfunction(a_828)))
          ,
            let weak a_846: pointer = pure(a_845) in
            let weak a_847: pointer =
              memop(PtrArrayShift, a_846, 'char', 0) in
            pure(Specified(a_847))
          ,
            let strong a_855: loaded integer =
              let weak (a_849: loaded integer, a_850: loaded integer) =
                unseq(
                  let weak a_854: pointer = pure(b) in
                  load('_Bool', a_854)
                ,
                  pure(Specified(0))
                ) in
              pure(
                let (Specified(a_851: integer), Specified(a_852: integer)) =
                  (a_849, a_850) in
                if conv_int('signed int', a_851) =
                conv_int('signed int', a_852) then
                  Specified(1)
                else
                  Specified(0)
              ) in
            let Specified(a_856: integer) = a_855 in
            if a_856 = 0 then
              let weak a_858: pointer = pure(a_857) in
              let weak a_859: pointer =
                memop(PtrArrayShift, a_858, 'char', 0) in
              pure(Specified(a_859))
            else
              let weak a_861: pointer = pure(a_860) in
              let weak a_862: pointer =
                memop(PtrArrayShift, a_861, 'char', 0) in
              pure(Specified(a_862))
          ) in
        if not(params_length(a_839) <= 2) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_840) \/ not(are_compatible ('signed int', a_838)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_843: pointer =
              let a_863: ctype = params_nth(a_839, 0) in
              if not(are_compatible ('const char*', a_863)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                let weak a_864: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_864, a_844) in
                pure(a_864) in
            let strong a_842: pointer =
              pcall(create_and_store, 'char*', a_848) in
            let strong a_865: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_837, a_843,
              [('char*', a_842)]) in
            let strong _: (unit,unit) =
              unseq(kill('char*', a_843), kill('char*', a_842)) in
            pure(a_865)
      ) in
    pure(Unit) ;
    kill('_Bool', b) ;
    pure(Unit)
  else
    pure(Unit) ;
  pure(Unit) ;
  save ret_793: unit (a_866: unit:= Unit) in  pure(a_866)

proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_739: loaded pointer =
    bound(
      let weak (a_740: loaded pointer, a_742: loaded integer) =
        unseq(
          let weak a_745: pointer = pure(x) in
          pure(Specified(a_745))
        ,
          pure(Specified(1))
        ) in
      let (Specified(a_741: pointer), Specified(a_743: integer)) =
        (a_740, a_742) in
      let weak a_744: pointer =
        memop(PtrArrayShift, a_741, 'signed int', a_743) in
      pure(Specified(a_744))
    ) in
  store('signed int*', p, a_739) ;
  let strong a_746: loaded pointer =
    bound(
      let weak a_747: pointer = pure(y) in
      pure(Specified(a_747))
    ) in
  store('signed int*', q, a_746) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_748: loaded pointer,
      (a_749: ctype, a_750: [ctype], a_751: boolean, a_752: boolean)),
      a_756: loaded pointer, a_760: loaded pointer, a_765: loaded pointer) =
        unseq(
          let strong a_738: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_738, cfunction(a_738)))
        ,
          let weak a_758: pointer = pure(a_757) in
          let weak a_759: pointer = memop(PtrArrayShift, a_758, 'char', 0) in
          pure(Specified(a_759))
        ,
          let weak a_763: pointer = pure(p) in
          load('signed int*', a_763)
        ,
          let weak a_768: pointer = pure(q) in
          load('signed int*', a_768)
        ) in
      if not(params_length(a_750) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_751) \/ not(are_compatible ('signed int', a_749)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_755: pointer =
            let a_770: ctype = params_nth(a_750, 0) in
            if not(are_compatible ('const char*', a_770)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_771: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_771, a_756) in
              pure(a_771) in
          let strong a_754: pointer =
            pcall(create_and_store, 'void*', a_760) in
          let strong a_753: pointer =
            pcall(create_and_store, 'void*', a_765) in
          let strong a_772: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_748, a_755,
            [('void*', a_754), ('void*', a_753)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_755)
            ,
              kill('void*', a_754)
            ,
              kill('void*', a_753)
            ) in
          pure(a_772)
    ) in
  pure(Unit) ;
  bound(
    let strong ((a_773: loaded pointer,
    (a_774: ctype, a_775: [ctype], a_776: boolean, a_777: boolean)),
    a_780: loaded pointer, a_782: loaded pointer) =
      unseq(
        let strong a_737: loaded pointer = pure(Specified(Cfunction(f))) in
        pure((a_737, cfunction(a_737)))
      ,
        let weak a_781: pointer = pure(p) in
        load('signed int*', a_781)
      ,
        let weak a_783: pointer = pure(q) in
        load('signed int*', a_783)
      ) in
    if not(params_length(a_775) = 2) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_776 \/ not(are_compatible ('void', a_774)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_779: pointer =
          let a_784: ctype = params_nth(a_775, 0) in
          if not(are_compatible ('signed int*', a_784)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let weak a_785: pointer =
              create(Ivalignof('signed int*'), 'signed int*') in
            let weak _: unit = store('signed int*', a_785, a_780) in
            pure(a_785) in
        let strong a_778: pointer =
          let a_786: ctype = params_nth(a_775, 1) in
          if not(are_compatible ('signed int*', a_786)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let weak a_787: pointer =
              create(Ivalignof('signed int*'), 'signed int*') in
            let weak _: unit = store('signed int*', a_787, a_782) in
            pure(a_787) in
        let strong a_788: unit =
          ccall('void (*) (signed int*, signed int*)', a_773, a_779, a_778) in
        let strong _: (unit,unit) =
          unseq(kill('signed int*', a_779), kill('signed int*', a_778)) in
        pure(a_788)
  ) ;
  pure(Unit) ;
  let strong a_789: loaded integer = bound(pure(Specified(0))) in
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  run ret_736(conv_loaded_int('signed int', a_789)) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_736: loaded integer (a_790: loaded integer:= Specified(0)) in
    pure(a_790)

