-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_825: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_826: loaded integer = bound(pure(Specified(2))) in
  store('signed int', a_825, conv_loaded_int('signed int', a_826)) ;
  pure(a_825)

glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_823: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_824: loaded integer = bound(pure(Specified(1))) in
  store('signed int', a_823, conv_loaded_int('signed int', a_824)) ;
  pure(a_823)

glob a_753: pointer [ail_ctype = 'char[22]'] :=
  create_readonly(Ivalignof('char[22]'), 'char[22]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_792: pointer [ail_ctype = 'char[7]'] :=
  create_readonly(Ivalignof('char[7]'), 'char[7]', Specified(Array(Specified(conv_int('char',
  101)), Specified(conv_int('char', 113)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_812: pointer [ail_ctype = 'char[11]'] :=
  create_readonly(Ivalignof('char[11]'), 'char[11]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_735: loaded pointer =
    bound(
      let weak (a_736: loaded pointer, a_738: loaded integer) =
        unseq(
          let weak a_741: pointer = pure(x) in
          pure(Specified(a_741))
        ,
          pure(Specified(1))
        ) in
      let (Specified(a_737: pointer), Specified(a_739: integer)) =
        (a_736, a_738) in
      let weak a_740: pointer =
        memop(PtrArrayShift, a_737, 'signed int', a_739) in
      pure(Specified(a_740))
    ) in
  store('signed int*', p, a_735) ;
  let strong a_742: loaded pointer =
    bound(
      let weak a_743: pointer = pure(y) in
      pure(Specified(a_743))
    ) in
  store('signed int*', q, a_742) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_744: loaded pointer,
      (a_745: ctype, a_746: [ctype], a_747: boolean, a_748: boolean)),
      a_752: loaded pointer, a_756: loaded pointer, a_761: loaded pointer) =
        unseq(
          let strong a_734: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_734, cfunction(a_734)))
        ,
          let weak a_754: pointer = pure(a_753) in
          let weak a_755: pointer = memop(PtrArrayShift, a_754, 'char', 0) in
          pure(Specified(a_755))
        ,
          let weak a_759: pointer = pure(p) in
          load('signed int*', a_759)
        ,
          let weak a_764: pointer = pure(q) in
          load('signed int*', a_764)
        ) in
      if not(params_length(a_746) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_747) \/ not(are_compatible ('signed int', a_745)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_751: pointer =
            let a_766: ctype = params_nth(a_746, 0) in
            if not(are_compatible ('const char*', a_766)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_767: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_767, a_752) in
              pure(a_767) in
          let strong a_750: pointer =
            pcall(create_and_store, 'void*', a_756) in
          let strong a_749: pointer =
            pcall(create_and_store, 'void*', a_761) in
          let strong a_768: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_744, a_751,
            [('void*', a_750), ('void*', a_749)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_751)
            ,
              kill('void*', a_750)
            ,
              kill('void*', a_749)
            ) in
          pure(a_768)
    ) in
  pure(Unit) ;
  let strong a_769: loaded integer =
    bound(
      let weak (a_771: loaded integer, a_772: loaded integer) =
        unseq(
          let weak (a_776: loaded pointer, a_777: loaded pointer) =
            unseq(
              let weak a_781: pointer = pure(p) in
              load('signed int*', a_781)
            ,
              let weak a_782: pointer = pure(q) in
              load('signed int*', a_782)
            ) in
          let (Specified(a_778: pointer), Specified(a_779: pointer)) =
            (a_776, a_777) in
          let weak a_780: boolean = memop(PtrEq, a_778, a_779) in
          pure(if a_780 then Specified(1) else Specified(0))
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_773: integer), Specified(a_774: integer)) =
          (a_771, a_772) in
        if conv_int('signed int', a_773) = conv_int('signed int', a_774) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_733: boolean =
    let Specified(a_770: integer) = a_769 in
    pure(if not(a_770 = 1) then True else False) in
  if a_733 then
    let strong _: loaded integer =
      bound(
        let strong ((a_785: loaded pointer,
        (a_786: ctype, a_787: [ctype], a_788: boolean, a_789: boolean)),
        a_791: loaded pointer) =
          unseq(
            let strong a_784: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_784, cfunction(a_784)))
          ,
            let weak a_793: pointer = pure(a_792) in
            let weak a_794: pointer =
              memop(PtrArrayShift, a_793, 'char', 0) in
            pure(Specified(a_794))
          ) in
        if not(params_length(a_787) <= 1) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_788) \/ not(are_compatible ('signed int', a_786)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_790: pointer =
              let a_795: ctype = params_nth(a_787, 0) in
              if not(are_compatible ('const char*', a_795)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                let weak a_796: pointer =
                  create(Ivalignof('const char*'), 'const char*') in
                let weak _: unit = store('const char*', a_796, a_791) in
                pure(a_796) in
            let strong a_797: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_785, a_790,
              []: (ctype,pointer)) in
            kill('char*', a_790) ;
            pure(a_797)
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      bound(
        let weak (a_783: pointer, a_802: loaded integer) =
          unseq(
            let weak a_798: loaded pointer =
              let weak a_801: pointer = pure(p) in
              load('signed int*', a_801) in
            let Specified(a_799: pointer) = a_798 in
            let weak a_800: boolean =
              memop(PtrValidForDeref, 'signed int', a_799) in
            pure(
              if a_800 then
                a_799
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(22))
          ) in
        let weak _: unit =
          neg(store('signed int', a_783, conv_loaded_int('signed int', a_802))) in
        pure(conv_loaded_int('signed int', a_802))
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  let strong _: loaded integer =
    bound(
      let strong ((a_803: loaded pointer,
      (a_804: ctype, a_805: [ctype], a_806: boolean, a_807: boolean)),
      a_811: loaded pointer, a_815: loaded integer, a_817: loaded integer) =
        unseq(
          let strong a_732: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_732, cfunction(a_732)))
        ,
          let weak a_813: pointer = pure(a_812) in
          let weak a_814: pointer = memop(PtrArrayShift, a_813, 'char', 0) in
          pure(Specified(a_814))
        ,
          let weak a_816: pointer = pure(x) in
          load('signed int', a_816)
        ,
          let weak a_818: pointer = pure(y) in
          load('signed int', a_818)
        ) in
      if not(params_length(a_805) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_806) \/ not(are_compatible ('signed int', a_804)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_810: pointer =
            let a_819: ctype = params_nth(a_805, 0) in
            if not(are_compatible ('const char*', a_819)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              let weak a_820: pointer =
                create(Ivalignof('const char*'), 'const char*') in
              let weak _: unit = store('const char*', a_820, a_811) in
              pure(a_820) in
          let strong a_809: pointer =
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_815)) in
          let strong a_808: pointer =
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_817)) in
          let strong a_821: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_803, a_810,
            [('signed int', a_809), ('signed int', a_808)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_810)
            ,
              kill('signed int', a_809)
            ,
              kill('signed int', a_808)
            ) in
          pure(a_821)
    ) in
  pure(Unit) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_731: loaded integer (a_822: loaded integer:= Specified(0)) in
    pure(a_822)

