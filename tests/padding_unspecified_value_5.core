-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_648 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_652 :=
  c: 'char'
  f: 'float'
  i: 'signed int'

-- Globals
glob a_716: pointer [ail_ctype = 'char[7]'] :=
  create_readonly(Ivalignof('char[7]'), 'char[7]', Specified(Array(Specified(conv_int('char',
  99)), Specified(conv_int('char', 51)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 99)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong offset_padding: pointer =
    create(Ivalignof('size_t'), 'size_t') in
  let strong a_662: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_663: loaded integer, a_664: loaded integer) =
        unseq(
          pure(Specified(0))
        ,
          {- §6.5.3.4#4, sentence 1 -}
          pure(Specified(1))
        ) in
      pure(
        let (Specified(a_665: integer), Specified(a_666: integer)) =
          (a_663, a_664) in
        Specified(wrapI('size_t',
        conv_int('size_t', a_665) + conv_int('size_t', a_666)))
      )
    ) in
  store('size_t', offset_padding, conv_loaded_int('size_t', a_662)) ;
  let strong a_668: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_670: loaded integer, a_671: loaded integer) =
        unseq(
          {- §6.5.8 -}
          let weak (a_676: loaded integer, a_677: loaded integer) =
            unseq(
              pure(Specified(8))
            ,
              let weak a_675: pointer = pure(offset_padding) in
              load('size_t', a_675)
            ) in
          let (Specified(a_678: integer), Specified(a_679: integer)) =
            (a_676, a_677) in
          {- §6.5.8#6 -}
          pure(
            if conv_int('size_t', a_678) > conv_int('size_t', a_679) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_672: integer), Specified(a_673: integer)) =
          (a_670, a_671) in
        if conv_int('signed int', a_672) = conv_int('signed int', a_673) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_661: boolean =
    let Specified(a_669: integer) = a_668 in
    pure(if not(a_669 = 1) then True else False) in
  if a_661 then
    let strong s: pointer =
      create(Ivalignof('struct __cerbty_unnamed_tag_652'), 'struct __cerbty_unnamed_tag_652') in
    let strong p: pointer =
      create(Ivalignof('unsigned char*'), 'unsigned char*') in
    let strong c3: pointer =
      create(Ivalignof('unsigned char'), 'unsigned char') in
    {- §6.2.4#6 -}
    store('struct __cerbty_unnamed_tag_652', s,
    Unspecified('struct __cerbty_unnamed_tag_652')) ;
    let strong a_684: loaded pointer =
      {- §6.5#2 -}
      bound(
        {- §6.5.6 -}
        let weak (a_685: loaded pointer, a_687: loaded integer) =
          unseq(
            {- §6.5.4 -}
            let weak a_690: loaded pointer =
              {- §6.5.3.2#3, sentence 5 -}
              let weak a_692: pointer = pure(s) in
              pure(Specified(a_692)) in
            let Specified(a_691: pointer) = a_690 in
            let weak a_693: boolean =
              memop(PtrWellAligned, 'unsigned char', a_691) in
            pure(
              Specified(if a_693 then
                a_691
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            )
          ,
            let weak a_694: pointer = pure(offset_padding) in
            load('size_t', a_694)
          ) in
        let (Specified(a_686: pointer), Specified(a_688: integer)) =
          (a_685, a_687) in
        let weak a_689: pointer =
          memop(PtrArrayShift, a_686, 'unsigned char', a_688) in
        pure(Specified(a_689))
      ) in
    store('unsigned char*', p, a_684) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_683: pointer, a_699: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_695: loaded pointer =
              let weak a_698: pointer = pure(p) in
              load('unsigned char*', a_698) in
            let Specified(a_696: pointer) = a_695 in
            let weak a_697: boolean =
              memop(PtrValidForDeref, 'unsigned char', a_696) in
            pure(
              if a_697 then
                a_696
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(67))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('unsigned char', a_683,
          conv_loaded_int('unsigned char', a_699))) in
        pure(conv_loaded_int('unsigned char', a_699))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_682: pointer, a_701: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_700: pointer = pure(s) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_652, i], a_700)
          ,
            pure(Specified(42))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_682, conv_loaded_int('signed int', a_701))) in
        pure(conv_loaded_int('signed int', a_701))
      ) in
    pure(Unit) ;
    let strong a_702: loaded integer =
      {- §6.5#2 -}
      bound(
        let weak a_707: pointer =
          {- §6.5.3.2 -}
          let weak a_703: loaded pointer =
            let weak a_706: pointer = pure(p) in
            load('unsigned char*', a_706) in
          let Specified(a_704: pointer) = a_703 in
          let weak a_705: boolean =
            memop(PtrValidForDeref, 'unsigned char', a_704) in
          pure(
            if a_705 then
              a_704
            else
              undef(<<UB043_indirection_invalid_value>>)
          ) in
        load('unsigned char', a_707)
      ) in
    store('unsigned char', c3, conv_loaded_int('unsigned char', a_702)) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_708: loaded pointer,
        (a_709: ctype, a_710: [ctype], a_711: boolean, a_712: boolean)),
        a_715: loaded pointer, a_719: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_681: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_681, cfunction(a_681)))
          ,
            let weak a_717: pointer = pure(a_716) in
            {- §6.3.2.1#3 -}
            let weak a_718: pointer =
              memop(PtrArrayShift, a_717, 'char', 0) in
            pure(Specified(a_718))
          ,
            let weak a_720: pointer = pure(c3) in
            load('unsigned char', a_720)
          ) in
        if not(params_length(a_710) <= 2) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_711) \/ not(are_compatible ('signed int', a_709)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_714: pointer =
              let a_721: ctype = params_nth(a_710, 0) in
              if not(are_compatible ('const char*', a_721)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_722: pointer = create(Ivalignof(a_721), a_721) in
                let weak _: unit = store(a_721, a_722, a_715) in
                pure(a_722) in
            let strong a_713: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_719)) in
            let strong a_723: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_708, a_714,
              [('signed int', a_713)]) in
            let strong _: (unit,unit) =
              unseq(kill('char*', a_714), kill('signed int', a_713)) in
            pure(a_723)
      ) in
    pure(Unit) ;
    kill('struct __cerbty_unnamed_tag_652', s) ;
    kill('unsigned ichar*', p) ;
    kill('unsigned ichar', c3) ;
    pure(Unit)
  else
    pure(Unit) ;
  let strong a_724: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  kill('size_t', offset_padding) ;
  run ret_660(conv_loaded_int('signed int', a_724)) ;
  kill('size_t', offset_padding) ;
  pure(Unit) ;
  save ret_660: loaded integer (a_725: loaded integer:= Specified(0)) in
    pure(a_725)

