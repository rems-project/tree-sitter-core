-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

-- Globals
glob a_771: pointer [ail_ctype = 'char[15]'] :=
  create_readonly(Ivalignof('char[15]'), 'char[15]', Specified(Array(Specified(conv_int('char',
  112)), Specified(conv_int('char', 106)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 106)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_798: pointer [ail_ctype = 'char[9]'] :=
  create_readonly(Ivalignof('char[9]'), 'char[9]', Specified(Array(Specified(conv_int('char',
  112)), Specified(conv_int('char', 107)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_822: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  107)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_839: pointer [ail_ctype = 'char[15]'] :=
  create_readonly(Ivalignof('char[15]'), 'char[15]', Specified(Array(Specified(conv_int('char',
  112)), Specified(conv_int('char', 106)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 106)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong pj: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong pk: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  {- §6.2.4#6 -}
  store('signed int*', pj, Unspecified('signed int*')) ;
  let strong j: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_759: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', j, conv_loaded_int('signed int', a_759)) ;
  let strong _: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_758: pointer, a_761: loaded pointer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          pure(pj)
        ,
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_760: pointer = pure(j) in
          pure(Specified(a_760))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int*', a_758, a_761)) in
      pure(a_761)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_762: loaded pointer,
      (a_763: ctype, a_764: [ctype], a_765: boolean, a_766: boolean)),
      a_770: loaded pointer, a_774: loaded pointer, a_779: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_757: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_757, cfunction(a_757)))
        ,
          let weak a_772: pointer = pure(a_771) in
          {- §6.3.2.1#3 -}
          let weak a_773: pointer = memop(PtrArrayShift, a_772, 'char', 0) in
          pure(Specified(a_773))
        ,
          {- §6.5.4 -}
          let weak a_777: pointer = pure(pj) in
          load('signed int*', a_777)
        ,
          {- §6.5.3.2#3, sentence 5 -}
          {- §6.5.4 -}
          let weak a_782: pointer = pure(pj) in
          pure(Specified(a_782))
        ) in
      if not(params_length(a_764) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_765) \/ not(are_compatible ('signed int', a_763)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_769: pointer =
            let a_784: ctype = params_nth(a_764, 0) in
            if not(are_compatible ('const char*', a_784)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_785: pointer = create(Ivalignof(a_784), a_784) in
              let weak _: unit = store(a_784, a_785, a_770) in
              pure(a_785) in
          let strong a_768: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_774) in
          let strong a_767: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_779) in
          let strong a_786: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_762, a_769,
            [('void*', a_768), ('void*', a_767)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_769)
            ,
              kill('void*', a_768)
            ,
              kill('void*', a_767)
            ) in
          pure(a_786)
    ) in
  pure(Unit) ;
  kill('signed int', j) ;
  pure(Unit) ;
  {- §6.2.4#6 -}
  store('signed int*', pk, Unspecified('signed int*')) ;
  let strong k: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_787: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', k, conv_loaded_int('signed int', a_787)) ;
  let strong _: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_756: pointer, a_789: loaded pointer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          pure(pk)
        ,
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_788: pointer = pure(k) in
          pure(Specified(a_788))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int*', a_756, a_789)) in
      pure(a_789)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_790: loaded pointer,
      (a_791: ctype, a_792: [ctype], a_793: boolean, a_794: boolean)),
      a_797: loaded pointer, a_801: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_755: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_755, cfunction(a_755)))
        ,
          let weak a_799: pointer = pure(a_798) in
          {- §6.3.2.1#3 -}
          let weak a_800: pointer = memop(PtrArrayShift, a_799, 'char', 0) in
          pure(Specified(a_800))
        ,
          {- §6.5.4 -}
          let weak a_804: pointer = pure(pk) in
          load('signed int*', a_804)
        ) in
      if not(params_length(a_792) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_793) \/ not(are_compatible ('signed int', a_791)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_796: pointer =
            let a_806: ctype = params_nth(a_792, 0) in
            if not(are_compatible ('const char*', a_806)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_807: pointer = create(Ivalignof(a_806), a_806) in
              let weak _: unit = store(a_806, a_807, a_797) in
              pure(a_807) in
          let strong a_795: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_801) in
          let strong a_808: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_790, a_796,
            [('void*', a_795)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_796), kill('void*', a_795)) in
          pure(a_808)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_754: pointer, a_813: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_809: loaded pointer =
            let weak a_812: pointer = pure(pj) in
            load('signed int*', a_812) in
          let Specified(a_810: pointer) = a_809 in
          let weak a_811: boolean =
            memop(PtrValidForDeref, 'signed int', a_810) in
          pure(
            if a_811 then
              a_810
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(3))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_754, conv_loaded_int('signed int', a_813))) in
      pure(conv_loaded_int('signed int', a_813))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_814: loaded pointer,
      (a_815: ctype, a_816: [ctype], a_817: boolean, a_818: boolean)),
      a_821: loaded pointer, a_825: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_753: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_753, cfunction(a_753)))
        ,
          let weak a_823: pointer = pure(a_822) in
          {- §6.3.2.1#3 -}
          let weak a_824: pointer = memop(PtrArrayShift, a_823, 'char', 0) in
          pure(Specified(a_824))
        ,
          let weak a_826: pointer = pure(k) in
          load('signed int', a_826)
        ) in
      if not(params_length(a_816) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_817) \/ not(are_compatible ('signed int', a_815)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_820: pointer =
            let a_827: ctype = params_nth(a_816, 0) in
            if not(are_compatible ('const char*', a_827)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_828: pointer = create(Ivalignof(a_827), a_827) in
              let weak _: unit = store(a_827, a_828, a_821) in
              pure(a_828) in
          let strong a_819: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_825)) in
          let strong a_829: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_814, a_820,
            [('signed int', a_819)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_820), kill('signed int', a_819)) in
          pure(a_829)
    ) in
  pure(Unit) ;
  kill('signed int', k) ;
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_830: loaded pointer,
      (a_831: ctype, a_832: [ctype], a_833: boolean, a_834: boolean)),
      a_838: loaded pointer, a_842: loaded pointer, a_847: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_752: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_752, cfunction(a_752)))
        ,
          let weak a_840: pointer = pure(a_839) in
          {- §6.3.2.1#3 -}
          let weak a_841: pointer = memop(PtrArrayShift, a_840, 'char', 0) in
          pure(Specified(a_841))
        ,
          {- §6.5.4 -}
          let weak a_845: pointer = pure(pj) in
          load('signed int*', a_845)
        ,
          {- §6.5.3.2#3, sentence 5 -}
          {- §6.5.4 -}
          let weak a_850: pointer = pure(pj) in
          pure(Specified(a_850))
        ) in
      if not(params_length(a_832) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_833) \/ not(are_compatible ('signed int', a_831)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_837: pointer =
            let a_852: ctype = params_nth(a_832, 0) in
            if not(are_compatible ('const char*', a_852)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_853: pointer = create(Ivalignof(a_852), a_852) in
              let weak _: unit = store(a_852, a_853, a_838) in
              pure(a_853) in
          let strong a_836: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_842) in
          let strong a_835: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_847) in
          let strong a_854: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_830, a_837,
            [('void*', a_836), ('void*', a_835)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_837)
            ,
              kill('void*', a_836)
            ,
              kill('void*', a_835)
            ) in
          pure(a_854)
    ) in
  pure(Unit) ;
  let strong a_855: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  kill('signed int*', pj) ;
  kill('signed int*', pk) ;
  run ret_751(conv_loaded_int('signed int', a_855)) ;
  kill('signed int*', pj) ;
  kill('signed int*', pk) ;
  pure(Unit) ;
  save ret_751: loaded integer (a_856: loaded integer:= Specified(0)) in
    pure(a_856)

