-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

-- Globals
glob a_771: pointer [ail_ctype = 'char[15]'] :=
  create_readonly(Ivalignof('char[15]'), 'char[15]', Specified(Array(Specified(conv_int('char',
  112)), Specified(conv_int('char', 106)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 106)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_799: pointer [ail_ctype = 'char[15]'] :=
  create_readonly(Ivalignof('char[15]'), 'char[15]', Specified(Array(Specified(conv_int('char',
  112)), Specified(conv_int('char', 107)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 107)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_828: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  107)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_845: pointer [ail_ctype = 'char[15]'] :=
  create_readonly(Ivalignof('char[15]'), 'char[15]', Specified(Array(Specified(conv_int('char',
  112)), Specified(conv_int('char', 106)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 106)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong pj: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong pk: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  {- §6.2.4#6 -}
  store('signed int*', pj, Unspecified('signed int*')) ;
  let strong j: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_759: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', j, conv_loaded_int('signed int', a_759)) ;
  let strong _: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_758: pointer, a_761: loaded pointer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          pure(pj)
        ,
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_760: pointer = pure(j) in
          pure(Specified(a_760))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int*', a_758, a_761)) in
      pure(a_761)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_762: loaded pointer,
      (a_763: ctype, a_764: [ctype], a_765: boolean, a_766: boolean)),
      a_770: loaded pointer, a_774: loaded pointer, a_779: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_757: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_757, cfunction(a_757)))
        ,
          let weak a_772: pointer = pure(a_771) in
          {- §6.3.2.1#3 -}
          let weak a_773: pointer = memop(PtrArrayShift, a_772, 'char', 0) in
          pure(Specified(a_773))
        ,
          {- §6.5.4 -}
          let weak a_777: pointer = pure(pj) in
          load('signed int*', a_777)
        ,
          {- §6.5.3.2#3, sentence 5 -}
          {- §6.5.4 -}
          let weak a_782: pointer = pure(pj) in
          pure(Specified(a_782))
        ) in
      if not(params_length(a_764) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_765) \/ not(are_compatible ('signed int', a_763)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_769: pointer =
            let a_784: ctype = params_nth(a_764, 0) in
            if not(are_compatible ('const char*', a_784)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_785: pointer = create(Ivalignof(a_784), a_784) in
              let weak _: unit = store(a_784, a_785, a_770) in
              pure(a_785) in
          let strong a_768: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_774) in
          let strong a_767: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_779) in
          let strong a_786: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_762, a_769,
            [('void*', a_768), ('void*', a_767)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_769)
            ,
              kill('void*', a_768)
            ,
              kill('void*', a_767)
            ) in
          pure(a_786)
    ) in
  pure(Unit) ;
  kill('signed int', j) ;
  pure(Unit) ;
  {- §6.2.4#6 -}
  store('signed int*', pk, Unspecified('signed int*')) ;
  let strong k: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_787: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', k, conv_loaded_int('signed int', a_787)) ;
  let strong _: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_756: pointer, a_789: loaded pointer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          pure(pk)
        ,
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_788: pointer = pure(k) in
          pure(Specified(a_788))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int*', a_756, a_789)) in
      pure(a_789)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_790: loaded pointer,
      (a_791: ctype, a_792: [ctype], a_793: boolean, a_794: boolean)),
      a_798: loaded pointer, a_802: loaded pointer, a_807: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_755: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_755, cfunction(a_755)))
        ,
          let weak a_800: pointer = pure(a_799) in
          {- §6.3.2.1#3 -}
          let weak a_801: pointer = memop(PtrArrayShift, a_800, 'char', 0) in
          pure(Specified(a_801))
        ,
          {- §6.5.4 -}
          let weak a_805: pointer = pure(pk) in
          load('signed int*', a_805)
        ,
          {- §6.5.3.2#3, sentence 5 -}
          {- §6.5.4 -}
          let weak a_810: pointer = pure(pk) in
          pure(Specified(a_810))
        ) in
      if not(params_length(a_792) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_793) \/ not(are_compatible ('signed int', a_791)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_797: pointer =
            let a_812: ctype = params_nth(a_792, 0) in
            if not(are_compatible ('const char*', a_812)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_813: pointer = create(Ivalignof(a_812), a_812) in
              let weak _: unit = store(a_812, a_813, a_798) in
              pure(a_813) in
          let strong a_796: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_802) in
          let strong a_795: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_807) in
          let strong a_814: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_790, a_797,
            [('void*', a_796), ('void*', a_795)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_797)
            ,
              kill('void*', a_796)
            ,
              kill('void*', a_795)
            ) in
          pure(a_814)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_754: pointer, a_819: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_815: loaded pointer =
            let weak a_818: pointer = pure(pj) in
            load('signed int*', a_818) in
          let Specified(a_816: pointer) = a_815 in
          let weak a_817: boolean =
            memop(PtrValidForDeref, 'signed int', a_816) in
          pure(
            if a_817 then
              a_816
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(3))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_754, conv_loaded_int('signed int', a_819))) in
      pure(conv_loaded_int('signed int', a_819))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_820: loaded pointer,
      (a_821: ctype, a_822: [ctype], a_823: boolean, a_824: boolean)),
      a_827: loaded pointer, a_831: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_753: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_753, cfunction(a_753)))
        ,
          let weak a_829: pointer = pure(a_828) in
          {- §6.3.2.1#3 -}
          let weak a_830: pointer = memop(PtrArrayShift, a_829, 'char', 0) in
          pure(Specified(a_830))
        ,
          let weak a_832: pointer = pure(k) in
          load('signed int', a_832)
        ) in
      if not(params_length(a_822) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_823) \/ not(are_compatible ('signed int', a_821)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_826: pointer =
            let a_833: ctype = params_nth(a_822, 0) in
            if not(are_compatible ('const char*', a_833)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_834: pointer = create(Ivalignof(a_833), a_833) in
              let weak _: unit = store(a_833, a_834, a_827) in
              pure(a_834) in
          let strong a_825: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_831)) in
          let strong a_835: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_820, a_826,
            [('signed int', a_825)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_826), kill('signed int', a_825)) in
          pure(a_835)
    ) in
  pure(Unit) ;
  kill('signed int', k) ;
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_836: loaded pointer,
      (a_837: ctype, a_838: [ctype], a_839: boolean, a_840: boolean)),
      a_844: loaded pointer, a_848: loaded pointer, a_853: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_752: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_752, cfunction(a_752)))
        ,
          let weak a_846: pointer = pure(a_845) in
          {- §6.3.2.1#3 -}
          let weak a_847: pointer = memop(PtrArrayShift, a_846, 'char', 0) in
          pure(Specified(a_847))
        ,
          {- §6.5.4 -}
          let weak a_851: pointer = pure(pj) in
          load('signed int*', a_851)
        ,
          {- §6.5.3.2#3, sentence 5 -}
          {- §6.5.4 -}
          let weak a_856: pointer = pure(pj) in
          pure(Specified(a_856))
        ) in
      if not(params_length(a_838) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_839) \/ not(are_compatible ('signed int', a_837)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_843: pointer =
            let a_858: ctype = params_nth(a_838, 0) in
            if not(are_compatible ('const char*', a_858)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_859: pointer = create(Ivalignof(a_858), a_858) in
              let weak _: unit = store(a_858, a_859, a_844) in
              pure(a_859) in
          let strong a_842: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_848) in
          let strong a_841: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_853) in
          let strong a_860: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_836, a_843,
            [('void*', a_842), ('void*', a_841)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_843)
            ,
              kill('void*', a_842)
            ,
              kill('void*', a_841)
            ) in
          pure(a_860)
    ) in
  pure(Unit) ;
  let strong a_861: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  kill('signed int*', pj) ;
  kill('signed int*', pk) ;
  run ret_751(conv_loaded_int('signed int', a_861)) ;
  kill('signed int*', pj) ;
  kill('signed int*', pk) ;
  pure(Unit) ;
  save ret_751: loaded integer (a_862: loaded integer:= Specified(0)) in
    pure(a_862)

