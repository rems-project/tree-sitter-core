-- Globals
glob a: pointer [ail_ctype = 'signed int[2][2]'] :=
  let strong a_541: pointer =
    create(Ivalignof('signed int[2][2]'), 'signed int[2][2]') in
  let strong a_542: loaded array(array(integer)) =
    {- §6.5#2 -}
    bound(
      pure(
        Specified(Array(Specified(Array(Specified(0), Specified(0))),
        Specified(Array(Specified(0), Specified(0)))))
      )
    ) in
  store('signed int[2][2]', a_541, a_542) ;
  pure(a_541)

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_512: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      {- §6.5.3.2#3, sentence 3 -}
      let weak (a_513: loaded pointer, a_515: loaded integer) =
        unseq(
          let weak a_528: pointer =
            {- §6.5.3.2 -}
            let weak a_518: loaded pointer =
              {- §6.5.6 -}
              let weak (a_521: loaded pointer, a_523: loaded integer) =
                unseq(
                  let weak a_526: pointer = pure(a) in
                  {- §6.3.2.1#3 -}
                  let weak a_527: pointer =
                    memop(PtrArrayShift, a_526, 'signed int[2]', 0) in
                  pure(Specified(a_527))
                ,
                  pure(Specified(0))
                ) in
              let (Specified(a_522: pointer), Specified(a_524: integer)) =
                (a_521, a_523) in
              let weak a_525: pointer =
                memop(PtrArrayShift, a_522, 'signed int[2]', a_524) in
              pure(Specified(a_525)) in
            let Specified(a_519: pointer) = a_518 in
            let weak a_520: boolean =
              memop(PtrValidForDeref, 'signed int[2]', a_519) in
            pure(
              if a_520 then
                a_519
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          {- §6.3.2.1#3 -}
          let weak a_529: pointer =
            memop(PtrArrayShift, a_528, 'signed int', 0) in
          pure(Specified(a_529))
        ,
          pure(Specified(0))
        ) in
      let (Specified(a_514: pointer), Specified(a_516: integer)) =
        (a_513, a_515) in
      let weak a_517: pointer =
        memop(PtrArrayShift, a_514, 'signed int', a_516) in
      pure(Specified(a_517))
    ) in
  store('signed int*', p, a_512) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_511: pointer, a_539: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_530: loaded pointer =
            {- §6.5.6 -}
            let weak (a_533: loaded pointer, a_535: loaded integer) =
              unseq(
                let weak a_538: pointer = pure(p) in
                load('signed int*', a_538)
              ,
                pure(Specified(3))
              ) in
            let (Specified(a_534: pointer), Specified(a_536: integer)) =
              (a_533, a_535) in
            let weak a_537: pointer =
              memop(PtrArrayShift, a_534, 'signed int', a_536) in
            pure(Specified(a_537)) in
          let Specified(a_531: pointer) = a_530 in
          let weak a_532: boolean =
            memop(PtrValidForDeref, 'signed int', a_531) in
          pure(
            if a_532 then
              a_531
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(1))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_511, conv_loaded_int('signed int', a_539))) in
      pure(conv_loaded_int('signed int', a_539))
    ) in
  pure(Unit) ;
  kill('signed int*', p) ;
  pure(Unit) ;
  save ret_510: loaded integer (a_540: loaded integer:= Specified(0)) in
    pure(a_540)

