-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_724 :=
  x: 'signed int'
  y: 'signed int'

-- Globals
glob a_757: pointer [ail_ctype = 'char[22]'] :=
  create_readonly(Ivalignof('char[22]'), 'char[22]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_824: pointer [ail_ctype = 'char[27]'] :=
  create_readonly(Ivalignof('char[27]'), 'char[27]', Specified(Array(Specified(conv_int('char',
  115)), Specified(conv_int('char', 46)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 46)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong s: pointer =
    create(Ivalignof('struct __cerbty_unnamed_tag_724'), 'struct __cerbty_unnamed_tag_724') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_734: loaded struct a_724 =
    {- §6.5#2 -}
    bound(
      let weak (a_736: loaded integer, a_735: loaded integer) =
        {- §6.7.9#23 -}
        unseq(pure(Specified(2)), pure(Specified(1))) in
      pure(
        Specified((struct __cerbty_unnamed_tag_724){.x= conv_loaded_int('signed int',
        a_735), .y= conv_loaded_int('signed int', a_736)})
      )
    ) in
  store('struct __cerbty_unnamed_tag_724', s, a_734) ;
  let strong a_737: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_738: loaded pointer, a_740: loaded integer) =
        unseq(
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_743: pointer =
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_744: pointer = pure(s) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_724, x], a_744) in
          pure(Specified(a_743))
        ,
          pure(Specified(1))
        ) in
      let (Specified(a_739: pointer), Specified(a_741: integer)) =
        (a_738, a_740) in
      let weak a_742: pointer =
        memop(PtrArrayShift, a_739, 'signed int', a_741) in
      pure(Specified(a_742))
    ) in
  store('signed int*', p, a_737) ;
  let strong a_745: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_746: pointer =
        {- §6.5.2.3#3, sentence 2 -}
        let strong a_747: pointer = pure(s) in
        memop(PtrArrayShift[__cerbty_unnamed_tag_724, y], a_747) in
      pure(Specified(a_746))
    ) in
  store('signed int*', q, a_745) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_748: loaded pointer,
      (a_749: ctype, a_750: [ctype], a_751: boolean, a_752: boolean)),
      a_756: loaded pointer, a_760: loaded pointer, a_765: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_733: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_733, cfunction(a_733)))
        ,
          let weak a_758: pointer = pure(a_757) in
          {- §6.3.2.1#3 -}
          let weak a_759: pointer = memop(PtrArrayShift, a_758, 'char', 0) in
          pure(Specified(a_759))
        ,
          {- §6.5.4 -}
          let weak a_763: pointer = pure(p) in
          load('signed int*', a_763)
        ,
          {- §6.5.4 -}
          let weak a_768: pointer = pure(q) in
          load('signed int*', a_768)
        ) in
      if not(params_length(a_750) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_751) \/ not(are_compatible ('signed int', a_749)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_755: pointer =
            let a_770: ctype = params_nth(a_750, 0) in
            if not(are_compatible ('const char*', a_770)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_771: pointer = create(Ivalignof(a_770), a_770) in
              let weak _: unit = store(a_770, a_771, a_756) in
              pure(a_771) in
          let strong a_754: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_760) in
          let strong a_753: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_765) in
          let strong a_772: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_748, a_755,
            [('void*', a_754), ('void*', a_753)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_755)
            ,
              kill('void*', a_754)
            ,
              kill('void*', a_753)
            ) in
          pure(a_772)
    ) in
  pure(Unit) ;
  let strong a_773: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_775: loaded integer, a_776: loaded integer) =
        unseq(
          let weak (a_780: loaded integer, a_781: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_786: loaded pointer,
              (a_787: ctype, a_788: [ctype], a_789: boolean, a_790: boolean)),
              a_794: loaded pointer, a_796: loaded pointer,
              a_798: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_785: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_785, cfunction(a_785)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_795: pointer = pure(p) in
                  pure(Specified(a_795))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_797: pointer = pure(q) in
                  pure(Specified(a_797))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_788) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_789 \/ not(are_compatible ('signed int', a_787)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_793: pointer =
                    let a_799: ctype = params_nth(a_788, 0) in
                    if not(are_compatible ('const void*', a_799)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_800: pointer =
                        create(Ivalignof(a_799), a_799) in
                      let weak _: unit = store(a_799, a_800, a_794) in
                      pure(a_800) in
                  let strong a_792: pointer =
                    let a_801: ctype = params_nth(a_788, 1) in
                    if not(are_compatible ('const void*', a_801)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_802: pointer =
                        create(Ivalignof(a_801), a_801) in
                      let weak _: unit = store(a_801, a_802, a_796) in
                      pure(a_802) in
                  let strong a_791: pointer =
                    let a_803: ctype = params_nth(a_788, 2) in
                    if not(are_compatible ('size_t', a_803)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_804: pointer =
                        create(Ivalignof(a_803), a_803) in
                      let weak _: unit =
                        store(a_803, a_804, conv_loaded_int(a_803, a_798)) in
                      pure(a_804) in
                  let strong a_805: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_786, a_793, a_792, a_791) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_793)
                    ,
                      kill('void*', a_792)
                    ,
                      kill('size_t', a_791)
                    ) in
                  pure(a_805)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_782: integer), Specified(a_783: integer)) =
              (a_780, a_781) in
            if conv_int('signed int', a_782) = conv_int('signed int', a_783) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_777: integer), Specified(a_778: integer)) =
          (a_775, a_776) in
        if conv_int('signed int', a_777) = conv_int('signed int', a_778) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_732: boolean =
    let Specified(a_774: integer) = a_773 in
    pure(if not(a_774 = 1) then True else False) in
  if a_732 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_807: pointer, a_812: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_808: loaded pointer =
              let weak a_811: pointer = pure(p) in
              load('signed int*', a_811) in
            let Specified(a_809: pointer) = a_808 in
            let weak a_810: boolean =
              memop(PtrValidForDeref, 'signed int', a_809) in
            pure(
              if a_810 then
                a_809
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_807, conv_loaded_int('signed int', a_812))) in
        pure(conv_loaded_int('signed int', a_812))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_813: loaded pointer,
        (a_814: ctype, a_815: [ctype], a_816: boolean, a_817: boolean)),
        a_823: loaded pointer, a_827: loaded integer, a_830: loaded integer,
        a_833: loaded integer, a_839: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_806: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_806, cfunction(a_806)))
          ,
            let weak a_825: pointer = pure(a_824) in
            {- §6.3.2.1#3 -}
            let weak a_826: pointer =
              memop(PtrArrayShift, a_825, 'char', 0) in
            pure(Specified(a_826))
          ,
            let weak a_829: pointer =
              {- §6.5.2.3#3, sentence 2 -}
              let strong a_828: pointer = pure(s) in
              memop(PtrArrayShift[__cerbty_unnamed_tag_724, x], a_828) in
            load('signed int', a_829)
          ,
            let weak a_832: pointer =
              {- §6.5.2.3#3, sentence 2 -}
              let strong a_831: pointer = pure(s) in
              memop(PtrArrayShift[__cerbty_unnamed_tag_724, y], a_831) in
            load('signed int', a_832)
          ,
            let weak a_838: pointer =
              {- §6.5.3.2 -}
              let weak a_834: loaded pointer =
                let weak a_837: pointer = pure(p) in
                load('signed int*', a_837) in
              let Specified(a_835: pointer) = a_834 in
              let weak a_836: boolean =
                memop(PtrValidForDeref, 'signed int', a_835) in
              pure(
                if a_836 then
                  a_835
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_838)
          ,
            let weak a_844: pointer =
              {- §6.5.3.2 -}
              let weak a_840: loaded pointer =
                let weak a_843: pointer = pure(q) in
                load('signed int*', a_843) in
              let Specified(a_841: pointer) = a_840 in
              let weak a_842: boolean =
                memop(PtrValidForDeref, 'signed int', a_841) in
              pure(
                if a_842 then
                  a_841
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_844)
          ) in
        if not(params_length(a_815) <= 5) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_816) \/ not(are_compatible ('signed int', a_814)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_822: pointer =
              let a_845: ctype = params_nth(a_815, 0) in
              if not(are_compatible ('const char*', a_845)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_846: pointer = create(Ivalignof(a_845), a_845) in
                let weak _: unit = store(a_845, a_846, a_823) in
                pure(a_846) in
            let strong a_821: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_827)) in
            let strong a_820: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_830)) in
            let strong a_819: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_833)) in
            let strong a_818: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_839)) in
            let strong a_847: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_813, a_822,
              [('signed int', a_821), ('signed int', a_820),
              ('signed int', a_819), ('signed int', a_818)]) in
            let strong _: (unit,unit,unit,unit,unit) =
              unseq(
                kill('char*', a_822)
              ,
                kill('signed int', a_821)
              ,
                kill('signed int', a_820)
              ,
                kill('signed int', a_819)
              ,
                kill('signed int', a_818)
              ) in
            pure(a_847)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  kill('struct __cerbty_unnamed_tag_724', s) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_731: loaded integer (a_848: loaded integer:= Specified(0)) in
    pure(a_848)

