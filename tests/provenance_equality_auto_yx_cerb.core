-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_754: pointer [ail_ctype = 'char[22]'] :=
  create_readonly(Ivalignof('char[22]'), 'char[22]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_820: pointer [ail_ctype = 'char[13]'] :=
  create_readonly(Ivalignof('char[13]'), 'char[13]', Specified(Array(Specified(conv_int('char',
  40)), Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_832: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_835: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong y: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_734: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', y, conv_loaded_int('signed int', a_734)) ;
  let strong a_735: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', x, conv_loaded_int('signed int', a_735)) ;
  let strong a_736: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_737: loaded pointer, a_739: loaded integer) =
        unseq(
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_742: pointer = pure(x) in
          pure(Specified(a_742))
        ,
          pure(Specified(1))
        ) in
      let (Specified(a_738: pointer), Specified(a_740: integer)) =
        (a_737, a_739) in
      let weak a_741: pointer =
        memop(PtrArrayShift, a_738, 'signed int', a_740) in
      pure(Specified(a_741))
    ) in
  store('signed int*', p, a_736) ;
  let strong a_743: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_744: pointer = pure(y) in
      pure(Specified(a_744))
    ) in
  store('signed int*', q, a_743) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_745: loaded pointer,
      (a_746: ctype, a_747: [ctype], a_748: boolean, a_749: boolean)),
      a_753: loaded pointer, a_757: loaded pointer, a_762: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_733: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_733, cfunction(a_733)))
        ,
          let weak a_755: pointer = pure(a_754) in
          {- §6.3.2.1#3 -}
          let weak a_756: pointer = memop(PtrArrayShift, a_755, 'char', 0) in
          pure(Specified(a_756))
        ,
          {- §6.5.4 -}
          let weak a_760: pointer = pure(p) in
          load('signed int*', a_760)
        ,
          {- §6.5.4 -}
          let weak a_765: pointer = pure(q) in
          load('signed int*', a_765)
        ) in
      if not(params_length(a_747) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_748) \/ not(are_compatible ('signed int', a_746)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_752: pointer =
            let a_767: ctype = params_nth(a_747, 0) in
            if not(are_compatible ('const char*', a_767)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_768: pointer = create(Ivalignof(a_767), a_767) in
              let weak _: unit = store(a_767, a_768, a_753) in
              pure(a_768) in
          let strong a_751: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_757) in
          let strong a_750: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_762) in
          let strong a_769: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_745, a_752,
            [('void*', a_751), ('void*', a_750)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_752)
            ,
              kill('void*', a_751)
            ,
              kill('void*', a_750)
            ) in
          pure(a_769)
    ) in
  pure(Unit) ;
  let strong a_770: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_772: loaded integer, a_773: loaded integer) =
        unseq(
          let weak (a_777: loaded integer, a_778: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_783: loaded pointer,
              (a_784: ctype, a_785: [ctype], a_786: boolean, a_787: boolean)),
              a_791: loaded pointer, a_793: loaded pointer,
              a_795: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_782: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_782, cfunction(a_782)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_792: pointer = pure(p) in
                  pure(Specified(a_792))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_794: pointer = pure(q) in
                  pure(Specified(a_794))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_785) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_786 \/ not(are_compatible ('signed int', a_784)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_790: pointer =
                    let a_796: ctype = params_nth(a_785, 0) in
                    if not(are_compatible ('const void*', a_796)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_797: pointer =
                        create(Ivalignof(a_796), a_796) in
                      let weak _: unit = store(a_796, a_797, a_791) in
                      pure(a_797) in
                  let strong a_789: pointer =
                    let a_798: ctype = params_nth(a_785, 1) in
                    if not(are_compatible ('const void*', a_798)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_799: pointer =
                        create(Ivalignof(a_798), a_798) in
                      let weak _: unit = store(a_798, a_799, a_793) in
                      pure(a_799) in
                  let strong a_788: pointer =
                    let a_800: ctype = params_nth(a_785, 2) in
                    if not(are_compatible ('size_t', a_800)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_801: pointer =
                        create(Ivalignof(a_800), a_800) in
                      let weak _: unit =
                        store(a_800, a_801, conv_loaded_int(a_800, a_795)) in
                      pure(a_801) in
                  let strong a_802: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_783, a_790, a_789, a_788) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_790)
                    ,
                      kill('void*', a_789)
                    ,
                      kill('size_t', a_788)
                    ) in
                  pure(a_802)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_779: integer), Specified(a_780: integer)) =
              (a_777, a_778) in
            if conv_int('signed int', a_779) = conv_int('signed int', a_780) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_774: integer), Specified(a_775: integer)) =
          (a_772, a_773) in
        if conv_int('signed int', a_774) = conv_int('signed int', a_775) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_732: boolean =
    let Specified(a_771: integer) = a_770 in
    pure(if not(a_771 = 1) then True else False) in
  if a_732 then
    let strong b: pointer = create(Ivalignof('_Bool'), '_Bool') in
    let strong a_804: loaded integer =
      {- §6.5#2 -}
      bound(
        let weak (a_805: loaded pointer, a_806: loaded pointer) =
          unseq(
            let weak a_810: pointer = pure(p) in
            load('signed int*', a_810)
          ,
            let weak a_811: pointer = pure(q) in
            load('signed int*', a_811)
          ) in
        let (Specified(a_807: pointer), Specified(a_808: pointer)) =
          (a_805, a_806) in
        let weak a_809: boolean = memop(PtrEq, a_807, a_808) in
        pure(if a_809 then Specified(1) else Specified(0))
      ) in
    store('_Bool', b, conv_loaded_int('_Bool', a_804)) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_812: loaded pointer,
        (a_813: ctype, a_814: [ctype], a_815: boolean, a_816: boolean)),
        a_819: loaded pointer, a_823: loaded pointer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_803: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_803, cfunction(a_803)))
          ,
            let weak a_821: pointer = pure(a_820) in
            {- §6.3.2.1#3 -}
            let weak a_822: pointer =
              memop(PtrArrayShift, a_821, 'char', 0) in
            pure(Specified(a_822))
          ,
            {- §6.5.15#4, sentence 1 -}
            let strong a_830: loaded integer =
              let weak (a_824: loaded integer, a_825: loaded integer) =
                unseq(
                  let weak a_829: pointer = pure(b) in
                  load('_Bool', a_829)
                ,
                  pure(Specified(0))
                ) in
              pure(
                let (Specified(a_826: integer), Specified(a_827: integer)) =
                  (a_824, a_825) in
                if conv_int('signed int', a_826) =
                conv_int('signed int', a_827) then
                  Specified(1)
                else
                  Specified(0)
              ) in
            let Specified(a_831: integer) = a_830 in
            {- §6.5.15#4, sentence 2 -}
            if a_831 = 0 then
              let weak a_833: pointer = pure(a_832) in
              {- §6.3.2.1#3 -}
              let weak a_834: pointer =
                memop(PtrArrayShift, a_833, 'char', 0) in
              pure(Specified(a_834))
            else
              let weak a_836: pointer = pure(a_835) in
              {- §6.3.2.1#3 -}
              let weak a_837: pointer =
                memop(PtrArrayShift, a_836, 'char', 0) in
              pure(Specified(a_837))
          ) in
        if not(params_length(a_814) <= 2) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_815) \/ not(are_compatible ('signed int', a_813)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_818: pointer =
              let a_838: ctype = params_nth(a_814, 0) in
              if not(are_compatible ('const char*', a_838)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_839: pointer = create(Ivalignof(a_838), a_838) in
                let weak _: unit = store(a_838, a_839, a_819) in
                pure(a_839) in
            let strong a_817: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'char*', a_823) in
            let strong a_840: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_812, a_818,
              [('char*', a_817)]) in
            let strong _: (unit,unit) =
              unseq(kill('char*', a_818), kill('char*', a_817)) in
            pure(a_840)
      ) in
    pure(Unit) ;
    let strong a_841: loaded integer =
      {- §6.5#2 -}
      bound(pure(Specified(0))) in
    kill('_Bool', b) ;
    kill('signed int', y) ;
    kill('signed int', x) ;
    kill('signed int*', p) ;
    kill('signed int*', q) ;
    run ret_731(conv_loaded_int('signed int', a_841)) ;
    kill('_Bool', b) ;
    pure(Unit)
  else
    pure(Unit) ;
  kill('signed int', y) ;
  kill('signed int', x) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_731: loaded integer (a_842: loaded integer:= Specified(0)) in
    pure(a_842)

