-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob y: pointer [ail_ctype = 'signed int[2]'] :=
  let strong a_732: pointer =
    create(Ivalignof('signed int[2]'), 'signed int[2]') in
  let strong a_733: loaded array(integer) =
    {- §6.5#2 -}
    bound(pure(Specified(Array(Specified(0), Specified(0))))) in
  store('signed int[2]', a_732, a_733) ;
  pure(a_732)

glob x: pointer [ail_ctype = 'signed int[2]'] :=
  let strong a_730: pointer =
    create(Ivalignof('signed int[2]'), 'signed int[2]') in
  let strong a_731: loaded array(integer) =
    {- §6.5#2 -}
    bound(pure(Specified(Array(Specified(0), Specified(0))))) in
  store('signed int[2]', a_730, a_731) ;
  pure(a_730)

glob a_704: pointer [ail_ctype = 'char[15]'] :=
  create_readonly(Ivalignof('char[15]'), 'char[15]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 91)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 93)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_658: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_659: loaded pointer, a_661: loaded integer) =
        unseq(
          {- §6.5.6 -}
          {- §6.5.3.2#3, sentence 3 -}
          let weak (a_664: loaded pointer, a_666: loaded integer) =
            unseq(
              let weak a_669: pointer = pure(x) in
              {- §6.3.2.1#3 -}
              let weak a_670: pointer =
                memop(PtrArrayShift, a_669, 'signed int', 0) in
              pure(Specified(a_670))
            ,
              pure(Specified(0))
            ) in
          let (Specified(a_665: pointer), Specified(a_667: integer)) =
            (a_664, a_666) in
          let weak a_668: pointer =
            memop(PtrArrayShift, a_665, 'signed int', a_667) in
          pure(Specified(a_668))
        ,
          {- §6.5.6 -}
          let weak (a_685: loaded pointer, a_686: loaded pointer) =
            unseq(
              {- §6.5.6 -}
              {- §6.5.3.2#3, sentence 3 -}
              let weak (a_671: loaded pointer, a_673: loaded integer) =
                unseq(
                  let weak a_676: pointer = pure(x) in
                  {- §6.3.2.1#3 -}
                  let weak a_677: pointer =
                    memop(PtrArrayShift, a_676, 'signed int', 0) in
                  pure(Specified(a_677))
                ,
                  pure(Specified(1))
                ) in
              let (Specified(a_672: pointer), Specified(a_674: integer)) =
                (a_671, a_673) in
              let weak a_675: pointer =
                memop(PtrArrayShift, a_672, 'signed int', a_674) in
              pure(Specified(a_675))
            ,
              {- §6.5.6 -}
              {- §6.5.3.2#3, sentence 3 -}
              let weak (a_678: loaded pointer, a_680: loaded integer) =
                unseq(
                  let weak a_683: pointer = pure(x) in
                  {- §6.3.2.1#3 -}
                  let weak a_684: pointer =
                    memop(PtrArrayShift, a_683, 'signed int', 0) in
                  pure(Specified(a_684))
                ,
                  pure(Specified(0))
                ) in
              let (Specified(a_679: pointer), Specified(a_681: integer)) =
                (a_678, a_680) in
              let weak a_682: pointer =
                memop(PtrArrayShift, a_679, 'signed int', a_681) in
              pure(Specified(a_682))
            ) in
          let (Specified(a_687: pointer), Specified(a_688: pointer)) =
            (a_685, a_686) in
          let weak a_689: integer =
            memop(Ptrdiff, 'signed int', a_687, a_688) in
          pure(
            if is_representable_integer(a_689, 'ptrdiff_t') then
              Specified(a_689)
            else
              undef(<<UB050_pointers_subtraction_not_representable>>)
          )
        ) in
      let (Specified(a_660: pointer), Specified(a_662: integer)) =
        (a_659, a_661) in
      let weak a_663: pointer =
        memop(PtrArrayShift, a_660, 'signed int', a_662) in
      pure(Specified(a_663))
    ) in
  store('signed int*', p, a_658) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_657: pointer, a_694: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_690: loaded pointer =
            let weak a_693: pointer = pure(p) in
            load('signed int*', a_693) in
          let Specified(a_691: pointer) = a_690 in
          let weak a_692: boolean =
            memop(PtrValidForDeref, 'signed int', a_691) in
          pure(
            if a_692 then
              a_691
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(11))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_657, conv_loaded_int('signed int', a_694))) in
      pure(conv_loaded_int('signed int', a_694))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_695: loaded pointer,
      (a_696: ctype, a_697: [ctype], a_698: boolean, a_699: boolean)),
      a_703: loaded pointer, a_707: loaded integer, a_719: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_656: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_656, cfunction(a_656)))
        ,
          let weak a_705: pointer = pure(a_704) in
          {- §6.3.2.1#3 -}
          let weak a_706: pointer = memop(PtrArrayShift, a_705, 'char', 0) in
          pure(Specified(a_706))
        ,
          let weak a_718: pointer =
            {- §6.5.3.2 -}
            let weak a_708: loaded pointer =
              {- §6.5.6 -}
              let weak (a_711: loaded pointer, a_713: loaded integer) =
                unseq(
                  let weak a_716: pointer = pure(x) in
                  {- §6.3.2.1#3 -}
                  let weak a_717: pointer =
                    memop(PtrArrayShift, a_716, 'signed int', 0) in
                  pure(Specified(a_717))
                ,
                  pure(Specified(1))
                ) in
              let (Specified(a_712: pointer), Specified(a_714: integer)) =
                (a_711, a_713) in
              let weak a_715: pointer =
                memop(PtrArrayShift, a_712, 'signed int', a_714) in
              pure(Specified(a_715)) in
            let Specified(a_709: pointer) = a_708 in
            let weak a_710: boolean =
              memop(PtrValidForDeref, 'signed int', a_709) in
            pure(
              if a_710 then
                a_709
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_718)
        ,
          let weak a_724: pointer =
            {- §6.5.3.2 -}
            let weak a_720: loaded pointer =
              let weak a_723: pointer = pure(p) in
              load('signed int*', a_723) in
            let Specified(a_721: pointer) = a_720 in
            let weak a_722: boolean =
              memop(PtrValidForDeref, 'signed int', a_721) in
            pure(
              if a_722 then
                a_721
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_724)
        ) in
      if not(params_length(a_697) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_698) \/ not(are_compatible ('signed int', a_696)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_702: pointer =
            let a_725: ctype = params_nth(a_697, 0) in
            if not(are_compatible ('const char*', a_725)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_726: pointer = create(Ivalignof(a_725), a_725) in
              let weak _: unit = store(a_725, a_726, a_703) in
              pure(a_726) in
          let strong a_701: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_707)) in
          let strong a_700: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_719)) in
          let strong a_727: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_695, a_702,
            [('signed int', a_701), ('signed int', a_700)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_702)
            ,
              kill('signed int', a_701)
            ,
              kill('signed int', a_700)
            ) in
          pure(a_727)
    ) in
  pure(Unit) ;
  let strong a_728: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  kill('signed int*', p) ;
  run ret_655(conv_loaded_int('signed int', a_728)) ;
  kill('signed int*', p) ;
  pure(Unit) ;
  save ret_655: loaded integer (a_729: loaded integer:= Specified(0)) in
    pure(a_729)

