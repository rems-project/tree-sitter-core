-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_648 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_680 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

def struct __cerbty_unnamed_tag_698 :=
  c: 'char'
  u: 'unsigned short'

-- Globals
glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_838: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_839: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  store('signed int', a_838, conv_loaded_int('signed int', a_839)) ;
  pure(a_838)

glob a_757: pointer [ail_ctype = 'char[16]'] :=
  create_readonly(Ivalignof('char[16]'), 'char[16]', Specified(Array(Specified(conv_int('char',
  42)), Specified(conv_int('char', 112)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 103)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 48)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_791: pointer [ail_ctype = 'char[16]'] :=
  create_readonly(Ivalignof('char[16]'), 'char[16]', Specified(Array(Specified(conv_int('char',
  42)), Specified(conv_int('char', 112)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 103)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 48)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_822: pointer [ail_ctype = 'char[16]'] :=
  create_readonly(Ivalignof('char[16]'), 'char[16]', Specified(Array(Specified(conv_int('char',
  42)), Specified(conv_int('char', 112)), Specified(conv_int('char', 97)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 110)),
  Specified(conv_int('char', 103)), Specified(conv_int('char', 50)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 48)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong offset_padding: pointer =
    create(Ivalignof('size_t'), 'size_t') in
  let strong s1: pointer =
    create(Ivalignof('struct __cerbty_unnamed_tag_698'), 'struct __cerbty_unnamed_tag_698') in
  let strong padding1: pointer =
    create(Ivalignof('unsigned char*'), 'unsigned char*') in
  let strong s2: pointer =
    create(Ivalignof('struct __cerbty_unnamed_tag_698'), 'struct __cerbty_unnamed_tag_698') in
  let strong padding2: pointer =
    create(Ivalignof('unsigned char*'), 'unsigned char*') in
  let strong a_716: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_717: loaded integer, a_718: loaded integer) =
        unseq(
          pure(Specified(0))
        ,
          {- §6.5.3.4#4, sentence 1 -}
          pure(Specified(1))
        ) in
      pure(
        let (Specified(a_719: integer), Specified(a_720: integer)) =
          (a_717, a_718) in
        Specified(wrapI('size_t',
        conv_int('size_t', a_719) + conv_int('size_t', a_720)))
      )
    ) in
  store('size_t', offset_padding, conv_loaded_int('size_t', a_716)) ;
  {- §6.5#2 -}
  bound(
    let strong a_715: loaded integer =
      {- §6.5.8 -}
      let weak (a_725: loaded integer, a_726: loaded integer) =
        unseq(
          pure(Specified(2))
        ,
          let weak a_724: pointer = pure(offset_padding) in
          load('size_t', a_724)
        ) in
      let (Specified(a_727: integer), Specified(a_728: integer)) =
        (a_725, a_726) in
      {- §6.5.8#6 -}
      pure(
        if conv_int('size_t', a_727) > conv_int('size_t', a_728) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_722: integer) = a_715 in
      if a_722 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  let strong a_730: loaded struct a_698 =
    {- §6.5#2 -}
    bound(
      let weak (a_732: loaded integer, a_731: loaded integer) =
        {- §6.7.9#23 -}
        unseq(pure(Specified(4660)), pure(Specified(65))) in
      pure(
        Specified((struct __cerbty_unnamed_tag_698){.c= conv_loaded_int('char',
        a_731), .u= conv_loaded_int('unsigned short', a_732)})
      )
    ) in
  store('struct __cerbty_unnamed_tag_698', s1, a_730) ;
  let strong a_733: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_734: loaded pointer, a_736: loaded integer) =
        unseq(
          {- §6.5.4 -}
          let weak a_739: loaded pointer =
            {- §6.5.3.2#3, sentence 5 -}
            let weak a_741: pointer = pure(s1) in
            pure(Specified(a_741)) in
          let Specified(a_740: pointer) = a_739 in
          let weak a_742: boolean =
            memop(PtrWellAligned, 'unsigned char', a_740) in
          pure(
            Specified(if a_742 then
              a_740
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          )
        ,
          let weak a_743: pointer = pure(offset_padding) in
          load('size_t', a_743)
        ) in
      let (Specified(a_735: pointer), Specified(a_737: integer)) =
        (a_734, a_736) in
      let weak a_738: pointer =
        memop(PtrArrayShift, a_735, 'unsigned char', a_737) in
      pure(Specified(a_738))
    ) in
  store('unsigned char*', padding1, a_733) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_714: pointer, a_748: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_744: loaded pointer =
            let weak a_747: pointer = pure(padding1) in
            load('unsigned char*', a_747) in
          let Specified(a_745: pointer) = a_744 in
          let weak a_746: boolean =
            memop(PtrValidForDeref, 'unsigned char', a_745) in
          pure(
            if a_746 then
              a_745
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(186))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('unsigned char', a_714,
        conv_loaded_int('unsigned char', a_748))) in
      pure(conv_loaded_int('unsigned char', a_748))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_749: loaded pointer,
      (a_750: ctype, a_751: [ctype], a_752: boolean, a_753: boolean)),
      a_756: loaded pointer, a_760: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_713: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_713, cfunction(a_713)))
        ,
          let weak a_758: pointer = pure(a_757) in
          {- §6.3.2.1#3 -}
          let weak a_759: pointer = memop(PtrArrayShift, a_758, 'char', 0) in
          pure(Specified(a_759))
        ,
          {- §6.5.4 -}
          let weak a_761: loaded integer =
            let weak a_767: pointer =
              {- §6.5.3.2 -}
              let weak a_763: loaded pointer =
                let weak a_766: pointer = pure(padding1) in
                load('unsigned char*', a_766) in
              let Specified(a_764: pointer) = a_763 in
              let weak a_765: boolean =
                memop(PtrValidForDeref, 'unsigned char', a_764) in
              pure(
                if a_765 then
                  a_764
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('unsigned char', a_767) in
          pure(conv_loaded_int('signed int', a_761))
        ) in
      if not(params_length(a_751) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_752) \/ not(are_compatible ('signed int', a_750)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_755: pointer =
            let a_769: ctype = params_nth(a_751, 0) in
            if not(are_compatible ('const char*', a_769)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_770: pointer = create(Ivalignof(a_769), a_769) in
              let weak _: unit = store(a_769, a_770, a_756) in
              pure(a_770) in
          let strong a_754: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_760)) in
          let strong a_771: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_749, a_755,
            [('signed int', a_754)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_755), kill('signed int', a_754)) in
          pure(a_771)
    ) in
  pure(Unit) ;
  {- §6.2.4#6 -}
  store('struct __cerbty_unnamed_tag_698', s2,
  Unspecified('struct __cerbty_unnamed_tag_698')) ;
  let strong a_772: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_773: loaded pointer, a_775: loaded integer) =
        unseq(
          {- §6.5.4 -}
          let weak a_778: loaded pointer =
            {- §6.5.3.2#3, sentence 5 -}
            let weak a_780: pointer = pure(s2) in
            pure(Specified(a_780)) in
          let Specified(a_779: pointer) = a_778 in
          let weak a_781: boolean =
            memop(PtrWellAligned, 'unsigned char', a_779) in
          pure(
            Specified(if a_781 then
              a_779
            else
              undef(<<UB025_misaligned_pointer_conversion>>))
          )
        ,
          let weak a_782: pointer = pure(offset_padding) in
          load('size_t', a_782)
        ) in
      let (Specified(a_774: pointer), Specified(a_776: integer)) =
        (a_773, a_775) in
      let weak a_777: pointer =
        memop(PtrArrayShift, a_774, 'unsigned char', a_776) in
      pure(Specified(a_777))
    ) in
  store('unsigned char*', padding2, a_772) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_783: loaded pointer,
      (a_784: ctype, a_785: [ctype], a_786: boolean, a_787: boolean)),
      a_790: loaded pointer, a_794: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_712: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_712, cfunction(a_712)))
        ,
          let weak a_792: pointer = pure(a_791) in
          {- §6.3.2.1#3 -}
          let weak a_793: pointer = memop(PtrArrayShift, a_792, 'char', 0) in
          pure(Specified(a_793))
        ,
          {- §6.5.4 -}
          let weak a_795: loaded integer =
            let weak a_801: pointer =
              {- §6.5.3.2 -}
              let weak a_797: loaded pointer =
                let weak a_800: pointer = pure(padding2) in
                load('unsigned char*', a_800) in
              let Specified(a_798: pointer) = a_797 in
              let weak a_799: boolean =
                memop(PtrValidForDeref, 'unsigned char', a_798) in
              pure(
                if a_799 then
                  a_798
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('unsigned char', a_801) in
          pure(conv_loaded_int('signed int', a_795))
        ) in
      if not(params_length(a_785) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_786) \/ not(are_compatible ('signed int', a_784)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_789: pointer =
            let a_803: ctype = params_nth(a_785, 0) in
            if not(are_compatible ('const char*', a_803)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_804: pointer = create(Ivalignof(a_803), a_803) in
              let weak _: unit = store(a_803, a_804, a_790) in
              pure(a_804) in
          let strong a_788: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_794)) in
          let strong a_805: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_783, a_789,
            [('signed int', a_788)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_789), kill('signed int', a_788)) in
          pure(a_805)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_711: pointer, a_809: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.2.3#3, sentence 2 -}
          let strong a_806: pointer = pure(s2) in
          memop(PtrArrayShift[__cerbty_unnamed_tag_698, c], a_806)
        ,
          let weak a_808: pointer =
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_807: pointer = pure(s1) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_698, c], a_807) in
          load('char', a_808)
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('char', a_711, conv_loaded_int('char', a_809))) in
      pure(conv_loaded_int('char', a_809))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_710: pointer, a_813: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.2.3#3, sentence 2 -}
          let strong a_810: pointer = pure(s2) in
          memop(PtrArrayShift[__cerbty_unnamed_tag_698, u], a_810)
        ,
          let weak a_812: pointer =
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_811: pointer = pure(s1) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_698, u], a_811) in
          load('unsigned short', a_812)
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('unsigned short', a_710,
        conv_loaded_int('unsigned short', a_813))) in
      pure(conv_loaded_int('unsigned short', a_813))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_814: loaded pointer,
      (a_815: ctype, a_816: [ctype], a_817: boolean, a_818: boolean)),
      a_821: loaded pointer, a_825: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_709: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_709, cfunction(a_709)))
        ,
          let weak a_823: pointer = pure(a_822) in
          {- §6.3.2.1#3 -}
          let weak a_824: pointer = memop(PtrArrayShift, a_823, 'char', 0) in
          pure(Specified(a_824))
        ,
          {- §6.5.4 -}
          let weak a_826: loaded integer =
            let weak a_832: pointer =
              {- §6.5.3.2 -}
              let weak a_828: loaded pointer =
                let weak a_831: pointer = pure(padding2) in
                load('unsigned char*', a_831) in
              let Specified(a_829: pointer) = a_828 in
              let weak a_830: boolean =
                memop(PtrValidForDeref, 'unsigned char', a_829) in
              pure(
                if a_830 then
                  a_829
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('unsigned char', a_832) in
          pure(conv_loaded_int('signed int', a_826))
        ) in
      if not(params_length(a_816) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_817) \/ not(are_compatible ('signed int', a_815)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_820: pointer =
            let a_834: ctype = params_nth(a_816, 0) in
            if not(are_compatible ('const char*', a_834)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_835: pointer = create(Ivalignof(a_834), a_834) in
              let weak _: unit = store(a_834, a_835, a_821) in
              pure(a_835) in
          let strong a_819: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_825)) in
          let strong a_836: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_814, a_820,
            [('signed int', a_819)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_820), kill('signed int', a_819)) in
          pure(a_836)
    ) in
  pure(Unit) ;
  kill('size_t', offset_padding) ;
  kill('struct __cerbty_unnamed_tag_698', s1) ;
  kill('unsigned ichar*', padding1) ;
  kill('struct __cerbty_unnamed_tag_698', s2) ;
  kill('unsigned ichar*', padding2) ;
  pure(Unit) ;
  save ret_708: loaded integer (a_837: loaded integer:= Specified(0)) in
    pure(a_837)

