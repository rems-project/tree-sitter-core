-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_754 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_758 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_895: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_896: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_895, conv_loaded_int('signed int', a_896)) ;
  pure(a_895)

glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_893: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_894: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', a_893, conv_loaded_int('signed int', a_894)) ;
  pure(a_893)

glob a_870: pointer [ail_ctype = 'char[23]'] :=
  create_readonly(Ivalignof('char[23]'), 'char[23]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 113)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong i: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong j: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong a_787: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_788: loaded pointer, a_790: loaded integer) =
        unseq(
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_793: pointer = pure(x) in
          pure(Specified(a_793))
        ,
          pure(Specified(1))
        ) in
      let (Specified(a_789: pointer), Specified(a_791: integer)) =
        (a_788, a_790) in
      let weak a_792: pointer =
        memop(PtrArrayShift, a_789, 'signed int', a_791) in
      pure(Specified(a_792))
    ) in
  store('signed int*', p, a_787) ;
  let strong a_794: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_795: pointer = pure(y) in
      pure(Specified(a_795))
    ) in
  store('signed int*', q, a_794) ;
  let strong a_796: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_797: loaded pointer =
        let weak a_799: pointer = pure(p) in
        load('signed int*', a_799) in
      let Specified(a_798: pointer) = a_797 in
      let weak a_800: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_798) in
      pure(Specified(a_800))
    ) in
  store('uintptr_t', i, conv_loaded_int('uintptr_t', a_796)) ;
  let strong a_801: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_802: loaded pointer =
        let weak a_804: pointer = pure(q) in
        load('signed int*', a_804) in
      let Specified(a_803: pointer) = a_802 in
      let weak a_805: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_803) in
      pure(Specified(a_805))
    ) in
  store('uintptr_t', j, conv_loaded_int('uintptr_t', a_801)) ;
  let strong a_806: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_808: loaded integer, a_809: loaded integer) =
        unseq(
          let weak (a_813: loaded integer, a_814: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_819: loaded pointer,
              (a_820: ctype, a_821: [ctype], a_822: boolean, a_823: boolean)),
              a_827: loaded pointer, a_829: loaded pointer,
              a_831: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_818: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_818, cfunction(a_818)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_828: pointer = pure(p) in
                  pure(Specified(a_828))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_830: pointer = pure(q) in
                  pure(Specified(a_830))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_821) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_822 \/ not(are_compatible ('signed int', a_820)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_826: pointer =
                    let a_832: ctype = params_nth(a_821, 0) in
                    if not(are_compatible ('const void*', a_832)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_833: pointer =
                        create(Ivalignof(a_832), a_832) in
                      let weak _: unit = store(a_832, a_833, a_827) in
                      pure(a_833) in
                  let strong a_825: pointer =
                    let a_834: ctype = params_nth(a_821, 1) in
                    if not(are_compatible ('const void*', a_834)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_835: pointer =
                        create(Ivalignof(a_834), a_834) in
                      let weak _: unit = store(a_834, a_835, a_829) in
                      pure(a_835) in
                  let strong a_824: pointer =
                    let a_836: ctype = params_nth(a_821, 2) in
                    if not(are_compatible ('size_t', a_836)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_837: pointer =
                        create(Ivalignof(a_836), a_836) in
                      let weak _: unit =
                        store(a_836, a_837, conv_loaded_int(a_836, a_831)) in
                      pure(a_837) in
                  let strong a_838: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_819, a_826, a_825, a_824) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_826)
                    ,
                      kill('void*', a_825)
                    ,
                      kill('size_t', a_824)
                    ) in
                  pure(a_838)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_815: integer), Specified(a_816: integer)) =
              (a_813, a_814) in
            if conv_int('signed int', a_815) = conv_int('signed int', a_816) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_810: integer), Specified(a_811: integer)) =
          (a_808, a_809) in
        if conv_int('signed int', a_810) = conv_int('signed int', a_811) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_786: boolean =
    let Specified(a_807: integer) = a_806 in
    pure(if not(a_807 = 1) then True else False) in
  if a_786 then
    let strong r: pointer = create(Ivalignof('signed int*'), 'signed int*') in
    let strong a_842: loaded pointer =
      {- §6.5#2 -}
      bound(
        {- §6.5.4 -}
        let weak a_843: loaded integer =
          let weak a_845: pointer = pure(i) in
          load('uintptr_t', a_845) in
        let Specified(a_844: integer) = a_843 in
        let weak a_846: pointer =
          memop(PtrFromInt, 'uintptr_t', 'signed int', a_844) in
        pure(Specified(a_846))
      ) in
    store('signed int*', r, a_842) ;
    let strong _: loaded pointer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_841: pointer, a_853: loaded pointer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            pure(r)
          ,
            {- §6.5.6 -}
            let weak (a_848: loaded pointer, a_849: loaded integer) =
              unseq(
                let weak a_847: pointer = pure(r) in
                load('signed int*', a_847)
              ,
                pure(Specified(1))
              ) in
            let (Specified(a_850: pointer), Specified(a_851: integer)) =
              (a_848, a_849) in
            let weak a_852: pointer =
              memop(PtrArrayShift, a_850, 'signed int', 0 - a_851) in
            pure(Specified(a_852))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int*', a_841, a_853)) in
        pure(a_853)
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_840: pointer, a_858: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_854: loaded pointer =
              let weak a_857: pointer = pure(r) in
              load('signed int*', a_857) in
            let Specified(a_855: pointer) = a_854 in
            let weak a_856: boolean =
              memop(PtrValidForDeref, 'signed int', a_855) in
            pure(
              if a_856 then
                a_855
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_840, conv_loaded_int('signed int', a_858))) in
        pure(conv_loaded_int('signed int', a_858))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_859: loaded pointer,
        (a_860: ctype, a_861: [ctype], a_862: boolean, a_863: boolean)),
        a_869: loaded pointer, a_873: loaded integer, a_875: loaded integer,
        a_877: loaded integer, a_883: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_839: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_839, cfunction(a_839)))
          ,
            let weak a_871: pointer = pure(a_870) in
            {- §6.3.2.1#3 -}
            let weak a_872: pointer =
              memop(PtrArrayShift, a_871, 'char', 0) in
            pure(Specified(a_872))
          ,
            let weak a_874: pointer = pure(x) in
            load('signed int', a_874)
          ,
            let weak a_876: pointer = pure(y) in
            load('signed int', a_876)
          ,
            let weak a_882: pointer =
              {- §6.5.3.2 -}
              let weak a_878: loaded pointer =
                let weak a_881: pointer = pure(q) in
                load('signed int*', a_881) in
              let Specified(a_879: pointer) = a_878 in
              let weak a_880: boolean =
                memop(PtrValidForDeref, 'signed int', a_879) in
              pure(
                if a_880 then
                  a_879
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_882)
          ,
            let weak a_888: pointer =
              {- §6.5.3.2 -}
              let weak a_884: loaded pointer =
                let weak a_887: pointer = pure(r) in
                load('signed int*', a_887) in
              let Specified(a_885: pointer) = a_884 in
              let weak a_886: boolean =
                memop(PtrValidForDeref, 'signed int', a_885) in
              pure(
                if a_886 then
                  a_885
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_888)
          ) in
        if not(params_length(a_861) <= 5) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_862) \/ not(are_compatible ('signed int', a_860)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_868: pointer =
              let a_889: ctype = params_nth(a_861, 0) in
              if not(are_compatible ('const char*', a_889)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_890: pointer = create(Ivalignof(a_889), a_889) in
                let weak _: unit = store(a_889, a_890, a_869) in
                pure(a_890) in
            let strong a_867: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_873)) in
            let strong a_866: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_875)) in
            let strong a_865: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_877)) in
            let strong a_864: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_883)) in
            let strong a_891: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_859, a_868,
              [('signed int', a_867), ('signed int', a_866),
              ('signed int', a_865), ('signed int', a_864)]) in
            let strong _: (unit,unit,unit,unit,unit) =
              unseq(
                kill('char*', a_868)
              ,
                kill('signed int', a_867)
              ,
                kill('signed int', a_866)
              ,
                kill('signed int', a_865)
              ,
                kill('signed int', a_864)
              ) in
            pure(a_891)
      ) in
    pure(Unit) ;
    kill('signed int*', r) ;
    pure(Unit)
  else
    pure(Unit) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  kill('uintptr_t', i) ;
  kill('uintptr_t', j) ;
  pure(Unit) ;
  save ret_785: loaded integer (a_892: loaded integer:= Specified(0)) in
    pure(a_892)

