-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_701: pointer [ail_ctype = 'char[14]'] :=
  create_readonly(Ivalignof('char[14]'), 'char[14]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 48)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong x: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong y: pointer =
    create(Ivalignof('unsigned short'), 'unsigned short') in
  {- §6.2.4#6 -}
  store('signed int', x, Unspecified('signed int')) ;
  {- §6.2.4#6 -}
  store('unsigned short', y, Unspecified('unsigned short')) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_681: pointer, a_682: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(pure(x), pure(Specified(1144201745))) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_681, conv_loaded_int('signed int', a_682))) in
      pure(conv_loaded_int('signed int', a_682))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_680: pointer, a_691: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          pure(y)
        ,
          let weak a_690: pointer =
            {- §6.5.3.2 -}
            let weak a_683: loaded pointer =
              {- §6.5.4 -}
              let weak a_686: loaded pointer =
                {- §6.5.3.2#3, sentence 5 -}
                let weak a_688: pointer = pure(x) in
                pure(Specified(a_688)) in
              let Specified(a_687: pointer) = a_686 in
              let weak a_689: boolean =
                memop(PtrWellAligned, 'unsigned short', a_687) in
              pure(
                Specified(if a_689 then
                  a_687
                else
                  undef(<<UB025_misaligned_pointer_conversion>>))
              ) in
            let Specified(a_684: pointer) = a_683 in
            let weak a_685: boolean =
              memop(PtrValidForDeref, 'unsigned short', a_684) in
            pure(
              if a_685 then
                a_684
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('unsigned short', a_690)
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('unsigned short', a_680,
        conv_loaded_int('unsigned short', a_691))) in
      pure(conv_loaded_int('unsigned short', a_691))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_692: loaded pointer,
      (a_693: ctype, a_694: [ctype], a_695: boolean, a_696: boolean)),
      a_700: loaded pointer, a_704: loaded integer, a_706: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_679: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_679, cfunction(a_679)))
        ,
          let weak a_702: pointer = pure(a_701) in
          {- §6.3.2.1#3 -}
          let weak a_703: pointer = memop(PtrArrayShift, a_702, 'char', 0) in
          pure(Specified(a_703))
        ,
          let weak a_705: pointer = pure(x) in
          load('signed int', a_705)
        ,
          let weak a_707: pointer = pure(y) in
          load('unsigned short', a_707)
        ) in
      if not(params_length(a_694) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_695) \/ not(are_compatible ('signed int', a_693)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_699: pointer =
            let a_708: ctype = params_nth(a_694, 0) in
            if not(are_compatible ('const char*', a_708)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_709: pointer = create(Ivalignof(a_708), a_708) in
              let weak _: unit = store(a_708, a_709, a_700) in
              pure(a_709) in
          let strong a_698: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_704)) in
          let strong a_697: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_706)) in
          let strong a_710: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_692, a_699,
            [('signed int', a_698), ('signed int', a_697)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_699)
            ,
              kill('signed int', a_698)
            ,
              kill('signed int', a_697)
            ) in
          pure(a_710)
    ) in
  pure(Unit) ;
  kill('signed int', x) ;
  kill('unsigned short', y) ;
  pure(Unit) ;
  save ret_678: loaded integer (a_711: loaded integer:= Specified(0)) in
    pure(a_711)

