-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

def struct __cerbty_unnamed_tag_746 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_750 :=
  c1: 'char'
  f1: 'float'

-- Globals
glob a_833: pointer [ail_ctype = 'char[20]'] :=
  create_readonly(Ivalignof('char[20]'), 'char[20]', Specified(Array(Specified(conv_int('char',
  115)), Specified(conv_int('char', 49)), Specified(conv_int('char', 46)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 99)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 49)), Specified(conv_int('char', 46)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 49)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('void*'), 'void*') in
  let strong pc: pointer = create(Ivalignof('char*'), 'char*') in
  let strong pf: pointer = create(Ivalignof('float*'), 'float*') in
  let strong pst1: pointer =
    create(Ivalignof('struct __cerbty_unnamed_tag_750*'), 'struct __cerbty_unnamed_tag_750*') in
  let strong s1: pointer =
    create(Ivalignof('struct __cerbty_unnamed_tag_750'), 'struct __cerbty_unnamed_tag_750') in
  let strong a_765: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_767: loaded pointer,
      (a_768: ctype, a_769: [ctype], a_770: boolean, a_771: boolean)),
      a_773: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_766: loaded pointer =
            pure(Specified(Cfunction(malloc_proxy))) in
          pure((a_766, cfunction(a_766)))
        ,
          pure(Specified(Ivsizeof('struct __cerbty_unnamed_tag_750')))
        ) in
      if not(params_length(a_769) = 1) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_770 \/ not(are_compatible ('void*', a_768)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_772: pointer =
            let a_774: ctype = params_nth(a_769, 0) in
            if not(are_compatible ('size_t', a_774)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_775: pointer = create(Ivalignof(a_774), a_774) in
              let weak _: unit =
                store(a_774, a_775, conv_loaded_int(a_774, a_773)) in
              pure(a_775) in
          let strong a_776: loaded pointer =
            ccall('void* (*) (size_t)', a_767, a_772) in
          kill('size_t', a_772) ;
          pure(a_776)
    ) in
  store('void*', p, a_765) ;
  {- §6.5#2 -}
  bound(
    let strong a_764: loaded integer =
      let weak a_780: loaded pointer =
        let weak a_779: pointer = pure(p) in
        load('void*', a_779) in
      let Specified(a_781: pointer) = a_780 in
      let weak a_782: boolean = memop(PtrNe, a_781, NULL(void*)) in
      {- §6.5.9#3 -}
      pure(if a_782 then Specified(1) else Specified(0)) in
    pure(
      let Specified(a_777: integer) = a_764 in
      if a_777 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  let strong a_783: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_784: pointer =
        {- §6.5.2.3#3, sentence 2 -}
        let strong a_785: pointer =
          {- §6.5.3.2 -}
          let weak a_786: loaded pointer =
            {- §6.5.4 -}
            let weak a_789: loaded pointer =
              let weak a_791: pointer = pure(p) in
              load('void*', a_791) in
            let Specified(a_790: pointer) = a_789 in
            let weak a_792: boolean =
              memop(PtrWellAligned, 'struct __cerbty_unnamed_tag_750', a_790) in
            pure(
              Specified(if a_792 then
                a_790
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            ) in
          let Specified(a_787: pointer) = a_786 in
          let weak a_788: boolean =
            memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_750', a_787) in
          pure(
            if a_788 then
              a_787
            else
              undef(<<UB043_indirection_invalid_value>>)
          ) in
        memop(PtrArrayShift[__cerbty_unnamed_tag_750, c1], a_785) in
      pure(Specified(a_784))
    ) in
  store('char*', pc, a_783) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_763: pointer, a_797: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_793: loaded pointer =
            let weak a_796: pointer = pure(pc) in
            load('char*', a_796) in
          let Specified(a_794: pointer) = a_793 in
          let weak a_795: boolean = memop(PtrValidForDeref, 'char', a_794) in
          pure(
            if a_795 then
              a_794
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(65))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('char', a_763, conv_loaded_int('char', a_797))) in
      pure(conv_loaded_int('char', a_797))
    ) in
  pure(Unit) ;
  let strong a_798: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_799: pointer =
        {- §6.5.2.3#3, sentence 2 -}
        let strong a_800: pointer =
          {- §6.5.3.2 -}
          let weak a_801: loaded pointer =
            {- §6.5.4 -}
            let weak a_804: loaded pointer =
              let weak a_806: pointer = pure(p) in
              load('void*', a_806) in
            let Specified(a_805: pointer) = a_804 in
            let weak a_807: boolean =
              memop(PtrWellAligned, 'struct __cerbty_unnamed_tag_750', a_805) in
            pure(
              Specified(if a_807 then
                a_805
              else
                undef(<<UB025_misaligned_pointer_conversion>>))
            ) in
          let Specified(a_802: pointer) = a_801 in
          let weak a_803: boolean =
            memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_750', a_802) in
          pure(
            if a_803 then
              a_802
            else
              undef(<<UB043_indirection_invalid_value>>)
          ) in
        memop(PtrArrayShift[__cerbty_unnamed_tag_750, f1], a_800) in
      pure(Specified(a_799))
    ) in
  store('float*', pf, a_798) ;
  let strong _: loaded floating =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_762: pointer, a_812: loaded floating) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_808: loaded pointer =
            let weak a_811: pointer = pure(pf) in
            load('float*', a_811) in
          let Specified(a_809: pointer) = a_808 in
          let weak a_810: boolean = memop(PtrValidForDeref, 'float', a_809) in
          pure(
            if a_810 then
              a_809
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(1.))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('float', a_762, a_812)) in
      pure(a_812)
    ) in
  pure(Unit) ;
  let strong a_813: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_814: loaded pointer =
        let weak a_816: pointer = pure(p) in
        load('void*', a_816) in
      let Specified(a_815: pointer) = a_814 in
      let weak a_817: boolean =
        memop(PtrWellAligned, 'struct __cerbty_unnamed_tag_750', a_815) in
      pure(
        Specified(if a_817 then
          a_815
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('struct __cerbty_unnamed_tag_750*', pst1, a_813) ;
  {- §6.2.4#6 -}
  store('struct __cerbty_unnamed_tag_750', s1,
  Unspecified('struct __cerbty_unnamed_tag_750')) ;
  let strong _: loaded struct a_750 =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_761: pointer, a_823: loaded struct a_750) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          pure(s1)
        ,
          let weak a_822: pointer =
            {- §6.5.3.2 -}
            let weak a_818: loaded pointer =
              let weak a_821: pointer = pure(pst1) in
              load('struct __cerbty_unnamed_tag_750*', a_821) in
            let Specified(a_819: pointer) = a_818 in
            let weak a_820: boolean =
              memop(PtrValidForDeref, 'struct __cerbty_unnamed_tag_750', a_819) in
            pure(
              if a_820 then
                a_819
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('struct __cerbty_unnamed_tag_750', a_822)
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('struct __cerbty_unnamed_tag_750', a_761, a_823)) in
      pure(a_823)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_824: loaded pointer,
      (a_825: ctype, a_826: [ctype], a_827: boolean, a_828: boolean)),
      a_832: loaded pointer, a_836: loaded integer, a_839: loaded floating) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_760: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_760, cfunction(a_760)))
        ,
          let weak a_834: pointer = pure(a_833) in
          {- §6.3.2.1#3 -}
          let weak a_835: pointer = memop(PtrArrayShift, a_834, 'char', 0) in
          pure(Specified(a_835))
        ,
          let weak a_838: pointer =
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_837: pointer = pure(s1) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_750, c1], a_837) in
          load('char', a_838)
        ,
          let weak a_841: pointer =
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_840: pointer = pure(s1) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_750, f1], a_840) in
          load('float', a_841)
        ) in
      if not(params_length(a_826) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_827) \/ not(are_compatible ('signed int', a_825)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_831: pointer =
            let a_842: ctype = params_nth(a_826, 0) in
            if not(are_compatible ('const char*', a_842)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_843: pointer = create(Ivalignof(a_842), a_842) in
              let weak _: unit = store(a_842, a_843, a_832) in
              pure(a_843) in
          let strong a_830: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_836)) in
          let strong a_829: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'double', a_839) in
          let strong a_844: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_824, a_831,
            [('signed int', a_830), ('double', a_829)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_831)
            ,
              kill('signed int', a_830)
            ,
              kill('double', a_829)
            ) in
          pure(a_844)
    ) in
  pure(Unit) ;
  kill('void*', p) ;
  kill('char*', pc) ;
  kill('float*', pf) ;
  kill('struct __cerbty_unnamed_tag_750*', pst1) ;
  kill('struct __cerbty_unnamed_tag_750', s1) ;
  pure(Unit) ;
  save ret_759: loaded integer (a_845: loaded integer:= Specified(0)) in
    pure(a_845)

