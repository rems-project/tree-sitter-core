-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct div :=
  quot: 'signed int'
  rem: 'signed int'

def struct ldiv :=
  quot: 'signed long'
  rem: 'signed long'

def struct lldiv :=
  quot: 'signed long_long'
  rem: 'signed long_long'

-- Globals
glob a_783: pointer [ail_ctype = 'char[13]'] :=
  create_readonly(Ivalignof('char[13]'), 'char[13]', Specified(Array(Specified(conv_int('char',
  40)), Specified(conv_int('char', 38)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 106)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_801: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_804: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

glob a_829: pointer [ail_ctype = 'char[13]'] :=
  create_readonly(Ivalignof('char[13]'), 'char[13]', Specified(Array(Specified(conv_int('char',
  40)), Specified(conv_int('char', 38)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 106)),
  Specified(conv_int('char', 41)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_847: pointer [ail_ctype = 'char[5]'] :=
  create_readonly(Ivalignof('char[5]'), 'char[5]', Specified(Array(Specified(conv_int('char',
  116)), Specified(conv_int('char', 114)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 101)), Specified(0))))

glob a_850: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  102)), Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 101)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong i: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong pj: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_754: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  store('signed int', i, conv_loaded_int('signed int', a_754)) ;
  let strong a_755: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_756: loaded pointer =
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_759: loaded pointer,
        (a_760: ctype, a_761: [ctype], a_762: boolean, a_763: boolean)),
        a_765: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_758: loaded pointer =
              pure(Specified(Cfunction(malloc_proxy))) in
            pure((a_758, cfunction(a_758)))
          ,
            pure(Specified(Ivsizeof('signed int')))
          ) in
        if not(params_length(a_761) = 1) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if a_762 \/ not(are_compatible ('void*', a_760)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_764: pointer =
              let a_766: ctype = params_nth(a_761, 0) in
              if not(are_compatible ('size_t', a_766)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_767: pointer = create(Ivalignof(a_766), a_766) in
                let weak _: unit =
                  store(a_766, a_767, conv_loaded_int(a_766, a_765)) in
                pure(a_767) in
            let strong a_768: loaded pointer =
              ccall('void* (*) (size_t)', a_759, a_764) in
            kill('size_t', a_764) ;
            pure(a_768) in
      let Specified(a_757: pointer) = a_756 in
      let weak a_769: boolean = memop(PtrWellAligned, 'signed int', a_757) in
      pure(
        Specified(if a_769 then
          a_757
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('signed int*', pj, a_755) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_753: pointer, a_774: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_770: loaded pointer =
            let weak a_773: pointer = pure(pj) in
            load('signed int*', a_773) in
          let Specified(a_771: pointer) = a_770 in
          let weak a_772: boolean =
            memop(PtrValidForDeref, 'signed int', a_771) in
          pure(
            if a_772 then
              a_771
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(1))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_753, conv_loaded_int('signed int', a_774))) in
      pure(conv_loaded_int('signed int', a_774))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_775: loaded pointer,
      (a_776: ctype, a_777: [ctype], a_778: boolean, a_779: boolean)),
      a_782: loaded pointer, a_786: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_752: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_752, cfunction(a_752)))
        ,
          let weak a_784: pointer = pure(a_783) in
          {- §6.3.2.1#3 -}
          let weak a_785: pointer = memop(PtrArrayShift, a_784, 'char', 0) in
          pure(Specified(a_785))
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_799: loaded integer =
            let weak (a_787: loaded integer, a_788: loaded integer) =
              unseq(
                let weak (a_792: loaded pointer, a_793: loaded pointer) =
                  unseq(
                    {- §6.5.3.2#3, sentence 5 -}
                    let weak a_797: pointer = pure(i) in
                    pure(Specified(a_797))
                  ,
                    let weak a_798: pointer = pure(pj) in
                    load('signed int*', a_798)
                  ) in
                let (Specified(a_794: pointer), Specified(a_795: pointer)) =
                  (a_792, a_793) in
                let weak a_796: boolean = memop(PtrEq, a_794, a_795) in
                pure(if a_796 then Specified(1) else Specified(0))
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_789: integer), Specified(a_790: integer)) =
                (a_787, a_788) in
              if conv_int('signed int', a_789) = conv_int('signed int', a_790) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_800: integer) = a_799 in
          {- §6.5.15#4, sentence 2 -}
          if a_800 = 0 then
            let weak a_802: pointer = pure(a_801) in
            {- §6.3.2.1#3 -}
            let weak a_803: pointer =
              memop(PtrArrayShift, a_802, 'char', 0) in
            pure(Specified(a_803))
          else
            let weak a_805: pointer = pure(a_804) in
            {- §6.3.2.1#3 -}
            let weak a_806: pointer =
              memop(PtrArrayShift, a_805, 'char', 0) in
            pure(Specified(a_806))
        ) in
      if not(params_length(a_777) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_778) \/ not(are_compatible ('signed int', a_776)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_781: pointer =
            let a_807: ctype = params_nth(a_777, 0) in
            if not(are_compatible ('const char*', a_807)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_808: pointer = create(Ivalignof(a_807), a_807) in
              let weak _: unit = store(a_807, a_808, a_782) in
              pure(a_808) in
          let strong a_780: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_786) in
          let strong a_809: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_775, a_781,
            [('char*', a_780)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_781), kill('char*', a_780)) in
          pure(a_809)
    ) in
  pure(Unit) ;
  {- §6.5#2 -}
  bound(
    {- §6.5.2.2#10, sentence 1 -}
    let strong ((a_810: loaded pointer,
    (a_811: ctype, a_812: [ctype], a_813: boolean, a_814: boolean)),
    a_816: loaded pointer) =
      {- §6.5.2.2#4, sentence 2 -}
      unseq(
        let strong a_751: loaded pointer =
          pure(Specified(Cfunction(free_proxy))) in
        pure((a_751, cfunction(a_751)))
      ,
        let weak a_817: pointer = pure(pj) in
        load('signed int*', a_817)
      ) in
    if not(params_length(a_812) = 1) then
      pure(undef(<<UB038_number_of_args>>))
    else
      if a_813 \/ not(are_compatible ('void', a_811)) then
        pure(undef(<<UB041_function_not_compatible>>))
      else
        let strong a_815: pointer =
          let a_818: ctype = params_nth(a_812, 0) in
          if not(are_compatible ('void*', a_818)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            {- §6.5.2.2#7, sentence 1 -}
            let weak a_819: pointer = create(Ivalignof(a_818), a_818) in
            let weak _: unit = store(a_818, a_819, a_816) in
            pure(a_819) in
        let strong a_820: unit = ccall('void (*) (void*)', a_810, a_815) in
        kill('void*', a_815) ;
        pure(a_820)
  ) ;
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_821: loaded pointer,
      (a_822: ctype, a_823: [ctype], a_824: boolean, a_825: boolean)),
      a_828: loaded pointer, a_832: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_750: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_750, cfunction(a_750)))
        ,
          let weak a_830: pointer = pure(a_829) in
          {- §6.3.2.1#3 -}
          let weak a_831: pointer = memop(PtrArrayShift, a_830, 'char', 0) in
          pure(Specified(a_831))
        ,
          {- §6.5.15#4, sentence 1 -}
          let strong a_845: loaded integer =
            let weak (a_833: loaded integer, a_834: loaded integer) =
              unseq(
                let weak (a_838: loaded pointer, a_839: loaded pointer) =
                  unseq(
                    {- §6.5.3.2#3, sentence 5 -}
                    let weak a_843: pointer = pure(i) in
                    pure(Specified(a_843))
                  ,
                    let weak a_844: pointer = pure(pj) in
                    load('signed int*', a_844)
                  ) in
                let (Specified(a_840: pointer), Specified(a_841: pointer)) =
                  (a_838, a_839) in
                let weak a_842: boolean = memop(PtrEq, a_840, a_841) in
                pure(if a_842 then Specified(1) else Specified(0))
              ,
                pure(Specified(0))
              ) in
            pure(
              let (Specified(a_835: integer), Specified(a_836: integer)) =
                (a_833, a_834) in
              if conv_int('signed int', a_835) = conv_int('signed int', a_836) then
                Specified(1)
              else
                Specified(0)
            ) in
          let Specified(a_846: integer) = a_845 in
          {- §6.5.15#4, sentence 2 -}
          if a_846 = 0 then
            let weak a_848: pointer = pure(a_847) in
            {- §6.3.2.1#3 -}
            let weak a_849: pointer =
              memop(PtrArrayShift, a_848, 'char', 0) in
            pure(Specified(a_849))
          else
            let weak a_851: pointer = pure(a_850) in
            {- §6.3.2.1#3 -}
            let weak a_852: pointer =
              memop(PtrArrayShift, a_851, 'char', 0) in
            pure(Specified(a_852))
        ) in
      if not(params_length(a_823) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_824) \/ not(are_compatible ('signed int', a_822)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_827: pointer =
            let a_853: ctype = params_nth(a_823, 0) in
            if not(are_compatible ('const char*', a_853)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_854: pointer = create(Ivalignof(a_853), a_853) in
              let weak _: unit = store(a_853, a_854, a_828) in
              pure(a_854) in
          let strong a_826: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'char*', a_832) in
          let strong a_855: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_821, a_827,
            [('char*', a_826)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_827), kill('char*', a_826)) in
          pure(a_855)
    ) in
  pure(Unit) ;
  let strong a_856: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  kill('signed int', i) ;
  kill('signed int*', pj) ;
  run ret_749(conv_loaded_int('signed int', a_856)) ;
  kill('signed int', i) ;
  kill('signed int*', pj) ;
  pure(Unit) ;
  save ret_749: loaded integer (a_857: loaded integer:= Specified(0)) in
    pure(a_857)

