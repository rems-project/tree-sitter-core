-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_726 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_758 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

def union __cerbty_unnamed_tag_777 :=
  ui: 'uintptr_t'
  p: 'signed int*'

-- Globals
glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_858: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_859: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_858, conv_loaded_int('signed int', a_859)) ;
  pure(a_858)

glob a_812: pointer [ail_ctype = 'char[23]'] :=
  create_readonly(Ivalignof('char[23]'), 'char[23]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 38)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_842: pointer [ail_ctype = 'char[12]'] :=
  create_readonly(Ivalignof('char[12]'), 'char[12]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong u: pointer =
    create(Ivalignof('union __cerbty_unnamed_tag_777'), 'union __cerbty_unnamed_tag_777') in
  let strong px: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong i: pointer = create(Ivalignof('uintptr_t'), 'uintptr_t') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  {- §6.2.4#6 -}
  store('union __cerbty_unnamed_tag_777', u,
  Unspecified('union __cerbty_unnamed_tag_777')) ;
  let strong a_790: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_791: pointer = pure(x) in
      pure(Specified(a_791))
    ) in
  store('signed int*', px, a_790) ;
  let strong a_792: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_793: loaded pointer =
        let weak a_795: pointer = pure(px) in
        load('signed int*', a_795) in
      let Specified(a_794: pointer) = a_793 in
      let weak a_796: integer =
        memop(IntFromPtr, 'signed int', 'uintptr_t', a_794) in
      pure(Specified(a_796))
    ) in
  store('uintptr_t', i, conv_loaded_int('uintptr_t', a_792)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_789: pointer, a_799: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.2.3#3, sentence 2 -}
          let strong a_797: pointer = pure(u) in
          memop(PtrArrayShift[__cerbty_unnamed_tag_777, ui], a_797)
        ,
          let weak a_798: pointer = pure(i) in
          load('uintptr_t', a_798)
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('uintptr_t', a_789, conv_loaded_int('uintptr_t', a_799))) in
      pure(conv_loaded_int('uintptr_t', a_799))
    ) in
  pure(Unit) ;
  let strong a_800: loaded pointer =
    {- §6.5#2 -}
    bound(
      let weak a_802: pointer =
        {- §6.5.2.3#3, sentence 2 -}
        let strong a_801: pointer = pure(u) in
        memop(PtrArrayShift[__cerbty_unnamed_tag_777, p], a_801) in
      load('signed int*', a_802)
    ) in
  store('signed int*', p, a_800) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_803: loaded pointer,
      (a_804: ctype, a_805: [ctype], a_806: boolean, a_807: boolean)),
      a_811: loaded pointer, a_815: loaded pointer, a_820: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_788: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_788, cfunction(a_788)))
        ,
          let weak a_813: pointer = pure(a_812) in
          {- §6.3.2.1#3 -}
          let weak a_814: pointer = memop(PtrArrayShift, a_813, 'char', 0) in
          pure(Specified(a_814))
        ,
          {- §6.5.4 -}
          let weak a_818: pointer = pure(p) in
          load('signed int*', a_818)
        ,
          {- §6.5.3.2#3, sentence 5 -}
          {- §6.5.4 -}
          let weak a_823: pointer = pure(x) in
          pure(Specified(a_823))
        ) in
      if not(params_length(a_805) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_806) \/ not(are_compatible ('signed int', a_804)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_810: pointer =
            let a_825: ctype = params_nth(a_805, 0) in
            if not(are_compatible ('const char*', a_825)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_826: pointer = create(Ivalignof(a_825), a_825) in
              let weak _: unit = store(a_825, a_826, a_811) in
              pure(a_826) in
          let strong a_809: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_815) in
          let strong a_808: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_820) in
          let strong a_827: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_803, a_810,
            [('void*', a_809), ('void*', a_808)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_810)
            ,
              kill('void*', a_809)
            ,
              kill('void*', a_808)
            ) in
          pure(a_827)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_787: pointer, a_832: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_828: loaded pointer =
            let weak a_831: pointer = pure(p) in
            load('signed int*', a_831) in
          let Specified(a_829: pointer) = a_828 in
          let weak a_830: boolean =
            memop(PtrValidForDeref, 'signed int', a_829) in
          pure(
            if a_830 then
              a_829
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(11))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_787, conv_loaded_int('signed int', a_832))) in
      pure(conv_loaded_int('signed int', a_832))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_833: loaded pointer,
      (a_834: ctype, a_835: [ctype], a_836: boolean, a_837: boolean)),
      a_841: loaded pointer, a_845: loaded integer, a_847: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_786: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_786, cfunction(a_786)))
        ,
          let weak a_843: pointer = pure(a_842) in
          {- §6.3.2.1#3 -}
          let weak a_844: pointer = memop(PtrArrayShift, a_843, 'char', 0) in
          pure(Specified(a_844))
        ,
          let weak a_846: pointer = pure(x) in
          load('signed int', a_846)
        ,
          let weak a_852: pointer =
            {- §6.5.3.2 -}
            let weak a_848: loaded pointer =
              let weak a_851: pointer = pure(p) in
              load('signed int*', a_851) in
            let Specified(a_849: pointer) = a_848 in
            let weak a_850: boolean =
              memop(PtrValidForDeref, 'signed int', a_849) in
            pure(
              if a_850 then
                a_849
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_852)
        ) in
      if not(params_length(a_835) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_836) \/ not(are_compatible ('signed int', a_834)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_840: pointer =
            let a_853: ctype = params_nth(a_835, 0) in
            if not(are_compatible ('const char*', a_853)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_854: pointer = create(Ivalignof(a_853), a_853) in
              let weak _: unit = store(a_853, a_854, a_841) in
              pure(a_854) in
          let strong a_839: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_845)) in
          let strong a_838: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_847)) in
          let strong a_855: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_833, a_840,
            [('signed int', a_839), ('signed int', a_838)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_840)
            ,
              kill('signed int', a_839)
            ,
              kill('signed int', a_838)
            ) in
          pure(a_855)
    ) in
  pure(Unit) ;
  let strong a_856: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  kill('union __cerbty_unnamed_tag_777', u) ;
  kill('signed int*', px) ;
  kill('uintptr_t', i) ;
  kill('signed int*', p) ;
  run ret_785(conv_loaded_int('signed int', a_856)) ;
  kill('union __cerbty_unnamed_tag_777', u) ;
  kill('signed int*', px) ;
  kill('uintptr_t', i) ;
  kill('signed int*', p) ;
  pure(Unit) ;
  save ret_785: loaded integer (a_857: loaded integer:= Specified(0)) in
    pure(a_857)

