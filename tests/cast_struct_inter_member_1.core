-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_648 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_652 :=
  f: 'float'
  i: 'signed int'

-- Globals
glob a_707: pointer [ail_ctype = 'char[23]'] :=
  create_readonly(Ivalignof('char[23]'), 'char[23]', Specified(Array(Specified(conv_int('char',
  115)), Specified(conv_int('char', 46)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 46)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong s: pointer =
    create(Ivalignof('struct __cerbty_unnamed_tag_652'), 'struct __cerbty_unnamed_tag_652') in
  let strong pi: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong pci: pointer =
    create(Ivalignof('unsigned char*'), 'unsigned char*') in
  let strong pcf: pointer =
    create(Ivalignof('unsigned char*'), 'unsigned char*') in
  let strong pf: pointer = create(Ivalignof('float*'), 'float*') in
  let strong a_664: loaded struct a_652 =
    {- §6.5#2 -}
    bound(
      let weak (a_666: loaded integer, a_665: loaded floating) =
        {- §6.7.9#23 -}
        unseq(pure(Specified(1)), pure(Specified(1.))) in
      pure(
        Specified((struct __cerbty_unnamed_tag_652){.f= a_665,
        .i= conv_loaded_int('signed int', a_666)})
      )
    ) in
  store('struct __cerbty_unnamed_tag_652', s, a_664) ;
  let strong a_667: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_668: pointer =
        {- §6.5.2.3#3, sentence 2 -}
        let strong a_669: pointer = pure(s) in
        memop(PtrArrayShift[__cerbty_unnamed_tag_652, i], a_669) in
      pure(Specified(a_668))
    ) in
  store('signed int*', pi, a_667) ;
  let strong a_670: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_671: loaded pointer =
        let weak a_673: pointer = pure(pi) in
        load('signed int*', a_673) in
      let Specified(a_672: pointer) = a_671 in
      let weak a_674: boolean =
        memop(PtrWellAligned, 'unsigned char', a_672) in
      pure(
        Specified(if a_674 then
          a_672
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('unsigned char*', pci, a_670) ;
  let strong a_675: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_676: loaded pointer, a_678: loaded integer) =
        unseq(
          {- §6.5.6 -}
          let weak (a_682: loaded pointer, a_683: loaded integer) =
            unseq(
              let weak a_681: pointer = pure(pci) in
              load('unsigned char*', a_681)
            ,
              pure(Specified(8))
            ) in
          let (Specified(a_684: pointer), Specified(a_685: integer)) =
            (a_682, a_683) in
          let weak a_686: pointer =
            memop(PtrArrayShift, a_684, 'unsigned char', 0 - a_685) in
          pure(Specified(a_686))
        ,
          pure(Specified(0))
        ) in
      let (Specified(a_677: pointer), Specified(a_679: integer)) =
        (a_676, a_678) in
      let weak a_680: pointer =
        memop(PtrArrayShift, a_677, 'unsigned char', a_679) in
      pure(Specified(a_680))
    ) in
  store('unsigned char*', pcf, a_675) ;
  let strong a_687: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_688: loaded pointer =
        let weak a_690: pointer = pure(pcf) in
        load('unsigned char*', a_690) in
      let Specified(a_689: pointer) = a_688 in
      let weak a_691: boolean = memop(PtrWellAligned, 'float', a_689) in
      pure(
        Specified(if a_691 then
          a_689
        else
          undef(<<UB025_misaligned_pointer_conversion>>))
      )
    ) in
  store('float*', pf, a_687) ;
  let strong _: loaded floating =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_663: pointer, a_696: loaded floating) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_692: loaded pointer =
            let weak a_695: pointer = pure(pf) in
            load('float*', a_695) in
          let Specified(a_693: pointer) = a_692 in
          let weak a_694: boolean = memop(PtrValidForDeref, 'float', a_693) in
          pure(
            if a_694 then
              a_693
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(2.))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('float', a_663, a_696)) in
      pure(a_696)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_697: loaded pointer,
      (a_698: ctype, a_699: [ctype], a_700: boolean, a_701: boolean)),
      a_706: loaded pointer, a_710: loaded floating, a_713: loaded floating,
      a_719: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_662: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_662, cfunction(a_662)))
        ,
          let weak a_708: pointer = pure(a_707) in
          {- §6.3.2.1#3 -}
          let weak a_709: pointer = memop(PtrArrayShift, a_708, 'char', 0) in
          pure(Specified(a_709))
        ,
          let weak a_712: pointer =
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_711: pointer = pure(s) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_652, f], a_711) in
          load('float', a_712)
        ,
          let weak a_718: pointer =
            {- §6.5.3.2 -}
            let weak a_714: loaded pointer =
              let weak a_717: pointer = pure(pf) in
              load('float*', a_717) in
            let Specified(a_715: pointer) = a_714 in
            let weak a_716: boolean =
              memop(PtrValidForDeref, 'float', a_715) in
            pure(
              if a_716 then
                a_715
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('float', a_718)
        ,
          let weak a_721: pointer =
            {- §6.5.2.3#3, sentence 2 -}
            let strong a_720: pointer = pure(s) in
            memop(PtrArrayShift[__cerbty_unnamed_tag_652, i], a_720) in
          load('signed int', a_721)
        ) in
      if not(params_length(a_699) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_700) \/ not(are_compatible ('signed int', a_698)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_705: pointer =
            let a_722: ctype = params_nth(a_699, 0) in
            if not(are_compatible ('const char*', a_722)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_723: pointer = create(Ivalignof(a_722), a_722) in
              let weak _: unit = store(a_722, a_723, a_706) in
              pure(a_723) in
          let strong a_704: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'double', a_710) in
          let strong a_703: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'double', a_713) in
          let strong a_702: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_719)) in
          let strong a_724: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_697, a_705,
            [('double', a_704), ('double', a_703), ('signed int', a_702)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_705)
            ,
              kill('double', a_704)
            ,
              kill('double', a_703)
            ,
              kill('signed int', a_702)
            ) in
          pure(a_724)
    ) in
  pure(Unit) ;
  kill('struct __cerbty_unnamed_tag_652', s) ;
  kill('signed int*', pi) ;
  kill('unsigned ichar*', pci) ;
  kill('unsigned ichar*', pcf) ;
  kill('float*', pf) ;
  pure(Unit) ;
  save ret_661: loaded integer (a_725: loaded integer:= Specified(0)) in
    pure(a_725)

