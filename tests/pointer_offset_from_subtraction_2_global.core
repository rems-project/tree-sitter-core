-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

def struct __cerbty_unnamed_tag_754 :=
  __dummy_max_align_t: 'void*'

def struct __cerbty_unnamed_tag_758 :=
  quot: 'intmax_t'
  rem: 'intmax_t'

-- Globals
glob w: pointer [ail_ctype = 'signed int'] :=
  let strong a_977: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_978: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(4))) in
  store('signed int', a_977, conv_loaded_int('signed int', a_978)) ;
  pure(a_977)

glob z: pointer [ail_ctype = 'signed int'] :=
  let strong a_975: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_976: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(3))) in
  store('signed int', a_975, conv_loaded_int('signed int', a_976)) ;
  pure(a_975)

glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_973: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_974: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', a_973, conv_loaded_int('signed int', a_974)) ;
  pure(a_973)

glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_971: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_972: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_971, conv_loaded_int('signed int', a_972)) ;
  pure(a_971)

glob a_841: pointer [ail_ctype = 'char[40]'] :=
  create_readonly(Ivalignof('char[40]'), 'char[40]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 120)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 38)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 120)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_863: pointer [ail_ctype = 'char[40]'] :=
  create_readonly(Ivalignof('char[40]'), 'char[40]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 38)), Specified(conv_int('char', 122)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 38)),
  Specified(conv_int('char', 119)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 111)), Specified(conv_int('char', 102)),
  Specified(conv_int('char', 102)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 116)),
  Specified(conv_int('char', 122)), Specified(conv_int('char', 119)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 108)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_948: pointer [ail_ctype = 'char[26]'] :=
  create_readonly(Ivalignof('char[26]'), 'char[26]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 121)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 42)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong ux: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong uy: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong offsetxy: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong uz: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong uw: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong offsetzw: pointer = create(Ivalignof('intptr_t'), 'intptr_t') in
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_795: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_796: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_798: pointer = pure(x) in
        pure(Specified(a_798)) in
      let Specified(a_797: pointer) = a_796 in
      let weak a_799: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_797) in
      pure(Specified(a_799))
    ) in
  store('intptr_t', ux, conv_loaded_int('intptr_t', a_795)) ;
  let strong a_800: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_801: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_803: pointer = pure(y) in
        pure(Specified(a_803)) in
      let Specified(a_802: pointer) = a_801 in
      let weak a_804: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_802) in
      pure(Specified(a_804))
    ) in
  store('intptr_t', uy, conv_loaded_int('intptr_t', a_800)) ;
  let strong a_805: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_808: loaded integer, a_809: loaded integer) =
        unseq(
          let weak a_806: pointer = pure(uy) in
          load('intptr_t', a_806)
        ,
          let weak a_807: pointer = pure(ux) in
          load('intptr_t', a_807)
        ) in
      pure(
        let (Specified(a_810: integer), Specified(a_811: integer)) =
          (a_808, a_809) in
        Specified(catch_exceptional_condition('intptr_t',
        conv_int('intptr_t', a_810) - conv_int('intptr_t', a_811)))
      )
    ) in
  store('intptr_t', offsetxy, conv_loaded_int('intptr_t', a_805)) ;
  let strong a_813: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_814: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_816: pointer = pure(z) in
        pure(Specified(a_816)) in
      let Specified(a_815: pointer) = a_814 in
      let weak a_817: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_815) in
      pure(Specified(a_817))
    ) in
  store('intptr_t', uz, conv_loaded_int('intptr_t', a_813)) ;
  let strong a_818: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_819: loaded pointer =
        {- §6.5.3.2#3, sentence 5 -}
        let weak a_821: pointer = pure(w) in
        pure(Specified(a_821)) in
      let Specified(a_820: pointer) = a_819 in
      let weak a_822: integer =
        memop(IntFromPtr, 'signed int', 'intptr_t', a_820) in
      pure(Specified(a_822))
    ) in
  store('intptr_t', uw, conv_loaded_int('intptr_t', a_818)) ;
  let strong a_823: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_826: loaded integer, a_827: loaded integer) =
        unseq(
          let weak a_824: pointer = pure(uw) in
          load('intptr_t', a_824)
        ,
          let weak a_825: pointer = pure(uz) in
          load('intptr_t', a_825)
        ) in
      pure(
        let (Specified(a_828: integer), Specified(a_829: integer)) =
          (a_826, a_827) in
        Specified(catch_exceptional_condition('intptr_t',
        conv_int('intptr_t', a_828) - conv_int('intptr_t', a_829)))
      )
    ) in
  store('intptr_t', offsetzw, conv_loaded_int('intptr_t', a_823)) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_831: loaded pointer,
      (a_832: ctype, a_833: [ctype], a_834: boolean, a_835: boolean)),
      a_840: loaded pointer, a_844: loaded integer, a_846: loaded integer,
      a_848: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_794: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_794, cfunction(a_794)))
        ,
          let weak a_842: pointer = pure(a_841) in
          {- §6.3.2.1#3 -}
          let weak a_843: pointer = memop(PtrArrayShift, a_842, 'char', 0) in
          pure(Specified(a_843))
        ,
          let weak a_845: pointer = pure(ux) in
          load('intptr_t', a_845)
        ,
          let weak a_847: pointer = pure(uy) in
          load('intptr_t', a_847)
        ,
          let weak a_849: pointer = pure(offsetxy) in
          load('intptr_t', a_849)
        ) in
      if not(params_length(a_833) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_834) \/ not(are_compatible ('signed int', a_832)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_839: pointer =
            let a_850: ctype = params_nth(a_833, 0) in
            if not(are_compatible ('const char*', a_850)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_851: pointer = create(Ivalignof(a_850), a_850) in
              let weak _: unit = store(a_850, a_851, a_840) in
              pure(a_851) in
          let strong a_838: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_844)) in
          let strong a_837: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_846)) in
          let strong a_836: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_848)) in
          let strong a_852: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_831, a_839,
            [('intptr_t', a_838), ('intptr_t', a_837), ('intptr_t', a_836)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_839)
            ,
              kill('intptr_t', a_838)
            ,
              kill('intptr_t', a_837)
            ,
              kill('intptr_t', a_836)
            ) in
          pure(a_852)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_853: loaded pointer,
      (a_854: ctype, a_855: [ctype], a_856: boolean, a_857: boolean)),
      a_862: loaded pointer, a_866: loaded integer, a_868: loaded integer,
      a_870: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_793: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_793, cfunction(a_793)))
        ,
          let weak a_864: pointer = pure(a_863) in
          {- §6.3.2.1#3 -}
          let weak a_865: pointer = memop(PtrArrayShift, a_864, 'char', 0) in
          pure(Specified(a_865))
        ,
          let weak a_867: pointer = pure(uz) in
          load('intptr_t', a_867)
        ,
          let weak a_869: pointer = pure(uw) in
          load('intptr_t', a_869)
        ,
          let weak a_871: pointer = pure(offsetzw) in
          load('intptr_t', a_871)
        ) in
      if not(params_length(a_855) <= 4) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_856) \/ not(are_compatible ('signed int', a_854)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_861: pointer =
            let a_872: ctype = params_nth(a_855, 0) in
            if not(are_compatible ('const char*', a_872)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_873: pointer = create(Ivalignof(a_872), a_872) in
              let weak _: unit = store(a_872, a_873, a_862) in
              pure(a_873) in
          let strong a_860: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_866)) in
          let strong a_859: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_868)) in
          let strong a_858: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'intptr_t',
            conv_loaded_int('intptr_t', a_870)) in
          let strong a_874: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_853, a_861,
            [('intptr_t', a_860), ('intptr_t', a_859), ('intptr_t', a_858)]) in
          let strong _: (unit,unit,unit,unit) =
            unseq(
              kill('char*', a_861)
            ,
              kill('intptr_t', a_860)
            ,
              kill('intptr_t', a_859)
            ,
              kill('intptr_t', a_858)
            ) in
          pure(a_874)
    ) in
  pure(Unit) ;
  {- §6.5#2 -}
  bound(
    let strong a_792: loaded integer =
      let weak (a_877: loaded integer, a_878: loaded integer) =
        unseq(
          let weak a_882: pointer = pure(offsetzw) in
          load('intptr_t', a_882)
        ,
          let weak a_883: pointer = pure(offsetxy) in
          load('intptr_t', a_883)
        ) in
      pure(
        let (Specified(a_879: integer), Specified(a_880: integer)) =
          (a_877, a_878) in
        if conv_int('intptr_t', a_879) = conv_int('intptr_t', a_880) then
          Specified(1)
        else
          Specified(0)
      ) in
    pure(
      let Specified(a_875: integer) = a_792 in
      if a_875 = 0 then error("assert() failure", Unit) else Unit
    )
  ) ;
  pure(Unit) ;
  let strong a_884: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.4 -}
      let weak a_885: loaded integer =
        {- §6.5.6 -}
        let weak (a_887: loaded integer, a_888: loaded integer) =
          unseq(
            let weak a_892: pointer = pure(ux) in
            load('intptr_t', a_892)
          ,
            let weak a_893: pointer = pure(offsetzw) in
            load('intptr_t', a_893)
          ) in
        pure(
          let (Specified(a_889: integer), Specified(a_890: integer)) =
            (a_887, a_888) in
          Specified(catch_exceptional_condition('intptr_t',
          conv_int('intptr_t', a_889) + conv_int('intptr_t', a_890)))
        ) in
      let Specified(a_886: integer) = a_885 in
      let weak a_894: pointer =
        memop(PtrFromInt, 'intptr_t', 'signed int', a_886) in
      pure(Specified(a_894))
    ) in
  store('signed int*', p, a_884) ;
  let strong a_895: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_896: pointer = pure(y) in
      pure(Specified(a_896))
    ) in
  store('signed int*', q, a_895) ;
  let strong a_897: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_899: loaded integer, a_900: loaded integer) =
        unseq(
          let weak (a_904: loaded integer, a_905: loaded integer) =
            unseq(
              {- §6.5.2.2#10, sentence 1 -}
              let strong ((a_910: loaded pointer,
              (a_911: ctype, a_912: [ctype], a_913: boolean, a_914: boolean)),
              a_918: loaded pointer, a_920: loaded pointer,
              a_922: loaded integer) =
                {- §6.5.2.2#4, sentence 2 -}
                unseq(
                  let strong a_909: loaded pointer =
                    pure(Specified(Cfunction(memcmp_proxy))) in
                  pure((a_909, cfunction(a_909)))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_919: pointer = pure(p) in
                  pure(Specified(a_919))
                ,
                  {- §6.5.3.2#3, sentence 5 -}
                  let weak a_921: pointer = pure(q) in
                  pure(Specified(a_921))
                ,
                  pure(Specified(Ivsizeof('signed int*')))
                ) in
              if not(params_length(a_912) = 3) then
                pure(undef(<<UB038_number_of_args>>))
              else
                if a_913 \/ not(are_compatible ('signed int', a_911)) then
                  pure(undef(<<UB041_function_not_compatible>>))
                else
                  let strong a_917: pointer =
                    let a_923: ctype = params_nth(a_912, 0) in
                    if not(are_compatible ('const void*', a_923)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_924: pointer =
                        create(Ivalignof(a_923), a_923) in
                      let weak _: unit = store(a_923, a_924, a_918) in
                      pure(a_924) in
                  let strong a_916: pointer =
                    let a_925: ctype = params_nth(a_912, 1) in
                    if not(are_compatible ('const void*', a_925)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_926: pointer =
                        create(Ivalignof(a_925), a_925) in
                      let weak _: unit = store(a_925, a_926, a_920) in
                      pure(a_926) in
                  let strong a_915: pointer =
                    let a_927: ctype = params_nth(a_912, 2) in
                    if not(are_compatible ('size_t', a_927)) then
                      pure(undef(<<UB041_function_not_compatible>>))
                    else
                      {- §6.5.2.2#7, sentence 1 -}
                      let weak a_928: pointer =
                        create(Ivalignof(a_927), a_927) in
                      let weak _: unit =
                        store(a_927, a_928, conv_loaded_int(a_927, a_922)) in
                      pure(a_928) in
                  let strong a_929: loaded integer =
                    ccall('signed int (*) (const void*, const void*, size_t)',
                    a_910, a_917, a_916, a_915) in
                  let strong _: (unit,unit,unit) =
                    unseq(
                      kill('void*', a_917)
                    ,
                      kill('void*', a_916)
                    ,
                      kill('size_t', a_915)
                    ) in
                  pure(a_929)
            ,
              pure(Specified(0))
            ) in
          pure(
            let (Specified(a_906: integer), Specified(a_907: integer)) =
              (a_904, a_905) in
            if conv_int('signed int', a_906) = conv_int('signed int', a_907) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_901: integer), Specified(a_902: integer)) =
          (a_899, a_900) in
        if conv_int('signed int', a_901) = conv_int('signed int', a_902) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_791: boolean =
    let Specified(a_898: integer) = a_897 in
    pure(if not(a_898 = 1) then True else False) in
  if a_791 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_931: pointer, a_936: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_932: loaded pointer =
              let weak a_935: pointer = pure(p) in
              load('signed int*', a_935) in
            let Specified(a_933: pointer) = a_932 in
            let weak a_934: boolean =
              memop(PtrValidForDeref, 'signed int', a_933) in
            pure(
              if a_934 then
                a_933
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(11))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_931, conv_loaded_int('signed int', a_936))) in
        pure(conv_loaded_int('signed int', a_936))
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_937: loaded pointer,
        (a_938: ctype, a_939: [ctype], a_940: boolean, a_941: boolean)),
        a_947: loaded pointer, a_951: loaded integer, a_953: loaded integer,
        a_955: loaded integer, a_961: loaded integer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_930: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_930, cfunction(a_930)))
          ,
            let weak a_949: pointer = pure(a_948) in
            {- §6.3.2.1#3 -}
            let weak a_950: pointer =
              memop(PtrArrayShift, a_949, 'char', 0) in
            pure(Specified(a_950))
          ,
            let weak a_952: pointer = pure(x) in
            load('signed int', a_952)
          ,
            let weak a_954: pointer = pure(y) in
            load('signed int', a_954)
          ,
            let weak a_960: pointer =
              {- §6.5.3.2 -}
              let weak a_956: loaded pointer =
                let weak a_959: pointer = pure(p) in
                load('signed int*', a_959) in
              let Specified(a_957: pointer) = a_956 in
              let weak a_958: boolean =
                memop(PtrValidForDeref, 'signed int', a_957) in
              pure(
                if a_958 then
                  a_957
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_960)
          ,
            let weak a_966: pointer =
              {- §6.5.3.2 -}
              let weak a_962: loaded pointer =
                let weak a_965: pointer = pure(q) in
                load('signed int*', a_965) in
              let Specified(a_963: pointer) = a_962 in
              let weak a_964: boolean =
                memop(PtrValidForDeref, 'signed int', a_963) in
              pure(
                if a_964 then
                  a_963
                else
                  undef(<<UB043_indirection_invalid_value>>)
              ) in
            load('signed int', a_966)
          ) in
        if not(params_length(a_939) <= 5) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_940) \/ not(are_compatible ('signed int', a_938)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_946: pointer =
              let a_967: ctype = params_nth(a_939, 0) in
              if not(are_compatible ('const char*', a_967)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_968: pointer = create(Ivalignof(a_967), a_967) in
                let weak _: unit = store(a_967, a_968, a_947) in
                pure(a_968) in
            let strong a_945: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_951)) in
            let strong a_944: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_953)) in
            let strong a_943: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_955)) in
            let strong a_942: pointer =
              {- §6.5.2.2#7, sentences 2 and 3 -}
              pcall(create_and_store, 'signed int',
              conv_loaded_int('signed int', a_961)) in
            let strong a_969: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_937, a_946,
              [('signed int', a_945), ('signed int', a_944),
              ('signed int', a_943), ('signed int', a_942)]) in
            let strong _: (unit,unit,unit,unit,unit) =
              unseq(
                kill('char*', a_946)
              ,
                kill('signed int', a_945)
              ,
                kill('signed int', a_944)
              ,
                kill('signed int', a_943)
              ,
                kill('signed int', a_942)
              ) in
            pure(a_969)
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  kill('intptr_t', ux) ;
  kill('intptr_t', uy) ;
  kill('intptr_t', offsetxy) ;
  kill('intptr_t', uz) ;
  kill('intptr_t', uw) ;
  kill('intptr_t', offsetzw) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_790: loaded integer (a_970: loaded integer:= Specified(0)) in
    pure(a_970)

