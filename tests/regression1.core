-- Aggregates
def struct T :=
  x: 'signed int'
  y: 'char'
  z: 'char'

-- Globals
glob st: pointer [ail_ctype = 'struct T'] :=
  let strong a_515: pointer = create(Ivalignof('struct T'), 'struct T') in
  let strong a_519: loaded struct T_502 =
    {- §6.5#2 -}
    bound(
      let weak (a_518: loaded integer, a_517: loaded integer,
      a_516: loaded integer) =
        {- §6.7.9#23 -}
        unseq(pure(Specified(3)), pure(Specified(2)), pure(Specified(1))) in
      pure(
        Specified((struct T){.x= conv_loaded_int('signed int', a_516),
        .y= conv_loaded_int('char', a_517), .z= conv_loaded_int('char', a_518)})
      )
    ) in
  store('struct T', a_515, a_519) ;
  pure(a_515)

-- Fun map
proc main (): eff loaded integer :=
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak a_509: pointer =
        {- §6.5.2.3#3, sentence 2 -}
        let strong a_508: pointer = pure(st) in
        memop(PtrArrayShift[T, x], a_508) in
      load('signed int', a_509)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak a_510: pointer =
        {- §6.5.2.3#3, sentence 2 -}
        let strong a_507: pointer = pure(st) in
        memop(PtrArrayShift[T, y], a_507) in
      load('char', a_510)
    ) in
  pure(Unit) ;
  let strong a_513: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak a_512: pointer =
        {- §6.5.2.3#3, sentence 2 -}
        let strong a_511: pointer = pure(st) in
        memop(PtrArrayShift[T, z], a_511) in
      load('char', a_512)
    ) in
  run ret_506(conv_loaded_int('signed int', a_513)) ;
  pure(Unit) ;
  save ret_506: loaded integer (a_514: loaded integer:= Specified(0)) in
    pure(a_514)

