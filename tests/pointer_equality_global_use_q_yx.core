-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob y: pointer [ail_ctype = 'signed int'] :=
  let strong a_824: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_825: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(2))) in
  store('signed int', a_824, conv_loaded_int('signed int', a_825)) ;
  pure(a_824)

glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_822: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_823: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_822, conv_loaded_int('signed int', a_823)) ;
  pure(a_822)

glob a_752: pointer [ail_ctype = 'char[22]'] :=
  create_readonly(Ivalignof('char[22]'), 'char[22]', Specified(Array(Specified(conv_int('char',
  65)), Specified(conv_int('char', 100)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 114)), Specified(conv_int('char', 101)),
  Specified(conv_int('char', 115)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 101)), Specified(conv_int('char', 115)),
  Specified(conv_int('char', 58)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 112)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 112)), Specified(conv_int('char', 10)),
  Specified(0))))

glob a_791: pointer [ail_ctype = 'char[7]'] :=
  create_readonly(Ivalignof('char[7]'), 'char[7]', Specified(Array(Specified(conv_int('char',
  101)), Specified(conv_int('char', 113)), Specified(conv_int('char', 117)),
  Specified(conv_int('char', 97)), Specified(conv_int('char', 108)),
  Specified(conv_int('char', 10)), Specified(0))))

glob a_811: pointer [ail_ctype = 'char[11]'] :=
  create_readonly(Ivalignof('char[11]'), 'char[11]', Specified(Array(Specified(conv_int('char',
  120)), Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 105)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 121)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 105)),
  Specified(conv_int('char', 10)), Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_734: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      let weak (a_735: loaded pointer, a_737: loaded integer) =
        unseq(
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_740: pointer = pure(x) in
          pure(Specified(a_740))
        ,
          pure(Specified(1))
        ) in
      let (Specified(a_736: pointer), Specified(a_738: integer)) =
        (a_735, a_737) in
      let weak a_739: pointer =
        memop(PtrArrayShift, a_736, 'signed int', a_738) in
      pure(Specified(a_739))
    ) in
  store('signed int*', p, a_734) ;
  let strong a_741: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_742: pointer = pure(y) in
      pure(Specified(a_742))
    ) in
  store('signed int*', q, a_741) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_743: loaded pointer,
      (a_744: ctype, a_745: [ctype], a_746: boolean, a_747: boolean)),
      a_751: loaded pointer, a_755: loaded pointer, a_760: loaded pointer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_733: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_733, cfunction(a_733)))
        ,
          let weak a_753: pointer = pure(a_752) in
          {- §6.3.2.1#3 -}
          let weak a_754: pointer = memop(PtrArrayShift, a_753, 'char', 0) in
          pure(Specified(a_754))
        ,
          {- §6.5.4 -}
          let weak a_758: pointer = pure(p) in
          load('signed int*', a_758)
        ,
          {- §6.5.4 -}
          let weak a_763: pointer = pure(q) in
          load('signed int*', a_763)
        ) in
      if not(params_length(a_745) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_746) \/ not(are_compatible ('signed int', a_744)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_750: pointer =
            let a_765: ctype = params_nth(a_745, 0) in
            if not(are_compatible ('const char*', a_765)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_766: pointer = create(Ivalignof(a_765), a_765) in
              let weak _: unit = store(a_765, a_766, a_751) in
              pure(a_766) in
          let strong a_749: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_755) in
          let strong a_748: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'void*', a_760) in
          let strong a_767: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_743, a_750,
            [('void*', a_749), ('void*', a_748)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_750)
            ,
              kill('void*', a_749)
            ,
              kill('void*', a_748)
            ) in
          pure(a_767)
    ) in
  pure(Unit) ;
  let strong a_768: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_770: loaded integer, a_771: loaded integer) =
        unseq(
          let weak (a_775: loaded pointer, a_776: loaded pointer) =
            unseq(
              let weak a_780: pointer = pure(p) in
              load('signed int*', a_780)
            ,
              let weak a_781: pointer = pure(q) in
              load('signed int*', a_781)
            ) in
          let (Specified(a_777: pointer), Specified(a_778: pointer)) =
            (a_775, a_776) in
          let weak a_779: boolean = memop(PtrEq, a_777, a_778) in
          pure(if a_779 then Specified(1) else Specified(0))
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_772: integer), Specified(a_773: integer)) =
          (a_770, a_771) in
        if conv_int('signed int', a_772) = conv_int('signed int', a_773) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_732: boolean =
    let Specified(a_769: integer) = a_768 in
    pure(if not(a_769 = 1) then True else False) in
  if a_732 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.2.2#10, sentence 1 -}
        let strong ((a_784: loaded pointer,
        (a_785: ctype, a_786: [ctype], a_787: boolean, a_788: boolean)),
        a_790: loaded pointer) =
          {- §6.5.2.2#4, sentence 2 -}
          unseq(
            let strong a_783: loaded pointer =
              pure(Specified(Cfunction(printf_proxy))) in
            pure((a_783, cfunction(a_783)))
          ,
            let weak a_792: pointer = pure(a_791) in
            {- §6.3.2.1#3 -}
            let weak a_793: pointer =
              memop(PtrArrayShift, a_792, 'char', 0) in
            pure(Specified(a_793))
          ) in
        if not(params_length(a_786) <= 1) then
          pure(undef(<<UB038_number_of_args>>))
        else
          if not(a_787) \/ not(are_compatible ('signed int', a_785)) then
            pure(undef(<<UB041_function_not_compatible>>))
          else
            let strong a_789: pointer =
              let a_794: ctype = params_nth(a_786, 0) in
              if not(are_compatible ('const char*', a_794)) then
                pure(undef(<<UB041_function_not_compatible>>))
              else
                {- §6.5.2.2#7, sentence 1 -}
                let weak a_795: pointer = create(Ivalignof(a_794), a_794) in
                let weak _: unit = store(a_794, a_795, a_790) in
                pure(a_795) in
            let strong a_796: loaded integer =
              ccall('signed int (*) (const char*restrict , ...)', a_784, a_789,
              []: (ctype,pointer)) in
            kill('char*', a_789) ;
            pure(a_796)
      ) in
    pure(Unit) ;
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_782: pointer, a_801: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            {- §6.5.3.2 -}
            let weak a_797: loaded pointer =
              let weak a_800: pointer = pure(q) in
              load('signed int*', a_800) in
            let Specified(a_798: pointer) = a_797 in
            let weak a_799: boolean =
              memop(PtrValidForDeref, 'signed int', a_798) in
            pure(
              if a_799 then
                a_798
              else
                undef(<<UB043_indirection_invalid_value>>)
            )
          ,
            pure(Specified(22))
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('signed int', a_782, conv_loaded_int('signed int', a_801))) in
        pure(conv_loaded_int('signed int', a_801))
      ) in
    pure(Unit) ;
    pure(Unit)
  else
    pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_802: loaded pointer,
      (a_803: ctype, a_804: [ctype], a_805: boolean, a_806: boolean)),
      a_810: loaded pointer, a_814: loaded integer, a_816: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_731: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_731, cfunction(a_731)))
        ,
          let weak a_812: pointer = pure(a_811) in
          {- §6.3.2.1#3 -}
          let weak a_813: pointer = memop(PtrArrayShift, a_812, 'char', 0) in
          pure(Specified(a_813))
        ,
          let weak a_815: pointer = pure(x) in
          load('signed int', a_815)
        ,
          let weak a_817: pointer = pure(y) in
          load('signed int', a_817)
        ) in
      if not(params_length(a_804) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_805) \/ not(are_compatible ('signed int', a_803)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_809: pointer =
            let a_818: ctype = params_nth(a_804, 0) in
            if not(are_compatible ('const char*', a_818)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_819: pointer = create(Ivalignof(a_818), a_818) in
              let weak _: unit = store(a_818, a_819, a_810) in
              pure(a_819) in
          let strong a_808: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_814)) in
          let strong a_807: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_816)) in
          let strong a_820: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_802, a_809,
            [('signed int', a_808), ('signed int', a_807)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_809)
            ,
              kill('signed int', a_808)
            ,
              kill('signed int', a_807)
            ) in
          pure(a_820)
    ) in
  pure(Unit) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_730: loaded integer (a_821: loaded integer:= Specified(0)) in
    pure(a_821)

