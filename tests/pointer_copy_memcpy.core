-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob x: pointer [ail_ctype = 'signed int'] :=
  let strong a_788: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_789: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(1))) in
  store('signed int', a_788, conv_loaded_int('signed int', a_789)) ;
  pure(a_788)

glob a_769: pointer [ail_ctype = 'char[14]'] :=
  create_readonly(Ivalignof('char[14]'), 'char[14]', Specified(Array(Specified(conv_int('char',
  42)), Specified(conv_int('char', 112)), Specified(conv_int('char', 61)),
  Specified(conv_int('char', 37)), Specified(conv_int('char', 100)),
  Specified(conv_int('char', 32)), Specified(conv_int('char', 32)),
  Specified(conv_int('char', 42)), Specified(conv_int('char', 113)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong q: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_733: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_734: pointer = pure(x) in
      pure(Specified(a_734))
    ) in
  store('signed int*', p, a_733) ;
  {- §6.2.4#6 -}
  store('signed int*', q, Unspecified('signed int*')) ;
  let strong _: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_735: loaded pointer,
      (a_736: ctype, a_737: [ctype], a_738: boolean, a_739: boolean)),
      a_743: loaded pointer, a_745: loaded pointer, a_747: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_732: loaded pointer =
            pure(Specified(Cfunction(memcpy_proxy))) in
          pure((a_732, cfunction(a_732)))
        ,
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_744: pointer = pure(q) in
          pure(Specified(a_744))
        ,
          {- §6.5.3.2#3, sentence 5 -}
          let weak a_746: pointer = pure(p) in
          pure(Specified(a_746))
        ,
          pure(Specified(Ivsizeof('signed int*')))
        ) in
      if not(params_length(a_737) = 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if a_738 \/ not(are_compatible ('void*', a_736)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_742: pointer =
            let a_748: ctype = params_nth(a_737, 0) in
            if not(are_compatible ('void*', a_748)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_749: pointer = create(Ivalignof(a_748), a_748) in
              let weak _: unit = store(a_748, a_749, a_743) in
              pure(a_749) in
          let strong a_741: pointer =
            let a_750: ctype = params_nth(a_737, 1) in
            if not(are_compatible ('const void*', a_750)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_751: pointer = create(Ivalignof(a_750), a_750) in
              let weak _: unit = store(a_750, a_751, a_745) in
              pure(a_751) in
          let strong a_740: pointer =
            let a_752: ctype = params_nth(a_737, 2) in
            if not(are_compatible ('size_t', a_752)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_753: pointer = create(Ivalignof(a_752), a_752) in
              let weak _: unit =
                store(a_752, a_753, conv_loaded_int(a_752, a_747)) in
              pure(a_753) in
          let strong a_754: loaded pointer =
            ccall('void* (*) (void*restrict , const void*restrict , size_t)',
            a_735, a_742, a_741, a_740) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('void*', a_742)
            ,
              kill('void*', a_741)
            ,
              kill('size_t', a_740)
            ) in
          pure(a_754)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.16#3, sentence 4 -}
      let weak (a_731: pointer, a_759: loaded integer) =
        {- §6.5.16#3, sentence 5 -}
        unseq(
          {- §6.5.3.2 -}
          let weak a_755: loaded pointer =
            let weak a_758: pointer = pure(q) in
            load('signed int*', a_758) in
          let Specified(a_756: pointer) = a_755 in
          let weak a_757: boolean =
            memop(PtrValidForDeref, 'signed int', a_756) in
          pure(
            if a_757 then
              a_756
            else
              undef(<<UB043_indirection_invalid_value>>)
          )
        ,
          pure(Specified(11))
        ) in
      let weak _: unit =
        {- §6.5.16.1#2, store -}
        neg(store('signed int', a_731, conv_loaded_int('signed int', a_759))) in
      pure(conv_loaded_int('signed int', a_759))
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_760: loaded pointer,
      (a_761: ctype, a_762: [ctype], a_763: boolean, a_764: boolean)),
      a_768: loaded pointer, a_772: loaded integer, a_778: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_730: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_730, cfunction(a_730)))
        ,
          let weak a_770: pointer = pure(a_769) in
          {- §6.3.2.1#3 -}
          let weak a_771: pointer = memop(PtrArrayShift, a_770, 'char', 0) in
          pure(Specified(a_771))
        ,
          let weak a_777: pointer =
            {- §6.5.3.2 -}
            let weak a_773: loaded pointer =
              let weak a_776: pointer = pure(p) in
              load('signed int*', a_776) in
            let Specified(a_774: pointer) = a_773 in
            let weak a_775: boolean =
              memop(PtrValidForDeref, 'signed int', a_774) in
            pure(
              if a_775 then
                a_774
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_777)
        ,
          let weak a_783: pointer =
            {- §6.5.3.2 -}
            let weak a_779: loaded pointer =
              let weak a_782: pointer = pure(q) in
              load('signed int*', a_782) in
            let Specified(a_780: pointer) = a_779 in
            let weak a_781: boolean =
              memop(PtrValidForDeref, 'signed int', a_780) in
            pure(
              if a_781 then
                a_780
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          load('signed int', a_783)
        ) in
      if not(params_length(a_762) <= 3) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_763) \/ not(are_compatible ('signed int', a_761)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_767: pointer =
            let a_784: ctype = params_nth(a_762, 0) in
            if not(are_compatible ('const char*', a_784)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_785: pointer = create(Ivalignof(a_784), a_784) in
              let weak _: unit = store(a_784, a_785, a_768) in
              pure(a_785) in
          let strong a_766: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_772)) in
          let strong a_765: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_778)) in
          let strong a_786: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_760, a_767,
            [('signed int', a_766), ('signed int', a_765)]) in
          let strong _: (unit,unit,unit) =
            unseq(
              kill('char*', a_767)
            ,
              kill('signed int', a_766)
            ,
              kill('signed int', a_765)
            ) in
          pure(a_786)
    ) in
  pure(Unit) ;
  kill('signed int*', p) ;
  kill('signed int*', q) ;
  pure(Unit) ;
  save ret_729: loaded integer (a_787: loaded integer:= Specified(0)) in
    pure(a_787)

