-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_756: pointer [ail_ctype = 'char[8]'] :=
  create_readonly(Ivalignof('char[8]'), 'char[8]', Specified(Array(Specified(conv_int('char',
  115)), Specified(conv_int('char', 117)), Specified(conv_int('char', 109)),
  Specified(conv_int('char', 61)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (): eff loaded integer :=
  let strong a: pointer =
    create(Ivalignof('signed int[2][2]'), 'signed int[2][2]') in
  let strong p00: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong p11: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong sum: pointer = create(Ivalignof('signed int'), 'signed int') in
  let strong a_667: loaded array(array(integer)) =
    {- §6.5#2 -}
    bound(
      let weak (a_673: loaded array(integer), a_670: loaded array(integer)) =
        {- §6.7.9#23 -}
        unseq(
          let weak (a_672: loaded integer, a_671: loaded integer) =
            {- §6.7.9#23 -}
            unseq(pure(Specified(4)), pure(Specified(3))) in
          pure(
            Specified(Array(conv_loaded_int('signed int', a_671),
            conv_loaded_int('signed int', a_672)))
          )
        ,
          let weak (a_669: loaded integer, a_668: loaded integer) =
            {- §6.7.9#23 -}
            unseq(pure(Specified(2)), pure(Specified(1))) in
          pure(
            Specified(Array(conv_loaded_int('signed int', a_668),
            conv_loaded_int('signed int', a_669)))
          )
        ) in
      pure(Specified(Array(a_670, a_673)))
    ) in
  store('signed int[2][2]', a, a_667) ;
  let strong a_674: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      {- §6.5.3.2#3, sentence 3 -}
      let weak (a_675: loaded pointer, a_677: loaded integer) =
        unseq(
          let weak a_690: pointer =
            {- §6.5.3.2 -}
            let weak a_680: loaded pointer =
              {- §6.5.6 -}
              let weak (a_683: loaded pointer, a_685: loaded integer) =
                unseq(
                  let weak a_688: pointer = pure(a) in
                  {- §6.3.2.1#3 -}
                  let weak a_689: pointer =
                    memop(PtrArrayShift, a_688, 'signed int[2]', 0) in
                  pure(Specified(a_689))
                ,
                  pure(Specified(0))
                ) in
              let (Specified(a_684: pointer), Specified(a_686: integer)) =
                (a_683, a_685) in
              let weak a_687: pointer =
                memop(PtrArrayShift, a_684, 'signed int[2]', a_686) in
              pure(Specified(a_687)) in
            let Specified(a_681: pointer) = a_680 in
            let weak a_682: boolean =
              memop(PtrValidForDeref, 'signed int[2]', a_681) in
            pure(
              if a_682 then
                a_681
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          {- §6.3.2.1#3 -}
          let weak a_691: pointer =
            memop(PtrArrayShift, a_690, 'signed int', 0) in
          pure(Specified(a_691))
        ,
          pure(Specified(0))
        ) in
      let (Specified(a_676: pointer), Specified(a_678: integer)) =
        (a_675, a_677) in
      let weak a_679: pointer =
        memop(PtrArrayShift, a_676, 'signed int', a_678) in
      pure(Specified(a_679))
    ) in
  store('signed int*', p00, a_674) ;
  let strong a_692: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.6 -}
      {- §6.5.3.2#3, sentence 3 -}
      let weak (a_693: loaded pointer, a_695: loaded integer) =
        unseq(
          let weak a_708: pointer =
            {- §6.5.3.2 -}
            let weak a_698: loaded pointer =
              {- §6.5.6 -}
              let weak (a_701: loaded pointer, a_703: loaded integer) =
                unseq(
                  let weak a_706: pointer = pure(a) in
                  {- §6.3.2.1#3 -}
                  let weak a_707: pointer =
                    memop(PtrArrayShift, a_706, 'signed int[2]', 0) in
                  pure(Specified(a_707))
                ,
                  pure(Specified(1))
                ) in
              let (Specified(a_702: pointer), Specified(a_704: integer)) =
                (a_701, a_703) in
              let weak a_705: pointer =
                memop(PtrArrayShift, a_702, 'signed int[2]', a_704) in
              pure(Specified(a_705)) in
            let Specified(a_699: pointer) = a_698 in
            let weak a_700: boolean =
              memop(PtrValidForDeref, 'signed int[2]', a_699) in
            pure(
              if a_700 then
                a_699
              else
                undef(<<UB043_indirection_invalid_value>>)
            ) in
          {- §6.3.2.1#3 -}
          let weak a_709: pointer =
            memop(PtrArrayShift, a_708, 'signed int', 0) in
          pure(Specified(a_709))
        ,
          pure(Specified(1))
        ) in
      let (Specified(a_694: pointer), Specified(a_696: integer)) =
        (a_693, a_695) in
      let weak a_697: pointer =
        memop(PtrArrayShift, a_694, 'signed int', a_696) in
      pure(Specified(a_697))
    ) in
  store('signed int*', p11, a_692) ;
  let strong a_710: loaded integer =
    {- §6.5#2 -}
    bound(pure(Specified(0))) in
  store('signed int', sum, conv_loaded_int('signed int', a_710)) ;
  let strong p: pointer = create(Ivalignof('signed int*'), 'signed int*') in
  let strong a_711: loaded pointer =
    {- §6.5#2 -}
    bound(
      let weak a_712: pointer = pure(p00) in
      load('signed int*', a_712)
    ) in
  store('signed int*', p, a_711) ;
  save while_664: unit (p: pointer:= p, a: pointer:= a, p00: pointer:= p00,
  p11: pointer:= p11, sum: pointer:= sum) in
    let strong a_713: loaded integer =
      {- §6.5#2 -}
      bound(
        let weak (a_715: loaded integer, a_716: loaded integer) =
          unseq(
            {- §6.5.8 -}
            let weak (a_722: loaded pointer, a_723: loaded pointer) =
              unseq(
                let weak a_720: pointer = pure(p) in
                load('signed int*', a_720)
              ,
                let weak a_721: pointer = pure(p11) in
                load('signed int*', a_721)
              ) in
            let (Specified(a_724: pointer), Specified(a_725: pointer)) =
              (a_722, a_723) in
            let weak a_726: boolean = memop(PtrLe, a_724, a_725) in
            {- §6.5.8#6 -}
            pure(if a_726 then Specified(1) else Specified(0))
          ,
            pure(Specified(0))
          ) in
        pure(
          let (Specified(a_717: integer), Specified(a_718: integer)) =
            (a_715, a_716) in
          if conv_int('signed int', a_717) = conv_int('signed int', a_718) then
            Specified(1)
          else
            Specified(0)
        )
      ) in
    let strong a_666: boolean =
      let Specified(a_714: integer) = a_713 in
      pure(if not(a_714 = 1) then True else False) in
    if a_666 then
      save while_body_665: unit (p: pointer:= p, a: pointer:= a,
      p00: pointer:= p00, p11: pointer:= p11, sum: pointer:= sum) in
        let strong _: loaded integer =
          {- §6.5#2 -}
          bound(
            {- §6.5.16#3, sentence 4 -}
            let weak (a_728: pointer, a_740: loaded integer) =
              {- §6.5.16#3, sentence 5 -}
              unseq(
                pure(sum)
              ,
                {- §6.5.6 -}
                let weak (a_729: loaded integer, a_730: loaded integer) =
                  unseq(
                    let weak a_734: pointer = pure(sum) in
                    load('signed int', a_734)
                  ,
                    let weak a_739: pointer =
                      {- §6.5.3.2 -}
                      let weak a_735: loaded pointer =
                        let weak a_738: pointer = pure(p) in
                        load('signed int*', a_738) in
                      let Specified(a_736: pointer) = a_735 in
                      let weak a_737: boolean =
                        memop(PtrValidForDeref, 'signed int', a_736) in
                      pure(
                        if a_737 then
                          a_736
                        else
                          undef(<<UB043_indirection_invalid_value>>)
                      ) in
                    load('signed int', a_739)
                  ) in
                pure(
                  let (Specified(a_731: integer), Specified(a_732: integer)) =
                    (a_729, a_730) in
                  Specified(catch_exceptional_condition('signed int',
                  conv_int('signed int', a_731) +
                  conv_int('signed int', a_732)))
                )
              ) in
            let weak _: unit =
              {- §6.5.16.1#2, store -}
              neg(store('signed int', a_728,
              conv_loaded_int('signed int', a_740))) in
            pure(conv_loaded_int('signed int', a_740))
          ) in
        pure(Unit) ;
        save __cerb_continue0: unit (p: pointer:= p, a: pointer:= a,
        p00: pointer:= p00, p11: pointer:= p11, sum: pointer:= sum) in
          let strong _: loaded pointer =
            {- §6.5#2 -}
            bound(
              {- §6.5.16#3, sentence 4 -}
              let weak (a_727: pointer, a_747: loaded pointer) =
                {- §6.5.16#3, sentence 5 -}
                unseq(
                  pure(p)
                ,
                  {- §6.5.6 -}
                  let weak (a_741: loaded pointer, a_743: loaded integer) =
                    unseq(
                      let weak a_746: pointer = pure(p) in
                      load('signed int*', a_746)
                    ,
                      pure(Specified(1))
                    ) in
                  let (Specified(a_742: pointer), Specified(a_744: integer)) =
                    (a_741, a_743) in
                  let weak a_745: pointer =
                    memop(PtrArrayShift, a_742, 'signed int', a_744) in
                  pure(Specified(a_745))
                ) in
              let weak _: unit =
                {- §6.5.16.1#2, store -}
                neg(store('signed int*', a_727, a_747)) in
              pure(a_747)
            ) in
          pure(Unit) ;
        pure(Unit) ;
        save continue_661: unit (p: pointer:= p, a: pointer:= a,
        p00: pointer:= p00, p11: pointer:= p11, sum: pointer:= sum) in
          pure(Unit) ;
        pure(Unit) ;
        run while_664(p, a, p00, p11, sum)
    else
      pure(Unit) ;
  save break_662: unit (p: pointer:= p, a: pointer:= a, p00: pointer:= p00,
  p11: pointer:= p11, sum: pointer:= sum) in
    pure(Unit) ;
  pure(Unit) ;
  kill('signed int*', p) ;
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_748: loaded pointer,
      (a_749: ctype, a_750: [ctype], a_751: boolean, a_752: boolean)),
      a_755: loaded pointer, a_759: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_663: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_663, cfunction(a_663)))
        ,
          let weak a_757: pointer = pure(a_756) in
          {- §6.3.2.1#3 -}
          let weak a_758: pointer = memop(PtrArrayShift, a_757, 'char', 0) in
          pure(Specified(a_758))
        ,
          let weak a_760: pointer = pure(sum) in
          load('signed int', a_760)
        ) in
      if not(params_length(a_750) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_751) \/ not(are_compatible ('signed int', a_749)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_754: pointer =
            let a_761: ctype = params_nth(a_750, 0) in
            if not(are_compatible ('const char*', a_761)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_762: pointer = create(Ivalignof(a_761), a_761) in
              let weak _: unit = store(a_761, a_762, a_755) in
              pure(a_762) in
          let strong a_753: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_759)) in
          let strong a_763: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_748, a_754,
            [('signed int', a_753)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_754), kill('signed int', a_753)) in
          pure(a_763)
    ) in
  pure(Unit) ;
  kill('signed int[2][2]', a) ;
  kill('signed int*', p00) ;
  kill('signed int*', p11) ;
  kill('signed int', sum) ;
  pure(Unit) ;
  save ret_660: loaded integer (a_764: loaded integer:= Specified(0)) in
    pure(a_764)

