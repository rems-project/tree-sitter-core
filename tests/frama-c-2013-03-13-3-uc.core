-- Aggregates
def union _G_fpos64_t :=
  __opaque: 'char[16]'
  __lldata: 'signed long_long'
  __align: 'double'

-- Globals
glob a_691: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  106)), Specified(conv_int('char', 58)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 117)), Specified(conv_int('char', 32)),
  Specified(0))))

glob a_707: pointer [ail_ctype = 'char[6]'] :=
  create_readonly(Ivalignof('char[6]'), 'char[6]', Specified(Array(Specified(conv_int('char',
  99)), Specified(conv_int('char', 58)), Specified(conv_int('char', 37)),
  Specified(conv_int('char', 100)), Specified(conv_int('char', 10)),
  Specified(0))))

-- Fun map
proc main (c: pointer, v: pointer): eff loaded integer :=
  let strong j: pointer =
    create(Ivalignof('unsigned char'), 'unsigned char') in
  let strong p: pointer =
    create(Ivalignof('unsigned char*'), 'unsigned char*') in
  {- §6.2.4#6 -}
  store('unsigned char', j, Unspecified('unsigned ichar')) ;
  let strong a_658: loaded pointer =
    {- §6.5#2 -}
    bound(
      {- §6.5.3.2#3, sentence 5 -}
      let weak a_659: pointer = pure(j) in
      pure(Specified(a_659))
    ) in
  store('unsigned char*', p, a_658) ;
  let strong a_660: loaded integer =
    {- §6.5#2 -}
    bound(
      let weak (a_662: loaded integer, a_663: loaded integer) =
        unseq(
          let weak (a_667: loaded integer, a_668: loaded integer) =
            unseq(
              let weak a_672: pointer = pure(c) in
              load('signed int', a_672)
            ,
              pure(Specified(4))
            ) in
          pure(
            let (Specified(a_669: integer), Specified(a_670: integer)) =
              (a_667, a_668) in
            if conv_int('signed int', a_669) = conv_int('signed int', a_670) then
              Specified(1)
            else
              Specified(0)
          )
        ,
          pure(Specified(0))
        ) in
      pure(
        let (Specified(a_664: integer), Specified(a_665: integer)) =
          (a_662, a_663) in
        if conv_int('signed int', a_664) = conv_int('signed int', a_665) then
          Specified(1)
        else
          Specified(0)
      )
    ) in
  let strong a_657: boolean =
    let Specified(a_661: integer) = a_660 in
    pure(if not(a_661 = 1) then True else False) in
  if a_657 then
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_673: pointer, a_674: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(pure(j), pure(Specified(1))) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('unsigned char', a_673,
          conv_loaded_int('unsigned char', a_674))) in
        pure(conv_loaded_int('unsigned char', a_674))
      ) in
    pure(Unit)
  else
    let strong _: loaded integer =
      {- §6.5#2 -}
      bound(
        {- §6.5.16#3, sentence 4 -}
        let weak (a_675: pointer, a_682: loaded integer) =
          {- §6.5.16#3, sentence 5 -}
          unseq(
            pure(j)
          ,
            {- §6.5.5 -}
            let weak (a_677: loaded integer, a_678: loaded integer) =
              unseq(
                let weak a_676: pointer = pure(j) in
                load('unsigned char', a_676)
              ,
                pure(Specified(2))
              ) in
            pure(
              let (Specified(a_679: integer), Specified(a_680: integer)) =
                (a_677, a_678) in
              Specified(wrapI('unsigned int',
              conv_int('unsigned int', a_679) *
              conv_int('unsigned int', a_680)))
            )
          ) in
        let weak _: unit =
          {- §6.5.16.1#2, store -}
          neg(store('unsigned char', a_675,
          conv_loaded_int('unsigned char', a_682))) in
        pure(conv_loaded_int('unsigned char', a_682))
      ) in
    pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_683: loaded pointer,
      (a_684: ctype, a_685: [ctype], a_686: boolean, a_687: boolean)),
      a_690: loaded pointer, a_694: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_656: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_656, cfunction(a_656)))
        ,
          let weak a_692: pointer = pure(a_691) in
          {- §6.3.2.1#3 -}
          let weak a_693: pointer = memop(PtrArrayShift, a_692, 'char', 0) in
          pure(Specified(a_693))
        ,
          let weak a_695: pointer = pure(j) in
          load('unsigned char', a_695)
        ) in
      if not(params_length(a_685) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_686) \/ not(are_compatible ('signed int', a_684)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_689: pointer =
            let a_696: ctype = params_nth(a_685, 0) in
            if not(are_compatible ('const char*', a_696)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_697: pointer = create(Ivalignof(a_696), a_696) in
              let weak _: unit = store(a_696, a_697, a_690) in
              pure(a_697) in
          let strong a_688: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_694)) in
          let strong a_698: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_683, a_689,
            [('signed int', a_688)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_689), kill('signed int', a_688)) in
          pure(a_698)
    ) in
  pure(Unit) ;
  let strong _: loaded integer =
    {- §6.5#2 -}
    bound(
      {- §6.5.2.2#10, sentence 1 -}
      let strong ((a_699: loaded pointer,
      (a_700: ctype, a_701: [ctype], a_702: boolean, a_703: boolean)),
      a_706: loaded pointer, a_710: loaded integer) =
        {- §6.5.2.2#4, sentence 2 -}
        unseq(
          let strong a_655: loaded pointer =
            pure(Specified(Cfunction(printf_proxy))) in
          pure((a_655, cfunction(a_655)))
        ,
          let weak a_708: pointer = pure(a_707) in
          {- §6.3.2.1#3 -}
          let weak a_709: pointer = memop(PtrArrayShift, a_708, 'char', 0) in
          pure(Specified(a_709))
        ,
          let weak a_711: pointer = pure(c) in
          load('signed int', a_711)
        ) in
      if not(params_length(a_701) <= 2) then
        pure(undef(<<UB038_number_of_args>>))
      else
        if not(a_702) \/ not(are_compatible ('signed int', a_700)) then
          pure(undef(<<UB041_function_not_compatible>>))
        else
          let strong a_705: pointer =
            let a_712: ctype = params_nth(a_701, 0) in
            if not(are_compatible ('const char*', a_712)) then
              pure(undef(<<UB041_function_not_compatible>>))
            else
              {- §6.5.2.2#7, sentence 1 -}
              let weak a_713: pointer = create(Ivalignof(a_712), a_712) in
              let weak _: unit = store(a_712, a_713, a_706) in
              pure(a_713) in
          let strong a_704: pointer =
            {- §6.5.2.2#7, sentences 2 and 3 -}
            pcall(create_and_store, 'signed int',
            conv_loaded_int('signed int', a_710)) in
          let strong a_714: loaded integer =
            ccall('signed int (*) (const char*restrict , ...)', a_699, a_705,
            [('signed int', a_704)]) in
          let strong _: (unit,unit) =
            unseq(kill('char*', a_705), kill('signed int', a_704)) in
          pure(a_714)
    ) in
  pure(Unit) ;
  kill('unsigned ichar', j) ;
  kill('unsigned ichar*', p) ;
  pure(Unit) ;
  save ret_654: loaded integer (a_715: loaded integer:= Specified(0)) in
    pure(a_715)

